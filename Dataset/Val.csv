comments,Mention problems,Suggest solutions,Helpful,Token_num
only tested one controller. and not thorough testing. did not test fail cases.,1.0,,1,13
"the admin model has some problems: . when clicked to show users, an error screen was displayed . the admin cannot destroy all companies, just the ones created by him/her as a recruiter . the admin shouldn't be able to edit company info which he can in this application. the applicant model has some problems: . while editing application info, error is displayed.&nbsp;",1.0,,1,62
"there are some inconsistencies which were observed. for example the admin cannot edit application information,only the applicant can do so. similarly the recruiter cannot destroy a company, only the admin can destroy a company. an applicant shouldn't be able to edit jobs which is being done here.",1.0,,1,49
the team has only tested the jobs controller. according to the spec file a model and a controller has to be tested,1.0,,1,22
a lot of commits are close to the deadline. some even after,1.0,,1,12
tests for only controllers are written. no test for models were found.,1.0,,1,12
"the ui is highly unintuitive. except for the login and sign up pages, it is very difficult to navigate through the other pages. in a number of places, the back button leads to an unexpected page. some things i noticed are: it isn't possible to edit user profile information - we can only view it. for a recruiter, we can edit profile information while linking them to a company but not after that. the job filtering mechanism does not work. as a recruiter, clicking on ""view applicants"" lists every applicant to every job.&nbsp; as a job seeker, while applying for a job, it is not clear what has to be entered in the&nbsp;application&nbsp;field.&nbsp; as a recruiter, while creating a job, it isn't clear what needs to be entered in the&nbsp;job&nbsp;field. also, the recruiter is asked to select his company while posting a job - not sure why this is required. however, i liked the use of css - it looks pretty appealing to the eye.",1.0,,1,174
there is no user interface. all the actions can&nbsp;be performed through links. the user interface could have been much better. like using stylesheets to make the interface elegant&nbsp;and smooth.,1.0,,1,33
" . the name ""jobapplications_controller.rb"" doesn't conform to camel style which should be ""job_applications_controller.rb"" . the code in views/users/new.html.erb and views/users/edit.html.erb&nbsp;are the same, so they can be extracted and put in _form.html.erb&nbsp;in order to avoid duplicate code.",1.0,,1,51
"only the controller for jobs was tested, and it is not thoroughly tested.",1.0,,1,13
"the commits were not that spread out. in fact there were only commits before the first review period and then the rest of their commits came in the next week before the final review time was to take place. not only was it in this last week, but centered around one day, so they pushed at the very end basically. honestly you can get into trouble with this sort of approach, especially if you are working for some client and they just don't know how anything is turning out. i would definitely recommend pushing new functionality each week as a much better practice to become familiar with.",1.0,,1,108
i'm not sure. i cannot access their github page.,1.0,,1,10
"they must've made their github page private because i cannot access it. i get a 'page not found' error. as a result, i could not access their admin details...",1.0,,1,30
"the team seems to have tested their controllers. however, the test for the controllers is very similar to the default ones tat are created by the scaffold generator. furthermore, none of the models were tested.",1.0,,1,35
"the team seems to have tested&nbsp;job_applications_controller_test.rb thoroughly enough. they have tests like: &nbsp; &nbsp; - should get index &nbsp; &nbsp; - should get new &nbsp; &nbsp; - should update job_application &nbsp; &nbsp; - etc. tough the team seems to have tested this controller, the tests also seem to be very similar to the ones that get automatically made by the scaffold generator. the team did not fully test any model. &nbsp;",1.0,,1,70
"you appear to have done a more then adequate job following ""good ruby on&nbsp; rails coding practices"".&nbsp; for example, in your controllers, all lines are indented with spaces.&nbsp; you have used ""each"" instead of ""for"" when applicable and all end points are documented in the controllers.&nbsp; one thing that could still be improved is the javadoc or over all code documentation.&nbsp; as a whole, it is a bit weak.&nbsp; i would suggest checkout out this resource on how to javadoc methods.&nbsp;&nbsp;javadoc helps readability a lot by giving the reader a better understanding of what the method does.&nbsp; it also helps give the reader context, by explaining the parameters that go into the function, and the return value that comes out of the function.&nbsp; if there was one suggesting i would make it would be to work on javadoc in the future.&nbsp; here is a resource that you might find helpful!&nbsp;&nbsp;https://dev.liferay.com/participate/javadoc-guidelines",1.0,,1,171
"most of the controllers were thoroughly tested so good job there!&nbsp; that being said, it does not appear that any of the models were tested.&nbsp; in the future, model testing should be done!&nbsp; also, javadoc would be helpful when writing tests, as it allows readers to better understand what each test does.&nbsp; i would suggest trying to javadoc tests in the future.&nbsp; here is some helpful information on testing in ruby:&nbsp;http://guides.rubyonrails.org/testing.html",1.0,,1,83
extra credit features have not been implemented. testing of one model and one controller has not been done.,1.0,,1,18
&nbsp;there weren't many commits before the first deadline but they committed frequently between that deadline and the final submission.,1.0,,1,21
everything a user could see (job applications/jobs/companies) could also be edited by adding /edit to the url even though the edit button was hidden. a jobseeker could also add companies and jobs by adding /new to the url. this means the controller wasn't doing the same validation checks that the view was.,1.0,,1,55
"it wasn't easy/clear to switch between jobseeker/recruiter role.&nbsp; while technically possible, you had to disable one role to make it work.&nbsp; as a recruiter, you couldn't see the companies in a list.&nbsp; job applications had no way to see the job they were connected to which made it difficult for both job seekers and recruiters to do anything useful with the job applications.",1.0,,1,70
"there looked to be java/c++ conventions (for example, != """" instead of .blank? or .nil? and if blocks instead of if/unless at end of statement.&nbsp; while not necessarily a coding practice, there was no validation of user access in the controllers, only the views.&nbsp; also more of a general git convention, they uploaded things like tmp files that shouldn't be committed.",1.0,,1,64
"the default tests for controllers are present in the test folder. the team has however used rspec for testing which is good. they have tested the jobs controller. however i do not feel it is thoroughly tested. also, there are no tests for any of the models.",1.0,,1,47
"the code is well structured throughout. proper naming conventions has been used for variables, classes and methods. most code is self-explanatory and commenting for code not auto-generated by rails isn't necessary. mvc framework was followed.however, in controllers, after mentioning an access specifier, there should be an indentation. this has been done in most cases however it is missing in the applications controller starting line . also, you could have used devise for authentication. entire information regarding jobs/user/companies/applications was visible/editable/delete-able by any user which shouldn't be the case. overall, ruby coding practices have been followed well.",1.0,,1,105
the ui is not very intuitive. much of the things are cluttered in a small space. routes are somewhat haywire and are not very well defined. the readme is well described but doesn't compensate for the lack of intuitiveness in the ui.,1.0,,1,43
"after each role signed in, the homepage is showing different tasks each role could perform. this is very nice. however, the action each role could perform is not really restricted. each role can basically do everything admin did by directly going to the url. another thing is, when an application is submitted, it is associated with the company, not the job. i find this is a little strange.",1.0,,1,68
"they didn't use gem to help them build log in system. they did it all by themselves, which is really cool. only thing is in the users_controller create function,&nbsp; i guess what they try to do is giving admin a way to create job seekers or recruiters. but this code does not actually prevent other users to create a job seeker or recruiter, only after they create it, they would get an exception, but the created job seeker or recruiter would get saved anyway.",1.0,,1,86
"i don't think the team has tested thoroughly one model or one controller. is it in the spec folder? there are only three test&nbsp; cases. in the test folder, i only find rails default testing. we didn't do well on testing either. so let us do better next time.",1.0,,1,52
code is very good! variable names make sense and ruby syntax/style is followed. there could be a little more comments but i think the names of the variables help as a substitute for comments.&nbsp;&nbsp;,1.0,,1,37
"the test cases added seems like they should help with coverage, however i cannot tell for sure.&nbsp; no where in the documentation or the video showing that it work does it tell what the new coverage is.&nbsp; this makes me worry that they did not hit %.&nbsp; however, there are definitely a lot of test cases that seem like they should help with increasing coverage.&nbsp;&nbsp;",1.0,,1,69
"there's not much reason for me to repeat what josh said, but y'all have a lot of work to do to get it to a place where this can be pulled into servo.",1.0,,1,35
the app has not been deployed and no link has been provided. however i feel its due to an issue most of us were facing while deploying the app.,1.0,,1,29
"i can see that the coverage has increased.the team has modified the existing test plan according to the refactoring done. also in&nbsp;spec/helpers/automatic_review_mapping_helper_spec.rb, i feel that the test&nbsp;describe '#execute_peer_review_strategy' can be modified. the test only checks if the number of reviews is more than the total number of teams or participants. however, as we know that students are only allowed to do a fixed number of reviews including those for extra credit. this scenario could be considered as a test case.",1.0,,1,88
"the team has done a pretty good job in terms of writing the code. however i still feel there are some minor issues. i had mentioned that that some of the code is repeated in the&nbsp;summaryrevieweereport class and&nbsp;class summaryreport. that is still an issue. in the &nbsp;in the module automaticreviewmappinghelper, a class variable is used,@@time_create_last_review_mapping_record and this is usually done when inheritance is going to be used. i could not find the use of that variable in the code. also, the automatic_review_mapping_helper.rb&nbsp;is quite lengthy. in order to make the controller modular, the helper method module has become extremely lengthy. also some variable such as&nbsp;@calibrated_artifacts_num aren't clear in terms of their functionality.",1.0,,1,123
"no, there are a lot of issues which need to be resolved before deploying the code. the third issue has not been dealt with(at all).the future team should resolve the menu editor which is causing one of the problem as well as the problem causing the error message to appear.&nbsp;&nbsp;",1.0,,1,54
no plan has been provided. hence unable to comment on the tests.one case should be added to restrict the min score to be greater than the max score.&nbsp;,1.0,,1,30
"the authors haven't listed any work which they have done in terms of coding in the write-up. they have listed the files which were modified, but no more.&nbsp;",1.0,,1,31
the authors have't written an automated test. atleast it's not mentioned under the files changed part.&nbsp;,1.0,,1,19
"i couldn't find the project name on github easily, had to search for it due to different name.i can see the the changed code on github. but the authors have not provided explanation everywhere for the changes.",1.0,,1,39
"yes, i can understand the project and the issues related to it due to correct and concise description on the wiki page. a lot of info has been provided with examples for understanding. but, the changes which are are not explained and code isn't provided for the same.",1.0,,1,49
"the authors have converted most of the test cases. the ""response_report"" controller isn't getting a coverage of %.more automatic tests need to be added for this controller.",1.0,,1,28
the writeup is very well written and covers everything required for the project. the authors have done commendable job by throughly going through all the required details. having said that i still cannot find much information regarding the use of ajax. this is something that was also mentioned in the first review.,1.0,,1,52
the build and checks have failed.&nbsp; there are conflicts in the following files: app/assets/stylesheets/application.scss app/views/assignments/edit.html.erb,1.0,,1,25
"changes that are made in the code by the author are in migration file. variable name is corrected to bookmarkrating which was previously ""bookmark rating"". there is an empty migration created. cannot comment on the functions as they are not altered.",1.0,,1,41
no new commits have been added by this team. the last commit made is on th march which was the last day to submit for the first round.,1.0,,1,28
"the coverall coverage report indicates that the coverage has increased by . %. however , no new test cases has been added by the author.&nbsp; i believe in this project, this team did not require tests to be written for the implementation they have done. the code added only involves migrations which involves changes in the variable name and thus need not be corrected.",1.0,,1,62
there is no test plan mentioned nor any tests added. i would suggest to look into this and add tests when implementing the remaining functionalities.,1.0,,1,25
"this team has only made changes to the migration files. the team has not added any significant code since the last submission. one more migration has been committed. this migration adds the bookmark to the menu. these migrations are made according to the ruby conventions and are dry. comments have been added by the team stating the purpose of these migrations. i can see that two of the issues are still not resolved. probably as mentioned by the authors, they were facing some kind of javascript error. &nbsp;",1.0,,1,88
"this team has not deployed this app and thus it is not possible for me to test the ui manually. i tried to run the repo on my local machine but it did not run as i faced a lot of error. these errors may be due to my local machine. however , they have included a screencast which is pretty descriptive and indicative of the functionality included by the author and thus it can be concluded that the functionality included by the authors is working fine. the screencast lacks audio. i believe adding audio to the screencast would have made it easier for the readers to understand. it seems that the team faced a major javascript error , due to which the add bookmarks option is not included in the menu. thus the team has justified why they were unable to implement the other two problems.",1.0,,1,145
"i can see there are some repeated lines, particularly the 'let' instruction. i think many of the test can share the same data, so it is better to combine them at the beginning.&nbsp;&nbsp;",1.0,,1,35
"not enough. the test plan should&nbsp;have the detailed process of testing including the why and how you set the condition, and something like that.",1.0,,1,26
the wiki only doesn't explain how and why the authors did the work. more is about the schedule and how to test.,1.0,,1,23
it is good. it introduces&nbsp;the code of the model with detail. but i think it need more introduction on the test.&nbsp;,1.0,,1,24
it improves a lot. but still something looks not good like 'xcontext' and the spaces don't match well.,1.0,,1,19
no instructions given to test the work of the author. please add a screencast/ wiki page to ease reviewing process.&nbsp;,1.0,,1,21
the build passed travisci but did not pass the code climate check. the authors need to fix these issues to make up to the coding standards of the repository. code climate checks for maintainability of code by checking various rules. it is a must for the code to meet these standards.,1.0,,1,51
the authors must provide a screencast of their tests so that the reviewer can see how their testing works. there is no screencast in the code at the moment. they have only added a screenshot to the code that tells about test coverage.,1.0,,1,43
the authors have not provided any pull request. so it is not possible to review their code at the moment.,1.0,,1,20
the authors have written the detailed test plan but they have not written the actual rspec code for automation. the authors must provide link to the pull request so that a reviewer can review their code.,1.0,,1,36
"the project is about&nbsp;testing a model in expertiza. at the moment, the users do not have a pull request. so there is no way to test their code or tell if their code is working properly.",1.0,,1,38
"the code written, at the first glance. proper ruby standards have been followed in general. but the code seems to have several issues as seen in the code climate check in pull request, issues at the time of this comment.",1.0,,1,40
"the code is almost ready to be deployed onto the production server. my only concern is the naming of menu item objects. other than that, good work!",1.0,,1,27
"the code is very well written overall. however, i noticed that you have named your test menu item variables as ""test , test ..."". this is slightly misleading as the name ""test "" seems to imply that this object represents a test, rather than a menu item. consider changing this before merging with the original repo.",1.0,,1,53
comments need to be added so that the reviewers can know what the authors are doing what they are doing. this makes it hard for the reviwers to understand the functionalities. the code follows the dry principle.,1.0,,1,37
the newly added code in the pull request has not been excepted and the code lacks explanation of why the tests were written.,1.0,,1,23
"i feel that by making changes to the code and removing unnecessary and repeated statements in the test cases the code can be improved more and thus can be dried up a lot, which will then be ready for deployment.",1.0,,1,40
the writeup lacks the test plan section. the work has been implemented but it could have been made better by assuming all the boundary conditions.&nbsp;,1.0,,1,26
need to mention in a more descriptive way what changes have been made and why they have been made. the tests are meaningful and seem to impactful to the project.&nbsp;,1.0,,1,31
the team needs to request a pull from so it is easier to review.,1.0,,1,14
"the team has certainly added test cases and their test cases work, but nothing&nbsp; can be commented about the coverage of the tests. they have not mentioned in the document as well on how much coverage they have achieved and the pull request is not visible.",1.0,,1,47
"at the time of reviewing, i was able to see that the testing section was empty and hence i believe that they are yet to work on that. however, if this is something not mandatory, i could be totally wrong.&nbsp;",1.0,,1,41
"they do seem to have a file: github_data_controller_test.rb but i do not see any piece of code written in it. as per my understanding according to what was written on the wiki page, i did not see anything in the testing section. so, i do not have any idea of what i should expect to see in the code. i am assuming the team would still be working on this and probably have it done by the next round of review.&nbsp;",1.0,,1,83
" i still see that some of the function names are too long but since i have not worked on expertiza project so i do not know for sure whether there is still room for improvement. but i do feel that some names are long. they have broken down the blobs of code into smaller modules, stated the names and the reason for doing so. no suggestions here. great job! i definitely believe there is a lot of room for improvement by adding comments to the functions describing briefly what they do they have done a really good job at following the ruby style guidelines. ",1.0,,1,104
"code seems to be fairly well written overall. it's organization could be improved, however. for example, the test ""computes and returns scores"" contains many assertions, and uses several variables defined outside the method which are not clearly related to that specific test.",1.0,,1,43
"code seems to be written fairly well, but suffers from potential dry problems. that is, before every test, the methods under test are run numerous times, but the results from only a few are typically used. this also increases the cognitive load in reading the code, as you are forced to jump back and forth from the test you are looking at to the top repeatedly.",1.0,,1,66
"based on the youtube video, almost all of the tests cover all the scenarios for the on_the_fly model class.&nbsp; there are a few methods in on_the_fly that were not tested and were not mentioned in the wiki as to why these were not tested.&nbsp; regardless, there were enough tests that covered an ""on the fly"" scenario.&nbsp;",1.0,,1,59
all the tests are working with a success. i can run the test with rspec command &nbsp; i might be reading the wrong number but when i ran your test case on expertiza linux virtual machine i get&nbsp; coverage report generated for rspec to /home/expertiza_developer/expertiza/coverage. / loc ( . %) covered. &nbsp; . % coverage?,1.0,,1,53
"it explains that in calculating the score it ignores the empty fields, so the score does not calculate the empty fields as a zero in the final calculation of the score. it does explain well on how you have implemented it. &nbsp; could you rename the solution heading to something else or merge the&nbsp; explanation heading with the solution. it would be easier to read if all the information of the solution is in one location.",1.0,,1,77
"there were no tests added that i could tell, and so i would work on figuring out how you will test your contribution to expertiza.",1.0,,1,25
"unfortunately as we can't deploy our projects, i am unable to test their implementation. they did provide pictures, though it is unclear to me when they were taken and what they truly indicate.",1.0,,1,34
"it does in a way include a to-be-added test section, but i'm not % if its going to have a more logical format. before this, they didn't explain their plan beforehand,, which i would recommend a possible next step as well. however, it is yet to be seen what these testing sections will hold, and i cant quite comment on what type of tests they are preparing, because as i mentioned previously, it is not explained what these functions do.&nbsp;",1.0,,1,84
"the build did pass, but there are conflicts with code climate. a lot of these issues seem rather trivial and easy to fix, simply being stylistic problems, such as extra spacing or indentation here, or extra line there. these things are so simple to fix i don't think they pose much of a problem.",1.0,,1,55
"i think there are just a couple ways to dry out their code, where some of the assignments were done when they could have been done in one before(;each) block before all of the tests. the allow, expect style is well done and the kind of style which makes it easier to see what you are testing. in general this could have potentially been done in a more dry fashion, which what that really does is make it easier for those in the future to use.",1.0,,1,87
"the newly added code looks dry to the most extent . there were some instances in the old code though that could be modified , like the long brackets /with nodes&nbsp;",1.0,,1,30
write up had the testing section blank. it was not part of the requirements document i suppose,1.0,,1,17
"deployment of the code wasnt seen to present , to test the functionality . images to some extent show the work done by the team&nbsp;",1.0,,1,24
no new commits were seen during the nd round period&nbsp;,1.0,,1,11
"i don't see any major issues with the code, and comments are used effectively in certain areas. however, some areas lack comments, making the code somewhat unclear to somebody not as close to the project.",1.0,,1,36
"somethings i found a bit odd, but thats my opinion, changing gem files could lead to serious complications so i wouldnt touch them, please remove puts, a java like coding approach has been followed",1.0,,1,34
"there are no test cases added, please try and add them at the earliest, some cases could be finding the total commits made by each user and comparing against the expected, wrong github link check etc",1.0,,1,36
"i couldnt find the pull request associated, please complete this at the earliest.&nbsp;",1.0,,1,14
"the objective has been clearly stated but there is no additional information related to anything else, there is no test plan, no images or diagrams&nbsp;&nbsp;",1.0,,1,27
"there are issue conflict, most of which is related to block has too many lines of code. but its not much comparatively so nice work",1.0,,1,25
the writeup did not contain any test plan. hence i was unable to review the different test cases.,1.0,,1,18
no test plan was added in the test plan writeup and similarly no rspec files were added. also there were no instructions for manual testing. so i wasn't able to check any of these.,1.0,,1,35
"there was no pull request link given, only the link of the team's github repo. hence i looked at the commits section of the repo to look at the recently made commits. by looking at all the changes in git commits, i could note that proper naming&nbsp;conventions were followed to name variables, methods and class names. they have ensured that the newly created variables and methods use the same style as the code that is already present in the file. i felt that every named item in the code was self explanatory and the purpose of each variable/method was understood from the name. i'm deducting a point because i looked at the commits and not the pull request.",1.0,,1,123
i couldn't manually test it as the app was not deployed on a platform such as heroku or aws. neither was a screencast demoing the application running on the local server provided so i could not test the features of the application.,1.0,,1,43
"the team has modified a model and added a new rspec model file. for these code changes, they have used proper naming conventions to name variables, methods and class names. they have ensured that the newly created variables and methods use the same style as the code that is already present in the model file. i felt that every named item in the code was self explanatory and the purpose of each variable/method was understood from the name. for eg, row_average_score was a variable used to store the average of all the entries in a row. hence i am giving a .",1.0,,1,102
"the coverage increased marginally by . %. no test cases or automated tests were provided, but i don't think it's necessary for this project. but the team did provide a manual ui testing plan.",1.0,,1,34
"although the writeup does include a testing section, it is for manual ui testing and does not have any automated rspec test cases. they had clearly mentioned the steps for performing ui testing, however i am reducing points because i was unable to check for edge cases and invalid inputs and others.",1.0,,1,52
"no automated test cases were mentioned in the write up and also no corresponding rspec files were found. however, the team did provide instructions to perform ui testing.",1.0,,1,28
manual testing was not possible because the app was not deployed on a platform such as heroku or aws. there was also no screencast demo so i had no way of testing if the new features worked correctly.,1.0,,1,38
"yes, the write up does do a good job explaining what the authors did and why the authors did it.&nbsp; since this project mainly focused around unit testing, there wasn't really any ""design patters or principles"" that the team needed to follow.&nbsp; that being said, they did write clean code that followed the ruby on rails style guidelines as far as i could tell.&nbsp; one&nbsp;small problem i had with the write up was the amount of information that was presented on test driven development.&nbsp; while i appreciated the section they wrote on unit testing since it related directly to what they were doing with their project, it seems that including a section on why tdd is good is a bit ironic.&nbsp; i say this because while tdd is good, this is an example of testing after development and not tdd.&nbsp; because of this, having a large section in the write up that explains tdd seems out of place.&nbsp; i would suggest removing this section.",1.0,,1,174
"the code has no comments and it is very hard to understand the functionality of the code if we only look at the code. the wiki does explain what the author is trying to establish. however, they need to mention the flow in the code as comments as well so that reviewer understands this clearly.&nbsp;",1.0,,1,56
"the code in the file spec/models/collusion_cycle_spec.rb follows dry principle.&nbsp; however, the code not well commented to help reviewer understand the the flow of the code. also, the code has long methods which can be broken down to smaller functions.",1.0,,1,43
the work takes care of all the functionalities. the coding style and standard can be improved to better explain the flow of the code and have more comments in the code.,1.0,,1,31
"the writeup is pretty well explained. however, the writeup does not explain the changes that are being done in the code and if they have been tested it properly.&nbsp; they have mentioned different functions that perform certain actions, however, where are these functions written and in which file is mentioned in the wiki. the reviewer has to manually find the file where it is located.&nbsp;",1.0,,1,67
"since it is a testing project, by looking at their wiki i think they have covered all the cases. however, it is hard to determine whether that from the code itself as no comments are present in the code to make the reviewer understand the flow of the code.&nbsp;",1.0,,1,50
"( ) functions are not too long ( ) none of the code needs to be extracted into separate methods. ( ) i would recommend adding more comments to the test file. even though it is self-documenting this does not remove the need for comments, which could be used to explain how the code tests each condition. ( ) the code does follow the ruby style guide ( ) one recommendation&nbsp;",1.0,,1,63
"unfortunately, all of the subheadings under the test plan section do not contain any content. i cannot review this portion. please implement this section asap.",1.0,,1,25
"since the project is itself adding tests, and you cannot test a test class in the same way you test a normal class, so i will treat the project itself as part of the test plan. while the test plan is not documented in the wiki the actual testing is thorough.",1.0,,1,51
code climate issues are too man and need to be fixed first before deploying.,1.0,,1,14
there is conflict in files: app/assets/stylesheets/application.scss app/views/assignments/edit.html.erb &nbsp; there are still over code climate issues.,1.0,,1,24
pros: - files modified listed - use case diagram given &nbsp; cons: - design pattern not mentioned - solution could have been explained in detail - code snippets missing,1.0,,1,24
no automated tests are given. only ui testing is mentioned.,1.0,,1,10
"some blocks are long but that is expected for test files. the code doesn't follow the style guide in its indentations. there are different levels of indentation throughout the file. also, all of the ""# write your test here!"" should be deleted.",1.0,,1,42
"the test plan was very thorough but missed a lot of edge cases and invalid values. for example, #above and #below don't test cases when there is no above or below values to return.&nbsp; .find_or_create_by_name should also test both cases (find and create) but only one of the cases is tested. .items_for_permissions is a good example of a more thoroughly tested method",1.0,,1,64
"any failures for this would be because of the actual menu_item implementation, not the tests this group created.&nbsp; but because they don't test all edge cases, if there was an implementation problem this might not get caught.",1.0,,1,39
the tests cover a large majority of possible cases.&nbsp; it doesn't seem to do a great job covering edge cases (like invalid numbers or nils) but it could be that those inputs are never possible.,1.0,,1,37
"instead of creating a new migration, they edited a migration from which means it won't be updated on the expertiza server.&nbsp; the rest of the changes were just fixing a misspelling of bookmark ratings.",1.0,,1,36
"the code follows ruby guidelines. however, there are no comments present in the code which makes it very hard to understand the flow of the code. the code follows dry principles but lacks a good coding style",1.0,,1,37
there is no such mention of any test cases present in the wiki. even in the code there is no information present regarding the same. it has long functions which i believe can be broken down and code commenting is required.&nbsp;,1.0,,1,42
"there is no pull request present. since code is hard to understand, the authors need to work on commenting the code and changing the wiki.",1.0,,1,25
"the features work as intended, however, there is no mention of different test cases that are required to be checked. the wiki needs a little more work",1.0,,1,27
the writeup is not well documented. what functionality of the code is tested and how they have implemented is also missing. it is very hard to understand the work by just reading the readme. some background info rneeds to be present in the wiki.,1.0,,1,44
"as mentioned from the wiki, they have covered all the test cases since comments are not present, it is difficult to understand the flow of code",1.0,,1,26
"as mentioned earlier, there was no test plan created (going by the wiki). there is an automatically created test case :github_data_controller_test but it doesn't have any tests written out. do plan on testing it rigorously to make it foolproof.",1.0,,1,40
"since the code could not be deployed yet, as is the case with most teams, there is no way to manually test the features implemented.",1.0,,1,25
two functions seem to fail and they need to be checked. rest two seem to be working fine.,1.0,,1,18
"the writeup is well written and briefly explains all the functionalities. however, the team could have elaborated a bit more about what functionality each of the functions carries out and how these functions are tested.",1.0,,1,35
"i think the team has followed the right approach and has painstakingly made sure that they follow good coding practices. i do think the code, with a little refactoring, is ready to be deployed onto the production server.",1.0,,1,38
"the purpose of the project and what all changes the team did in the project is made lucid in the writeup. the impact of the test looks promising enough. but again, i think you guys could have been more descriptive of the actual changes that were done and the results thereof. if the explanation was done on the basis of the actual code implemented, it would have helped a lot.",1.0,,1,70
the team seems to have covered all the cases but they haven't described what the cases are.,1.0,,1,18
"the build has passed in travis ci. there are no major issues as such. the only issues are codeclimate issues, which the team tried taking care of so as to make the code as dry as possible. the code needs some minor refactoring in some places.",1.0,,1,46
"the team made a pull request, but the build didn't pass in travis cl. these are: conflicting files app/assets/stylesheets/application.scss app/views/assignments/edit.html.erb",1.0,,1,30
"yes. they made a pull request and coverage&nbsp;will increase (+ . %) to . % when pulling, but&nbsp;one check is not successful:&nbsp;the code seem to have to similar blocks need&nbsp;refactoring. this team is working on unit test for a model, so their pull request just include one newly added spec.rb file which is correct.&nbsp;i'd mention a minor problem: the ""describe-context-it"" hierarchic structure is not used properly. as seen in their code, they used ""describe-context-it"", ""describe-it"", ""context-it"" or ""context-context-it"" for one ""it"" block. it's not clear what the differences are.",1.0,,1,105
"i have very little idea what they're actually going to change or how they're gonna change it. it's nice to know what the files they'll add and change are, but most of what they're saying is that they'll add a bunch of buttons and checkboxes that let stuff happen, but they don't say how any of that is gonna get done, just ""we will have to add a boolean field"" or that they'll render a ""java script partial.""",1.0,,1,86
" they're mostly making their own classes, so that isn't relevant. i think this code might be adding a lot of confusing relationships and putting in methods places they might not belong. they don't really look complicated, they just look empty. probably not. yeah, the design looks like it's in the pre-preplanning phases. for example: why do questions have a questionnaire? why don't questionnaires have any questions? why does the proposed implementation talk so much about keys to tables, i thought this was supposed to be done with objects? it's just all very confusing and i'm not sure it's nailed down yet. ",1.0,,1,110
"i'd like a bit more info on what the structure of this stuff is as objects instead of tables. there's a lot of discussion of tables, but that's not what's going to be used (i hope?), so more clarity on how the objects look would be nice.",1.0,,1,51
" the team has adequately explained the approach. the hyperlinks to peer logic for tone-analysis is useful. there is another hyperlink to api endpoint in the tone analysis section which is broken. in the background info section, the line&nbsp;&nbsp;""in addition, tabs were added to separate each review round."" is confusing. i am not sure if by tabs, the team means a separate column for each round of review or just tabs to improve the visualization.&nbsp; in the files modified section, the popup_controller.rb file is not mentioned.a method has to be added to it. also, the team plans to depict a tile-chart visualization,it would be easier to visualise it using an actual chart, the link to which is given in the doc containing the problem statement. ",1.0,,1,133
"so far,the design looks good and i cannot comment if the problems can arise,given the approach that the team has mentioned.i feel that the design can be explained in more detail.",1.0,,1,34
"the team has used pictures to explain the design. the pictures although useful, are not properly sized and are somewhat of a rough sketch. if tables had been used or if screenshots could be posted from the actual expertiza page,it would be much more visually attractive and easy to understand.",1.0,,1,51
"the purpose and design are mentioned in the document. however it does not cover the testing plan.also, there is a blank header for team and no details have been mentioned under it. ""tone-heading"" is a sub-header of files modified. it should be put in a separate heading. also, i feel that much of the explanation in the tone-analysis and background info section is taken directly from the project specification. maybe the team can explain it in their own words.",1.0,,1,83
"in the proposed solution section, the team states ""however, they will increase the benefit that each person gets because they can get feedback that is specific to their project."" i am not sure how each person is benefited. the project document states that the grades don't have to be considered as the questions will be too easy. is so, how will the project ensure the quality of questions, especially since they are not graded. students might be tempted to skip these questions all together.",1.0,,1,85
the authors haven't stated any code changes as of now.,1.0,,1,11
"some of the functionality to be added isn't included in the document. the third problem has a lot of little aspects which are to be followed. for example the ""more"" button to display the whole comment hasn't been included. same goes for the ""graying"" of certain reviews.&nbsp;",1.0,,1,50
"as i mentioned earlier, for all the proposed changes the authors have not mentioned what files will need modification and what files may be added so i cannot make a comment about the problems mentioned in the question.",1.0,,1,38
they have not included any coding strategies so cannot comment anything about the code but they have explained their problem really well and offered a detailed solution.&nbsp;,1.0,,1,28
the solution offered by the authors seems to be correct and i think should work to solve the problem. but tehy have not mentioned any coding principles or patterns that will be considered while implementing the design.&nbsp;,1.0,,1,38
they haven't made use of any uml diagrams or any flowcharts to explain the flow of the design. even though the explanation given for each issue is quite elaborate a pictorial representation of the implementation makes it easier for the reader to know the flow of the design.&nbsp;,1.0,,1,50
the team has mentioned the files to be edited and how the changes will look like after they are made. they have also given explanation behind the changes which is great. but they haven't mentioned what changes exactly are to be made to the files. it would have been better if they would have mentioned in brief about it.,1.0,,1,60
"yes all the required features in the problem statement are covered by the authors. however, the problem statement includes charts to be added in the views. the team has not given any project design or implementation details about how they are planning on achieving this feature. they have just provided two pictures of the potential results of how the charts would look. while , it is possible to understand the ideas of the teams, it is quite difficult just from the diagram.&nbsp; i would suggest to include a detailed plan of action about their implementation. they have included a list of files to be modified which is great. it would have been better to explain in a few lines , the changes that they plan on making.",1.0,,1,126
"the author has proposed some pretty concrete changes in the this doc. all these changes address the requirements as stated in the project problem statement. the idea of color coding in the review report is great and would make the job of the instructor easier. the idea of propagating the change in background color after sorting is great. this is not explicitly mentioned in the problem but rather have been spun up by the team to add convenience. this is really good. however , i would suggest that , instead of just stating your plan of action , the team should have given a brief explanation of the implementation of these proposed ideas for the reviewer to judge. including the files required to be edited would also be great and increase the understanding of the implementation that the team has in mind. adding a brief explanation of the implementation and including a list of files in which the proposed changes have been made would be really helpful for the reviewers.",1.0,,1,167
"yes, the design proposed by this team appears to be simple and concise. they have covered most of the necessary information about the proposed design and is easy to follow. however, there are some parts in the design that needs some more explanation and can increase the complexity. one thing , that i can think of is that they have mentioned that the scores for the questions added by students would not be graded. they have not specified , how they are going to differentiate the two types of questions and how exactly would this logic function. i suggest to consider such borderline cases and write test cases for it to ensure accurate functionality.",1.0,,1,112
"yes, the visuals added in this doc greatly assist in understanding the overall design of the authors. they flowcharts added and very descriptive and make the intentions of the team quite clear. the screenshots with the mock links added also prove helpful in understanding the endoderm goal of this team and how the results would look like.&nbsp; however , i would have loved to see a uml or a use case diagram which would have made the data flow across models controllers and views quite clear. the exact processing order and data movement would have been made clear with a uml and the different scenarios can be covered with a use case diagram. this would have strengthened the doc submitted by this team.",1.0,,1,123
the wiki doesn't introduce how to achieve all the functionality in detail. but some of them are good.,1.0,,1,19
it doesn't introduce how to do it in detail. e.g. what is&nbsp;geckodriver? how to compare the difference between pages? what code do you need to implement?,1.0,,1,30
the author has suggested the change and how they are planning to do it but it has not been explained properly as i got confused with the second line in tone analysis paragraph. also the link provided is not working. so it is somewhat hard to follow what and why that particular solution is provided.&nbsp;,1.0,,1,56
" ) they have mentioned the files in which the changes are to be made, but they haven't mentioned the methods that they are planning to add .&nbsp; ) how is the code modified is not mentioned, so it would be hard to comment whether the code would become ""smelly"" or not ) it doesn't seem that there exists any gem for simp-lying the aim for their project and the files they target to modify seem correct . ) the new design doesn't change anything in how the data is to be fetched so it won't affect the response time in any way. ) more effort could have been given in explaining the images are shared as that could have been easy for the user to understand the solution for the project issue.&nbsp;",1.0,,1,132
design does incorporate the issues that are to be addressed but the explanations could have provided for the user to completely understand the project.&nbsp;,1.0,,1,25
project purpose: the project purpose has been explained but i am still unclear what exactly is the aim for the project.&nbsp; project design: the design has not been explained properly why particularly they chose this design. testing : nothing has been mentioned about their testing plans due which design doc seems to be incomplete as how the functionalities would be tested isn't mentioned.&nbsp;,1.0,,1,65
the team has provided information on only few of the functionalities that has been mentioned in the expertiza design document. they haven't given any written explanation on the design they are following. it is really hard to follow what the team is trying to implement. please explain more on the changes/design.,1.0,,1,53
"the team is looking to make changes in the ""view_review_scores_popup.html.erb"" for the tone analysis and ""_answer_tagging_report.html.erb"" files. the team has to make sure they won't affect the existing files and not add more lines of code which prevents the code from being ""smelly"". i see the changes are made to the view files, so there are no any existing gems to be used. the response time has to be maintained properly so that it doesn't affect the performance of the system.&nbsp; as there are changes in pop_controller.rb the team could have explained any particular design they are following to modify them.",1.0,,1,109
"yes in the implementation plan the team has covered few functionalities and missed few. mainly they have to implement ui changes such as creating tabs for each of the review rounds. they also have to complete the tone analysis as well and they have worked to add those functions. i could see in the expertiza document that title chart visualization has to be done, and no where in the design document they have mentioned that. change to the controller, popup_controller.rb is not mentioned anywhere in the document. please try to add these changes.",1.0,,1,94
there are not a lot of design elements in this project. but the test strategy they have mentioned through the application flow diagram is clear enough. they want to take screenshots of the same html in two different browsers and compare them.,1.0,,1,42
"the document does not clearly mention about the proposed design. it mentions ""what"" tasks need to be completed in the ""work to be done"" section but does not mention ""how"" to do them"". a proposed design section lists screenshots and descriptions of how the application will look or work after the changes are made. the ""work to be done"" section lists the specific changes that need to be done to achieve the proposed design.",1.0,,1,74
the design tells us most of the things that is required from the project&nbsp;they have also mentioned using a&nbsp; diagram what the view should ultimately look like. a little more information regarding the project could have been provided in the project.,1.0,,1,44
"testing plan is not mentioned in the document. a plan to show how we can check the comment tone, or where do we add the comments and where can we see the tone of our comments that we added.",1.0,,1,39
the question has wrong links i suppose (spring ). i had to go to the course page to see the requirements.&nbsp; the team seems to have a pretty good idea of the purpose of the project and how they will do it. although i found link not to be directing where it should (this was different than in the google doc where all the projects are listed). you might want to fix that.&nbsp; &nbsp;,1.0,,1,75
"they seem to have covered most parts (purpose of the project and background information, what they plan to do, how will they do it, files associated with the changes). however i could not find the testing plan in the document. they have done a really good job at drawing the images of how it would look like later. there are some thing i would recommend, the background info does try to explain but it seems a little hard to visualize what you are trying to say there. adding more visuals would help reviewers better understand your work. one more thing i found was, in the second image under reviewee, it is not clear to me how ""team "" and ""student , , "" are different? a bit more clarification and it would have been just perfect.",1.0,,1,132
"the design appears to be sound from a high-level standpoint; the location of code changes are discussed. the discussion of principles and patterns&nbsp;needed to implement the code changes is not given. this means showing, for example, how the dry principle is used, how existing code is leveraged, what pattern will be used/re-used to maintain the new ""approval_status"" column, etc.",1.0,,1,64
"the ""files that have to be modified"" section could be made better by going into more detail with regards to what the proposed modifications are.",1.0,,1,25
the&nbsp;authors have thought about database design and coding needed for these changes although the changes have not been described in terms of principles or patterns.,1.0,,1,27
"the authors have gone into just the right amount of detail in explaining the changes that will be made.&nbsp; the use of ""role"" instead of ""duty"" throughout the document can be confusing.",1.0,,1,33
"the test plan covers the requirements, but only covers the ""happy path"" for testing. the steps that are given are not necessary and would be better to be replaced by high-level phrases that describe the negative and positive tests for this project.",1.0,,1,43
"tests were few and very vague on details, but seem appropriate though not much detail. not sure how one would go about testing this any better than the way it was described.",1.0,,1,32
"the authors did not describe what design changes they plan to make, only that they will make changes.",1.0,,1,18
i wonder if they could build uml diagrams for test plan?,1.0,,1,11
it's hard for me to guess what method will be added into which class since they explain the whole things together without subdivided them into subsections.,1.0,,1,27
"explanation of design strategy can be more smooth, e.g. ""if the instructor has enabled a particular assignment to have supplementary review questionnaire a student when clicks on the ""your work"" tab sees a link to the add/edit supplemntary review questionnaire."" can flow smoothly by trimming off bad grammar or adding some words.",1.0,,1,54
"it's better if they can describe their test plan with the anticipated test files, e.g.&nbsp;student_review_controller_spec.rb.",1.0,,1,20
"as previously mentioned in the first round, there is still no mention about how the pages will become prettier code wise.&nbsp; do you know specifically what needs to be changed in these html files?&nbsp; i also forgot to mention in the first round about how your bar chart will be displayed.&nbsp; will it be displayed on the fly?&nbsp; or will it be displayed in a separate page?&nbsp; if it's on a separate page, you may want to mention it's association with the other classes in expertiza.",1.0,,1,93
"they do not provide any visual aids, which i think would be a great idea. perhaps including a mock-up db table that would then be able to show how thios project would impact expertiza. or maybe there is some metric whereby cleaning up the extraneous references that are unneeded would affect it, and they can somehow visually represent the impact their design will have.",1.0,,1,65
"the team has written work to be done in a good way they have even put in&nbsp; hand drawings which was impressive, but i was not able to find and testing plan in the document&nbsp;",1.0,,1,37
diagrams are added for the ui point of view and are seen to be good . no uml diagram were shown in the report on what calls are going to be made to accommodate the required changes,1.0,,1,36
"the document talked about the design changed to me made at a higher level, they seemes correct but a serious comment was diffucult to be made looking at the higher level changes being proposed&nbsp;",1.0,,1,35
&nbsp;the explanation was crisp for most part . if it was possible to mention how they would plan to check all the attributes in a better way or go through each of them individually . i am just curious,1.0,,1,38
"the document appears complete, its good to see the test plan and references, i would also include the pull request, it be beneficial to see what files would be affected and what changes would be there for each file. the images does give a idea of where the changes would be in each view, but adding controller and view names/location in the changes would have been better. there is a gradual list of what the changes would be which is a good thing. the images are a tab bit big.",1.0,,1,91
the design document had the methods missing. the authors could have written down the methods that would be changed in the affected files.,1.0,,1,23
"the designed document had very little explanations.only the background info, tone analysis section and two diagrams were present.",1.0,,1,19
the document has only diagrams. the designers could have provided some more designs,1.0,,1,13
"the design doc has incorporated all the functionality required, except that they did not write the set up steps.&nbsp;",1.0,,1,20
"the authors did not provide the specific methods that would be touched upon during this project. the designed was well explained, but i felt they could have explained the flow chart a bit more and they could have explained the exact changes they would make in each of the files.",1.0,,1,50
"from what i can see, the design seems to have taken into account all of the required functionalities. the document had an explanation on how each functionality was going to be implemented and also provided the corresponding mockups. i am reducing a point because names of the files to be modified were not mentioned and only the functionality was explained.",1.0,,1,60
the screenshots were extremely detailed and was able to provide a clear difference between the current scenario and the proposed solution. however i am reducing a point because of lack of uml diagrams. uml diagrams help a lot in the design of applications and provide a clear picture of the system skeleton and it would be better to include them.,1.0,,1,60
"i think an example would really do wonders here. its a bit hard to grasp exactly whats being changed? the word normalize makes it sound like the team will make each table have a similar/the same layout when that likely isn't possible. maybe show a db that has a few redundant fields and how you will fix that specific one, and then show the wiki page its connected to, and how you have to update that page?&nbsp;",1.0,,1,80
"the design document does a good job of covering the requirements, the work that was completed during the oss project and the work still left to do. it was concise and made good use of external references to keep it that way. however, one portion that is missing is the testing plan. how does your team ensure that the models they create are functioning as expected?",1.0,,1,66
"step by step explanation of the instructions were given in this document. however, the discussion about design could have used more explanation. rather than restating what the instructions stated, this design doc will benefit from adding specific details about how they will implement everything.",1.0,,1,44
"all was well with the design doc. the purpose was laid out well. although the specifics of the project design were left out, the big picture was communicated to me. there was no test plan in the document. however, the description of their project seemed to have included a way to test the difference between servo and firefox.",1.0,,1,58
"the author does not appear to have proposed any changes out side of reiterating the project description.&nbsp;&nbsp;&nbsp; since this project is mainly focused on cleaning up the db, i do not feel as though there is really any need for formal documentation such as wireframes or uml documents to be made.&nbsp; that being said, it is important that the team lay out a plan of action so that both reviewers and other team members alike have a good idea what is going on.",1.0,,1,87
"the team should definitely put some more effort into expanding the documentation.&nbsp; as mentioned above, there isn't really any need for formal documentation such as umls or wireframes, but the team should definitely focus on creating a plan of action moving forward.&nbsp; the team did do a good job finding all of the tables that could need editing, but i would suggest reducing these documented tables down to just those that will be worked on in the project.&nbsp; other then that, keep up the good work.",1.0,,1,90
"while the team reiterates the project description given in the google doc, they do not appear to have worked through any design decisions as of yet.&nbsp; what they have done is go though all of the database tables and given links to them in the expertiza documentation.&nbsp; while this is nice to have, it might be more helpful if just one table is linked with maybe a list of the tables that need to be changed.&nbsp; the project does not require that all the tables be updated and changed, just the ones that are not set up properly.",1.0,,1,101
"the team has done a good job covering the projects purpose and the scope of the project as a whole.&nbsp; that being said, the team has not included a uml or wireframe describing the technical layout of their porject.&nbsp; furthermore, the team does not appear to have added testing plan.&nbsp;&nbsp;even though the team has not done either of these two things, they seem to be on track given it is only one week into the project.&nbsp; i would suggest though, that moving forward the team focus on getting these technical documents written up so that they can all be on the same page when it comes time to begin implementing everything.",1.0,,1,117
"the team has not included any visualizations or diagrams.&nbsp; as i mentioned earlier, it might not be necessary to include a uml or a wireframe since the team is mainly focusing on rewriting the db files.&nbsp; but, they should certainly include some diagrams explaining what they will be changing visually.&nbsp;",1.0,,1,53
"yes, the design appears to be sound.&nbsp; the team seems to be following appropriate principles, but does not specify a specific design pattern.&nbsp; this might be helpful to add in the future, but the team as a whole seems to have a great understanding of the systems design and what they need to do to complete the project.",1.0,,1,60
"the team does include a test plan.&nbsp; it appears from their description, that it is not necessary for them to write tests for their given project as it will be obvious as to whether or not it will work. that being said, if the project only needs to be ""visually"" verified, it might be nice to have some form of selenium tests written to automate this validation.&nbsp; i am not very familiar with the mozilla project or the rust language, so selenium tests might not apply, but here is a helpful resource to look at if you think automating some webrouser tests might be helpful. https://www.seleniumhq.org/docs/ _introducing_selenium.jsp other then that, great job!",1.0,,1,119
i have no idea how the authors plan to get this thing done. they have just added images. i cannot understand what they want to do. they need more work on the wiki.,1.0,,1,33
"no testing section, no explanation provided for the work they wish to do. a lot of details is missing. authors needs to work on the wiki page as it is the only thing which will help us understand what they plan to do.",1.0,,1,43
"the wiki has explained their approach which appears to be very simple. however, i believe for this project, the changes can make the code messy and bring some bugs out. i hope the authors do a thorough check of all the functionalities before deploying the code.&nbsp;",1.0,,1,47
there are images of only old work done. the authors havent used any visual narrative for the wiki page. the authors should add more images and make the wiki more informative.,1.0,,1,31
"the approach the authors are trying to take is pretty simple. there is no mentioning of any principles or patterns in their wiki to understand whether they have used one. from the wiki, it is easy to understand the work they want to do.&nbsp;",1.0,,1,45
"use of mock-ups is excellent, and are necessary. i think the explanations could be slightly improved, but i addressed this in previous feedback. the umls need to be added as well however i do get a solid understanding of what the authors want to do with the code even though i do not know exactly what parts of the code they will modify.",1.0,,1,64
very thorough with the description of the purpose and design. the only thing missing is any plans for testing.,1.0,,1,19
hard to understand as no explanation is present. code also not given to evaluate previous work. the authors needs to step up their game and work.,1.0,,1,26
"there are only images present in the wiki with the least amount of information. although using images is a good task, however, they need to explain as the reviewer cannot understand the work just by seeing the images.",1.0,,1,38
no some features are missing as the wiki needs to be more informative. the work they want to do is only showed using images and not any information. the wiki needs more work. i hope by round they will have a better wiki.,1.0,,1,43
"the authors have tried to incorporate all the functionalities as they have mentioned it in their wiki. however, since there is no code present, it is hard to evaluate whether they have implemented all the given functionalities.&nbsp;",1.0,,1,38
"the design document is almost appropriate. i see that the project is continued from the previous oss project. i feel the authors can add sections to explain what they plan to do ahead with the project with more information. there is no testing plan present in the wiki, authors can add this section for review .&nbsp;",1.0,,1,56
the document covers the changes that the team will be making and seems to know how they'll be tackling them. it's not hard to follow and i can understand it clearly. the only thing i felt inadequate was that there's no mention about the potential files and/or functions they would have to change to implement the requirements. including these give a feel that the team has been thorough and have a solid foundation to work on.,1.0,,1,80
"the document covers the changes that the team will be making and seems to know how they'll be tackling them. it's not hard to follow and i can understand it clearly for most part. however i am not too clear on how the grading will work. initially it is mentioned that these supplementary questionnaire will not be graded but the uml diagram mentions that the srq scores would be appended to the original review scores. also i'm not sure as to whether these would be optional or not. if they are optional, i believe people wouldn't be keen on answering them. if they are not graded, it is not fair for some people reviewing to do additional work in reviewing the team's work. it could be added as an optional bonus if answered.",1.0,,1,138
"the design doc is very well written and is easy to follow. the authors have very well elaborated what the project is about and what is expected of it. the only thing missing here is a test plan. apart from that, the authors have done a flawless job.",1.0,,1,48
"to be honest, i didn't get what the team is trying to propose because of inadequate explanation. if the team would have been a little bit more descriptive, it would have been easy to understand. the have listed some tables as deprecated, but without any explanation.",1.0,,1,47
"apart from just listing some tables as deprecated, there is nothing more added. it's impossible to figure out from the wiki what the authors plan to change or add.&nbsp;",1.0,,1,31
"the project is about regularizing the database and making changes to the doc to make it more informative, which the doc fails to achieve as of now.",1.0,,1,27
"this does not seem to apply to this particular project. but, the changes they have proposed seem sound enough, the explanation albeit lacking in many parts.",1.0,,1,26
"the design doc lists the project purpose and project design in a sense by listing objectives. the project invovles regularizing the database schema so it is understandably difficult to produce a project design like a mock up. however, the&nbsp; suggested changes do not go into much detail and are not well documented. listing few sections of the wiki that will be updated would have added to the completeness of the doc. in addition, the testing plan was hard to extract, and doesn't go into much detail. i think overall, the team should add headings to the document that clearly outline what the problem and background of the project is, what their suggested solutions are, and a description of each solution. also they should have a seperate section for a test plan. &nbsp;",1.0,,1,134
"it doesn't appear that a test plan is needed for this project. however, since there are database changes being made, the system will definitely be at risk of not working anymore if something goes wrong. i suggest the team add a sections",1.0,,1,43
"the proposed changes, while clear in overall objective, were not very detailed. it is hard to gauge how many methods will be added and where. in addition, i would suggest that the team add a files modified section to their doc, as it appears that they are adding a lot of new functionalities. based on the scope of the project, it is apparent that the code could end up a bit more ""smelly"" by the end, so the team should make sure to explain in the doc how they will implement these features while avoiding this.",1.0,,1,96
"the team did a great job explaining what their goal is for this project. great visualization for project design (we should have included hand-drawn mock-ups too)! however, they haven't outlined their testing plan yet.",1.0,,1,37
they explained the project very well. but they just didn't talk about details plan.,1.0,,1,15
"their goal is to add a new function to expertiza like a role-based reviewing so that students can select their role(duty) of an assignment and will be reviewed through a role-based evaluation rubric. according to their wiki, all their proposed changes are reasonable and necessary to achieve their goal, so it's hard to tell if their design and code are problematic. but i noticed a minor problem: in ""files that have to be modified"", you may miss ""view/"" for the last three directories because i just can't find such directories.",1.0,,1,95
"they have made an awesome uml diagram to illustrate the relationship between the newly-added duty model with other relevant models. it's intuitive and very helpful for readers to understand what they are going to implement the ""duty"" functionality. but as a reader, i got confused over the following things in the diagram and you may consider fixing these: .is the variable dutyid necessary in duty? because i think rails can&nbsp;auto generate id for any created model itself. .it's not clear what ""&lt;&lt;users&gt;&gt;"" on those doted lines mean. &nbsp;",1.0,,1,97
"yes. form proposed implementation, i can tell they really understood the requirements and figured out how to implement in steps. but i think they may miss something: one of e requirements is that the system can present the correct teammate evaluation rubric based on role(duty) of the team member, but in their wiki i can not find related implementation plans or proposed implementations.",1.0,,1,64
"yes. from their wiki&nbsp;especially in ""proposed implementation"" it seems they have fully explained the changes they will make to expertiza which includes migration changes, instructor view changes and student view changes, and each of these was quite descriptive and easy to understand. they also listed the files to be modified and files to be created which is very thoughtful. but i want to mention a little problem: in both ""migration changes"" and ""instructor view changes"", they gave very detailed descriptions of how to make the changes such as which parameter and method need to be created or modified to realize some functionalities. however in ""student view changes"" it seems they just described the changes made to the view and nothing is mentioned how to do that.",1.0,,1,128
yes. they need to write tests since they will both create and modify files. they got a&nbsp;hierarchical test plan which is clear and easy to follow. but it's too short and doesn't have some expected information such as&nbsp;which&nbsp;files need to be tested and how many rspec test files will be created,1.0,,1,59
yes they included project purpose which is easy to understand but they&nbsp;didn't mention their plan (didn't explain how they'd plan to complete their goals in steps),1.0,,1,31
"there's no&nbsp;test plan shown&nbsp;in their wiki and i think for their project maybe it's not necessary to&nbsp;do tests. but if they are going to change some field names, then&nbsp;some already existed tests may be influenced and in these cases they may consider either modifying existed tests or writing new tests.",1.0,,1,60
there's no visulization&nbsp;shown&nbsp;in their wiki and i think for their project maybe it's not necessary to include visulization.,1.0,,1,24
"while the typical rails files for testing were included, i did not see a complete set of tests for model and controller.",1.0,,1,22
"i was able to post house without any data filled in form. house got created successfully. likewise for company. phone number validation missing in sign up. sort by sqft, price and floors are failing (going to error page) applying price range filter and clicking once is giving expected result. clicking on it again is resetting the filter. could try to retain the applied filter on the html select option. when i tried to view a non-existent house manually by changing url (example https://calm-forest- .herokuapp.com/house_lists/ ), i got the default ruby error screen (""the page you were looking for doesn't exist"").&nbsp; could do a redirect to browse page :) (https://calm-forest- .herokuapp.com/house_lists/) &nbsp; tried to update an old inquiry. got a new page that says ""invalid access"" as well as ""inquiry was successfully updated""!",1.0,,1,141
"when searching for house, type some location, hit filter, then sort by year. found a url like this: https://calm-forest- .herokuapp.com/house_lists/filter?location=rdu&amp;authenticity_token=j ttfx% bi fb dl jg pdb zm a bdroes% f% f vuoj% bztedqdysx e% fmmhxeo ra kmbdh ri jg qon pdfa% d% d&amp;commit=filter&amp;id=search-form&amp;method=get&amp;sort=build_year_low&amp;utf =%e % c% passing sensitive info like authenticity token in url param is dangerous. also, is it required? &nbsp; when viewing interested users of a particular house, what's the point of the url param 'user_id' ? https://calm-forest- .herokuapp.com/interests?house_list_id= &amp;user_id= https://calm-forest- .herokuapp.com/interests?house_list_id= &amp;user_id= ",1.0,,1,121
no mapping table present anywhere. no belongs to/ has_many relationship present in the models,1.0,,1,14
yes team had been pushing changes on github continuously with neat commit messages in round also.&nbsp; with commits till now. yes i can see last commit on th oct . but commits are not distributed equally.,1.0,,1,36
"test cases seem to be written neatly. it seems team has spent most of the time on coding, i would request team to perform rounds of negative test cases that might help them avoid functionalities fail and system credentials. system allows to provide same email id to&nbsp; realtor as well has house-hunter, but they have also provided role while signing in, that distinguishes a user who is house hunter and realtor both.&nbsp;",1.0,,1,75
team has tried very well to fix the problems from first release and succeeded partially. errors and form validations are still not specific. below are few basic functionalities team could work upon. . house hunter is able to create and edit company as well as houses. . admin can create users but no passwords. &nbsp;,1.0,,1,53
test cases are written very well and system is tested well till some extend but many small cases needs to still handled.,1.0,,1,22
"realtor- house- inquiry relationship deleting realtors shouldn't delete houses and inquires. interests shouldn't have been defined on the user model. company has_many users-&gt; hunter doesn't belong to company. with such a relationship was, hunters could be associated to a company by editing request params before post request to create users.",1.0,,1,54
"yes, changes we committed in round . code commit could have better by committing&nbsp;as soon&nbsp;as possible. committing few files and writing proper comments and description for the commit was missing. as a reader, i was not able to understand what a particular commit meant and what module was changed because there was no proper explanation.&nbsp;",1.0,,1,59
"the code contains comments which makes it little hard to read through.other than that the organisational way, refactoring methods are handled good",1.0,,1,23
"the application code is properly divided into modules. the controller have defined functions for various tasks. the functionalities of interest list , potential buyers , replies to inquires are missing from the application. class reg is not a proper name for the class . also the class is included in the houses controller which is not a good programming practice. the developers should have created a new controller for the reg class. the validations are missing for company details. also separate sessions are created for different user types.",1.0,,1,85
"the use of active record is missing from the application. there are no foreign key relationships in the schema. although the relationship are maintained in the model file. a separate database is created for admin/realtor/hunter which will store a lot of redundant data. there is no database for storing the response of inquiries. according to the db design , a house belongs to both a company and a realtor directly which is not correct. &nbsp;",1.0,,1,76
yes most of the required features are working fine. some errors are there like admin is able to add interest to houses which is an unintended feature as admin should change role before doing that.,1.0,,1,35
"the team continued to make changes in round on a regular basis. however, naming should have been more descriptive.&nbsp;in&nbsp;many cases it is not possible to understand the scope of the commit. one team member's work is not reflected in github's contributors panel. i would suggest fixing this by matching user's credentials&nbsp;of local machine and&nbsp;remote server.",1.0,,1,66
"most of the edge cases pertain to houses/inquiries/users. this cannot be tested if houses are not present in the system.&nbsp;houses&nbsp;can be added through admin, realtor or seed. i would suggest fixing at least admin or realtor functionality or using seed for populating data.",1.0,,1,49
"yes, they have tested a controller but not the model.",1.0,,1,10
"im unable to signup as a house hunter or a realtor, so the controllers for the same have not been tested. a suggestion would be to provide details of already created users so that reviewers can atleast log in and test other functionalities.",1.0,,1,43
" &gt;unable to test the edge cases as the many functionalities are not working as stated above. &gt; the logout functionality does not work. user is&nbsp; enabled to login as an admin and realtor at the same time, but cannot log out. &gt; the validation have still not been implemented in the application for example entities can be created without adding any details in the field. please find the real estate company creation screen as below: real estate company was successfully created. real estate company was successfully created. name: website: address: size: founded: revenue: synopsis:",1.0,,1,96
ui for new house needs improvement. forms need to be more precise rather than adding many radio buttons as in the case for 'new house'. ui for inquiry/reply needs to be more clear.&nbsp;,1.0,,1,35
the system works as expected and common functionality is working but still needs to focus on some areas: . not able to sign in as admin with preconfigured account. . how to add inquiries or to an interest list.,1.0,,1,37
user interface should not show the location users#dashboard &nbsp; find me in app/views/users/dashboard.html.erb,1.0,,1,19
"the application portal is same for all the users. therefore all users have been given same permissions. &nbsp; readme does not contain admin credentials . hence, can't test admin functionalities",1.0,,1,30
favouriates controller is tested. but not in detail. it just checks if we can navigate to it.,1.0,,1,17
"there are still session variables and route names being displayed on some of the screens which were suggested to be removed. the functionality is quite good considering there was no implementation during first review. potential buyers functionality is not implemented. enquiry functionality doesn't work . it throws application error check logs error when clicked. possibly a deployment issue. when&nbsp; a new house is created , it is not displayed in the listings immediately. admin login doesn't work. it may be possible that someone might have edited admin login during review or else please paste the latest login details in readme.",1.0,,1,101
the dependencies are not handled properly. it errors out when we try to delete parent record like company or house . use of dependent destroy and proper mentioning on belongs to and has many relationship in all models should solve this issue,1.0,,1,41
deletion fails in most cases as dependent records don't get deleted. model changes to add and delete these dependencies will resolve the issue.,1.0,,1,24
"ui displays session info, file paths and # tags. could be improved with little efforts",1.0,,1,14
"- admin cannot create new house, it redirects to error page. - realtors cannot reply to inquiries.",1.0,,1,15
"i am unable to find many relationships in the model, though functionality seems to be in place either additional gems have&nbsp; been used or code has been pushed in schema.db which is wrong.&nbsp; &nbsp;",1.0,,1,37
"overall, it's good. also in houses_controller.rb, the logic in the find_houses method should have been moved to the corresponding model. application logic should be moved to the model. the admins_controller found in app/controllers is empty. what's it for? also, when it comes to naming, house_controller and home_controller seems confusing.",1.0,,1,53
"the admin is unable to destroy a real estate company due to the above mentioned dependency bug on the model files. since all users are listed in a common view without information about who is a realtor and who is a house hunter, the admin would be unable to specifically test removing a type of user unless he/she creates one themselves. on changing real estate company through update for a realtor, the real estate company change was reflected else where, updation has been implemented well. the realtor is also unable to see the inquires or reply to them.",1.0,,1,99
no for e.g house should belong_to a real estate company but its not handled in house.rb,1.0,,1,18
"admin . admin can not see all the inquiries&nbsp;by house hunters. hunter .house search feature -not implemented. .house interest /interest list feature -not implemented.&nbsp; . even a hunter can post an ad of a house and create a company, missed&nbsp;implementation&nbsp;of&nbsp;basic checks on user roles. . the inquiry is not associated with the house, a separate tab is given with a&nbsp;generic form where the hunter has to&nbsp;select a realtor and that is failing when clicked on submit(maybe a heroku&nbsp;glitch ). .no record of submitted inquiries. relator: . seeing potential buyers -not implemented. .inquiry view/reply- -not implemented. .can post houses for any user(i.e under any company and under any realtor or hunter) &nbsp; many functionalities have not been implemented, if https://nameless-everglades- .herokuapp.com the link they have submitted for round . &nbsp;",1.0,,1,145
"the system just works in few functions. even though authors fix the problem that admin cannot log in in the first round,&nbsp;it&nbsp;still lack many functions that the system supposed to have. from the admin perspetive, admin can edit, show and delete any users; create, show, edit and delete any companies, but it cannot create a new user. besides, when i click the link of house, the page jump out, which means that there is no way that i can see any houses listed. from realtor's perspertive, a realtor can sign up and log in. apart from these, there is no other fuction that realized in the system. a realtor cannot switch his/her role or edit his/her profile, cannot list houses, choose company she/he belongs to, and reply any inquiries from hunters. from the perspertive of hunter, authors just realized the function of signup and sign in. besides those, it doesn't have any other functions that the system is supposed to have. besides, there are some problems in log in part. when i&nbsp; log out as admin and log in as a realtor or a hunter, i can still access&nbsp;",1.0,,1,200
"most of the code is well organized and follows&nbsp;""good ruby and rails coding practices"". but i found some code has indentation problems. for example, in session_controller.rb, line - have obvious indentation problem.",1.0,,1,34
"&nbsp;commenting was pretty weak in the files i looked through. overall code style looked pretty good though, i scanned through the files and nothing caught my eye as poor.",1.0,,1,30
&nbsp;the admin model is tested however this seems silly as creation of admin accounts doesn't really matter as it is not possible. they are supposed to be predefined. the admin controller has a very extensive list of tests. very good work here. &nbsp; &nbsp;,1.0,,1,46
the code is well written. i noticed the controller for inquiries is well written but it is unclear how to access all those functionalities from the front-end.,1.0,,1,28
"i did not see a test plan per se, but they did include examples of the scenarios there code was solving.",1.0,,1,21
"overall, i think it could be deployed. there are no tests however written for this functionality, and there are some ui patterns that should be re-considered&nbsp;before deploying that do not match&nbsp;each other. when saving feedback, the ability to save feedback is automatically present and there is a button per row, while in the other location, you must first make a row ""editable"".",1.0,,1,67
"the write-up is well written. it looks like they have improved the test plan sections, but still no automated tests in the repository.",1.0,,1,24
i'm essentially keeping my feedback the same. there are places where i believe that better names could be used and smaller javascript methods could be used.&nbsp;,1.0,,1,28
"i was able to understand the changes they were making and why, however i thought the write-up was a little too verbose and had too much code - i can find the code in their pr.",1.0,,1,36
the code follows most of the standard practices except the rd one. it does falls short of comments. it took a very long time to make sense of what the changes made by the author in a particular file does. this scenario could be improved in the future iterations.,1.0,,1,49
"yes, the code seems good to deploy if we consider the manual testing and the video demonstration. but since it didn't pass travis ci, this claims seems a bit of a concern. if we ignore the fact that lines of code was &gt; , and thats why travis ci failed, but still there are a few lingering issues which the travis ci pointed, which still hasn't been fixed. it seems more of a patch, which would require more patches to patch in the future.",1.0,,1,85
"the writeup expalins clearly enough what the authors did. though, the part of ""why"" the authors did what they did isn't elaborated with much depth. from the authors perspective, the articles seems exhaustive and comprehensive, but for a person reviewing the article, who doesn't have much background of the problem at hand, the article make it tough to decipher why certain program is written the way it is.&nbsp;",1.0,,1,71
crashed for me once randomly. might be not because of these changes but i am not sure,1.0,,1,17
writeup is still in the form of a word doc instead of a wiki. test plan and tests are missing.,1.0,,1,20
"needs some work, code climate changes, a bit of dryness and a passing ci is needed.",1.0,,1,16
"because of the merge conflict in gemlock file, it is not merged and travis ci has not run.&nbsp; i believe they ran bundle update and committed the file which should not happen as it updates the dependencies and might break some features.",1.0,,1,43
there is some repetition of code but overall code quality is ok. there are some comments from the professor which should have been addressed. &nbsp;,1.0,,1,25
travis ci did not pass. code climate also has &nbsp;issues to fix.,1.0,,1,13
class and variables are name correctly. get_bookmark_rating_response_map is an not an apt name for a function. the word bookmark can be omitted in function and variable names inside the bookmark controller. .when a student requests a bookmark it should show a bookmark test is failing,1.0,,1,45
cases mentioned seem to be working fine. can be a bit descriptive about the steps though.,1.0,,1,16
"the solution of problem was not clear from the write up, no explanation has been given.",1.0,,1,16
"no. i can not see any link of video to check the changed functionality or system, hence it is difficult to pass the changes to production. yes new team can take up remaining changes and provide a working system. &nbsp;",1.0,,1,40
"yes, writeup explains the approach taken by team to solve the issue, theoretically. team could have explained the issues and resolution practically. also no design pattern or principle were used.",1.0,,1,30
i can not see any link to test changes as well as no video to watch the changes. team could have shared implemented part to test and review.,1.0,,1,28
code climate show issues in the code. many lines aren't properly aligned. commented code hasn't been removed.,1.0,,1,19
"build failing due to bad test. log shows one error for now. also, i have a feeling tests on some projects aren't able to run all test- the coverage log for this pr shows that none of the files are getting covered:&nbsp;https://coveralls.io/jobs/ ",1.0,,1,48
"the test is almost ready to be deployed onto the production server. as mentioned above, there are some issues need to be fixed.",1.0,,1,23
the travis ci is in progress and there are codeclimate issue to fix. &nbsp;,1.0,,1,14
"the pull request shows that the code has failed all the checks. therefore it should not be deployed.&nbsp; suggestions: rectify the code climate, travis build and the merge conflict that is being displayed on the pull request(gemfile.lock conflict) . once done, the code could be deployed. functionality is working fine, no doubt but build must not be deployed unless the above issues are resoled.&nbsp;",1.0,,1,67
the travis ci build does not pass.&nbsp; suggestion: team should have rectified this.&nbsp;,1.0,,1,15
"the team has modified an existing test case, but it&nbsp;didn't increase the test coverage.",1.0,,1,17
"these fixes appear to be acceptable. code climate could be better, and debug code could be removed, but if the changes in the document are in the source, than i have no complaints.",1.0,,1,33
no test plan section in writeup. it doesn't appear as though the repository updated the team_spec.rb file either.,1.0,,1,20
"the code segments in the report seem fine. the pull request and linked fork do not show the changes though, so i can't verify in the source code.",1.0,,1,29
" % is better than nothing, but it's still a far-cry from a complete unit test suite for the review_response_map model. i'd recommend it be merged, but it needs to be completed.",1.0,,1,33
build is failing. correct it by understanding the reason. good job on ruby standards for the naming convention.,1.0,,1,18
"code written well. remove the unwanted methods, there are few duplicate methods which can be removed.",1.0,,1,16
not able to see the changes done by the team. test plan could have been explained better. if the url or the screencast was provided it would have been better.,1.0,,1,30
link to the pull request is missing. please add it.,1.0,,1,10
can't test as the link to the deployed application is not given nor the screencast video link is provided. please include either of them.,1.0,,1,25
"as this rubric calls for a section called test plan, i suggest adding it and rearranging the wiki content, so that a description of the tests is given in this section",1.0,,1,31
"code is running and no errors are encountered. however, very few tests have been written and coverage is low. a way to make the testing more robust is to test every function with a known success case and&nbsp; an edge case or potential failure.",1.0,,1,45
"&nbsp;the authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.",1.0,,1,23
"although their documentation shows screenshots and their app is deployed on vcl, there was no testing plan/ how to test on application. there was no screencast too. so it poses a difficulty on how to see. but from the screenshots on the documentation, the features seem to work good.",1.0,,1,49
"as given in wiki for their test plan,&nbsp; the admin tests include building and deleting both administrator and instructor accounts using capybara for testing the front-end web functionality. it 'delete instructor successfully' do it 'delete admin successfully' do to test the role creation, capybara was again used to check that the web page did not have any button for ""new role"" and that navigating to the page manually resulted in an error. it 'should not create a new role and redirect to index page when ""new"" method is called' do. &nbsp; although they havent explained the edge cases and negative inputs in the wiki, their test cases cover whatever has been discussed",1.0,,1,114
"the code hasnt been changed from the first round. new definitions that were added follow naming conventions properly. remove_administrator remove_instructor viewing their pull request and code climate bot, there were few places where identical blocks of code can be found.but they are in the spec files.they could have refactored those areas alone.",1.0,,1,54
"the operation works perfectly from ui as shown in the youtube screencast. the app was not deployed anywhere (or the link was not posted), so couldnt test it by myself. application could have been deployed during the second review for better understanding and trying out how the feature works.",1.0,,1,49
"the team has written a concise and efficient code with proper implementation. however, some additional comments in some parts would improve the readability and make it easier to comprehend",1.0,,1,29
"the team has checked most of the points given in the problem statement. however proper testing should be done before deploying this project on the main server. it must be ensured that the overall coverage increases. other than the testing part, everything else has been implemented as expected.",1.0,,1,48
"the writeup does not include the test plan as of now, but that is the only thing which is left for the team to complete. the team could work on this and try to improve the test coverage.",1.0,,1,38
"unfortunately, the test cases are lacking this could be improved before the second submission",1.0,,1,14
"the writeup is well written with proper screenshots. i liked that the team has provided appropriate screenshots for specific scenarios which covers all the aspects of the project. however, the test-plan section could be improved by adding the test code",1.0,,1,41
"some travis ci tests have failed and some code climate issues are still pending, though the commit comments say that the issues aren't related to the project files. but they have tried to fix the issues though so good work.",1.0,,1,41
"the view file contain more files so it is quite difficult to figure out the&nbsp;structure of the view. it is better if independent component is introduced to construct the whole task view. and the commits contain the gemfile, which is considered not secure to deploy for it alters the production environment.&nbsp;",1.0,,1,54
"some branches are skipped by the ""allow"" statement. if a method would raise an exception, then test whether it would raise it.&nbsp;",1.0,,1,23
"i feel confident if the travis ci integration issues are addressed, then it can be deployed in the production server.",1.0,,1,20
"the pull request says the travis ci build is in progress, but that seems improbable. upon closer investigation into the travis ci ""details"", it looks like the build is failing.",1.0,,1,30
"it's probably fine if the integration tests can be resolved, and the code smells from code climate can be fixed.",1.0,,1,21
"no test plan was included. the bare minimum of description was given for each test, and the project preamble. as far as i can tell, though, there is no document that says we should have created a test plan, and i bet it is safe to say that their mentor did not suggest creating a test plan either.",1.0,,1,58
"&nbsp;the project does not pass the travis ci integration tests. i looked at its output, and i cannot tell how significant the failure is. maybe its an easy fix?",1.0,,1,30
&nbsp;it's fine to good. i wish y'all would have posted a link to your repo in stead of the pull request.,1.0,,1,24
"build issues to be fixed. this pull request is not in ""ready to merge"" state.",1.0,,1,15
conflicts were resolved to an extent for the travis cl. but not all the tests are passing.,1.0,,1,17
although the write up has all the details about how the work has been done and what solutions are proposed. there are no explanation about design principles.&nbsp;,1.0,,1,28
"the group has not shared the link for the test environment. hence unable to test the edge cases. however, in the screen cast they have covered the functionalities mentioned in the requirement document.",1.0,,1,33
code is clean and variable names are readable. need a bit of formatting as some lines are not 'aligned' well.&nbsp;,1.0,,1,21
they have added new test cases and hence code is not dry.&nbsp;,1.0,,1,13
"they have kept up to the standards of the goof coding practice , like they have given reasonable&nbsp; variables names and functions name which makes it easy to understand what is the function supposed to do. however, they haven't added the comments",1.0,,1,43
travis ci build is failing. lot of warnings and issues that have not been fixed. many of them are trivial and easy to fix.&nbsp;,1.0,,1,25
the code works well for edge cases as well. as they mentioned in the wiki sometimes the app throws an error (in english or sql). it would be nice to know if they could debug a little and find out in which case the sqlexception is thrown and in which case the english (handled) error is thrown.,1.0,,1,57
the pull request link is not provided to verify the tests.,1.0,,1,11
write-up needs serious attention of the team. the approach followed is good but it still needs to be worked on. the write-up should include contents which makes it self-explanatory.,1.0,,1,32
"there is no code included in the write-up,but the team had mentioned the changed files in the write.as a reviewer, it is difficult to find out which code has been added by the team. the team should clearly explain what they are doing.",1.0,,1,46
"the code is really well written , there are no bad names. the functions are also easy to understand. however, i would suggest them to include more comments in the code so that it becomes clear for the person reading the code that what the function and changes are all bout.",1.0,,1,50
"the test plan is explained in a good manner, but the edge cases and invalid values are not mentioned. what if a space is in front of the username.&nbsp;",1.0,,1,30
the author's work is implemented well and is implemented as expected. few edge cases can be written to test the code completely.,1.0,,1,23
"the code was well written during the last review too, it only missed comments. a few comments have been added but still a major portion of code remains uncommented.&nbsp; other than that, the code is nicely written, follows guidelines&nbsp;and variable names are appropriate.",1.0,,1,46
travis ci tests have failed. but there are no conflicts and the build is ready to be merged with master branch.,1.0,,1,21
function names look good. and most of them have len &lt; which is good.&nbsp; the tests make use of contexts effectively. this is great to see. &nbsp; &nbsp;yes more comments are required especially in the controller code telling why an approach was taken and what the function does.&nbsp; &nbsp;,1.0,,1,52
"&nbsp; yes they have a test section. the amount of coverage added for the new tests is great. keep it up, however i would have liked that the authors added more negative cases as part of t heir unit tests.&nbsp; i see mostly the +ve test cases being handled in the tests.&nbsp; &nbsp;",1.0,,1,55
no. i think the authors should have mentioned why a particular solution was taken. what was the main driving force for taking the approach that they have taken. this was entirely missing. pls work on that. they could also remove much of the commented code. &nbsp; &nbsp; &nbsp; &nbsp;,1.0,,1,49
"build fails, pls look into it.&nbsp; bookmarkratingresponsemap has been replaced by bookmarkratingquestionnaire but the earlier naming convention just by looking at the name let the reader understand the data structure being used. i would have liked similar approach here.&nbsp;&nbsp; &nbsp;",1.0,,1,43
&nbsp;they explained how they made the changes. patterns if used are not noticed by looking at the code and not mentioned in the writeup,1.0,,1,25
the code that is written has long functions. few names do not really provide the gist of what the function is intending to perform,1.0,,1,24
"in the due_date_color(due_date), instead of hardcoding the color vs interval, it would have been more useful if those are pulled from a config file. that will make the implementation more flexible &nbsp; similar hardcoding found in . list_student_tasks: per_page: . breaking_word_wrap: breaking_word_wrap(student_task.assignment.name, ) &nbsp; &nbsp; use of inline css element, could have avoided by using a simple css class. such harcoded stuffs make the view strongly coupled with the style elements, which could have been avoided. &lt;hr style=""height: px;border:none;color:#e e e ;background-color:#e e e ;"" &nbsp; also, the ui changes are not showing up properly aligned. please see the attached screenshot &nbsp;",1.0,,1,110
"student dashboard &nbsp; please see the dashboard. the ui elements are not properly aligned. the title ""current assignments"" is not where it should be.&nbsp;",1.0,,1,25
"although the write up clearly explains the problem statement and also contains the changes made, it doesn't include the test plan which would give a clearer picture of the changes added.",1.0,,1,32
"code looks concise. however at few places, indentation is messed up.",1.0,,1,11
"the build passed in travis ci and there were no conflicts. but, some issues are not fixed like refactoring is not done and block has too many lines. these issues should be considered for a well written code.",1.0,,1,38
"the code was well-written and no problem with long or bad names. but, no comments were present. commenting would have made the code easier to understand. also, refactoring was not done.",1.0,,1,32
more comments are needed because i had trouble following what the code was doing in some places. the code follows ruby style guide and is dry in its design. functions are small in size and naming conventions have been followed. good work in this area.,1.0,,1,45
"this code will need to be refactored, however, we will not need to build it from scratch. only some functionality has to be divided into chunks and moved into helper functions. the functionality works well.",1.0,,1,35
"the test plan was comprehensive. however, in the video they could have explained which screens and which methods they were testing instead of just showing some test cases pass on the screen.",1.0,,1,32
"the authors do not explain why they did the word the way they did. entirely new pages have been created with no indication as to why those pages were needed . old redundant code has been commented but not deleted. naming and code pattern wise, very good job.",1.0,,1,47
the features work as intended however i am having trouble navigating and checking what are the differences between the original system and the improved system. could have made a demo video showing the improvements or a step guide to follow.,1.0,,1,40
"the code quality is good however, it can be improved significantly. the code lacks proper comments and contains many if else statements. they could have been refactored and avoided.",1.0,,1,29
the method names and variable names are very well defined ! the best i have seen so far ! no clear explanation is given as to which files are edited for which reason. only file names are stated along with changes made. why the changes were made and what do those changes correct is not given.,1.0,,1,54
"i didn't find any information about how and why they did the work, they only show me what are the issues and the results after they fixed these issues, for example, in problem , they told me their is an average rating metric&nbsp;bug and they fixed the bug, but they said nothing about how they fixed the bug.",1.0,,1,60
"i think their introduction and issue sections clearly shows what&nbsp;functionality the work is related to, they also add some screenshots which help me understand what they have done. but i can not understand what is bookmark and what it is used for, i think it is difficult for someone like me who have not used bookmark to understand these with only a short description. if they can write something more about bookmarks it will be better.&nbsp;",1.0,,1,79
"as long as they fix indentation issues for code climate, they are good to go. ",1.0,,1,15
"it looks like the code is almost ready, but there are simply some failing tests to get past.",1.0,,1,18
"without a video or instructions, i cannot easily verify that the solution works since there was an error thrown when i tried to follow the recipe. the error occurred while i was trying to request an account. more detailed testing recipes would help. getting the accounts and their email addresses set up in the deployment is the main difficulty.",1.0,,1,59
no new commit has been added since the last submission. the commit messages are not descriptive. they should commit small portions of code one by one with proper description of the changes in the commit&nbsp; message. also their functions seem to be very long. they may consider refactoring and creating more cohesive code. each function should do only one task.,1.0,,1,61
though the authors have included a thorough testing plan inside the commits i couldn't find any commits for adding testing files. they could have added basic ui testing using capybara and cucumber.,1.0,,1,33
there was not an explicit test plan. your design looks good though,1.0,,1,12
"no, this code is not ready to be deployed since it fails in basic builds and just passes out of test cases which calls for reasonable concerns and traceback in the motivation of the teams approach. however, it does prove to be a good starting point for a future team to pick from where these people have left off.&nbsp;",1.0,,1,60
"yes, they surely have done a good job in mentioning the errors in the st part and the second part. but it is unclear why the rd fix is a problem or how they have combatted the rd fix in the first place. it just seems so that a screen shot has been put into place and they displayed a no method error popup. they have vaguely described the handling of the same, but doubts remain in the details or the changes in the code. in fact, no code screenshots have been put up for this case.&nbsp;",1.0,,1,98
"on checking, the code, we find that, in agreement with @travisbuddy, the code had a build error which seems to be unresolved, which is strange, and should have been looked into. moreover, the overall coverage shows a decrease of . % which should be a cause worth looking into. but one must say that the details in the code changes have been to a good extent for the majority of the part and thus worth the merit. one thing that surely catches the eye is variable naming, especially 'handle_dups' which is a strange/ amateurish way of variable nomenclature and there is reason to believe that it may result into conflict in code at some point.&nbsp;",1.0,,1,114
"their writeup is still the same doc file they had uploaded in the first submission. now, while it was a good progress in resolving some of their errors in their first submission, clearly it is insufficient to be considered adequate for the second submission seeing as no changes have been made to it.&nbsp;",1.0,,1,54
"the code is written in a good manner, but as i see it from this submission no updates have been implemented. including the absence of attaching a wiki page an unresolved error even from last time. so, its unclear to see what changes have been made from that date to this.&nbsp;",1.0,,1,52
"the overall test has coverage decreased. however, the rspec&nbsp;tests added to the project seem appropriate.&nbsp;",1.0,,1,18
i have been unable to test the users work manually as expertiza&nbsp;does not allow me to send a mail to my existing mail id. i have also tried adding a new student to the assignment which was not possible( i got an error stating the student does not exist) and all existing students have the mail id(&nbsp;expertiza@mailinator.com) which cannot be accessed to verify.,1.0,,1,69
"the team added test cases in the spec file for both the issues. further, a detailed explaination&nbsp;is given using screenshots for manual testing if necessary. the coverage increased for issue while it remained the same for the other.",1.0,,1,40
"the code looks good and it could be deployed onto the production server. however,&nbsp;there could be a situation where even though a random num( - ) is assigned to each team there might be a chance that two teams get the same name.",1.0,,1,43
the test plan was not present. but the team have done a good job in implementing tests.,1.0,,1,17
"the code has been merged in a good way and there have been no merge conflicts. however, the travis ci was failing and the code climate check was failing too. this is something that the team must look into and make sure that the changes that they have made are consistent with the existing expertiza&nbsp;code.&nbsp;",1.0,,1,58
"when i try to run manually, i still see the same errors &nbsp; participant#email sends an email to the participant&nbsp;&nbsp;&nbsp;&nbsp; failure/error: assignment = assignment.find_by(id: self.assignment_id) participant#score get participant score within a round&nbsp;&nbsp;&nbsp;&nbsp; failure/error: scores[questionnaire_symbol][:scores] = answer.compute_scores(scores[questionnaire_symbol][:assessments], questions[questionnaire_symbol])",1.0,,1,57
"the reason to give is that there are certain simple code climate issues regarding spaces, indentation and so. these are easy to fix and are related to code quality.",1.0,,1,29
"the user interface is a bit primitive and i believe under development. the validations were done after the button is pressed which requires the user to fill the entire form again for a small blunder he might have made while filling the form, which can be a little frustrating. the readme file was organised so clearly with sections of what they have included and what has to be implemented. this made checking the application for features easy. &nbsp; &nbsp;",1.0,,1,79
"the code is very clear and there are comments for each module implemented. in the users_controller, refactoring can be done to put each function in a different file . the team seems to have skipped implementing dry principles, almost same conditions are being checked multiple times which might slow down the web site.&nbsp;",1.0,,1,53
some functionalities are still remaining. ex - different views for different users(edit/delete tour options can be removed for users),1.0,,1,20
"admin is given additional functionalities such as book tour, bookmark tour, etc which should not be done by the admin. creating users and agents by the admin is not developed. there is major problem in traversing through the app. many extra links are been added which do not have any functionality such as in customer there is create tour, but when clicked on it it shows customers cannot create tours. there is no link to bookmarks directly, the customer must click on any of the tours then my bookmarks will show up. there is no link to homepage which requires the user to always logout and then login.",1.0,,1,108
"too many else-if statements with repeating lines in block in bookings_controller. everything else looks good. the naming convention used in the project is pretty clear. the readme file was filled up with project narrative which i felt was verbose, navigation details were missing.",1.0,,1,44
"&nbsp;pictures aren't displayed, few links such as review, edit are displayed for some tours and not all. there is inconsistency in the page. view my bookings is wrong terminology as admin can view bookings made by customers. home link takes to login page even when admin is logged in. there is no link to view all users at once. there are no validations while creating tours.",1.0,,1,68
"cardinality is not mentioned, but foreign key dependencies are used.",1.0,,1,10
"&nbsp; the team must have missed certain things while testing, like some of the buttons, don't redirect to their respective pages. many basic functionalities should have been tested more as there are several minor faults a user faces. for eg. back button doesn't work properly. logout of a session is not working, it get logged back in if we click the back button of the browser.",1.0,,1,68
"admin is able to create tours, which shouldn't be the case. search function does not work. itinerary in some tours is empty. only one image can be uploaded by the agent. everything else looks cool.&nbsp;",1.0,,1,37
"when i removed an agent, the tour for that agent was not deleted. instead the agent's name from the tour just went away and the tour had no agent then. this was something weird. although, when i deleted a customer, everything about that customer including bookings and reviews went away.",1.0,,1,51
the validations seems to be fairly in check. although the testing could have been more robust.,1.0,,1,16
"it seems that most of the relationships were handled properly. but when i deleted an agent, his/her tour was not deleted. so they are missing something in that case.",1.0,,1,30
there are many tests to test different models and controllers. the only thing i'd like to point out is there should be one model and one controller thoroughly tested.,1.0,,1,30
the user interface looks good. the only recommendation i have is to put some description on readme file.,1.0,,1,18
"i l ike the way the team has listed down the known bugs, it helps both the user and the developers. but a more thorough tester is required. the edit booking of tours for all user is not working accordingly (i think).",1.0,,1,42
all the functionalities were already implemented in round and there weren't any major issues that needed attention. although&nbsp;the tour iternary&nbsp;does not consist of atleast one country and state which still persist and needs to be fixed. &nbsp;,1.0,,1,42
"( ) what will happen if the admin tries to delete tour that has bookings? bookings are also deleted (correct behavior) ( ) what will happen if a user is deleted who was enrolled for a tour and there are customers waitlisted for the same tour? customers waitlisted are confirmed(correct behavior) ( ) can admin account be deleted? no (correct behavior) ( ) can a tour have end date earlier than the start date. yes (incorrect behaviour) ( ) what will happen if admin tries to delete a customer who has bookmarked several tours, will (s)he be removed from the corresponding interested customer&rsquo;s list? bookmarks deleted. (correct behaviour).",1.0,,1,102
"( ) what will happen if the admin tries to delete tour that has bookings? bookings are also deleted (correct behavior) ( ) what will happen if a user is deleted who was enrolled for a tour and there are customers waitlisted for the same tour? customers waitlisted are confirmed(correct behavior) ( ) can admin account be deleted? no&nbsp;(correct behavior) ( ) can a tour have end date earlier than the start date.&nbsp;yes (incorrect behaviour) ( ) what will happen if admin tries to delete a customer who has bookmarked several tours, will (s)he be removed from the corresponding interested customer&rsquo;s list? bookmarks not deleted. (incorrect behaviour). &nbsp;",1.0,,1,106
the code in the test/controllers directory appears to be the default auto-generated code(zero tests). the code in the test/models directory appears to be the default auto-generated code (zero tests). could not find any text fixtures in their code but they have done a few validations,1.0,,1,50
the team has written tests for the app but they aren't sufficient.,1.0,,1,13
the first page you see is the sign up page and it as a back button for some reason which leads to an error page. the admin log in information doesn't work. when booking as a customer and you book more than the number of available seats it automatically takes the extra in the waitlist instead of asking the customer what they would like to do. the frowning faces after make a tour as a agent is fun. the show/edit/destroy functionality is there for tours. review functionality is there.,1.0,,1,92
the readme does not address how the edge cases are handles but they were taken care of. nothing crashes when a booked tour is deleted or a user is deleted. when a user is deleted their bookings are not and therefore seats are taken up on tours by no&nbsp; one. &nbsp; i could not log in as admin so i can not test that functionality.,1.0,,1,66
the page is a little basic but easy to use. some of the buttons are a little small and the text is hard to read. on the sign up page the decision between agent and customer is easy to miss and should be a more conscious decision. on the sign up page when i put in bad information it did not let me sign up but there were not any errors on the page.,1.0,,1,74
 ) gets deleted successfully. ) successful. ) no option to delete. looks good. ) failed. successful in creating a tour. ) success. readme doesn't talk about edge cases.,1.0,,1,24
either there is no admin account or the credentials are not provided in the readme file.,1.0,,1,16
basic test cases found. not all cases for validations tested.,1.0,,1,10
 ) looks good. did not find any methods with multiple tasks. ) naming convention is confusing. booked is a confusing verb. ) all methods are small and concise.,1.0,,1,25
indentations missed in users controller and some useless comments in sessions controller.,1.0,,1,12
"this isn't necessarily a failing functionality, but there seems to be a lack of navigational buttons in the project. i find myself having to rely on the back button in my browser to move around. eg: hen you click sign up, you cannot go back to the login screen without changing the url in particular.",1.0,,1,56
an itinerary does not really need to belong to a user.,1.0,,1,11
"the functionalities have not been covered thoroughly. all tours cannot be destroyed. several things are similar like show all reviews is not working as expected, review link seems to be broken, also roles can be changed to be an admin. admin is supposed to be preconfigured and cannot be edited(except name) or deleted but editing the admin is possible and even its role can be changed",1.0,,1,67
"( ) what will happen if the admin tries to delete tour that has bookings? deletes all the respective booking (correct behavior) ( ) what will happen if a user is deleted who was enrolled for a tour and there are customers waitlisted for the same tour? i did not see anywhere waitlisted booking&nbsp; ( ) can admin account be deleted? cannot be deleted directly, but can be edited to be an agent and then can be deleted (incorrect behavior) ( ) can a tour have end date earlier than the start date. yes (incorrect behavior) ( ) what will happen if admin tries to delete a customer who has bookmarked several tours, will (s)he be removed from the corresponding interested customer&rsquo;s list? pages were broken (incorrect behavior) &nbsp;",1.0,,1,123
"yes, some of the controllers and model have been tested by the developers.&nbsp; models like users and one controller have been tested by the developers. they need to complete the testing for at least one model fully.&nbsp; rspec tests have been written. rest of the code is auto-generated",1.0,,1,51
they have performed testing on the user controller and model. just the user has first name is although not a sufficient testing to be carried out. many more things needs to be checked.,1.0,,1,33
"previously the admin was not given functionalities of performing several tasks, like booking a tour and review of a tour. also some of the agent tasks like viewing bookings of tour etc. such tasks have been implemented&nbsp;now. some issues which i found is that the number of seats while listing tour can be negative.&nbsp; also while booking a tour customer has to write tour id, which is not a feasible idea. one possible solution that was possible is to give per tour link for booking that way tour id could have been passed to the next page and the customer could just write the number of seats needed for booking.&nbsp; waitlist functionality not well&nbsp;implemented, options were not provided to&nbsp;the customer as to whether he wants available seats to be booked and remaining to be in waitlist such cases were not handled.",1.0,,1,149
"for the first round, there weren't many functionalities ready to be tested but this is the new list of failing ones if an account is created by admin either of customer or agent then you directly move to the account without being logged out of admin and start as a customer/agent. let's say if there are seats available in a tour and a customer books&nbsp; seats with adding to the waitlist. if the customer deletes booking,&nbsp;the waitlisted doesn't get confirmed and entire booking gets canceled. also in doing so the number of seats gets reduced from to maybe because you might have not handled waitlist option well.&nbsp; a customer cannot cancel&nbsp;n number of seats from his booking, which was mentioned in readme file. also no search option. the readme states admin can view reviews but customer cannot post one, so how will an admin see the reviews? also, no bookmark functionality implemented.&nbsp;",1.0,,1,163
"admin cannot destroy any user/customer nor any tour. also, no destroy functionalities&nbsp;have been performed. when posting a tour status can be added anything one wants and no handling done for the negative wait list value. user/admin cannot log out. multiple admin accounts can be created. a customer can also edit himself as admin or agent. a customer cannot book any listed tour. a customer has an option for deleting and editing a tour. a customer cannot search for any tour. a customer can perform all functionalities of being an agent or admin. pages haven't been linked properly. a page doesn't redirect to correct webpages. a customer can post new tour.&nbsp; &nbsp;",1.0,,1,118
"i found that the team has tested many controllers and has thoroughly tested the tour and customer controllers. all the necessary tests were there for the basic functionality. however, all the controllers have not been tested thoroughly and i did not find some edge cases for a few of them.",1.0,,1,50
i do not believe that the team has thoroughly tested any model or controller. the code for testing is the one that was automatically generated by the application. i did find some decent testing for test/models/agent_test.rb but i do not believe that it is thorough as it lacks several test cases.,1.0,,1,54
"i found the code to be generally following good rails practices. it is easy to read and clean. ) i found that each method handles exactly one task, which is a good design strategy. ) there are some examples of bad naming in the project. instead of hard coding the userr id in the controllers, instead refer to them by their user types. this would help make the app more flexible. ) i found long nesting statements inside the controllers which is a wrong design strategy. this should be moved to the helpers instead. however i suggest the following: ) i believe that the controller should be free from the logic statements and those should be written inside the helpers. i could only find users_helper implementing this logic. ) the app lacks comments which does not help me while understanding what a particular piece of code does. ",1.0,,1,142
" )&nbsp;if an admin tries to delete a tour that has bookings, then&nbsp;all the customer bookings get deleted. ) in this case, the waitlisted customers are not allocated to the seats that become available which is not the correct functionality. ) the admin account cannot be deleted. well done! ) the tour cannot have an end date earlier than the start date. kudos! ) yes, in case the admin deletes any customer, they will be removed from the corresponding interested customer's list.",1.0,,1,81
"they have made a lot of progress and some of the waitlist functionality are'nt working. at a certain point of time the waitlist goes negative and booking functionality has not been done properly.&nbsp; other than that other functionalities like bookmark,reviews are done which was not done in first round.&nbsp;",1.0,,1,53
"after reviewing the code written by this team, i can see that they have written it in a clean and in a readable way. they have provided comments then and there in order for the reader to understand. they have perfectly mapped function calls and have written separate controllers and models for bookings, bookmarks,reviews etc. one thing that they could have done better is avoiding the usage of flag as variable names in the controller. some methods that i found in bookings controller were long and just found some bad naming such as flag. other than that they have followed good practices.",1.0,,1,103
most of the edge cases wee not handled. ) admin can delete tours that have bookings and those bookings are also deleted. ) the waitlist functionality doesnt work as it is supposed to. as i said earlier it showed negative values. )admin account cant be deleted which is a good thing. )a tour can have end date earlier than start date. that edge case was not handled. ) when a customer is deleted his bookings and bookmarks are also deleted. &nbsp; &nbsp;,1.0,,1,79
"from what i can see in the admin login i cannot see any links to see reviews or see bookings. the search functionality was also not working.validations are not properly done and i can see many broken links because of no validations being done. if i book a tour i cannot see that in my booked tours link for the first time. but when i try it again it works, could be some sort of glitch.",1.0,,1,77
" ) from the way they did it we wont be able to see the bookings done for a tour separately. so if the tour is deleted i don't think there is a way to see the booking lists. because i couldn't find any links to see the list of all users. from their code they haven't written any dependencies. ) if admin deletes a user the next user in waitlist gets the seats. )admin account cannot be deleted. ) end date after start date edge case has been handled. )if an admin tries to delete a customer who has bookmarked several tours then the bookmarks are also deleted,",1.0,,1,108
"most of the problems i mentioned in the previous review have been taken care of and the team&nbsp;has been consistent with their updates. previously, i mentioned the logout issue, where the profile comes back when we press the back button of the browser. &nbsp; &nbsp;",1.0,,1,47
"edge cases:&nbsp; deleting a tour that has a booking deletes the tour by removing the tour details from the database. if customers are waitlisted, their waiting list gets updated with the number of seats that have been deleted. yes, admin account can be deleted, details of the admin get removed from the database. no, a tour cannot have end date earlier than the start date, gives an error. yes, customer deleted reflects all the other tables since the database is consistent. interested customer list has not been implemented yet. &nbsp;",1.0,,1,91
"&nbsp; the team must have missed certain things while testing, like some of the buttons, don't redirect to their respective pages. many basic functionalities should have been tested more as there are several minor faults a user faces. for eg. back button doesn't work properly. logout of a session is not working, it gets logged back in if we click the back button of the browser. &nbsp;",1.0,,1,69
"after deleting a tour we are not redirected to a homepage or a user message page as expected. instead, we are still on the same page without any confirmation message. this could cause confusion to the user. - the agent is unable to delete the tours created by his own. &nbsp; - the delete button for the tours in the agent module is performing the same operation as view button.",1.0,,1,68
"some validations at frontend seems missing and absence of popups asking for choice not present - booking page lets u overbook and it will not remind u if it will be waitlisted or confirmed before booking, considering seats remaining).",1.0,,1,38
the team tested most of the models and controllers. most of the validations are in place. but destroy&nbsp;objects dont&nbsp;work. the booking cancel dropdown is&nbsp; sometimes&nbsp;empty.,1.0,,1,32
team has worked well on the project and has code commits at regular intervals. the only drawback is only one person has done a lot of work. would have been really great if the work was divided propotionately.&nbsp;,1.0,,1,39
"based on the code, it looks like team has handled testing well, but hasn't made any changes to rspec files. would be helpful if the application is live",1.0,,1,29
" ) deletion occurs and all the respective reviews, bookmarks and bookmarks are also destroyed. ) the customers who are in the waitlist get confirmed seats based on how many seats got empty. the seats are added to the available seats when no user has waitlist less than the canceled seats ) the system shows an info ""admin account cannot be deleted"" )no, validations are provided to prevent the tour being created when end date is earlier than the start date ) yes, the list of bookmarks are updated. there is no place where we can see all the bookmarks for the tour, but the bookmarks are deleted along with the user. other edge case i checked was, i created a tour using admin and tried to edit it using an agent account and it failed. i found all the basic requirements working fine in the system",1.0,,1,142
"it was simple and clean, but i found difficult to navigate certain pages which could be addressed in the readme you have to go into list of tours to create a new tour or review in add review i was unable to select the tour(i'm not sure if i missed something) certain pages were not provided with 'back' and i had to use browser navigation in agent, when tried to edit tours of other agents it showed browser error instead of handled message ",1.0,,1,85
"it was good, but there were problems with many functionalities. there was no navigation for admin to reach the options provided for agent and customer admin account ui had options for switching account to agent or customer, but i felt a user shouldn't be allowed to change his type of account once created editing of a particular tour was not redirected to the right page from the customer side, during a new booking, the waitlist functionality had problems. i tried to check the available waitlist options, but it showed ""oops something went wrong"" when i gave a large number to check with partial waitlist option i could realize from the code that all functionalities are being considered and handled. so, i think navigation was not implemented in an efficient way.",1.0,,1,131
"login and signup were working perfectly, but logic was implemented in views. bookmarks controller and model was working perfect",1.0,,1,19
"yes, it was deployed and working. user interface was very attractive and advanced. but, i would suggest&nbsp;including more information on readme, because it was complex and difficult for me initially to figure it out where i should find the options available. for eg ""options are provided at the top"", ""for these options go here"" in readme might&nbsp;help no, readme file didn't describe anything about the flow. it just provided with the username and password for the admin ",1.0,,1,82
"testing of users part was complete with all edge cases working properly. but there were options to change the user type with within each user. also, admin account was allowed to be deleted though the validation for admin account works even after deletion.",1.0,,1,43
the code in the&nbsp;test/controllers directory appears to be the default auto-generated code. the code in the&nbsp;test/models directory appears to be the default auto-generated code (zero tests). i did not see any other model or controller test directory.,1.0,,1,45
"the code in the test/controllers directory appears to be the default auto-generated code. the code in the test/models directory appears to be the default auto-generated code, with the exception of&nbsp;test/models/agent_test.rb.&nbsp; this file has tests.&nbsp; however i'm not sure that they are as meaningful as they could be.&nbsp; for example, the test ""should not save user without email"" also does not provide a password - so this test could pass even if the system didn't correctly detect a missing email.&nbsp; this model test does not test validations for email uniqueness, name presence, or password presence. i did not see any other model or controller test directory.",1.0,,1,119
"the code is clearly readable with appropriate use of variable names being easily understood.&nbsp;the code is&nbsp;good&nbsp;example of modularity and makes use of small snippets of code wherever possible.&nbsp;the code is using different methods to do a particular task. although, the code is not well commented. the methods and functions are named properly and do not use unnecessary long names. there are not too many nested blocks and the code doesn't seem to be redundant.",1.0,,1,83
few of the edge cases are not implemented. when customers are bookmarked or booked in a tour admin is still able to delete the tour. validations for date are in place. the readme is very elaborate and handles all the corner cases. also i appreciate how the known bugs were mentioned. readme was extremely well written.,1.0,,1,56
"several functionalities have been implemented, but partially. for example, in the admin profile, destroying a tour is possible only for a single tour and not all the tours. also, editing an admin is now possible, but the admin can be edited as an agent as well as a customer too. the ""show all reviews"" page also doesn't seem to be working as in the first round of the review. the same review button also doesn't seem to be working for an agent. also, an agent can be edited to become a customer or an admin. session management is not improved. clicking back button sometimes opens invalid pages. booking options must be implemented with waitlisting. the entire functionality is not implemented. validations are also not correctly handled.",1.0,,1,128
"the good part i found in their project in accordance with the database is that a single model and controller for a ""user"" is created, and their roles are changes depending on the situation. this would be helpful since, we would not need three different tables in the database for a customer, agent and an admin. some relationships are correctly implemented like the agent-tour relationship, which correctly shows the to n mapping. other relationships are not implemented due to the lack of different&nbsp;functionalities like bookings and reviews. if this would have been implemented a to n relationship for user-booking and user-review could have been mapped.",1.0,,1,110
"the admin account could be edited, i.e, the password can be changed along with the user profile. the admin could be made an agent as well as a customer while editing. the customer booking functionality is not available on the ""show tours"" page as mentioned on the readme page. due to this, i am not able to check customer waitlisting&nbsp;after deleting a user enrolled for the tour. the bookmarked tour has been marked as ""false"" by default, so no bookmarking is possible by a customer. therefore f a user has a bookmarked a tour and the same user is deleted by an admin what would happen cannot be checked due to lack of implementation.&nbsp;",1.0,,1,118
"the readme file specifies the details accurately&nbsp;which includes admin credentials and the functionalities that have been implemented. in some cases, most of the user interface is kept the same for the customer, agent and the admin. that is, even the customer can edit a tour, admin can give a review and also an&nbsp;admin view his booking which is not possible. except this, the basic user interface for login and logout has been carried out in a proper way. i would suggest making the specified changes as mentioned above.",1.0,,1,92
"there are some changes which have been implemented that weren't previously built in&nbsp;the application like, admin didn't have privileges of the customer and an agent in terms of booking a tour, and viewing seats and review&nbsp;of a particular tour. initially, the agent wasn't able to perform basic tasks like creating a tour,&nbsp;view bookings and reviews of a customer. those basic functionalities have been added and implemented correctly.&nbsp; other functionalities like session management haven't been carried out correctly. for example, when a customer account or an agent account is created through an agent, the page isn't redirected nor a message appears on the screen to confirm the activity. also in some cases, validations haven't been implemented correctly. for example, seat availability can be - and also negative seats can be booked. when a booking is unsuccessful due to incorrect tour id entered, the page gets redirected&nbsp;to ""page not found"", some kind of a server error, rather than a message. such things could have been handled correctly.&nbsp;",1.0,,1,180
"yes, the team definitely kept pushing their changes throughout the project period. also, separate branches were created which were later merged to combine the work done. each contributor has worked and committed the&nbsp;contribution of their work on github. the changes made were not legibly mentioned in order to keep a progress track. except this, it was a thumbs up.&nbsp;",1.0,,1,62
"regular commits have been made to the github repository including several merges from different branches to the main branch. it seems that main functionalities like booking and waitlisting have been committed to the code after round , i.e, they still committed changes in the round . application functionality has been clearly improved after round evaluation. looking at the contributions on the repository, it seems that one contributor has worked a lot as compared to the other person on the team with just single commit all throughout the project. this could have been improved as a team.&nbsp;",1.0,,1,96
"when an admin tries to delete the tour that has bookings, the entire booking data is deleted. in case a user is deleted who was enrolled for a tour and customers are waitlisted for the same tour, the booking is not deleted nor are the waitlisted seats confirmed. no, the admin account cannot be deleted. no, the tour cannot have an end date earlier than the start date. bookmark functionality is not implemented. even though an option for photo upload is specified, it does not seem to be working. also, partial cancellation is not implemented.&nbsp;",1.0,,1,96
"the user interface is intuitive and easy to use. it was easy to find the various functionalities which have been made available&nbsp;by the team. the issue was with the functionalities that weren't correctly implemented. i would suggest taking care of the pages which are being redirected to when a particular option is clicked/selected. mostly, the landing page after the login doesn't redirect to the correct page. some of the session management functionalities haven't been correctly implemented. search functionalities haven't been implemented yet. in some cases edit and destroy needs to be updated.&nbsp;multiple admin accounts can be created. a customer can also edit himself as admin or agent.&nbsp;",1.0,,1,117
"the code on git does follow good ruby and rails coding practice. the code is easily readable and the changes via the commits have been maintained properly on github through proper push messages. this makes it easy for the team to track any changes in the future. the only drawback i felt was in the readme file, which is not correctly updated according to the implementation.&nbsp;",1.0,,1,67
there is only one contributor for the project. it would have been nice to see more commits from other&nbsp;members. but minimal changes made after st review.&nbsp;,1.0,,1,29
"the interface was well designed, and very easy to understand. the team have taken care in making the ui visually interesting. but sign in with google seemed to just be dysfunctional and bookings by customers was also absent but other than that the ui was done well. also the given admin details seems to not work for me when i try it out, so i was not able to check the admin functions.&nbsp;",1.0,,1,74
i didn't see any -n mappings in any of the models.,1.0,,1,12
"the user interface isn't very intuitive. when i logged in as an agent and created a tour i didn't see an intuitive way to get to a page where i could do something. the home link took me all the way back to the login page. the back link took me to the same place as the edit link. and nothing in the readme addresses how to navigate around. this seems to be true about most of the sections. when i went to edit the admin, it took me to a page about tour, reviews, and deleting accounts. what if i want to look at the users again and see that the action truly occurred?",1.0,,1,117
"there tended to be a flurry of commits during the project, all by the same person.",1.0,,1,16
"i couldn't find a model test. it looked like the controller tests were simply the system generated one. the readme doesn't say anything about the tests so without downloading, etc. i would have no way to ascertain if tests were even run.",1.0,,1,44
"after initially registering with the system, i'm immediately taken to a screen to update my profile. but, i just registered. i would've expected to be taken to a screen to interact with the system. &nbsp; also, while i really like the design of the opening page, unfortunately, the ""welcome to sas"" header partially masks my choices.",1.0,,1,58
there are no model tests. i looked at the bookings_controller_test and it looks like the auto-generated one. if they added to the test it doesn't appear like they added anything to test the added functionality that was also put into bookings_controller.,1.0,,1,43
"interface is simple, somewhat user-friendly and somewhat intuitive. i liked the home page ""dream. explore. discover!!! click the button to get started!"" however, as customer and agent it was a little inconvenient to navigate between pages. for example, as customer when i made reservation for a tour i have links available to me: edit, back and at the top right corner home page. ""back"" link has some troubles. so, the only possible way to get out was using ""home page"". the same analogy for agent. using single link to home page is slightly inconvenient. please consider adding more link for users' convenience. let user have choice where he/she wants to go next. also, finding review section for customer who booked a tour (completed) was a little challenging. please consider to rework that section a little.",1.0,,1,137
"according to the readme file, the team thoroughly and successfully tested one model agent_test.rb module. however, team did not use rspec rails to thoroughly test at least one controller. moreover, /test/models/agent_test.rb contains only tests: ""should not save user without email"", ""should not save user with invalid email"", and ""should not save user with password less than chars"". these are all meaningful tests and have potential to fail.&nbsp; however, tests cannot thoroughly test one module. it must contain other possible ""good case"" scenarios. since model is tested with some limits and not thoroughly, and no controller is thoroughly&nbsp;tested, i give only / points.",1.0,,1,108
"the login is still via username instead of email address.&nbsp; the admin cannot create new users from what i could tell.&nbsp; photos still can't be uploaded.&nbsp; other features marked as not working appear to have been fixed.&nbsp; the itineraries implementation is not very intuitive.&nbsp; the associated tour appears to be stored in the session, but it is not at all clear which tour a location in the itinerary is being created for until you actually list all of the locations.&nbsp; locations are not listed with their associated tours, but rather all together in a single table.",1.0,,1,103
"the relationships between the tables seemed ok to me.&nbsp; i did notice that some fields intended for more text (e.g. tour description) were type ""string"" instead of the better suited ""text"".&nbsp; i also noticed that there seemed to be redundant fields: for instance, the ""bookings"" table had string fields for ""username"" and ""tourname"", which could just be derived from the user and tour tables using the foreign keys.&nbsp; presumably when a tour name changes, the change would not automatically be propagated to such fields.&nbsp; the ""bookmarks"", ""itineraries"", ""reviews"", and ""tours"" tables all contained such redundant fields.",1.0,,1,101
there were no model tests.&nbsp; the users controller test seems to be a valid test.&nbsp; the rest of the controller tests appear to have been generated by rails g and did not include any accommodations for logged in users so most likely they do not pass.,1.0,,1,48
"the readme file claims that the user model ""has been tested"".&nbsp; however, the user_test.rb file does not contain any actual test cases. the controller test cases appear to be rails generate boilerplate.",1.0,,1,34
" .&nbsp; when the admin deletes the tour all bookings are wiped out. . the waitlisted customers do not get booked. . it seems the admin account cannot be deleted . the tour end date can be earlier than the start date. .&nbsp; the user is removed from the interested users list. .&nbsp; there are several edge cases that do not behave as expected.&nbsp; for instance, none of the date fields are validated and a user can book any tour, regardless of whether it is in the past. these are not described in the readme file.",1.0,,1,93
"except for session and users controllers and users model there were no other controllers/models present in the code, as a result no function is working apart from&nbsp; loging in of the users.",1.0,,1,34
the coding is pretty much in line with the best coding practices of ruby and rails.you should add comments for a third reader to better understand the logic of the functions in a jiffy. i loved the fact that you guys tested your application and updated the same in the read me file which makes the life of the reviewer way easier. i liked the fact that you are mentioning the role in the welcome message. literally the first project i saw this. makes life easier for the tester. there are a few points i would like to highlight here which is from the last review :&nbsp; when i edit the profile of a customer i get logged out (when i have only changed my name). and when i sign back in i land up back to the profile page. could not log in as an admin hence could not test anything related to it.,1.0,,1,156
the coding is pretty much in line with the best coding practices of ruby and rails.you should add comments for a third reader to better understand the logic of the functions in a jiffy. i liked the fact that you are mentioning the role in the welcome message. literally the first project i saw this. makes life easier for the tester. there are a few points i would like to highlight here :&nbsp; when i edit the profile of a customer i get logged out (when i have only changed my name). and when i sign back in i land up back to the edit profile page. as a customer i was able to edit and destroy the tours which is wrong. i was also able to create a new tour. i did not understand where i could book seats.&nbsp; as an agent i was able to destroy tours created by other agents. i was able to create users with role = admin.,1.0,,1,164
"i saw only two contributors in the app, is that right? it seems that you commit it&nbsp; at th and didn't do anything after nd maybe you guys are busy, but please make the app complete before final review.",1.0,,1,41
"in readme, there is no admin account and password, so i can't test it. remember to add admin account in readme in final review! i don't know why all the links you provided guides me to user layout. i mean i can only see the user and can't find other functions in the app. please check those links.",1.0,,1,61
"the code is clean and readable. i'm not sure about the sessions and static_page controller. it may control the user sign in. the interest customers are added in one method. booking, bookmark and waitlist are three different parts. but there are some method is too long, like the cancel method in user. there is no bad naming.",1.0,,1,58
"it seems that they didn't generate bookings and bookmarks in the model. they just used methods to add customers. in the model, -n and n-n are obviously and reasonable. there are models. use, tour, review and search. but i didn't see user has ""has many"", the tour belongs to user, review belongs to user and tour and search just a desperate model.",1.0,,1,65
"i saw some auto generated test model in the test, but not some specific functions. i assume that you guys haven't finished the review part yet.",1.0,,1,27
"yes. they tested all the controllers. however, most of them are auto generated. didn't see the test for testing the same email to register twice.",1.0,,1,26
"yes, the edge cases are handled decently. the admin's account cannot be deleted. if an admin tries to delete a customer, the corresponding bookmarks and bookings will be destroyed. there were few drawbacks such as, the tour has end date earlier than the start date and i couldn't find about those in readme.",1.0,,1,55
the code is understandable and straightforward. most of the code seems to be present in the controllers and the views. some of the logic could have been implemented in the models.,1.0,,1,31
"no, the team has not tested any one controller or model completely. every functionality is working partially, hence, writing tests would be a good idea to easily debug errors.",1.0,,1,29
"the readme file should have been more explanatory. as an agent i am able to create a tour with deadline later than the start and end date. if i login with a wrong email id i am logged in as admin.(very strange) because of not able login as customer or agent,i was not able to check the edge cases.",1.0,,1,61
"updating the seats in a tour as an admin/agent is not reflected in the tour. as and admin i am not able to book or bookmark tours. the use of flash notice or messages or some of confirmation would have been better to use. contact and email should have appropriate data type. cannot update the email id of customer once account created. the wait-list scenario is not working.when the seats in tour was made available by deleting some tickets from the other customer,wait listed customer was not pushed up.also it is showing incorrect number of tickets left. not able to delete the agent profile.i cannot test some more functionalities because of this. &nbsp; &nbsp; &nbsp; &nbsp;",1.0,,1,122
"the readme should have been more explanatory covering the edge cases. i am able to create tours with deadline later than the start and end time of the tour. when the number of seats are decreased by the agent,the customer is still confirmed for seats(which are more than provided by the agent). &nbsp; &nbsp;",1.0,,1,56
no validations were present in the model. all business logics were done on the controller rather than the model.,1.0,,1,19
"the tour and review model each have a ""belongs_to"" association however i did not see a has_one or has_many association in &nbsp;user or tour. this may result in extra complexity for model queries and model management. for example, given a user, if an admin removes that user, the associated tour(s) and review(s) may not be deleted.",1.0,,1,59
"the ui is simple to understand which is good. no documentation is really required. however, the ui is also not complete so i could not test the functionality for an admin or a customer.",1.0,,1,34
"after seeing the code on git, i was able to understand that they&nbsp;only had code for the login of the admin, agent and customer. no other functionality is been coded and hence i was not able to do anything apart from just logging in and logging out. they still have a lot to work on.",1.0,,1,57
"tour deleted with a booking present will remove the booking without warning, admin account cannot be deleted, tour can be created where end date &lt; start date, tour removed with bookmarks by user will be removed from that user's bookmarks, the most critical seems that removing your own account results in the user being able to view other user's accounts - overall seems that error handling is good.",1.0,,1,69
"it seems that generally there are no problems with the user interface. the website is set up in such a way that there is a logical flow of data. the readme is also clear, but there are some grammar issues that can be misleading.&nbsp;",1.0,,1,45
"they have not thoroughly implemented testing.&nbsp; in ""test agent"" they have tested the agent model if the validations for creating user was done correctly. could not find tests for controller.",1.0,,1,31
most of the edge cases seem to work. i found that any customer can review a tour and not just the ones who have attended the trip. also a tour can have a start date later than an end date,1.0,,1,40
"yes, a lot of issues since round were fixed. )bookmarks don't show the customers name or email. )admin cannot view or update users ) the edit feature seems to be broken in most cases when i log in as an agent or an admin.",1.0,,1,44
 . passed. booking is deleted for user that has booked .&nbsp; failed. it doesn't updated the waitlist of waiting customers. ) passed. no it can't be deleted. ) failed. it let me create a tour with end date earlier than start. ) failed. can't tell since the bookmark doesn't display the customer details.,1.0,,1,53
some of the methods are too long.&nbsp; def book_tour in tours_controller. def cancel_bookings in bookings_controller def bookmark_tour in bookings_controller def signup in login_controller &nbsp; &nbsp;,1.0,,1,26
"the system almost doesn't have -to n, n-to-n relationships. for example, i could create a customer account which has same email address with the admin account. the only relationship i found is in tour model: has_many :itineraries",1.0,,1,40
"the code is reasonably clean and efficient. one thing is i don't think there needed to be a separate class and controller for photos, locations, waitlist, etc.&nbsp;",1.0,,1,29
it does not appear the team added in additional rspec within the spec folder.,1.0,,1,14
it appears the team has not submitted a pull request from the repository.,1.0,,1,13
no way to test the work since the application was not deployed.,1.0,,1,12
i don't see a link to where the team deployed the project. i am unable to verify the ui.,1.0,,1,20
"the team did explain what and why they were making changes. however, the submitted a link to expertiza pull request. i am not sure how to navigate to there repo to make any further code reviews. also, it appears the forked from master branch instead of beta.",1.0,,1,47
"i do not see a link to the deployed application, so i am unable to verify the ui.",1.0,,1,18
"it is an expertiza&nbsp;project. i have checked the pull request, build did not pass in travis ci. there are few conflicts to resolve. ""please click the following black triangle&nbsp; in order to see the detailed information. it'll be awesome if you fix what's wrong and commit the changes.""&nbsp; this is the comment seen in the travis&nbsp;ci section.",1.0,,1,65
the wiki page&nbsp;does not contain adequate information regarding the project. i think the team needs to work on building a better wiki page.,1.0,,1,25
we were given the link of directly the repository and not the pr. it would have been clear if it was the latter.,1.0,,1,23
"some of the commits are superfluous in my opinion. the commit messages of ziwewww and nilaykapadia do not help at all. please write commit messages so someone can understand what is happening in that particular commit. nilaykapadia has made a seperate method which takes care of the flash messages, i dont think that was needed. nilaykapadia again has some commits where he/she just changes the print messages.&nbsp;",1.0,,1,69
the code quality is great. but the tests have not passed until now. maybe the other team could take up the project and see why the tests are failing.,1.0,,1,29
"yes, they aim to describe it but fail to articulate it peoperly to a new commer. it task should have some background on how it was before and how it is expected to be.",1.0,,1,34
"it is&nbsp; not commited into a forked repository, thus the upstream remote is not set probably. i am not sure how they are running and testing the builds. if the process is not generic, may be an introduction on how to test and build the changes can be given.",1.0,,1,50
"the buld failed, so we could not test if the test cases passes or&nbsp; not. they seemed to have a test plan but i am not sure where they have been implemented. may be that could be written in&nbsp; the documentation. the test plan seems to cover all the test cases for the functionalities they have included.",1.0,,1,59
"the travis ci build fails, and i am not sure why that is so. may be the team could show us the builds using a screencast if it was working for them and the pr messed something up. nonetheless, they have put an effort to rectify the previous build issues.",1.0,,1,50
this project seems to implement a lot of new code and i am not sure how to test the working ui for it. it would have been helpful if the project was deployed on heroku or if the group show ed the working ui through screenshots or screencasts. &nbsp;,1.0,,1,49
"i could see the changes done in test. but the build is failing which needs to be corrected. also, i mentioned above, it would have been great if the team could have include test plan in the documentation.&nbsp;",1.0,,1,39
scope of improvement: team could add more test cases to increase the coverage. its a judgemental decision as you should not add tests just to increase the coverage. all you should care about is whether all the edge cases are being tested or not.,1.0,,1,44
the code is well written but can avoid the code climate errors,1.0,,1,12
i&nbsp;think&nbsp;the project will need some modifications before deployed onto the production server. the are many code climate errors that need to be addressed.,1.0,,1,27
"the team had added a test plan section in the writeup but i could not find any new test cases for the added methods. since no test cases are been added the coverage is expected to decrease.&nbsp; in my opinion,&nbsp;the team should have added test cases to test the query that is fetching the data from the database.",1.0,,1,61
i could not find any test plan section in the writeup and hence could not comment about any of the mentioned points. &nbsp;,1.0,,1,23
build failed in travis&nbsp;ci and i think it needs to be resolved. i could see code climate issues (none of them looked alarming) which are mostly related to blank lines and extra space,1.0,,1,35
"the team has currently only added a checkbox for each row in order to select students whose tags are to be exported. i could not find any button to export the tags and hence could not verify the required features &nbsp; following edge cases can be tested once the implementation is completed: ) what happens if none of the checkbox is selected. ideally, it should not create any csv file. ) if all the checkbox are selected, everything should be exported into csv file.",1.0,,1,82
"i could not find any test plan in the writeup but i could see few existing test cases modified in the ""response_controller_spec.rb"". more test cases needs to be added.",1.0,,1,30
"no, the writeup does not include any section to explain how and why the authors did the work they did.&nbsp; i have to look at the oss project description given by the professor to understand the functionality that team is trying to implement over here.. i would suggest team to please include design pattern/principle&nbsp; section as it makes easy for the reviewer to review the code.",1.0,,1,69
"the writeup is clean and adequately explains all the required information. the ""project task"" section tells us about the ""how"" the team approached and refactored the issues identified. i could still not find any section explaining the design pattern used by the team to refactor the code.",1.0,,1,47
i could not find any deployed link or any screencast of the application and cloning the repository and setting up the environment is time-consuming hence could not verify the system operation from the ui. functionality would have been easily&nbsp;accessible if any screencast of the running application would have been added on the wiki page.,1.0,,1,57
no code available in wiki or in repo. if you're working on a branch or pr or commit history please add to wiki. its difficult to track otherwise with s of commits everyday.,1.0,,1,34
"can also reference to implemention of trait in rails or java language so it would greatly ease us to understand the concepts. instead of pasting ""a snippet of the code in&nbsp;adapter.rs""&nbsp;please consider explaining them block by block as what each code does. this helps in handholding the peer reviewers or the next batch that might refer the wiki. consider adding to showcase how the test cases or your code works or tested",1.0,,1,77
there is no test plan mentioned. please refer to the suggestion mentioned earlier.,1.0,,1,13
"the entire build failed due to some code climate issues that i can't see. i think ""you are including debug code in your pull request, please remove it."" this is the reason the tests are failing and will not run. ",1.0,,1,41
there is no link to a deployed project so no way for me to test if everything is working. the last commit needs to be fixed.,1.0,,1,26
some code that is commented out needs to be removed but other than it it seems good to go.,1.0,,1,19
"no, i do not like the changes made to ""create_report_table_header"" method. the partial created by the team is still appending html tags to a string and rendering it, making the partial useless. partials should have html tags of their own. then, the places where this method was called should be updated to call the partial instead.&nbsp; apart from this, the other changes are nice and are ready to be merged. good job with the rest of the project.",1.0,,1,79
"it is almost ready. the changes look fine but there is not enough evidence of testing performed on the new controller. even though the test cases pass as shown in the video, the code changes in the pull request dhow a lot of tests being removed. maybe a good write-up would have helped.",1.0,,1,54
the build seems to have passed but there are some open code climate issues like usage of global variables or class variables. team should try to fix them.,1.0,,1,28
"no link provided to test. team should have hosted a vcl instance for reviewers to test the changes thoroughly. looking at the code, the changes look fine.",1.0,,1,27
"this seems to be a functionality, which is under progress at this point. i believe tests will be in line later.",1.0,,1,21
"some of the functions are long, but they are pretty much sticking to the point and performing the required action appropriately the length of the function isn't under the control of the team here as the functionality has to be implemented one way or the other.",1.0,,1,47
"although there is no particular mention of a design pattern itself, the explanations are good enough towards what they have performed , and this seems to be well thought out.",1.0,,1,29
there are a alack of comments telling you what each part does or why it was necessary.,1.0,,1,17
"code is definitely improving, some suggestions follow: some methods may actually be too short and not used enough to be standalone methods. consider update_due_date_id and update_assignment_questionnaire_id. these are both line methods that only get called in one place. maybe they shouldn't be separate methods? it looks like some methods that take a due date as a single parameter might actually be best refactored as instance methods on duedate. consider meta_review_allowed? or drop_topic_allowed? to be potential candidates. in other places, you do the type checking directly (such as line ), at least be consistent with helper methods versus direct checking. why does assignment_staggered_deadline? set the variable to true always? should @assignment_form.assignment.staggered_deadline be renamed? the array_traverser function looks like it does two different things with the options, both of which are kind of unrelated.",1.0,,1,134
"&nbsp;please clarify what variables you will rename. are these local variables in methods or instance variables? aside from that, very thorough.",1.0,,1,22
"the team did add test cases but do not indicate an improvement or change in statement coverage. i'm not sure where you tested pagination, i could not find that in the spec files. may want to mention that in the writeup. in the test for list_pending_requested, you may want to give a better ""it"" statement. such as ""it renders the correct view"".",1.0,,1,63
"the writeup is well written and easy to read. the method names that have been refactored are done with a great meaning. it clearly explains what the method is about along with maintaining the meaning. the methods also include comments which gives a better idea about the method definition. but, the writeup is adequately descriptive of the work done. the writeup includes a code which is added to partials, but i am not able to locate any code. that part of implementation is still incomplete.&nbsp;&nbsp;",1.0,,1,87
"the writeup is very clear and consists of adequate information about what functionality the work is related to. by reading the wikipedia page, i could understand what the project does. the project involves refactoring ""review_mapping_helper.rb"" file where certain function names must be refactored and comments must be added to the the functions that are refactored. the writeup indicates all the methods name with the refactored names along with all the comments added. the writeup does not include all the work that the team should carry out. testing section is incomplete.",1.0,,1,91
there were some test cases found in response_controller_spec.rb file. other than that i could not find any test cases. i suggest the team to add more test cases for the implementation.&nbsp;,1.0,,1,33
i could not find any test plans in the writeup. also very few test cases are written as mentioned earlier. i recommend the team to add more tests for the functionalities that are being added or refactored.,1.0,,1,37
if the team had given a screencast link it would have been an easy job for checking the system works as expected. or even a deployed link was a better option,1.0,,1,31
"no, the project did not pass the build in travis ci. the build failed for several checks. so yes there are several conflicts that must be resolved before merging.",1.0,,1,29
the team has not deployed it on heroku neither it has given a screencast of the project which shows that it does the task intended.&nbsp; i would have suggested that since it&nbsp;is difficult to set up someone's project and even there is no way mentioned well on how it was before and how it is now for the task to be done.,1.0,,1,66
"the team did not provide any screenshots in their testing part of the document. they state that ""as the project involved only refactoring variables and method names, only build tests and already existing unit tests were performed."" now, since the travis ci build is failing, i cannot actually check if the test coverage has increased. i believe that the testing should be done more thoroughly. some evidence of testing performed should have been provided in the document.",1.0,,1,77
"i do&nbsp;not believe that the code is ready to be deployed into the production server. my concerns in this include some of their design choices and their failing travis ci builds. however, i think that there is not need to start from scratch. some of their implementations are actually good and require some more testing.",1.0,,1,57
"i found the document to be lacking of any test plan. they have introduced new functionalities, so it is expected of them to include test plans in their document. although, i do find the sign_up_sheet_controller_spec to be containing the test cases, they have not been documented properly.&nbsp;",1.0,,1,48
"the team does not document their test cases. they have not been hosted anywhere to check this functionality. however, upon my initial review, i believe that all features work as intended. but, i would like the team to show their results through test cases.",1.0,,1,44
"yes, two commits were made in the second round. however, one of them did not pass the travis build and the second one is still executing.",1.0,,1,26
"i do not find any mention of testing the response_controller_spec which was supposed to handle the test cases for this controller. even though, i find tests being present in the said file, i cannot test it, since their implementation has not been hosted anywhere. i believe that the team could have included screenshots of their testing and documented them on the wiki page.",1.0,,1,63
i could not test the team's features since they were not hosted on a vcl or heroku app and no such link was provided on their wiki page. i would be glad to test it out if the link is provided to me.,1.0,,1,44
"the write up is concise and to the point, and explains most of the functionalities implemented. i was able to understand the reasoning and the idea behind the team's implementation. however, i would like to point out the following issues: .&nbsp;the explanations are too concise in some parts of their documentation. for example, i believe some screenshots regarding code climate should have been provided so as to understand that there were no issues&nbsp;in the team's implementation. . in the same section, code climate and travis ci, the team mentions ""there are only cyclomatic , cognitive errors with code climate whereas there are no integration errors with travis ci"". however, they do not mention what these errors are and do not provide and documentation as to why these were failing. this according to me was a missed opportunity on their part.",1.0,,1,143
there were some very well thought out changes in the methods so as to make them smaller in length. i especially liked the way you changed the camelcase to camel%case. there are some functions that are way too long. but refactoring them was not a scope of your project. you have commented in some places that the method to handle quiz_questionnaires has been moved to that controller. i do not understand the need to do that. naming that controller correctly will ensure this understanding.,1.0,,1,85
"the team has not uploaded a link to their version of expertiza. hence checking the system operation is not possible. in addition to a link of the vcl instance, i would have also liked to see a section on the documentation on how to test the code.&nbsp;",1.0,,1,48
the system operation cannot be confirmed since the vcl instance link has not been submitted.,1.0,,1,15
"no, the code is not ready to be deployed as the pull request is failing several test cases. so this project should be redone at the points of failure.",1.0,,1,29
they wrote about the current state of the tests and the previous&nbsp;state of the tests. the explanation is a bit short on that side as they only said they made changes without including what changes they did.,1.0,,1,39
"from the project perspective, everything seem to work ok. no errors found as of now. but the test coverage is lacking.",1.0,,1,21
travis ci failed but in the pull request days ago. please submit the pull request hyperlink as well. i couldn't find a new pull request for the second round.,1.0,,1,30
"no. there is no mention of any test cases in the write up. also, no new test cases are part of this pull request.&nbsp; &nbsp; coverage was reduced by . % after first commit. but i am not able to find any information regarding the coverage after the final commit. as the travis ci failed for all test, i am assuming this coverage to be reduced to %",1.0,,1,66
"as of now, there is no test plan nor rspec tests. once, we have the tests added, we can check for the failed/missing tests.",1.0,,1,25
"no. the pull request has failed both travis and code climate. none of the tests were successful. looks like the changes made to the ""dangerfile"" was not successful and we have the same error for all the test suite the command ""bundle exec danger"" failed and exited with during .",1.0,,1,49
"the team has explained the problem stattement in easy english (under motivation heading). i would suggest adding a problem statement tab and move these contents to it. &nbsp; additionally, proposed solution is explained in a single line and is a bit ambiguos (hence in order to solve this issue a new idea was proposed as to select on the students which did not create outliers in the predictions and hence, therefore, it is a good proposal.) maybe breaking the sentence or exlaining a bit more can help a user to understnad how the team wants to solve the problem. &nbsp; overall, the description gives a clear idea on what the team wants to achieve",1.0,,1,114
"in this case, there are no major changes need to be taken care and i beleive team has explained in a better way. &nbsp; the only place i would like more explaination is in the code improvement section that exlains about delegation pattern. some of the unanswered questions are why did you use delegation? what made you think delegation helps here? how did you use it? did it help make your design clear and easy? is the code you implemented really follows delegation? how are you testing this pattern?&nbsp; ",1.0,,1,90
"pull request is sent beta branch, there is no information with respect to travis or code climate. the test coverage details is also not available. if the pull request is made to master, we can see these information. &nbsp; the team has changed the object name to account_request. and the same object is used to reference ""account_request.role_id"" to get more details about the user. though the name makes sense when used individually, but looks like a bad naming convention when trying to access its contents ",1.0,,1,86
"&nbsp;yes, writeup clearly explains one part of the project, that corresponds to pagination of the user page. the reason to choose is clearly mentioned and the team provides enoughtinformation for the user to understand. i would suggest explaining the problem statement at length (separate all methods related to the workflow of a requesteduser object). for a first time user, the explaination for user_controller needs to self sufficient. also, as there was no requesteduser controller, explaining the need of this object or how it is being handled and why do you need this to be moved out would help the reviewer to understand in much better way &nbsp; the changes asked in round were not implemented in this round",1.0,,1,119
"i'm giving the benefit of the doubt on ""does the build pass?"".&nbsp; i actually got an error beginning ""fixnum is deprecated"".&nbsp; however, i don't have any reason to believe that this is the fault of the code.&nbsp; rather, every time i have tried to get a rails project up and running, it has been quite bothersome, and this is the experience i have heard from many classmates as well.&nbsp; honestly i don't think that i can afford to spend several hours on each of the review projects, to get them up and running.&nbsp; it has never taken me less than an hour to fiddle and fumble my way through the various errors i get initially. do not know how to evaluate test coverage, as there is no ""coverage"" directory in the application. high score is for variable / method / class names.&nbsp; these all look fine to me.",1.0,,1,155
"did not test the code as it was not deployed to my knowledge.&nbsp; without deployment, i would have to get this up and running on a local pull of the code. every time i have tried to get a rails project up and running, it has been quite bothersome, and this is the experience i have heard from many classmates as well.&nbsp; honestly i don't think that i can afford to spend several hours on each of the review projects, to get them up and running.&nbsp; it has never taken me less than an hour to fiddle and fumble my way through the various errors i get initially.",1.0,,1,112
"the write up does state what goes around in the project. although, it would be better if the reasons for doing so are stated more clearly. what is done is enlisted but why each change is made could have been stated. for example:&nbsp;moved the pending_surveys function to survey_deployment_controller.rb&nbsp;is stated but i did not quite understand why it is done so from the write up",1.0,,1,69
"the link for pull request has not been provided by the team. however, the team has submitted the link to the repository through which i was able to check the changes made on the code. the authors have implemented a method ""setcurrentvalueattime"" as an automated event in the ""params.rs"" file. this method has been called in several places in the code of the same file. the writeup shows the changes implemented but the features don't seem to be working correctly. i would suggest the team to test the function after making the changes.&nbsp;",1.0,,1,96
"initially, there were a lot of troubles setting up the build using cargo because i have been working on the expertiza&nbsp;project all along and did not have any idea on the mozilla project. but due to the information mentioned on the wikipedia page, setting up and running servo was then easy. but the implementation does not seem to be working correctly that is automation support for webaudio is not exactly implemented as it must be according to the project guide. after running the ""cargo build"" command, i am encountering errors which were because of the code. due to this, i would suggest the team to carry out enough testing before committing&nbsp;the code to the repository.&nbsp;",1.0,,1,120
"the team has not added any test cases. however, a section in the writeup says that manual testing is carried out for exporting a csv file if no option is selected in the checkbox. according to me, tests could have been written in the views to check the export button as well as for the click event.&nbsp; since no tests were written in the tests folder, i was not able to check if it covered the range of the project or not.&nbsp;",1.0,,1,84
"the authors have carried out a minimal part of their project. but whatever is carried&nbsp;out is clearly mentioned in the writeup. the authors have not mentioned a design pattern or principle for their implementation. according to me, the project exporting tagged comments does not use any particular design pattern, which might be the reason for not including in the writeup. the implementation of the project requires an additional method to be written which will export the tagged comments in a .csv&nbsp;file. however, this part of the implementation has not been carried out yet. a checkbox button has been added for the tags that will be exported.",1.0,,1,110
"it was an expertiza project, therefore the pull request was checked. the build did not pass in travis ci. there were several code climate issues that could have been fixed. some of them are ""extra empty line detected at method body end""; ""trailing blank lines detected""; ""line is too long"". there were also certain issues that could have been ignored.",1.0,,1,60
the writeup does not explain anything in terms of testing the functionality. the code has not been entirely implemented for the project. only a checkbox button has been added. the problem-solving approach seems to be lacking because tasks have been identified but the process of implementation is not thoroughly explained.&nbsp;,1.0,,1,52
"according to me, the code looks good enough to be added to the production server.&nbsp; the only concern according to me was that it would be immediately deployed if the team could have added some new test cases rather than modification of previous ones.",1.0,,1,45
"the test plan is not included in the writeup but a few test cases were found in the ""response_controller_spec.rb&nbsp;file. i would suggest the team to include more test cases for the implementation that is carried out.&nbsp;",1.0,,1,40
"yes, checking the pull request the build was passed in travis ci. there were no conflicts as such but there were code climate issues after the commits. the issues weren't major, but i expected the team to resolve the minor issues which occurred.&nbsp; &nbsp;",1.0,,1,46
"the writeup is structured with all the code and explanations added. the team has also mentioned the approach to the problem statement carried out which according to me was a different thing to do.&nbsp; although, some screenshots that show that the code did not break after a new functionality added would have made&nbsp;the writeup even more clear. overall a good job on the report.",1.0,,1,67
"the writeup did not adequately explain the functionality. although some information is been provided in the ""about response_controller.rb"" section. i can understand from the writeup that the team is trying to refactor to model to make the code close to a basic crud functionality. since i could not find any section of how and why the code has been refactored, i am not able to understand how the project does what it does. i would suggest the team to include a ""motivation"" section in the writeup to give a clear idea on the project.",1.0,,1,95
"there was no code written by the authors that we could use to evaluate the above functionalities. if authors had made local changes, it would have been better if they had shared the files for evaluation so that we could give suggestions.&nbsp;",1.0,,1,43
there was no pull request or commits made by the team. it would have been better if they could have shared the work they have done till now so that we could have judges it better.&nbsp;,1.0,,1,37
the writeup clearly explains what a trait is and how it should be implemented. they have also added the source code for the new functionalities added. they could have tried to add more information about the repository they are working on and how their work will add a more dynamic nature to the servo/devices functionality. because a trait is made to make it easy to access certain functionalities which i feel they could have elaborated more on.&nbsp;,1.0,,1,79
"the project doesn't pass the travis-ci, there initial pull request was fine during the first review but they have made some changes and are addressing them now i guess.&nbsp;",1.0,,1,32
"while the write-up has a section on how to build and test the code, it's only for the mac. i have a windows box so i can't build it. at a minimum you could've provided a link to building the code for other operating systems.",1.0,,1,49
it doesn't look like the maintainers have submitted your pull request as of this writing. i'm happy to reevaluate when they do.,1.0,,1,24
i see that you added safe_join to the code. how do you know that it still works?,1.0,,1,17
"while the code looks very good and seems to solve the problems addressed by the project, it is probably not ready to be deployed.&nbsp; the issues detected with the code climate and travis ci bots need to be resolved first before closing (completing) the pull request.",1.0,,1,47
the code did not pass the tests from the travis ci and code climate bots.&nbsp; see the response to the previous question for additional comments.,1.0,,1,26
"the team did discuss their test plan and its expected results in their document.&nbsp; however, the team did not discuss which files were created or modified to test their code.&nbsp; the team also did not mention the results of their tests.&nbsp; in fact, according to the coveralls bot on github, testing coverage from their code actually decreased!",1.0,,1,60
"the team presents their solution to one of the objectives to the project and shows an image of the results.&nbsp; however, the description does not show where in the file code was added.&nbsp; additionally, it is not clear on which files were modified.",1.0,,1,45
"the documentation was good and provides a good explanation of the project.&nbsp; it states the objectives of the project and the work that still needs to be completed.&nbsp; the objective that the team did complete appears to be well documented and functional. one suggestion, in the problem description where it says ""manually fire queries"", the word fire should be changed to ""executed"" or ""performed"".&nbsp;",1.0,,1,67
"unable to test the work manually, since the team did not deploy their expertiza project or did not provide information on their deployment in the submission. please deploy your expertiza project if you have not done it, so other reviewers and i may test it remotely. i am also unable to test the project locally on my vm since the team did not provide their working git repository where they have all the changes. please, at least provide your working git repository, so i can pull the code and run it manually on the local vm environment for manual testing. also make sure that you perform manual testing as well that cover the changes you performed over the controller files (again, running and passing rspec tests does not guarantee validation of your changes). manual testing is important part of the project and i suggest to document that in the wiki page.",1.0,,1,151
"the testing section simply states that all testing was covered by existing test cases, which would appear to not be adequate, given an instructor response on piazza.",1.0,,1,27
"there were no instructions on how to run manual tests.&nbsp; running&nbsp;rspec spec/controllers/sign_up_sheet_controller_spec.rb failed with a ""undefined method"" error.&nbsp; the code needs to be fixed so that all existing test cases pass.",1.0,,1,38
"the writeup still references changes in application behavior as being ""refactoring"", which is not accurate.&nbsp; the test section does not provide any testing information, which should be present given that the behavior of the application has actually changed.",1.0,,1,39
"the new code does seem to be an improvement over the old code in terms of style, but with changes in behavior and failing test cases, it's clearly does not work as required by the project.",1.0,,1,37
"there is a ""testing"" section which is good, but it really just provides information about existing test cases and shows screen captures of tests being run.&nbsp; since no new function is being implemented, it's is difficult to know whether that is sufficient.&nbsp; i would note that there is a test case that is failing and the writeup seems to imply that the test case was already failing before these changes were introduced.&nbsp; however, our team is also working on expertiza and in our branch that test case passes.",1.0,,1,92
"the write still has clarity issues where the issue description and code changes do not align.&nbsp; the ""parameters should be whitelisted for mass assignment"" section does not actually show a change that whitelists parameters.&nbsp; also, unrelated changes are seen in the examples.&nbsp; for instance, ""show, edit, update, destroy are not explicitly defined in the controller"" shows changes unrelated to the issue.",1.0,,1,64
"the intent of the project is very clear--simply to fix code climate issues in some controllers.&nbsp; there is a long list of issues being addressed which is good, but it is a little confusing, because there are screen captures that show multiple changes and in at least one case it's not clear how the changes relate to the issue: in the ""parameters should be whitelisted for mass assigment"" section, there is an change from using the ""update_attribute"" method to using the ""update_attributes"" method and the ""user_params"" method (which whitelists parameters) is removed.&nbsp; the first change appears to be unrelated and the second change appears to be going in the wrong direction.&nbsp; it would be better if only the changes related to the issue being addressed were shown.",1.0,,1,132
"the code involves only name changes and replaces usages with the refactored names. i would recommend looking deeper and shorten methods that are long and redundant. overall, a great start but the refactoring can be more extensive.&nbsp;",1.0,,1,38
the build passed on travis ci however it failed in codeclimate and there are issues.&nbsp;,1.0,,1,16
"travis ci is passing. since the method names were changed and their usages have been replaced, the functionality has remained the same however the code climate shows issues",1.0,,1,28
"the code is well written and if it werent for the codeclimate bot issues, it would be easily merged. the code is dry and uses better syntax than previously (example using a dictionary). the authors have improved the code and the testing documentation accordingly.",1.0,,1,44
they ran rspec and travis ci for the code changes they made and attached the video output. everything passes except for a file which they haven't touched. but you might want to take a look into it if your other changes&nbsp; have impacted that code or not.,1.0,,1,49
"the method names have been changed into shorter ones but they still seem long to me. they have mentioned something about refactoring the code to implement the dry principle but i could not see that. also there are a lot of issues reported by code climate for example trailing white spaces,use empty lines between method definitions etc which i think they can work upon.",1.0,,1,65
their travis-ci build passes. however their code climate still fails which suggests that their coding practices need some rework to follow the best coding practices suggested by ruby.,1.0,,1,29
"they have changed the method names and added comments which should not affect the main platform. but if they have changed the method names, they should check the spec folder if those method names were present they should modify those and conduct testing.",1.0,,1,43
"the code itself is good enough, but it still exists travis ci bugs. they need to check the error for travis ci. except this, all things are doing well.",1.0,,1,29
"yes, the team uses two frameworks to do the test.&nbsp; in the rspec test, there&nbsp;is the failure in the result. but from the document, it seems like this failure didn't affect this project.&nbsp;",1.0,,1,38
it only has one failure in the test which is not related in this project. it's great to have different test methods. ui testing makes sure the project is complete.,1.0,,1,31
"all the issues have been fixed except for one issue. if i understand the document right, this issue can be ignored in this project. if that's, i think all things have been done.",1.0,,1,34
"yes, many functionalities some of the functionalities don't pass the test cases. i'd suggest the team adds more test cases and make sure the code passes these cases.&nbsp;",1.0,,1,31
"the wiki page is pretty good. they've explained the problem statement and have explained how the code works. more explanation could have been given on how they are overcoming the issues. also, the instructions given to build and run the code aren't clear, and there are no instructions to follow for windows or linux.",1.0,,1,56
they have not added any test cases but i believe they should have done that(unit test) as they have refactored some methods in an attempt to make them dry. they have not deployed their project so i could not test them myself but they have mentioned that their existing test cases are passing(screenshot of it could be shown here).,1.0,,1,61
the team have very nicely explained what they have tried to achieve in this project.they have explained how they have tried to make the code dry. but as stated above some more explanation about the changes they have done would be better.on example of the method showing why its named like the way they have done will be good.,1.0,,1,61
they have made sure the existing test cases are passing. they have not added any test cases for the methods modified. i think test cases are needed for the modified methods(not the name change).,1.0,,1,35
they have renamed the methods as per the design document and this was one of their project objectives. they have added a new method called array_traverser which is not very self explaining of what its traversing.it think it can be better named.due_array can also be named better specifying the array.,1.0,,1,52
the writeup for the project do explains the motivation behind it and what they have tried to achieve in it.they have given examples of the methods whose name they have changed to make them more ruby friendly. but i believe some more explanation about why naming them like this should have been there.it was a little difficult for me to check the code in expertiza and figure out what the methods are doing(to check if they have named correctly).some screenshots or explanation&nbsp; can make a third person to better understand what and how the implementation is being done. &nbsp;,1.0,,1,104
"the pull request shows that the travis build has failed. but the team has added a video showing the build passing. however on further examining the pull request, the failure was not due to the code changed by the team. so yes, the pull request passes the travis ci.",1.0,,1,49
"the view code for&nbsp;&nbsp;answer_tagging_report.html.erb was formatted well and readable. only suggestion i have to change line and have the one liner &lt;th&gt; ... &lt;/th&gt; code to look like this: &lt;th class=""sorter-true""&gt;# taggable answers &lt;img src='/assets/info.png' title='as set up in the assignment setting, the authors can only tag answers of &lt;%= tag_dep.question_type %&gt; question type that are more than &lt;%= tag_dep.answer_length_threshold %&gt; character(s).'/&gt; &lt;/th&gt; &nbsp; &nbsp;",1.0,,1,88
there&nbsp;&nbsp;answer_tagging_report.html.erb had no method names to check.,1.0,,1,12
"the ""what changed"" is clearly shown in the wiki which is good. but the ""why it was changed"" is not quite clear on the wiki page. i ctrl-f on the page for ""pattern"" or ""dry"" and did not see any matches. a kind and very polite suggestion is to add one of those&nbsp;key words.",1.0,,1,57
"the code cannot be readily deployed onto the production server because the travis ci did not pass and there are some errors to be fixed yet. since there are not many errors to be fixed, this project can be taken up by some other team in future and there is no need to do it from scratch.",1.0,,1,57
the build doesn't seem to be passing in travis ci. they seem to be having problem with the test cases as well as something in the code as well because travis ci finished with status error.,1.0,,1,37
"seems very good for the most part, it seems that the create method in teams_users_controller may need to be refactored based on its length, but otherwise all seems fine.",1.0,,1,29
"the write up is quite good, but it lacks detail in terms of explaining why the team did what they did. in other words, there is much high-level information but not much that goes into why things were done the way that they were.",1.0,,1,45
"some functions are too long and complex as depicted by the code climate bot. for example, get_team_colour has a complexity of when only is allowed, and has lines of code compared to the allowed (although i don't think this is nearly as serious as the complexity problem).",1.0,,1,48
not a lot of information about tests could be gathered from the wiki page. the pull request page shows that the travis cl did not pass and the integration and feature tests seem to have issues that have to be addressed.,1.0,,1,41
"the code looks pretty much ready. i could not find any issues with it. however, a new team could look into why the code climate tests say some methods are complex and&nbsp; work on that",1.0,,1,36
the code is not ready to be deployed onto the production server because there are unsovled&nbsp;test issues. the code don't need to redone from sratch&nbsp;using a different approach. they just need to find the way to fix their issues.,1.0,,1,44
"no. the code didn't pass the travise&nbsp;ci. i cannot see what is the exact&nbsp;problem they have. i think they need to go over what they changed, and to find the problem that cause the problem.&nbsp;",1.0,,1,41
"i don't believe they need to add more tests, since they were only doing renaming, refactoring, etc. however, i also don't see that any tests ran on their pull request... i think they may be out of sync with the beta branch or something.",1.0,,1,46
unable to verify things work as intended. the group didn't provide a deployment of their code or a video showing their code being run.,1.0,,1,25
i did not see many examples of design patterns that you used. i suggest adding more detail in that area.,1.0,,1,20
"the writeup is missing a section describing what the team actually did. it goes into a lot of detail about the servo project and how to run it, but i cannot tell from the writeup what the team has actually contributed. i suggest adding a section that describes that.",1.0,,1,49
they had some unresolved feedback/issues in their pull request. my biggest concern is that they did not add any new test cases and so they may have inadvertently messed up the functionality of the system.,1.0,,1,36
"the build did not pass in travis ci. also, they did not submit a link to the pull request in their submission, which meant i had to go and find it on github. it would have been helpful if they had submitted a link to it in their submission.",1.0,,1,49
the design layout is good but i think the team have added too much code in the project. try to explain important lines in code either by highlighting it.,1.0,,1,29
&nbsp;i haven't understood the test plan stated in the design document. the team says to run the code using one line of syntax. could the team elaborate on this.,1.0,,1,31
"apart from code snippets, the team did not include any other visual diagrams. try adding any other relevant diagrams.",1.0,,1,19
they have used two diagrams i.e. uml and dataflow diagram to show which features are responsible for performing the task given. i suggest the team to add few more visualization pictures as it aids the user in better understanding of the project.,1.0,,1,43
"overall documentation looks good. some details about proposed implementation, dml diagrams or screenshots of where the changes needed to be made could be added to make the wiki more informative as for how the files that are being changed will affect the overall application or the project.",1.0,,1,47
"the current design looks better than the previous one. the team has changed the design to resolve previous issues. the only issue i could find that the team has given uml diagram as a new and old one. they both are quite different and hard to understand that the functionality that exists in the old one and not in a new uml diagram, have they been removed or still exists. it would be better if the team could have mentioned this in the design doc as for why have they not shown those functionalities of the old design to a new one.",1.0,,1,102
"they have done good work explaining the changes. there were some things that i felt that need more explanation such as - . the one issue i mentioned about uml diagrams. . in ""improve more details"" section they have mentioned about some test cases that last semester's team who was also working on this project missed are not quite clear as to which functionality was not covered while testing, what are other functionalities the other team missed that they are going to improve. for this team could have mentioned the functionality that was not tested by the last team and can also mention the functionality that other team missed.",1.0,,1,107
the given uml diagram does not help to understand the project flow and the data flow diagram is a little hard to follow. i think some details could be added to uml diagram about the emails being sent to the student to redo the reviews.,1.0,,1,45
"yes, this project includes test plans and the team has also mentioned about the new test cases that they are thinking of added to test specs. but as how they would test that or the file which will be tested and the spec files to which the new test cases will be added are not mentioned. it is good to mention a little about as how testing will be done and the spec files which will be used for testing.",1.0,,1,80
i liked the way they have structured the document. but i thought there is too much information in one paragraph. it would have been nice if they have used points to explain the flow. apart from that everything looks good to me.,1.0,,1,42
not much information is shared about how they are going to make the changes i.e. the files they need to modify. figures are used to show the difference between the old and new system.,1.0,,1,35
"design document covers almost all the aspects, except for uml diagrams. also, i could not see a specific section for test plans.&nbsp;",1.0,,1,23
"the diagrams have been included now and make it eqsy to understand the flow. however, use case diagrams would have helped more.&nbsp;",1.0,,1,23
design document is pretty much complete with the exception of uml&nbsp;diagrams.&nbsp;,1.0,,1,14
"the proposed solution seems to be really slow. the current solution works in o( ). they are planning a solution that will take o(n) per query. basically iterating over all the scores of assignments. but that would increase the response time. i think there is a better solution in which they can keep a minimum and maximum value assignments that they have already seen and compare the new coming feedback with only minimum and maximum, because these will be the only assignments who would definitely have diff value greater than threshhold if at all. also, more time should be spent in designing and thinking about the solution.",1.0,,1,107
"the design doc tried to say what is being done. but, it states that in the new system, two links in email needs to be sent, one which is the new review. another link in the email is about what is not mentioned.",1.0,,1,43
in the required steps the following is been mentioned: implement the missing js api for setvaluecurveattime per the github issue implement the missing setposition and setorientation apis per the github issue update the expected test results for the relevant tests implement the backend for waveshapernode in the media crate by creating a new node implementation using biquadfilternode as a guide. create an example program that demonstrates the effect in practice. among these the first issue is being tackled very extensively. they chould speak a little more about what is the entire plan required to complete the project.,1.0,,1,97
"the authors try to propose an initiation to a completely new project, which is great new take on it. but.. the changes could be better structured with the mvc flow diagram was explained rather than the ui flow. it is essential to check what all things hindered the past merge requests.&nbsp; also, they are yet to come up with an entire complete project plan. the proposal needs to include what all code changes the team thinks would be relevant or any refactoring choice the team makes. but the part that the authors have mentioned, it is very clear, concise and easy to understand. they should maintain the current quality od wriitng and add more in-depth content to it&nbsp;",1.0,,1,121
the explanation is easy to understand and gives a very good overview of existing and requiring tasks. the could improve on certain areas: - a proper design pattern that they plan to implement or follow. but because it is a new implementation and not an existing refactoring of code base it might be difficult to come up with that.&nbsp; - a little more explanation on the code changes made in views to integrate both the views on one page would be great. - a paragraph on what all needs to implemented or coded can be added. it can contain addition required in controllers interacting with grades_controller.rb.,1.0,,1,105
the design doc is not complete. the team has a lot of scope to improve and work on it. the visualizations can be improved. the design plan can include more in depth description of how the team goes ahead with the project. the test planning covers a lot of information but misses some main points regarding - how will they test the new feature. what impact will the expertiza response time have on implementing the client call to third party server. ,1.0,,1,80
"the design and the plan for implementation seems good. they have figured out the proect, its subtasks very well. some issues that can be tackled are: . "" some code like the format below can be rewritten in the shorter line."" shorting up the lines might not dry out the code, the older code seems more readable to me. . the movement of javascript code - i am not sure why it is required and how it will help.",1.0,,1,75
scope of improvement: i find some difficulty in understanding the proposed&nbsp;code changes. it was confusing if the previous answers will get auto-populated in the view or sent within the email. means it was unsure whether the user will have to answer the previously answered questions are not? team could improve this explanation and make it more clear.&nbsp;,1.0,,1,61
"scope of improvement: i have some doubts regarding the implementation of ""identification"" method. though it seems like a boon to solve the existing&nbsp;problem, i feel that it will be hard to implement. as the team's approach is to sent notification for major edits only, it will be very crucial to correctly distinguish between ""minor"" and ""major"" edit. incorrect implementation of this method will leave a major flaw within the project implementation. this is the thing i believe the team should focus on during the implementation.&nbsp;",1.0,,1,89
"the implementations section does include what needs to be done adequately but does not address how they will address the merging issues that are mentioned in the project description. for example, it says there are code climate issues. those could have been analyzed and suggestions to deal with those problems could have been mentioned.&nbsp;",1.0,,1,55
the test plan could be elaborated better and the implementation section needs more details on fixing the merge issues.,1.0,,1,19
the explanation is good but can be improved as in more justification for the change.,1.0,,1,15
it would be helpful if you could provide any kind of visualizations,1.0,,1,12
no explanations&nbsp;for the reason for the change. it would be really helpful if you could explain why or what changes you are going to make.,1.0,,1,27
no information about implementation. a basic overview of the implementation can help to evaluate the design.,1.0,,1,16
"the team has done a good job in explaining the content in the writeup. but, i could not understand the purpose&nbsp;of the project. if the functionality was already implemented by the previous team, what addition would this team be making? i would suggest the team to please include this in the writeup. the design is clearly explained. the testing plan was same as that of the previous team.",1.0,,1,70
"the changes proposed by the team looks a bit confusing to me as i did not understand the need to include separate&nbsp;scenarios to identify the ""major changes"". i would suggest the team to include some more information in the explanation so that the design is easy to follow.",1.0,,1,50
the proposed design looks confusing to me (i might have missed something). i did not understand why&nbsp;the team is comparing the number of questions to identify that there is a major change in the questionnaire. there might be a situation when an equal&nbsp;number question is deleted and added(explained in the second scenario). the second scenario handles this by&nbsp;checking the parameter add_new_questions. can we not use the same parameter to handle the first scenario? i am sure that there might be some valid reasons for the team to propose different&nbsp;methods to handle each scenario. i would suggest the team to explain the proposed solution in more detail so that it is easy for the reviewer to understand the changes. &nbsp;,1.0,,1,128
although the team has done a good job in explaining the feature but a more detailed explanation was required as i did not understand a few things(i might be missing something). the need to handle separate&nbsp;cases remains unclear to me. &nbsp; &nbsp;,1.0,,1,45
dataflow diagram clearly explains the flow of data and the team has done a good job in explaining the components that would be changed for the feature to work. screen mockups could have been utilized as it makes it easy for the reviewer to understand the changes in the views once implementation is completed.,1.0,,1,54
the have propose a code base but however i dont understand what the code block in the code does. code walk through could be helpful &nbsp; http://wiki.expertiza.ncsu.edu/index.php/csc/ece_ _spring_ _-_m _refactor_bluetooth_support_for_better_maintainability#rough_idea_for_discovery_session.rs,1.0,,1,41
"there is no specific test plan established w.r.t to the project. those testing section does not include additional details about what they are testing. perhaps say ""use&nbsp;./mach test-wpt tests/wpt/mozilla/tests/bluetooth/&nbsp;to run the existing bluetooth automated tests."" what does those test and what cases are they talking about",1.0,,1,57
i dont see any uml. maybe they could have just added a chart to show function and class call across the files they are talking about.,1.0,,1,26
"authors have not proposed any design. however the plan of work do state some high level objectives.&nbsp;e doesn't state what is it or reference a link so i have hard time in following where the come from. also consider adding and removing copy codes, for my project my teammate&nbsp;explicity rebased my commits so my commits and the changes i made would be reflected in his code. so you should be aware about the intricacies in reporting the project.&nbsp;&nbsp;",1.0,,1,85
sounds reasonable but part of their requirement needs them as this is a refactor project which is different from other requirement. they have said possible code smells they are working on but failed to distinguish the use of exact design pattern or&nbsp;philosophy&nbsp;they are planning to use and achieve the requirement such as this,1.0,,1,57
"project_e _issues &nbsp; points to the issues available in your requirement but not translated into something actionable. ""clean the redundant and inaccurate code."" doesn't say anything smart",1.0,,1,28
"somewhat lacking,&nbsp; say,&nbsp;http://wiki.expertiza.ncsu.edu/index.php/csc/ece_ _spring_ _-_project_e ._refactor_e ._github_metrics_integration#improve_more_details &nbsp; what does that mean? could you please add any specific details on the project instead of try to be vague? &nbsp;",1.0,,1,42
"the design doc is voluminous&nbsp;and&nbsp;hard to follow. please breakdown as where you come from, what is the problem, what is you proposal, how does it work, how would you know it works (test cases), show how would you know it works (test coverage or plan to record and publish a video)",1.0,,1,55
"the visualization makes their requirement but never talks about the overall information flow between the files and services. try adding more details on information flow between clients and the functions. say, github api calls are totally missing in your visualization. depicting the functions in your requirements is not a showcase for the uml",1.0,,1,53
"it is difficult to judge the design doc on , , as the doc is massively lacking textual as well as visual context.",1.0,,1,21
"as mentioned above, the doc lacks visual aids and textual context for each proposed change. moreover, an explanation for each change in the file and how it affects the performance of the application would be a plus. also, consider adding automated tests to the test plan as ui testing is insufficient.",1.0,,1,51
"the visual aids used by the team are good but they need to provide a brief explanation for each visual aid. moreover, you could use other types of visual aids to describe the changes being made in more detail such as and activity diagram or data flow diagram.",1.0,,1,48
the visual aids provide minimal but sufficient explanation about the different aspects of the project. another intuitive visual aid would be a data flow diagram as it delves further into the details of the proposed changes,1.0,,1,36
there should be more information about what is being done for this project and less on what has been done and explanations about what all the platforms are.,1.0,,1,28
overall good explanation. can improve a bit with restructuring using bullets to help make it look even better.,1.0,,1,18
"yes, the changes mentioned by the authors are well described but the explanation lacks a little bit in mentioning how the changes would be made to the existing system. i mean the team explained pretty well on what frameworks they will use and how the functionality would work but they haven't explicitly mentioned where and what would change. i know that it's too early but the team could have done a quick code overview and gave a small overview of the changes to the system. well done otherwise.",1.0,,1,90
no visual aids used. use of flowcharts or usecase diagrams is recommended. you may also have mock screens of the proposed design. plenty of softwares available online.,1.0,,1,27
the team has done good job in test plan section. the discussion of scenarios is good but one lacking thing is the missing discussion of creating rspec or feature tests. the team mentions that they will write tests but what tests would this be is missing.,1.0,,1,46
&nbsp;good explanation but missing more technical explanations like which models will be affected or in-depth explanation of what all changes need to be done.,1.0,,1,26
"&nbsp;the design document looks nice but can look even better with reorganizing sections. for example: instead of having so many sections, you could have had sections like changes proposed and implementation and have sections under them like use-case and app flow, and proposed formula respectively. the test plan looks incomplete and just mentions what will be done which should be located in implementation section. overall document looks good and is understandable.",1.0,,1,73
"&nbsp;the visualization used is good but as i mentioned in the previous review, the application flow diagram and use-case diagram are redundant. they both have the exact same content in them. either one of those could have been more detailed or the team could have just removed on of those. apart from this, another suggestion would be to use a visualization for explaining the formula as that looks like the crux of this project. wikipedia has visualizations that help readers understand better.",1.0,,1,84
seems many to many is necessary for what you want to achieve. unclear about how some front end changes will be implemented (see previous comments about how reaction to vary by change checkbox occurs).,1.0,,1,34
may want to make a more thorough test plan instead of providing blanks to be filled after you start working. will you have integration tests in addition to rspec tests and live ui tests?,1.0,,1,34
"the team has although figured out what are the issues of the previous team and what needs to be changed but i could not find anywhere as to how they plan on solving all of them. they mentioned about replacing the javascript back with ruby back urls which looks simple and is neat.&nbsp; team also stated for the nomethoderror can be resolved but passing correct params which are not being passed in the current implementation.&nbsp; apart from these two, there is no clear mentioning of how they plan to solve the other issues.",1.0,,1,95
"the&nbsp;design document seems to have all the sections needed.&nbsp; i was able to find an introduction, problem statement, their proposed changes from previous work and the test plan. i was not able to find how they plan to achieve the flaws of the previous team but yes they are able to locate the flaws. they have given a scenario, which is a good idea.",1.0,,1,67
"the team has failed to provide any class diagram.&nbsp; the design doc has a couple of use case diagram&nbsp;of a landing page and a particular assignment page conversion to hindi. apart from this, i did not find any diagrams. i suggest them to visually develop some uml diagrams for better understanding and developing the project.",1.0,,1,58
team has come up with a good visualization of their proposal and has a flow chart of the design flow. there is mention of why they need to provide visual aid which is a good thing. the visual aid is on point providing specific knowledge on what is to be carried out. i felt more information on how they plan to achieve the project could have been a complete case.,1.0,,1,70
"the team has done the work in where changes need to be made, what files are to be changed, where the code needs to be added but i cannot find anywhere mention of how they plan to achieve it. they have mentioned where changes but not how they plan to&nbsp;solve it.&nbsp; they failed to answer the question of how so i cannot judge whether the design is simple or complicated.",1.0,,1,73
"the team has&nbsp;given a good introduction to why this project is necessary. the motivation seems apt. the authors have well-proposed files where changes need to be made. however, what changes inside each file if mentioned could have made things easy for judging. the design flow&nbsp;is well-structured showing how to access the functionality.",1.0,,1,58
the changes are stated as to where changes are needed but how to do it is missing.,1.0,,1,17
the design doc&nbsp;has good content. esp. the introduction part&nbsp;not only has&nbsp;information but it has good value with it giving why this project is necessary. the documentation has sufficient information needed for designing in this initial phase.&nbsp; there is mention of testing plan in it on how they plan to test their project where they mentioned rspec and capybara. &nbsp; i found one thing missing in the documentation which was&nbsp;how they plan to implement it. rest i think the team has done a good job.,1.0,,1,93
there is a design flow chart which shows how to&nbsp;access the functionality. but i cannot find their idea behind how to implement it.&nbsp; it does not answer to question how to implement.,1.0,,1,35
"the team has provided a test strategy of inspection, development and running tests. there is rspec reasoning provided&nbsp;in the test section. ""include screenshots maybe"" is something i did not understand in the ui testing section of project testing.",1.0,,1,40
the team has failed to mention the testing plan and purpose as to&nbsp;why they plan to do.&nbsp; rest the team has done a good job in completing the design doc and seems correct.,1.0,,1,36
"i cannot find any class diagram. though they have attached screenshots of previous team's work. and from that, i feel the team will able to continue their work and&nbsp;will definitely complete it.",1.0,,1,35
the document is mostly complete. i do think they should expand more on the&nbsp;defects in the previous implementation and how they plan to correct them. &nbsp;,1.0,,1,28
i couldnt find any uml diagrams and i think&nbsp; they could included some flow diagrams denoting how the flow happens in their project .&nbsp; they could have also added some images on how servo's design works.,1.0,,1,38
as i said earlier more information could have been provided on how they are going to modify servo's integration to use this new trait and more explanation could have been provided in the implementation section where i had some tough time in understanding their design approach regarding the discovery_session.rs approach.,1.0,,1,52
found no visual aids. hope the team includes some diagrams like uml in the document which makes it easy for the reader to follow with what is written.,1.0,,1,28
the code snippets seem to be complex and the team should have divided the code into more sections and further explanations should have been included.,1.0,,1,25
"no diagrams are included and it is hard to visualize what the team has worked in the project. the team should include uml diagram, use case diagram to make it easy for the reader.",1.0,,1,34
i am still not very happy with the visualization. i had left a comment in the earlier review that the screenshots should be in proportion to the page and should fit in the page width. but that has not be done! otherwise the screenshots themselves are good at explaining the expected outputs.&nbsp;,1.0,,1,53
the authors have not mentioned where they are going to make all they proposed changes. they will definitely need to add methods to existing controllers. design wise their logic seems sound.,1.0,,1,31
"there were use case diagrams and data flow diagrams in the wiki doc. i did not find either of those very helpful as i think the usecase was simple and obvious from the requirements doc, the data diagram seems very complicated.",1.0,,1,41
the solution was not that detailed. they just wrote that they would include a new view and configuring will be done. nothing regrding the classes or methods to be implemented was mentioned. they should expand more on what they intend to do.,1.0,,1,42
the changes they proposed seem to resolve all the issues listed by the problem statement. but they lacked diagrams of their ideas or screenshots or uml diagrams to explain their ideas more.,1.0,,1,32
the solution was not that detailed to the point of mentioning function names or classes to be included. they just wrote their solution and the files that may be affected by their implementation.. nothing regarding the classes or methods to be implemented was mentioned. they should expand more on what they intend to do.,1.0,,1,54
"there was no visual aids in their design page,&nbsp; they lacked diagrams of their ideas or screenshots or uml diagrams to explain their ideas more.",1.0,,1,26
the project was explained the briefly and their solution was too brief&nbsp;and relied heavily on diagrams and could be explained more with regards to design and the intended implementation. &nbsp;,1.0,,1,32
authors plan to add a lot functionalities similar to the project bidding algorithm. the explanation doesn't talk about whether the team wants to use the same code base for algorithm or are they making more changes that they need to implement the algorithm again. this dry functionality may be explained a bit to make things clearer,1.0,,1,57
"the authors have described the proposed solution in a much elaborated way. the document clearly mentions the functionalities missing from the last pr and how they are implementing this semester. the only feature i see missing from the document is the "" there was no ""add link to submission"" in the bidding list. "". there is no mention of it in the document, i believe that this could be shown once the team makes some code change",1.0,,1,75
"test plan section is a bit weak compared to entire document. as the feature is not yet implemented, i guess this makes sense. once the code is improved, it would be great to see team come back and add some content here. especially related to&nbsp;model reviewbid and controller reviewbidcontroller.",1.0,,1,51
"authors have proposed multiple changes to be incorporated in this project. they have clearly mentioned the changes required, however each change has very limited data related with it. &nbsp; for example: &lt;refactor&gt;: grades_controller file location: app/controllers/grades_controller.rb project e issues issues description here. project e improvements detialed improvemnts work here. &lt;refactor&gt;: grades_helper file location: app/helpers/grades_helper.rb project e issues issues description here. project e improvements detialed improvemnts work here. this section in the document doesn't help the reviewer in understanding how the team is working on it. it would be really helpful if the authors add more details on how they want to implement and why they are doing these changes.",1.0,,1,120
"design document appears to be in a good shape. the problem statement is copied directly from the instructor's explanation. this definitely needs paraphrasing the metadata should be stored in the local expertiza db (we have a sample design here, which you may use or modify). for each participant, record should include at least include problem statement needs to be explained as the team is solving the issue rather than instructing the user to do the changes.&nbsp; use case diagram explains where and how the changes are getting affected. looks good. team has made lot of changes from the first phase.&nbsp;",1.0,,1,103
"i believe the document shared is just the structure of the document. the authors may re visit this page in the next phase and add more details here. at this moment the document looks weak and needs more details to become a self-contained page. &nbsp; another suggestion is to para phrase statements from the problem statement given by instructors. one of the places where we can see this is&nbsp; the metadata should be stored in the local expertiza db (we have a sample design here, which you may use or modify). for each participant, record should include at least include: any statement added in the document needs to correspond to this document and the authors may need to changes the sentences before copying.",1.0,,1,125
"the changes proposed are very unclear at this stage. though the team explains how the flow is getting changed and what is expected at each stage, there is lack of content in changes being proposed. &nbsp; if the contents are added in the next phase, it would be easy for the reviewer to understand the work.",1.0,,1,56
"design appears simple. however, we need more content in the proposed changes section. the content added is not self-explanatory and is very difficult to follow. foe example, the statements: ""we have to come up with a formula to derive the composite score as below."" doesn't make sense as the team has directly provided formula in the next line. deviated_score_scale = ( - abs(self_review_score - mean(all_peer_review_scores)))/ ; derived_score = deviated_score_scale * peer review score; overall, things needs to be explained a bit more and discussion might have to added for better understanding &nbsp;",1.0,,1,89
design document is very clear in explaining problem statement and current implementation. the explanations are in better shape. there is no design pattern discussed and the document lacks in quality of proposed changes section. this continues with my feedback from phase we will make some changes to the instructor&rsquo;s page what changes do the team wishes to make. the content is very vague and is definitely not helpful to understand the proposed changes.,1.0,,1,75
"design document has good information regarding problem statement and current implementation. but at the same time it lacks information regarding proposed changes. we will make some changes to the instructor&rsquo;s page one example is shown above, where in the document says ""some changes"". this clearly shows the docment is not complete. it is hard to understand the proposed design or the code changes team is planning to. &nbsp; additionally, test plan section looks directly copied from textbook/other page. it would be great if the team adds relevant test plans on how they want to implement testing strategy and the kind of tests they want to add in this project. &nbsp; overall, the document is clear on what the team needs to do, but lacks atimplementation points. expecting more information to be added in the next phase",1.0,,1,139
"test plan at this moment looks weak. this section needs a lot of work to be done.&nbsp; test section mostly talks about how the team is trying to implement rather than having a test plan.&nbsp; we shall design a way to show them in the regular &ldquo;view scores&rdquo; page and the alternate (heat-map) view. for example, the above statement should not be part of test plan rather proposed changes. test plan should only contain details regarding how the team is planning to test the features",1.0,,1,90
"""what files have been/are to be changed will be updated in this section once we fix the issues mentioned above.""&nbsp; the design doc says what views need to be internationalized, but does not actually discuss any design details - that is, how will these views be internationalized? the test plan consists only of manual tests, perhaps it should include some automated tests as well.",1.0,,1,65
"""in our project, the implementation of a new functionality would be through a delegation pattern which is an object-oriented design pattern that allows object composition to achieve the same code reuse as inheritance."" it's not clear to me from reading the wiki how or why the delegation pattern is used.",1.0,,1,52
"""instead of creating a whole new model (and possibly a controller) we have decided to add a column to the existing&nbsp;assignments&nbsp;model. this column called&nbsp;is_similar_to&nbsp;will be used to get sample reviews from a previous assignment.""&nbsp; however it's not clear to me reading the wiki how this new column will get populated - that is, how will the system determine that an assignment is similar to some other assignment?",1.0,,1,76
"the design is a little light on details.&nbsp; for example: - how exactly will this be accomplished?&nbsp; ""if this review has already been shown as an example, the button should be &ldquo;remove this review from examples&rdquo; instead."" - ""for the other participants to view the sample reviews, the file list.html.erb which is under the views/student_review directory.""&nbsp; this sounds like a different strategy than is noted in the project requirements, where it says ""clicking on one or more links that say, e.g., ""sample review"""". the design does not include a testing plan.",1.0,,1,98
did not explicitly address how these improvements over the previous work will be accomplished: - color-coding feature was not implemented - ordered by ids of teams who did the topics (not a reasonable ordering) - the content of some newly-added file are very similar with existing ones - there is only one list while topic bidding interface has two lists - need to add link to submission in bidding list &nbsp; testing plan is not explained.,1.0,,1,73
"""automated tests are to be written for model reviewbid, controller reviewbidcontroller.""&nbsp; however without more detail it's difficult to know whether the tests are shallow or if they will really test the functionalities.",1.0,,1,34
the author plans to iterate through the list of reviews to compare with the new review for a significant difference. i don't think that is the best way to go about calculating the change in the review scores. maybe a better solution could be derived. the mailer code to attach links of the reviews has a good proposed solution and i dont think will have any negative impact on the code.,1.0,,1,72
the design and implementation are explained. testing plan has not been mentioned at all yet. maybe the author plans on its implementation in the next phase. but it would help if the author mentions how the plan on testing the changes for example using rspec and ui testing by uploading screenshot,1.0,,1,51
the authors have not mentioned any information on the design document to add methods to various classes. so i cannot suggest any changes or improvements regarding that.&nbsp; the team has not mentioned anything about the design which will be used for implementation. no information can be provided on the response time. i suggest the team to put some more efforts into the design part of the project.,1.0,,1,68
"the changes in the system are mentioned but with a few details missing. where the changes are made is mentioned, but why and how will the changes be made is not mentioned anywhere on the wikipedia page. also, in the ""proposed code changes"" section, it would have been better if the team could have given a description of each change in the file rather than just providing the links of the file.",1.0,,1,72
the visualization provided by the team includes of expected outcome's screenshot and an mvc architecture diagram.&nbsp; the screenshots give a clear idea as to what the team is planning to achieve while the mvc diagram is the least complex. they describe what changes will be made to the system.&nbsp; the team could have also added a visualization for the schema changes to provide a better understanding.,1.0,,1,69
they have just proposed the implementation of a new feature&nbsp;bluetoothdiscoverysession trait. i think it is very&nbsp;similar to the work they&nbsp;should&nbsp;have completed for the st project. &nbsp;i still feel that lot of work is&nbsp;left in&nbsp;the initial steps that were given for the first project. they could have also put in information about how they plan to solve the design for the initial steps. are they going to stop that and pursue the&nbsp;final project without finishing the same? i was not clear about that face.&nbsp;,1.0,,1,99
"the team doesn't seem to have added much information about the final project. they are still lacking all the details mentioned in my previous review, they could have at-least added a few diagrams or flowcharts to state their problems more coherently.&nbsp;",1.0,,1,44
the team has added some information as to how the&nbsp;bluetoothdiscoverysession has to be implemented. they have&nbsp;just written a snippet of how the code should look like but have not given any information as to what&nbsp;function is to be performed. more details about&nbsp;bluetoothdiscoverysession could have made it easier to&nbsp;understand.&nbsp;,1.0,,1,59
there was not much information provided by the group as to how the functionality of the trait of&nbsp;bluetoothdiscoverysession was to be implemented. they have also not addressed the&nbsp;problems with the implementation of the adapter.rs file and i'm confused as to how they are going to approach with&nbsp;bluetoothdiscoverysession before finishing adap,1.0,,1,58
they have included the tests mentioned in the default servo. im not sure if they can write separate functions to test their implementation but it would be help if the authors clarified on the same and gave us more information on how to test their functionality that has been implemented.&nbsp;,1.0,,1,51
there are no visualizations for the final oss project. they can draw a flowchart alone to make it more sound.&nbsp;,1.0,,1,21
"the design mostly makes sense. since you are adding a standard deviation calculation, i would have liked to see explanation about how when this would be calculated - after each review submission? additionally, would the graph of all the review scores become cluttered over time as there can be + reviews? how could you make this more user friendly?",1.0,,1,57
"there are no visual aids. since most of this relies on changing the view, readers could benefit from a mockup of the review page(s) that will be affected.",1.0,,1,29
"only showed what marking/removing a sample review will look like. i would add a visualization of what students see when looking at good reviews, and how students can mark their reviews as private/public.",1.0,,1,35
the design is generally complete. the provide scenairos which are clearly describing functionalities and steps. the project purpose is clear. but seems not clear on testing.,1.0,,1,26
"the document should at lease include their plans of what they are going to make changes. although it is a work based on previous semester, they should point out the weakness of last year's work and provide their proposal for changes.",1.0,,1,42
"there is a nice diagram describing the existing implementation and it makes it easy to see where the problems lie.&nbsp; however, there are no diagrams accompanying the proposed solution or design.",1.0,,1,32
"as previously stated, there could be more detail regarding which methods in the 'files to be changed' will be added or modified.&nbsp; details in the test plan are a bit lacking as well. for instance, which files do you plan on testing?&nbsp; will you be doing any behavioral testing?",1.0,,1,51
a test plan isn't really included.&nbsp; the authors simply say they will ensure current rspec tests will continue to pass and that they will test their new functionality.&nbsp; more details regarding how they plan to test the features they add would be helpful.&nbsp;,1.0,,1,47
for the formula proposed it looks like you're assuming that the max review scores are points. is that true? will that always be true? i think you need to rework the formula to account for the fact that the review scores could be out of some maximum value and not assume that the maximum value is . &nbsp; it would be nice to see what the instructor's view looked like. the description is rather nebulous.,1.0,,1,76
the proposed formula still assumes that the peer_review_score and all_peer_review_scores are based on points. look at the first line and assume that the maximum value for these scores is and that the actual scores are . compare that to an example where the maximum value for these scores is and the actual scores are . those scores should be the same. if they are not meant to be the same then you need explain why they aren't the same.,1.0,,1,78
"the test plan contains a lot of information that has nothing to do with the actual testing of the code. if you want to include information about environment set-up, etc. the document will read better if you put that information in a separate area.",1.0,,1,45
the test plan still contains quite a bit of information that isn't related to testing but more related to the overall work flow.,1.0,,1,24
"i think the document would be better if you at least showed what the present view looks like and then described your changes. as it is, there is just a description and no way to see how the addition of a couple of columns affect the view.",1.0,,1,47
"the team did provide a uml diagram that shows the models, views, and controllers that may be impacted by their proposed changes.&nbsp; however, it is uncertain if the diagram is drawn correctly.&nbsp; moreover, the diagram lacks any references and does not provide a description of its relevance.&nbsp; (it looks really nice, but what does it really mean?)",1.0,,1,60
"the team did include a test plan section with that lists the test files to be added or modified along with their purpose.&nbsp; however, no specifics about the tests that will be performed are mentioned.&nbsp; (no code, not even pseudo&nbsp;code, is given.)",1.0,,1,46
"again, it is difficult to tell if the proposed solution will introduce any new problems or will degrade the performance of the code.&nbsp; the team has not identified which files will be impacted by their changes.",1.0,,1,37
"the team provided a use case diagram for the instructor.&nbsp; however, the diagram is a little difficult to read and does not make complete sense.&nbsp; why include two separate use case diagrams for the same user?&nbsp; it would be helpful if the font in the diagrams was a little bigger.&nbsp; no uml diagram was given. &nbsp;",1.0,,1,60
"based on their description, the team design proposed by the team appears to be simple.&nbsp; the team has explained the actions they plan to take to resolve each part of the problem.&nbsp; however, it is difficult to tell if a simpler approach could be used or if the actions discussed by the team will solve all of their problems.",1.0,,1,61
"the team did a good job of explaining the tasks they expect to perform.&nbsp; however, it is uncertain their solution will solve every problem mentioned in their project.&nbsp; in one of the provided examples, the team proposes to clean up the code by putting all of the closing braces ""}"" on one line.&nbsp; this really does not seem like a solution that would reduce code smells.",1.0,,1,68
"the document discusses the problem statement and related tasks.&nbsp; it also discusses a proposed solution with use case diagrams.&nbsp; however, the details on how the team will implement their solution are incomplete.&nbsp; it is not clear if their solution will resolve all the tasks associated with the problem statement.",1.0,,1,52
"the team included many details about the actions they expect to take to solve the problem.&nbsp; however, it does not appear that the entire problem is addressed.&nbsp; it would be helpful to see images of expertiza&nbsp;that show the results the team expects to be seen by the end user.",1.0,,1,53
"as mentioned in the previous comments, it is difficult to tell exactly what the team proposes to do with the project.&nbsp; the design looks good and their logic seems sound, it lacks implementation&nbsp;details.&nbsp;&nbsp;",1.0,,1,38
it is difficult to tell if the proposed solution will add methods to the wrong class or if the developed code will degrade the performance of the existing software.&nbsp; the team is proposing to modify at least files that are either models or controllers.&nbsp; will it be necessary to modify view files as well?&nbsp; the appearance&nbsp;of the view score page may need to be changed too.,1.0,,1,71
"the diagrams included by the team does provide a better explanation&nbsp;of their&nbsp;logic.&nbsp; the team did not implement a true uml diagram, but the did include an application flow diagram for both the student and instructor users.&nbsp; however, their use case diagram does not seem relevant&nbsp;to their project.&nbsp; while it is true the student and the instructor will submit a form for the self-review, the project should not cover logging into expertiza&nbsp;or viewing the scores. it would be good to see the proposed modified files laid out using a uml diagram.",1.0,,1,102
"it is difficult to determine if the solution proposed by the team is as simple as possible.&nbsp; the proposed solution looks good and appears to address the problem.&nbsp; however, it is difficult to tell if the solution could be further simplified&nbsp;as no code is given.&nbsp; from the description, it is uncertain that all of the tasks associated with the problem are addressed.",1.0,,1,67
"the team did provide a few diagrams that explain the flow of the application and the use cases.&nbsp; also, the team described how the instructor should be able to add an assignment and configure it to allow students to perform peer reviews and how those reviews can be added to their score.&nbsp; however, their description lacks details on how these changes will be made.",1.0,,1,66
"the document contains several key elements, including a problem statement, problem tasks, design proposal, use cases, test plan, and references.&nbsp; the problem statement and overview is done very well and may only need minor modifications.&nbsp; the team included a current process section, which does a very good job of explaining the problem in simple terms.&nbsp; the test plan section provided some good information on how the team proposes to check their code, but it still needs more details. there are a few suggestions to be made for improving the document.&nbsp; first, the section&nbsp;explaining the purpose of expertiza should be removed as stated in the documentation guidelines.&nbsp; next, the files to be modified section should be moved closer to the design section.&nbsp; finally, the references are a bit redundant and some of the references may not even be used in the document.",1.0,,1,149
"there is a section for rspec and ui testing. however, it is not clear how the ui testing will be carried out.",1.0,,1,22
"unfortunately, the design section is missing in the document. please add design section before the final peer review date. design section should include at least one diagram (uml, entity relationship, and etc). list of files that your team is going to change should specify what kind of changes will be made to the files (please include mockups methods, classes, variables and etc). definitely this section is one of the most important in the document, so please spend time and effort on it. unfortunately, by stating the list of files that are going to be changed is not enough for the design section. ) no methods, classes, variables to be added are specified in the document. ) unable to determine if any changes will introduce code smells due to missing design ) unable to determine quality if the design due to missing design itself. ) unable to determine due to missing design. ) design section must be created and team should spend time and effort on it.",1.0,,1,161
"unfortunately, document does not contain any visual aids (e.g. uml diagram, e/r diagram, mockups of screens or tables). please provide as many visual aids as possible, by creating at least one uml or er diagram (whichever is more appropriate). also since this project have been partially implemented, you can use existing implementation to mockup the web page and show the screenshot of the page after different language is selected (hi_in). may be discuss what other improvements are you going to do to the existing implementation. please show how selecting different language would effect the page visualization. is the&nbsp;selected language used across entire web-page(s)? will there be only partial change in language (some feature still would remain in english)? since no diagrams are provided, i am unable to answer neither of the above questions ), ), and )",1.0,,1,140
"from the document it appears, that most of the design has been already made in the last semester by the different team. based on the ""implementation"" section, the team is going to be mostly fixing bugs that were introduced by different team, improving and adding missing language selection options in&nbsp;some pages, and adding missing static text translation in some of the files. the team stated that existing design and implementation that was given to them as initial work from the last semester is solid and sound. it appears to follow appropriate principles and ""on the right track"". however, no documentation was provided by the team to illustrate existing design and implementation. no uml diagrams were given to reflect on the code implementation that were done. therefore, i cannot conclude whether the design really appear to be sound, follow appropriate principles, and using appropriate patterns. i can only guess since the team stated that they found no problems with it.",1.0,,1,161
"there is very a little information about design itself, since the team utilizes existing design feature and trying to improve the feature. moreover, the team does not provide existing low-level implementation design information. there is only one workflow diagram that shows only high-level flow of events in the system. it is not enough to fully determine if the design is simple as it could be. however, since it is currently used in the expertiza, i assume it is as simple as possible. the changes to be made improving the feature also appear to be as simple as possible. although the document does not really explain exactly what changes are going to be made. it explains where, but not what and how. however, based on the giving information, i think team has correct approach and changes to be made improving existing feature are simple as they could be.",1.0,,1,149
"from the ""problem statement"" and ""existing feature description"" sections i understand that the team is trying to improve already developed feature (include the dynamically generated links to the conflicting reviews, summary of the reviews, and report used for analyzing in the email notification that is trigger upon significant variation of the score for a review). therefore, the team does not re-develop the design, but simply utilizes the existing one and improve some existing feature. i am unable to determine whether existing design for the email notification is solid or not. if it is currently used in the expertiza, i suppose it is solid. the changes to be made in the system to improve the feature seem to be reasonable, but without low-level implementation details it is very hard to determine. for example,""hardcoded urls will managed by the config file in order to make these links functional on every server running expertiza"". what config file? how it will manage? what specific change is required to do so? all this information is missing.&nbsp;",1.0,,1,175
"i believe the team did a great job on explaining the end result of the changes to be made to the system and how these changes effect the expertiza. however, the changes itself are not explained in the details and cannot be reviewed at this point. the end result seems promising, but the list of specific changes including code samples is not provided. moreover, as i mentioned workflow diagram is not enough and inadequate to convey all the low-level design and implementation details to the reader. this information is still missing and must be updated once the project is completed.",1.0,,1,101
"most of the important parts/iteams are provided in the document, but unfortunately not to required extent and desired level of granularity (in terms of details). however, team did great job on providing that much information, creating design document, and determining possible solutions. all of the notes that i left above can easily be improved just by providing more details and resolving some confusion that i had. project purpose is clearly stated in the ""problem statement"". project design missing more in-depth detailed uml diagram (that represent solution on the implementation level, including classes, variables used and etc.). workflow diagram is good, but not enough. testing plan is good. make sure to perform both rspec testing and ui testing upon completion of implementation. the document is also missing implementation details with some code snippets or at least pseudo-code and explanation on how the changes would be done.",1.0,,1,148
"there is only one workflow diagram and three mock screenshots that show how would conflicting review, summary of all reviews, and (most important) new report would look like upon completion of the project. all visual aid provided in the document clearly explain what changes are going to be made and how it effect expertiza in specific scenarios. however, this is all high-level diagrams and do not provide low-level implementation details that reveal all the changes to be made in the system. there is no uml or other similar type of class diagrams to show in depth the changes to be made into the system. workflow diagram by itself is not enough information source and ""implementation"" section does not specify how these changes will be made. therefore, due to absent of the class diagrams (or other type of low-level implementation diagrams), i am unable to determine full list of the changes to be made in the system.",1.0,,1,159
"the changes seem straightforward, although there are a few things that are unclear.&nbsp; for instance, the ""include displaying analysis for each review as a ""debug"" option"" item does not indicate how this option would be enabled--is this an additional change to the ui?&nbsp; the ""fix grammar issues in response.html.erb"" item does not elaborate on what the grammar issues are and this doesn't appear to be covered elsewhere in the document.&nbsp; also, that item seems to be out of scope for this project.",1.0,,1,89
"the test plan is an improvement on the previous design document version, but there is still a lack of details.&nbsp; as mentioned in the previous review, given that the analyzed text will not be displayed on the page, manual testing will need to be performed to ensure that the analysis returned by the api corresponds to the text that it is associated with on the page.",1.0,,1,67
"the document does a good job of explaining the design of the new table (presumably manifested as a new model in the ruby code, but this isn't included in the list of changes) to be added and how it ties together the existing data.&nbsp; what seems to be lacking is an explanation of how the new logic needed to support custom rubrics by topic will tie in with the existing logic and how the ""rubric varies by topic?"" selection will be stored.&nbsp;&nbsp;also, the design does not address edge cases, such as what will happen if a user selects the ""rubric varies by topic?"", makes selections on the ""topics"" page and then deselects ""rubric varies by topic?"" back on the ""rubrics"" page?&nbsp; do the selections made on the ""topics"" page get deleted?",1.0,,1,137
"the design seems sound and is proposing good things, like moving code from the topics tab to its own partial.&nbsp; i'm not sure i agree with the assertion that as little js as possible should be used because this is a ror project; the requirements should drive the implementation choices.",1.0,,1,52
"although there is a test plan section, it does not provide details about what is to be tested from a functional perspective.&nbsp; while the team may not know at this point what classes and methods might be involved in the unit tests, the test plan could have included information about what user actions could be tested, e.g. enabling the questionnaires to vary by topic.",1.0,,1,66
" . i'm thinking a new route should be created for the bidding instead of trying to add more functionality to the review mapping controller and views.&nbsp; any logic shared between them could be refactored and put into a helper class. . adding more functionality to the review mapping controller would make the class unnecessarily large.&nbsp; as much of the business logic as possible should be put into the model. . the complicated parts of the feature seem to have already been implemented. . when bidding is enabled, the response time will actually be decreased in the sense that a student will no longer need to wait for being assigned a submission.&nbsp; however, the issue of how to deal with minimum required vs. maximum possible reviews may require some type of prompt for getting a new review item to ensure that a given student gets the review items they have been assigned in the correct order to ensure that each submission gets at least one review.",1.0,,1,165
" . the model diagram didn't seem to provide any useful information in relation to this feature.&nbsp; it would have been sufficient to state that teams bid on topics without getting into all of the relationships between participants, teams, assignments, etc. . the one uml class diagram seems to follow conventions in terms of showing the aggregation relationships. . the bidding diagrams don't provide a lot of insight into how the two bidding models differ aside from the actors and what is being bid on.&nbsp; what's missing is the concept that the topics bidding will result in only one unique topic will be assigned to each team whereas in the topic bidding there is a many-to-many relationship between assigned topics and participants.",1.0,,1,125
"the design does not seem to add anything beyond the already existing mvc pattern being used by expertiza.&nbsp; the design does appear to be missing a few details, including how the review strategy selection will be stored and how the relevant changes to the reviews view and controller will be done, considering the current implementation enables the user to have new topics to review assigned to them.",1.0,,1,68
"the black box behavior is described well, except the detail of how students will navigate to the new bidding view, which is a critical part of the design, since it impacts the students' assignment workflow.&nbsp; another critical piece that is missing is how to deal with a student's ability to review more than the required number of assignments.&nbsp; if reviews are required and a student can perform up to , how would the system enforce that each submission gets a minimum number of reviews?&nbsp; if a student is assigned all submissions in one shot, it's possible that a given submission is not reviewed by any students if no student chooses to do all reviews.&nbsp; a lot of the technical details about the existing functionality the feature will use could have been referenced by links rather than putting exhaustive information into the design document.",1.0,,1,148
"the test plan does not get into a great amount of detail in terms of what is going to be tested and how.&nbsp; one of the ui tests states that a student should be able to [review] four assignments.&nbsp; however, the maximum number of assignments is actually configurable, so the test case should test to ensure that the maximum value configured is not exceeded.&nbsp; for ui testing, the test plan would ideally describe the steps involved in performing the test, rather than giving general statements about what is going to be tested.",1.0,,1,95
"the models, topics bidding, review bidding and design strategy don't seem to add a lot of value in terms of describing the design.&nbsp; the screen captures are useful, but are just way to large to fit on your average monitor.&nbsp; i had to maximize the browser window on a k monitor before i could see the entire screen captures without having to scroll.",1.0,,1,66
the proposed changes by the team only include the files names where the changes have to be implemented but nothing regarding what changes can be possibly made. so it would be nice if they explain that.,1.0,,1,36
though the writeup is very clear and easy to understand there no diagrams or mockups used in order to explain their&nbsp;plan of action.,1.0,,1,25
the authors have done a very good job explaining all the changes they have to make in order to achieve the solution for their problem statement.&nbsp; but i felt that mentioning names of all the files that they have to modify would be very nice.&nbsp;&nbsp;,1.0,,1,48
i feel the design is not complete enough as there is no information regarding what are they planning to do in order to overcome the issue. a rough idea about their plan of action should have been proposed.,1.0,,1,38
"there are no&nbsp;visual aids however, some refactoring steps for maintainability could be better explained using a flowchart or something else.&nbsp;",1.0,,1,23
"the problem or flaws with existing implementation is explained very well. however in the implementation, the solution to the problem is not explained very well and is vague. i would suggest highlighting exactly what methods you intend to change, and why. also the test plan is vague and should be more specific such as file names and testing procedure.&nbsp;",1.0,,1,60
the plan of iterating through all previous submissions to check conflict may increase the response time of the system and a better solution may involve caching some data or use average + previous submissions.&nbsp;,1.0,,1,34
i think that the testing portion is very vague as it just says develop new rspec code. i think you should explain which parts you intend to test and how you intend to test the views.,1.0,,1,36
the test plan is very vague and only includes the files to be updated. i suggest explaining which part of the feature you intend to test.&nbsp;,1.0,,1,27
"the diagram is there but to me it is not clear what purpose the diagram serves as there are arrows going out of a controller to a controller, and a description would be helpful.",1.0,,1,34
some parts are vague--ex. improve more details. that section should be explained more.&nbsp;,1.0,,1,15
"the design doc is explained thoroughly for the most part. however, there are sections that are still incomplete and there are also some parts that are too vague. example: moving javascript code...explain why you intend to move them and how they are at ""inappropriate positions""",1.0,,1,46
"i wanted to see a detailed explanation of the design. they have only explained what is wrong with the previous project which is mainly ""no comments"", ""complex code"", ""dry violation"". this project seems more like a code climate fix rather than a new implementation. it would have been better if you would have explained the design even if it was briefly. because i don't want to go to the previous submission to read their point of view or their complex design.",1.0,,1,82
"in the solution, like ""separate view will be created to address this issue.""&nbsp;, is not a detailed solution. it will be better to provide how to deal with this issue.",1.0,,1,31
they provide tthe est plan in this document. but they didn't provide enough details about the test. it will be better to show the test cases and mockups.,1.0,,1,29
"overall, the document contains statements, what need to be done and test plan. but they didn't provide enough details for their plan to do in this project.",1.0,,1,28
"it will be better to provide more details about your design. for test plan, it can be put in any project. you can write more test plan about your project.",1.0,,1,30
"the team has mentioned the subsequent steps to be done for their project. but, they've focused on mentioning the test command and they have explained what is to be done in a line or a two. i feel they could have added a bit more in explaining what they're going to implement and how they're going to do the same.",1.0,,1,63
"yes, the team has added subsequent steps. the only suggestion i have is that, they could have added more about their implementation.",1.0,,1,22
"part of the write up in the design strategy section is a little confusing. all of the indented lines use a blue colored in circle as their bullet point, however i think it would be beneficial to switch it every other indent so you can easily tell which line you're reading.",1.0,,1,52
"they have explained the changes they are going to do in the project with well documented bullet points,diagrams and the flow. some further explanation about the formula would make someone better understand the logic.where all this logic will go is also not mentioned.this information can be added for more clarity.",1.0,,1,53
"the changes proposed in theory seem to be the right direction. the quality of explaination is brilliant making the document easy to follow. the team has shown good though process in understanding the complexity of the issue what stating where they would have to put their efforts. however, i believe there is another complexity the team may have overlooked. i suggest including this in the design for the future. each reviewer would want to review multiple assignments. so, is the algorithm run multiple times for each time the student wants a new assignment? this would imply that every other student would also have to bid and it becomes a batch based system. or if the single instance of the algorithm would pick multiple assignments for the reviewer, then the algorithm, view and design would have to incorporate the number of assignments the reviewer wants to review. some reviewers might want to review or or even assignments.",1.0,,1,156
"as stated in the previous round, the bidding of reviews as stated by the team is similar to bidding of assignments and they intend to use delegation design. the team's intuition is the right way to approach this to keep the codebase dry. however, the team has not convinced a reader if delegation can be used straight away without any changes needed because the review bidding is slightly different.",1.0,,1,70
"the team has done an excellent job in identifying the problem and the solution. i like the insight of the team in triangulating on the issues they may face when they extend the exact same implementation from bidding projects to reviews, such as the scale and being assigned what you worked on. the team also goes on to explain how they plan on using delegation to keep the codebase dry. however, the design seems to be missing out on how the delegation would overcome the shortcomings identified by the team.",1.0,,1,90
"th team has identified the files where changes need to be made and the design pattern to be used to keep the code dry. but at the same time, the team accepts that some things are different with respect to review bidding (in ending of section ""current implementation""). they still have not justified as to how to plan to tackle it. in addition, i had comments from the last round of review which is yet to be addressed: ach reviewer would want to review multiple assignments. so, is the algorithm run multiple times for each time the student wants a new assignment? this would imply that every other student would also have to bid and it becomes a batch based system. or if the single instance of the algorithm would pick multiple assignments for the reviewer, then the algorithm, view and design would have to incorporate the number of assignments the reviewer wants to review. some reviewers might want to review or or even assignments.",1.0,,1,165
"the design is clear. however,&nbsp;i am slightly concerned about the [tbd] sections since the complexity of these remains unknown.",1.0,,1,21
there's a section titled proposed code changes that explains in a paragraph what the team plans to do. only suggestion i have is to bullet the action items taken instead of embedding them in the paragraph.,1.0,,1,37
"the implementation section is really short, and doesn't go into enough detail regarding how exactly changes will be made. the rough idea for discovery_session.rs isn't really explained, just code is given.",1.0,,1,34
"the write up is detailed and the explanation of the proposed task is very clear. my one comment would be that while there's a description of a minor edit, there's no explanation of what would happen in the case of a minor change in the wording of the question. is it handled in this project?&nbsp; if it doesn't come under the scope of this project, please add a line stating that.&nbsp;&nbsp;",1.0,,1,77
"&nbsp;nice use of visual aids. although one thing i found a bit confusing were the unnecessary two way arrows in the data flow diagram in some places. for example the two way arrow between ""delete review"" and ""send email to affected user"" should just be one way.",1.0,,1,48
"yes the test plan is included in the document. one thing i feel the test plan missed is, testing if the minor edits work as expected. in test case , they check if a question already exists. i think that should be extended to test minor edits to questions as well.&nbsp;",1.0,,1,51
"yes the data flow diagram describes the workflow of the proposed solution clearly. i made a comment about some unnecessary two way arrows in the data flow, like sending email to affected users. that hasn't been updated yet. feel free to comment if you think i'm wrong.",1.0,,1,49
"the design principles are sound. i felt the authors could have talked a bit more about the proposed code changes, like identifying the design pattern used.&nbsp;",1.0,,1,27
the test plan has the same issues as in round . it lacked information about testing but had implementation details which don't really belong there.&nbsp;,1.0,,1,26
"the team has good visual aids that describe the process, but i felt the work flow diagram was a bit redundant because it looks too similar to the use case diagram.&nbsp;",1.0,,1,32
they only have the explanations of the project and how they gonna change the files. there are still need more details about how to implement the project functions and test case.,1.0,,1,31
" . i didn't see the methods to a wrong class. . there is no code about, so no code smelly so far. . the design hasn't started. . the project may have the potential to increase the response time a lot.",1.0,,1,39
"i don't see any details about how the implementation will be done at the code/class/function level. it's current all visuals, workflow, and testing.",1.0,,1,27
test plan is very generic and high level. just says which type of tests they'll run.,1.0,,1,17
"the problem statement mentions something about adding a page where students would give consent for their reviews to be shared anonymously. this sounds like it's sort of an assignment-wide agreement. while i don't see this mentioned in the student's wiki, i also don't really feel strongly that something like this is needed.",1.0,,1,57
"it seems the group has really simplified it a good amount. however, i was getting confused with where the group plans for this to be displayed. they kept mentioning multiple tabs on the view scores page, but i thought the view scores page doesn't have tabs.",1.0,,1,47
"i think the overall structure of the wiki is a little confusing. i think the problem statement could be shortened a great deal so the reader can more quickly get to the functionality you plan to implement. the diagrams are a little blurry. the test plan seems to have empty sections, it says below are the test results, but no implementation has been done yet.",1.0,,1,65
"there were no diagrams or visual aids. so, i suggest adding some.",1.0,,1,12
"they did not include any diagrams. although it is a mozilla project, they still could have included a diagram or two that shows their implementation process.",1.0,,1,26
"&nbsp;i can see lot of improvement from last round. although i have found few issue: - . anyone without login can see all the details of students by navigating the url . i was able to signup as librarian but approval link in admin for librarian is not working and hence cannot check librarian functionality . student can edit their email. i am not sure if this should be the case as email is the primary key . i was able to create book from admin but view books from admin and student threw an error . since there's no way to checkout, i am not able to test other functionality",1.0,,1,107
i am not able to open the code in git hub.&nbsp;hence couldn't check the commits,1.0,,1,18
"&nbsp;i have already explained in above points as view books, checkout and librarian functionalities are not working, i am not able to test the provided edge case scenarios. however i could check one of them and admin cannot be deleted.",1.0,,1,41
i am not able to open the code in git hub. is the repository made private?,1.0,,1,16
&nbsp;i believe the team has done some level of testing but not thorough enough. i couldn't find test cases for the controllers and models,1.0,,1,26
"the system worked pretty good. although i found some issues:- . librarian or student could edit their email in edit profile.&nbsp; . when i tried creating book from admin, it crashed. it happens only when image is attached . i was able to create book with count as - . student was able to checkout same book multiple times even though book is already been checkout by him/her . i was able to edit other student profile just by changing user id in profile. eg:&nbsp;https://digitallibrary .herokuapp.com/students/ /edit",1.0,,1,88
unable to see any books in students as search is not giving any result on the book name. unclear on what category the book search feature searches the books. admin account cannot be deleted.,1.0,,1,34
there are test files for every model and controller which appear to be a result of scaffolding. but the team has not thoroughly tested any one model and controller,1.0,,1,29
"the ui was intuitive and all the implemened functionalities were easy to find. the team did not keep pushing throughout the project period. the whole project was submitted as commit and only a readme update after that. though there was only commit since the creation of the repo, it looked like the team was recently active in creating issues for the repo.&nbsp;",1.0,,1,63
"there was no preconfigured admin account and no admin features developed. as a result of which, the admin functionalities could not be reviewed. the code abides by the accepted ruby and rails coding practices in terms of file names and general naming within the code.",1.0,,1,45
"when i was signed in as student, and if i typed in the url to another student's profile page, i was immediately directed to the requested page. as the readme states, you can only sign up via google if you have already signed up via the traditional way.",1.0,,1,49
the team did not test any one model and controller.,1.0,,1,10
"yes system is working as it is supposed to, issue reported in previous round are fixed. but delete is not implement for student account.",1.0,,1,24
yeah i am able to view all the books using admin account but no validation in code that shows has_many relationship is added.&nbsp;,1.0,,1,24
"admin facing issue while creating a new book.view all books not working as well. checkout books view, hold request view,&nbsp; over due fines not working.",1.0,,1,27
code quality is okay a better job at testing should also be done. no extra features are implemented.,1.0,,1,18
although i see commits for the project during round and round . i think it should be more frequent as each functionality can be pushed via a new commit.&nbsp;&nbsp;,1.0,,1,30
"none of the model is working, no books can be viewed as link is broken, admin is not implemented, both uses can only view and add libraries. student should not be allowed to add library&nbsp;&nbsp;",1.0,,1,37
"no many issues are there in final submission, as mentioned above books functionalities are not working.",1.0,,1,16
yes the basic functionalities the were causing problem are fixed.&nbsp; i face one issue where admin or librarian cannot see hold request for special books even thought it shows that student has created a&nbsp; hold request.,1.0,,1,38
git hub repo is not public so couldn't check it.,1.0,,1,11
as an admin i was able to delete a checkout book.&nbsp; i was able to delete a student who has checkout books. system showed a warning about the delete operation and the count of the book which student borrowed was not updated. so technically a book is lost if student with checkout book is deleted.&nbsp; hold request was deleted when student was deleted. &nbsp; &nbsp;,1.0,,1,67
"there is a bug. when i first logged in as an admin, then i new a student successfully. after i created the student account, i will become the student who i have just created rather than the admin. i think this is not the thing i want, as i should stayed as an admin. &nbsp;",1.0,,1,55
"it seems that they didn't handle the relationships apparently, as there isn't any ""has one"" or ""has many"" in library model and book model. i found the library is an attribute of book, so they might not build such relationship for book and library.",1.0,,1,46
"the search functions seems not work. and the admin can new a book without new a library. i think that is no right, because a book should belong to one library, otherwise we cannot new a book. and there seems no test cases and code for model. only some test cases for controller. and if a student reaches his maximum checked book, i think he can put the book he still want to borrow in the hold request list, rather than force the student must return a book before checking out a new book.",1.0,,1,94
"yes, the functions are easy to find. but i think the admin account should be preconfigured rather than sign up. i signed up as an admin, and the emails is admin @ncsu.edu, password is , hope that can be preconfigured in the next review. and when i signed up as a student, the page&nbsp;have instruction&nbsp;that i should set my password at list characters, however when i set the characters password, the page noticed me that i should set characters password. that seems uncomfortable for users.",1.0,,1,89
"admin cannot log in without signup, which i think object the requirement for this system. and i cannot change the name of admin when i choose edit my profile. that might be a small bug.&nbsp; and i cannot upload an image for book's cover, hope this function can work in the future. and as a student, i can change only my password when editing the profile. i have nowhere to change student's university when editing the profile.",1.0,,1,80
"( ) what will happen if the admin tries to delete book that is issued? the admin can delete the book successfully. however, when a student try to see his checkout list or hold request, the page will go wrong. &nbsp; ( ) what will happen if a student is deleted who had books issued and there are other students waiting for the same book? the other student will still wait for the book. as the checked out record seem still here. &nbsp; ( ) can admin account be deleted? no, admin account cannot be deleted. &nbsp; ( ) what will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted? as the ""viewing hold request"" are broken, i cannot test this edge case. &nbsp; &nbsp;",1.0,,1,127
"as an admin, the function of approving librarians seems not work. when i click ""approval librarians"", the page will&nbsp;go wrong. as an admin, when i created a new book, then click on the ""back"", the page will go wrong. and as an admin, i cannot find the&nbsp;entrance to see all books, checked out books, books in hold request and books' borrowing history. as a librarian, i should be approved by admin after i signed up. this function seems not finished yet. &nbsp;",1.0,,1,86
"in most controller, one method only handle one task. there is few bad naming. as there are bookreqs and bookrequests at the same time,&nbsp;that seems confused. and other coding quality seems good. &nbsp;",1.0,,1,35
"they only have some statement like book belongs to library and librarian belongs to library. but they don't point out that ""library has many books"" or ""library has many librarians"", so i think they know the relationship is -to-n, they just not states it apparently.",1.0,,1,47
"the same answer as above, i cannot see the commit history of the repo, i can only give an average point, quite helpless...",1.0,,1,23
"on the edit page, we can see other student's profiles.",1.0,,1,11
"the readme file doesn't contain the edge case information. if delete a book checked out by a student, the website will raise an exception.",1.0,,1,25
"the librarian account cannot edit their profile, while student account can edit their account can not add books, view books, only can view the libraries",1.0,,1,25
" if the book's available counter is and hold counter is non zero, then when admin update the available counter to (new addition of book) then by default hold counter does not decrease by (i.e. it does not get issued to the student having hold request) if student gets deleted who had book issued and there is non zero hold request count on that book then book is not automatically issued to the next student who has hold request and book's available counter remains . admin account can be deleted and also multiple admin accounts can be created which is against the given requirements of the system. if student gets deleted who has checked out books then i am unable to see borrow history of those books and system throws error. ",1.0,,1,132
they followed usual code quality standards of ruby. but they could have tried adding more business logic into models rather than controllers. there is almost no business logic in models.,1.0,,1,30
"overall all relationships are properly defined. there is some models which could be connected but are not like ""special collection requests"" could be connected with students and books model by defining ""has many"" and ""through"" relation.",1.0,,1,36
only basic auto generated testing code is there. no thorough written tests are there for any one of the model controller/model&nbsp;,1.0,,1,23
"it includes major aspects of the system but lacks few things like admin login is unable to find, after login home page elements overlap somewhat so not easy to follow. can improve readability to some extent.&nbsp;",1.0,,1,37
"the website works only for admin login, the user who signs up is automatically signed in as admin. &nbsp;the validations are provided for all attributes. the foreign key relation needs to be implemented. unique key of attribute can also be added the book controller the increase and decrease book count are consistent in model and controller.",1.0,,1,57
"the image of book is not shown, the cover picture in book is not&nbsp;available for few books further book&nbsp; that's checked out, needs to be returned, the option for return is not available for checked out books&nbsp; also there is no indication that book is checked out before clicking on the checkout button. the option for placing hold on certain books, is not available to user logged in as student. &nbsp;&nbsp;the options for&nbsp;viewing&nbsp; the bookmarked books aren't available partial search of fields in search is not supported admin is unable to edit the education level of the users logged in as students",1.0,,1,113
"after checking out, the option for checkout still stays in the book show method. able to checkout special book ,without librarian intervention. get's checked out as normal book checkout while signing up, the password, should be set to a maximum of characters, but while editing student profile, the password can be changed to shorter length librarian is able to destroy the library, &nbsp;library was successfully destroyed. from librarian account &nbsp; &nbsp;",1.0,,1,73
"as given in the readme file, the unit test for model and controller is pending",1.0,,1,15
i can still sign up a new account as admin which should be prohibited. overall the systems&nbsp;is excellent!,1.0,,1,20
 . i failed to log in as admin using the email and password given on github page. . not able to test. . as mentioned. . as mentioned.&nbsp;,1.0,,1,25
"each view directory only has a show.html.erb file and no other files are present which is not a good ruby practice. the new, edit, index files are not present in any of the view directories. the scaffolding is not done properly.",1.0,,1,43
"the ui is pretty east to use, but some elements should be&nbsp;spread out better (educational level and undergraduate are on&nbsp;the same line). i wasn't able to read the readme because the github link returned a . is the repository private?",1.0,,1,44
i couldn't log in with the given admin email and password. some other tester may have changed the admin's password.,1.0,,1,22
"most edge cases seem to work. however, if&nbsp;a student checks out a book and then returns it, then the admin cannot delete the student. i noticed this problem with many&nbsp;applications, it likely has to do with the fact that students belong to requests. apart from this, everything looks good.",1.0,,1,53
i could not determine if testing had occurred because the github is unavailable.,1.0,,1,13
"( ) when&nbsp;a book is deleted, the hold request on it is not deleted.&nbsp; a student creates a hold request for a book, and then admin deletes that book. however the hold request for that book doesn't disappear, which means the hold request isn't deleted. ( ) when a user is deleted, the borrowing relationship is not deleted. a student borrows a book, and then admin deletes that student. however admin can still see the borrowing relationship in the checkout list page. ( ) because their models doesn't have dependent :destroy validations, so&nbsp;destroy operations will cause a bug or even make the system crash. so almost all tests for edge cases&nbsp;that destroy one of a relationship pair will&nbsp;not pass.",1.0,,1,125
"( )book-library is a many-to-one relationship, but there's only&nbsp;belongs_to :library in book.rb, there isn't has_many :books in library.rb ( )book_history-student is a many-to-one relationship, but there's only&nbsp;belongs_to :student in book_history.rb, there's not any has_many :book_histories in book.rb ( )all the&nbsp;relationship pair don't have dependent: :destroy validation. so if i delete one member of the relationship, there may be system crash. &nbsp; &nbsp;",1.0,,1,80
they test controllers thoroughly. however there's no test for models.,1.0,,1,11
"the book doesn't have an image. &nbsp;admin cannot borrow books. admin can only see book_id of books which student bookmarked.&nbsp; can see a list of overdue student, but cannot see how much the overdue fines are. student cannot borrow one book twice at the same time, even if there're more than two&nbsp;available. student cannot see their overdue fines. if student is at max borrowing limit, he/she cannot create a hold request for another book. student cannot see their hold_request list. student cannot receive email when a book is successfully checkout.&nbsp; &nbsp;",1.0,,1,99
"ux wise the app is well designed. links should be on new lines, though. navigation is pretty easy. however, i consistently saw an error trying to perform different actions in the app : `we're sorry. something went wrong'.",1.0,,1,38
i could edit the profiles of other students when signed in as a student. this shouldn't happen.&nbsp;there's no social login feature.code is ok. books controller needs improvement. it has a lot of nested blocks.,1.0,,1,39
"i&nbsp;appreciate the efforts this team&nbsp;put on css. although, some of the ui features are not very intuitive, star for the efforts. good job",1.0,,1,27
the ui is nicely implemented. the options are clearly visible on the home page. certain issues like navigation options to go back&nbsp;from&nbsp;users screen and books screen not visible. have to manually edit link to go to homepage.,1.0,,1,41
"the&nbsp;system mostly works as it is supposed to. the system was&nbsp;great in the first round and the team has&nbsp;built on it. &nbsp; some features that are not working: &nbsp; . validation for the radio button to select type in sign up form. i can log in even without selecting my role as a librarian or a student. .&nbsp;if a book is in special collection, it still shows up in my issued books and i can return that book. this should not be the ideal scenario.",1.0,,1,91
"the basic functionalities all work great. the ui is good and&nbsp;i couldn't find any major issues with the code. the only&nbsp;functionality that i feel is&nbsp;erroneous is when a user who has books issued is deleted, the system throws an error because the relationship might not have been properly defined.",1.0,,1,56
the coding practice followed is good. the methods&nbsp;usually do what they say and there are not many commented blocks. nesting&nbsp;sometimes becomes more in some methods but nothing to worry about majorly.,1.0,,1,35
"for the most part, the system handles the -to- and other relationships properly. if&nbsp;i delete a book&nbsp;which is already issued to some student, the&nbsp;entry disappears from the borrowing history and&nbsp;this change is reflected in the student's checked out book list. however, if i delete a user which has books issued, the code breaks since there is no relationship of books mentioned in user such as user has_many books.",1.0,,1,77
"the github repo is not public, so can't comment.",1.0,,1,10
the github repo is not public so can't comment.,1.0,,1,10
"team has worked on some of the issues after review , but still some of the functionalities needed to be worked on. like librarian when click on view books, it says that not authorized and same for students also. instead we have option to go in university and then library then book and then select the book. if under view all books , we had book that would be really easy for end user to understand. not all the books belonging to library are been shown for checkout. book history functionality is not there. librarian approval by admin before librarian can actually log in is not there. so these small things team should have worked on too, rest of the things are good.",1.0,,1,121
"some of the edge cases are working well but in some cases like deleting an issued book crashes the application. i issued a book to a user and try to deleting that book, application was crashed that time and readme.md file does not contain much of details about edge cases.&nbsp;",1.0,,1,52
"one good thing is they are doing the admin's approval for both students and librarians. but the basic functionalities such as view books is not working for normal student user. also the list of librarian approval list is not showing up. there is the code for controller but there seems a problem with the routing or the helper paths. please verify.&nbsp; also the github repo and deployed repo seems different. so at the time of writing this review folowing flaws were observed. also, in first round, one ui suggestion was given. sign out button is shown if no one is logged in.",1.0,,1,104
"it is possible to register two librarians with same email id. when the admin approves their request, no measures taken to remove the second request.",1.0,,1,25
"most of the basic functionalities have not been implemented by this team. following are some of the functionalities which are not working: student a student can sign-up but cannot login. view books page cannot be accessed, it throws the following error: ""we are sorry, something went wrong"". no checkout, bookmark, hold request functionality can be tested because of ( ) your activity displays list of books checked out by student but cannot be validated because of ( ) student can access librarian page. librarian cannot check most of the functionalities because student cannot checkout/bookmark/hold books. new book cannot be created because of validation of publish, it says published cannot be blank even if it is not. librarians cannot log-out. library hash shown instead of library name. e.g # instead of hunt admin book cannot be created because of the same reason as in student( ) librarians cannot be created no back button on different pages making the ui difficult to navigate other functionalities of admin not implemented. ",1.0,,1,166
the team has commit history from october . i can see commits but no substantial code has been pushed between commits. most of the changes are done in the readme file. i recommend the team to implement at least one functionality or solve one bug for every commit.,1.0,,1,47
"the following functionalities have been found incosistant: admin multiple students with the same email can be added. ""unique validation"" for email is not set only presence is checked. back link on student checkout list is broken &nbsp;when i click on view hold request, it throws error: ""no page for url:...."" admin can see passwords of student and librarian while editing them librarian when a librarian clicks on view checkout history, it throws the error message: ""we are sorry, something went wrong"" book cannot be deleted. edit book link takes on new book page student can view admins/libraries page and hence inheriting those rights no books can be viewed from student section but are visible from admins log in. (i dont know why is this error) because of ( ), cannot test further features like checkout, bookmark, request, etc ",1.0,,1,138
"there is no distinction yet created between models, so i suggest do that as early as possible. still many functionalities are yet to be implemented for all models. more validations need to be performed. for e.g adding a book doesn't check if the isbn is unique. end to end flow of many functionalities remaining i.e checkout , bookmarks, return and hold for students.",1.0,,1,65
"the root page of user interface takes you to a page where all operations can be performed irrespective of it being a librarian, student or admin. in the sign up page, it does not specify whether one is signing up as an admin, librarian or student. every new sign up is redirected to the root page which is logically wrong considering different users and their rights/operations.&nbsp;",1.0,,1,68
" librarian also can be created with non-unique email book with non-unique isbn can be created multiple students with the same email can be added, this creates a problem while log in. only the first entry of the studdent can log in. ",1.0,,1,43
"most of the basic functionalities need to be implemented. i am documenting some of them here: librarian librarian can sign up. when i try to sign in, it says librarian is not yet approved(correctly as specified in the requirements). but the librarian is not reflected in the admin's approval list, so a new librarian can never login. i tried to check back in the librarian controller from github repo, that is when i found out that the librarian controller is empty. so none of the librarian functionalities can be tested. admin a book can be successfully created and updated but cannot be deleted. it throws the error: ""we are sorry something went wrong"" no way to see new librarians signed up. checkout history of the book cannot be seen. clicking on it throws the error: ""the change you wanted was rejected"" a new librarian cannot be added even from create user in admin's section no other functionalities are implemented student a student can successfully bookmark his books but cannot checkout or request. on clicking checkout or request, it throws error: ""the change you wanted was rejected"" ",1.0,,1,189
"&nbsp;( ) what will happen if the admin tries to delete book that is issued? i wasn't able to issue a book from student's log in, so cannot test this functionality ( ) what will happen if a student is deleted who had books issued and there are other students waiting for the same book? i wasn't able to issue a book from student's log in, so cannot test this functionality ( ) can admin account be deleted? no admin cannot be deleted ( ) what will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted? i wasn't able to successfully place hold request for&nbsp; a book from student's log in, so cannot test this functionality &nbsp;",1.0,,1,127
"a student can modify the number of books allowed based on the education level. student should not have this access.&nbsp; student is not able to access books page, there's only one page related to books i.e. all books page and this is not accessible librarian&nbsp;is not able to access books page, there's only one page related to books i.e. all books page and this is not accessible there's no page for librarian and admin&nbsp;to view over due books, hold requests, issued books which is like a main flow for the library management system.&nbsp; no librarian account approval flow in the system. librarian after sign up is able to login to the system.&nbsp; no email as there's no checkout functionality&nbsp; &nbsp;",1.0,,1,134
student can view libraries. but books page itself is not accessible to check more relationships,1.0,,1,15
missing functionalities: books: image is not there admin:&nbsp; view special book borrow request &nbsp;throwing error cannot manage student and librarian accounts cannot edit the profile of his/her account &nbsp; librarian: couldn't test hold request module as book cannot be checked out.&nbsp; student: no action to checkout books &nbsp;,1.0,,1,53
cannot test many edge cases as there's no way to checkout the books. ux is not good as it's really difficult to find actions.&nbsp; admin account cannot be deleted,1.0,,1,32
"login model and controllers seem to be tested properly. functionalities for registration, editing profile and logout working fine. but clicking on back button it redirects to login page so&nbsp;session is not handled",1.0,,1,34
"admin: there's no option to approve or decline the hold request librarian: no add or remove functionality of book, destroy for book is there but i think librarian should be allowed to destroy book from system, s/he can just remove it from the library student: there's no page to check the bookmark books, also bookmark functionality is not working,&nbsp; books: image is not being displayed",1.0,,1,69
"authentication has not been done properly. there's no session maintained. it's just based on redirections.&nbsp; most of the functionalities are written in user controllers where there should have been be different models, controllers for different modules.&nbsp;",1.0,,1,40
"edge cases are not handled, i could delete the student who has the checked out books.&nbsp; admin account cannot be deleted student can access all information by changing the url's and have all the admin rights. this is a big authorization flaw. there's no way to reset the password if a user has forgotton &nbsp;",1.0,,1,58
"most of the class&nbsp;methods like:&nbsp;self.createnewcheckoutentry?, self.updateavailablecounter? have a question mark in the end but they are not boolean return methods, in which case ? is generally used.",1.0,,1,32
"some of the observations are: if the user is book is deleted then that book is removed from the checked out list of the users. if the same book is available in different libraries then the book can be checkout only once, not sure why the user cannot checkout the book in the other library. multiple copies of the same book are being assigned to many users. not able to see the quantity of books available actually to see the count getting reduced or increased.so, even though when we delete the user, we will not know what is happening with the book. forgot password is not working for some reason. the page not working error is displayed. &nbsp;",1.0,,1,119
most of the test case code is auto generated. some of the test cases can be: -checking the navigation of prev page is working fine or not when back is clicked. -login/sigup for different users especially admin as it is not taking the credentials. -search functionality test. -edit profile of different users. &nbsp;,1.0,,1,54
i don't see any testing done as all the code is auto generated one.,1.0,,1,15
" ) the ui is a bit hard to navigate&nbsp; ) when the user-created is a&nbsp; librarian, i am not seeing the library option in the ui or at least the education level doesn't go away ) a student is not supposed to update his education level. ) i was not able to see any option to select a library when logged in as a librarian.&nbsp; ) /book_requests is not working. ) normal book borrows/bookmarks are working fine. ) admin is able to see the borrow option and bookmarks option, which was intended for students.",1.0,,1,93
" ) there were very few associations mentioned, i.e. librarian belongs to the library.&nbsp; ) associations between bookmarks &amp; books, library-books, book-history - books can also be specified.",1.0,,1,28
" ) because there is no association, even if the book is already checked out, it doesn't stop the admin from deleting the book and it still exists in user return management ) i was not able to check out some books even if they are not in special collection and have enough count and do belong to the library which is in the same university the student is in. ) reservations are not deleted, the is_returned status has not changed and is still false. ) no, but the password can be changed. &nbsp; &nbsp;",1.0,,1,91
"i was not able to find tests related to the book_mark model. although there were tests for bookmark_controller, they don't cover the edge cases of what happens if that particular book is deleted.",1.0,,1,34
 ) admin should be able to edit the user and librarian profile. ) was not able to create books when uploading images. ) hold request approval is not working. ) the librarian should only able to edit books in his library. ) the student was not able to bookmark the books. &nbsp;,1.0,,1,47
"yeah, they did commit changes in round . the project has significant improvement over the previous iteration at least from the first glance. although commit messages are not very clear",1.0,,1,29
" ) only one copy of a book can be created. ) when a book is checked out, the user can't be deleted - edge case satisfied, ) also, an issued book can't be deleted. - edge case satisfied &nbsp;",1.0,,1,36
"i did not find the ui very responsive. admin needs to sign up, when there should be only one pre-defined admin. i was able to access the books creation without logging in.",1.0,,1,33
"no it does not work. the team was supposed to complete the admin, librarian and student functionalities. however, all the three are still incomplete. the admin credentials provided in the readme file does not work. hence, i was not able to review admin functionalities. &nbsp; in the case of librarian, the following functionalities are missing - - the librarian sign up form only takes email and password and creates user profile of a student (i don't know why). the librarian has student fields - eg education level, max book allowance etc instead of library to which he is assigned.&nbsp; - librarian authorization by admin is not provided - he can not add / remove / modify books from library - he can not see list of checked out books and borrowing history - he can not view book hold requests and approve special book requests. &nbsp; it is the same thing with student module, he can not do anything besides edit profile, view books and libraries but he can add a new library which is not acceptable.",1.0,,1,170
"the project is incomplete, but it consist of basic relationships. it should have the following mapping - the library has many reservations.&nbsp;",1.0,,1,22
"as the project is not implemented completely and i can not do anything besides view and edit profile. hence, i can not check for edge cases.",1.0,,1,26
test cases are provides but the presented project does not provide those functionalities.,1.0,,1,13
the system works fine as expected. the author did not follow the following feedback / suggestions - -&nbsp;logout and homepage redirection links should be provided on each page&nbsp; (it is very hard to redirect to the home page in their project as we have to click on browser's back button for multiple times) &nbsp; the following issues are found in the presented project -&nbsp; - the university name does not appear in the show list of libraries page - the library name does not appear in the show list of libraries page - show librarian details does not work in the admin module - show student details does not work in the admin module - add student function in admin module does not have an educational level and university field - no option for admin to authorize the librarian - no option for student to add books/ bookmark books &nbsp;,1.0,,1,144
- the librarian authorization by admin has not been provided - the book special request approval does not work - the max book borrow limit of a student must be dependent on the educational level - view hold request does not work in admin module,1.0,,1,41
"the following functionalities fails : - the librarian should be only able to see the books assigned to his library - for the student signup, the education level is not a mandatory field thus, without filling up that field if the user signs up and issues book then issue book fails. &nbsp; &nbsp;( ) what will happen if a student is deleted who had books issued and there are other students waiting for the same book? the book gets deleted from everywhere without any consideration &nbsp; what will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted it is getting deleted from everywhere",1.0,,1,109
 . a librarian can add to/edit books&nbsp;of any other library. could not test any edge case related to issue/hold/return.,1.0,,1,23
a student can edit the libraries or the librarians. so no check is place over there. the code quality is very good. no functions are too long and there is no bad naming.,1.0,,1,33
i can access admin page using link of a home page for admin via librarian account. no feature to login using google/facebook account,1.0,,1,24
 . admin cant delete a issued book . not able to find the student which issued book in the user list in admin section . can't create a waitlist for a book if all books are issue this functionality is not implemented. . admin account can't be deleted . cant test th use case because newly created student are not appearing in user section in admin,1.0,,1,63
" . bookmark link shows 'the page doesn't work'. . admin can't approve librarian. the link shows 'the page&nbsp;can't be found'. . after admin&nbsp;create librarian, the credentials still can't be used to log in. . added a book as admin and signed in again as student. the book is not in 'view all books' &nbsp; others: googleoath doesn't work. students are not supposed to need admin's approval. all librarian related functions can't be tested since there's no available ways for me to log in as one. can't test checking out regular book either because a book can't be added.",1.0,,1,108
the only edge case mentioned here that i can test is whether or not an admin can delete his/her own account. the answer is no. other than that there's no way to test because of the incomplete functions that are mentioned in previous question.,1.0,,1,46
"the quantity for books can be less than available qty, which is not usual. other than that the models handle cascading delete well.",1.0,,1,23
there are no tests for models or controllers that are not automatically generated.,1.0,,1,13
i have seen their code. although their library-book relationship is correct. the book-bookmark relatioship and book-hold relationship relationship didn't accomplish. let alone the&nbsp;relationship between library and hold request belonging to it in model. i don't know what will happen to those hold request after admin delete the library or remove that book,1.0,,1,59
there is no unit test of a model or a controller. &nbsp;,1.0,,1,12
"because&nbsp;the view all book function is broken down, i cannot view or borrow book to test all the situations. but i think this broken is due to some one before me test some edge situations and caused the broken down.",1.0,,1,42
"the code is hard to read. there are many functions in some controllers with definitions, however, some models are just saved without verify the return value of save. if save failed, there may be no way to know it.",1.0,,1,39
"generally is clear and easy to understand, but some functions just too long which make them hard to understand, i.e. checkout, return. even though there are some definitions for the code it still takes some time to understand each part's function, maybe the code is not dry enough.",1.0,,1,50
"the student should only be able to check out book belongs to the library of his own school, this is not restricted. also the email notification function when a book is returned is still not working. and the admin cannot see the book request. however, most of the functions work and easy to use.",1.0,,1,54
the cover image for the book should be checked whether it is picture.&nbsp;,1.0,,1,14
"there have been some validation like unique email, but no unit test for model and controller as they mentioned in the readme.md",1.0,,1,23
"almost all of the modules are left uncompleted, so i don't think the team has thoroughly tested anything&nbsp;",1.0,,1,20
"most of the major problems were fixed, however, some of the functionalities are still not working as it was expected to be: . book search by date functionality have not been developed. . librarian was able to perform some functions before the admin's approval. . student is able to approve a librarian by visiting -&nbsp;http://iwolflib.herokuapp.com/librarianrequest &nbsp;",1.0,,1,59
"most of the features were taken care of , however, authorizations have not been properly dealt with. student is able to perform admin's and librarian's functions if they have the url with them. facebook or gmail logic has not been implemented",1.0,,1,42
 . admin can delete the books which are checked out by students.&nbsp; . student can perform the approval of librarian and editing other students. . student is not shown the option to edit their profile. . a single student can request the same book multiple times increase the count to n.,1.0,,1,48
"functionalities can be checked in the test case - like - all borrowed books can be again borrow, hence giving a negative number. this can be easily detected in the test casees. hence, testing can help in getting the model and controller function correctly.",1.0,,1,42
"i can create books without linking them to any library. i could not see any db relationship mapping table. books count keeps decreasing to negative. this seems bizarre. i could link same book to multiple libraries. also, for the count part, i could select values like - and - and it still submitted.",1.0,,1,51
 . the team did push their changes but mostly during the latter part of the project period.&nbsp;they could have started a little earlier. . most of the changes appear to be within a week from the deadline. but i can surely see continuous commits since then.,1.0,,1,46
" . none of the extra credit features were implemented. a student can create book by changing the url. (hint: try exploring the ""before_action""&nbsp; filters for implementing this.) . thorough testing is not provided. most of the code was the default that one gets using ""devise"" etc. . the signup integration with linkedin, facebook etc. can be done using rails omniauth. the team can try exploring that.",1.0,,1,64
"the user interface looks intuitive enough however i did find some things can be fixed. ) some of the pages, i couldn't find a back button. for example: when you click on&nbsp;show&nbsp;books for an individual book, i couldn't find an option to go back. i could always use the browser back button, but this won't be consistent with the application overall. ) the search functionality could be merged with the books view instead of having a separate module for it. ) also, the search functionality seems to be broken. i kept getting ""something went wrong"" error message. &nbsp;",1.0,,1,102
"most of the functionalities are working as expected but there are still some base errors. &nbsp; improvements: &gt; admin login is working fine now. &gt; ui looks much better than round and more intuitive. however, some of the things could have been improved like better error or warning messages or adding functionalities on page proportionate to the dimension of page. however, its still pretty good. &nbsp; errors: &gt; creating a book thew me error. &gt; still cant view any books as there doesn't seem to be any data and can't create a book either. incase of data input error while creating a book, it should have shown validation error message instead of the whole app bugging out.",1.0,,1,119
"github link seems to be incorrect as it gives a - page not found. hence, could not check this.",1.0,,1,18
" , , ) can't test as there's no book and can't create one. ) admin can't be deleted. &nbsp;",1.0,,1,19
"-the team did not handle the to n relationship between the library and books i.e. each book should belong to a library however such a mapping was not done and this can be inferred by observing that there is no library_id field in the books table. agreed that this field is not required when a librarian is viewing the books since he should be concerned about the books in his/her library, however, this mapping should be visible to admin and students while viewing the list of books available. - the -n relationship between a library and librarian is done correctly, where the admin, whilst creating a librarian account is assigning the librarian to a particular library. in this case, care was taken that a librarian belonged to a single library. similarly the -n relationship between a university and student was handled and displayed correctly. - the 'belongs to' constraint was not mentioned in any of the controllers as well.",1.0,,1,159
"-the admin could not login with the details mentioned in the readme file (just check whether the tuple still exists in the database or not) because i don't think there would be any problem whatsoever in the authentication process. either the tuple value has been changed i.e updated during running one of the test cases for the admin model and controller or it does not exist in the table at all. - secondly since i could not login as an admin, i could not test the edit profile part. - the code looks like it follows ruby on rails coding practices to a good extent only that you could have added comments just to make it much for comprehensible for a reviewer/ new user.",1.0,,1,124
"- i tried deleting the user having multiple hold request. the user got deleted however, the hold request is still reflected in the database and serves no purpose to the admin once the owner of the request is deleted. hence the user should also have been deleted. - also, the admin in the system, is able to delete the books issued by students which practically should not be possible until the user returns the book back. till then, the admin should&nbsp; not be able to do the deletion process.&nbsp;",1.0,,1,89
"-the code looks like it follows some ""good ruby on rails"" practices however, i would also recommend that you add some useful comments in your code which would not only make the code much more intuitive for the new user but also make it faster for you to add new features as and when required. - since some functionalities are common among users, using helper method would be an efficient way of reusing stuff rather than rewriting those lines of code. &nbsp;",1.0,,1,81
"the github link provided is private, so cannot comment if the changes were being pushed regularly.",1.0,,1,16
"the github link provided is private, so cannot comment if the controllers and/or models have been tested thoroughly.",1.0,,1,19
"no admin credentials provided, so cannot test admin features. the provided github link is private and thus cannot comment&nbsp;if the code follows good ruby on rails practises or not.",1.0,,1,31
" . the overdue fines for students are not show . no regex validation for password . overdue fine and borrow limit can set to negative for libraries . password when creating librarian is a normal text field (password can be seen when typing) . bookmarks field present&nbsp;when creating a librarian, no explanation provided .&nbsp;admin can edit librarian/student password . deleting a library with an associated librarian leads to error .&nbsp;very few validations in place when creating a book",1.0,,1,77
" . the published date can be entered as text, no validation for isbn. this is not yet fixed. . i could not find any way to approve librarians in the admin console. librarians can perform tasks without being approved. . librarian cannot&nbsp;change library once selected during profile creation. . deleting a library does not delete the associated librarian. . password is not being validated using regex. &nbsp; &nbsp;",1.0,,1,65
there does not seem to be -to-n association between library and librarians as deleting a library did not delete the associated librarian.,1.0,,1,23
" . deleting a student who has checked out books, does not issue the book to the next student in the hold queue",1.0,,1,21
it does not seem like testing has been done thoroughly for any model or controller. the test folder seems to have files with the auto generated test code.,1.0,,1,28
"yes, the system does the tasks as they are supposed to be done. i was not able to find a way to test the overdue books and student fines. also, the extra credit task seems to be implemented partially. when i tried to add a new book from the student account, it didn't allow me. but when i tried to edit the profile of one student from another student, i was able to do it.",1.0,,1,76
"throws error when i try to delete a book which is issued. ii was not able to find a button to delete students. also, approving librarian from admin needs to enter/reset librarian's password.&nbsp;it should not be like that.",1.0,,1,42
test cases are not written. testing is not done for any model.,1.0,,1,12
"ui is pretty simple and straight forward. easy to use. one suggestion is you should have a sign-up button on your home page. i guessed the url 'students/sign_up' and luckily that worked. later on, i noticed that there was a sign up option on the login page.",1.0,,1,49
"tests are not written for controllers or models. but they have used the scaffolds to create models and generate default test files. that is appreciatable. given some more time they had, they might have written tests in those files.",1.0,,1,39
"i couldn't test a lot of functionalities as i was unable to sign in using admin account. the email id and passowrd provided in the readme file didn't work for me. showed ""invalid email or password"" error. i signed up as a student and checked out a book. then i signed up as a librarian for the same library but i was not able to see that that book has been checked out. ""view checked out list"" showed an empty page.&nbsp;",1.0,,1,84
"admin login is not working. so, can't check a lot of things especially the corner cases. i found that the librarian is able to sign up and no authorization is required from the admin's side for the approval of the librarian. this was against the specifications.",1.0,,1,48
no tests have been written. models are yet to be tested.,1.0,,1,11
"yes the team has followed some standard practices of ruby on rails. but some things i found to be new such as the admins_controller.rb was not there and instead of that there were multiple files in the controllers/admins folder. i think that is due to some gem used for authentication. also, i feel that some more validations could have been added in the models.",1.0,,1,66
"the team has tried to do testing of one model i.e. student model. but they have not tested it thoroughly. they have written just test cases which i feel insufficient. also, they have not tested any controller. testing student model with student controller would have been a better choice. it is good that team has used the rspec testing framework for the tests.",1.0,,1,64
wasn't able to check the code as the github url is not working.,1.0,,1,14
" students can request for the same special book and the librarian can approve both of them. as a result, the count becomes - . otherwise the reservation system looks good. -books can be added to libraries with count - - can't view books in students , from the header link - ""you don't have permission to view this page"" - receive this error.-student can update university attributes, can change the max number of books that can be borrowed. - if the admin deletes a student with books reserved, the available count becomes negative. - students can delete pending reservations - this case is handled",1.0,,1,97
"i like the organization of the methods in the controllers, i find them intuitive to understand the function and relevant to the model they are placed in. some methods with similar tasks seem to be repeated, but the content seems to be different, so i can ignore that.",1.0,,1,48
can not access github repo. i am willing to review this part again if the repo is accessible.,1.0,,1,18
deleting books deletes all pending requests and checkout requests for the book. i am not able to check anything with regards to availability of books as book count is not visible (may be i don't know where to find them).,1.0,,1,41
"git repo seems to be private, i will check this review later to see if the repo has been made public. i am willing to review again, for this part.",1.0,,1,30
some of the methods are too long and too much use of if-else. methods could be further modularized.,1.0,,1,19
the applications crashes in all the above-mentioned test cases except for ( ) admin account deletion. i wasn't able to test additional edge cases because the application crashes again and again.,1.0,,1,31
"the ui is a bit dark and not much user-friendly. everything seems greyed out but you get used to it after a while. instead of providing separate buttons for logging different roles and dropdowns could have been more convenient. could not see an option for request list, bookmark list. missed field education_level while signing up as a student.",1.0,,1,59
"they have fixed the problems found in round . although following are some of the things which need to be fixed: - the librarian is able to perform operations on books of other libraries as well which should not be the case. - validation for book creation are not working properly, for instance if a particular book field is kept empty, there is no error associated with the same and page renders a text starting ""we are sorry some thing went wrong."" - &nbsp;""view all books"" for librarian does not label the book fields and hence it is difficult to understand whatever is displayed on the page. - &nbsp;there is no quantity attribute associated with the book. - in the book checkout section the book column displays the book's isbn where rendering book title could have been better. - book search could have been better if attribute filtering functionality was all added.",1.0,,1,148
neither there is any existence of mappings table nor there any relationships established between models.,1.0,,1,15
"&nbsp; the models are written in a clean and modular way. even the routes are written cleanly. although there are a few instances where coding is not clean. the sessions controller, book_counts_controller, book_requests_controller has a lot of code in method without using function calls and with too many nested blocks under the default methods that rails provide(ie update, destroy, delete, etc).",1.0,,1,62
"the following edge cases are failing deleting a user deletes all the pending books and bookmarks when the admin adds the librarian, the system still waits for admin to approve the librarian explicitly. deleting a book is allowed even when the books are issued to the students deleting library also deletes the books associated with it which are already issued by the user there is no option to associate book with library ",1.0,,1,72
"since the code repository is private, i cannot&nbsp;comment",1.0,,1,10
"since the code repository is private, i cannot view the testing environment&nbsp;",1.0,,1,13
"the interface of the working pages are intuitive and it is easy to use. also, the redirect url's are intuitive. however, since a couple of links were not operational like redirecting to the book search page or clicking the back button, implementing these functionalities is needed.",1.0,,1,47
"role-based authorization does not work when any user can create any other user. also, a student can view other students' info and librarians can view other librarians' information.&nbsp;",1.0,,1,30
"team did a great job by including all features in the app, but few functions are missing like creating new librarian as an admin; i was able to create one student and librarian with same credentials, but during login, i was logged in as librarian by default",1.0,,1,47
code is not at all modular. all the business logic has been dragged down to controller and not present in models. naming is done in good manner.&nbsp; found book search login in books#index method.code quality can definitely be improved.,1.0,,1,42
"student's checkout, request, return flow is broken, could not really test , , . readme has no mention of edge cases.",1.0,,1,19
cannot log in using admin username: @ .com &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; and password: ,1.0,,1,39
i cannot see the image of the book and i cannot upload the image of the book while creating the book.,1.0,,1,21
they did not write the business logic in the models.,1.0,,1,10
they did not implement the -to-n and n-to-n relationship and i cannot see any of them in each model.,1.0,,1,22
"i cannot see the commits and code pushes, i think there is a problem with your github please check.",1.0,,1,19
admin is unable to delete the student. admin is able to delete a book that has been issued. the admin account cannot be deleted but can be edited.,1.0,,1,28
the user interface is easy to understand.there is no description provided in the readme which makes it hard.,1.0,,1,19
the github page is not opening but i downloaded the readme file which is attached. the readme file is well described.,1.0,,1,21
 ) methods could have been modularized into separate methods that handle just one task. the method checkout could have been divided into sub-methods. ) i did not find any bad naming in the code. ) some major methods were quite lengthy such as the checkout&nbsp;and placehold. the method checkout has many nested if else blocks.,1.0,,1,55
"no, no such relationships have been specifically defined. i wasn't able to look for any -to-n relationships between library and book.",1.0,,1,23
" ) when the admin deletes a book that is already issued, the book is deleted but when the student who has issued this book tires to view the list of checked out books, they get a page you were looking for doesn't exist error. ) when a student is deleted who had books issued, the person is deleted but the entry still persists. ) admin account cannot be deleted. ) when an admin tries to delete a student who has multiple pending book requests, the reservations are not delete. ) when a student tries to bookmark a book, an entry is created in the bookmarked books list. but when a student tries to re-bookmark the book, a message should be displayed that this book has already been bookmarked, rather a redundant entry is made again in the table. )&nbsp;as a student, there was a book whose count was , so the student placed a book request for this book. as an admin, i changed the book's count to . then ideally, all the students in the queue for the book should be issued this book, but nothing happens, the book request still exists unless and until the student manually deletes it. &nbsp;",1.0,,1,199
github repository is private. there is no way for me to check this.,1.0,,1,13
" ) when admin deletes a book that is issued, a cascade delete option removes it from checked-out books as well as the student's list as well. ) since the reservations are also deleted, the next person in the list will be allotted the book. ) admin account cannot be deleted. ) when an admin deleted a student who has multiple pending book requests, the reservations are also deleted. ) one edge case i found was: as a librarian, i had added a special collection book, but then changed&nbsp;its special collection status to no, but the student was not directly able to checkout that book, the student still had to request for a book that is no longer a special collection book. the readme.md does not provide much information about the work flow or how it would handle the edge cases.",1.0,,1,140
ui is not very descriptive but not very confusing either. easy to use. readme.md is poorly written.,1.0,,1,18
the admin cannot edit his/her details. github account is private. unable to follow if&nbsp;good ruby and rails coding practices were followed or not.,1.0,,1,26
" ) when admin deletes a book that is issued, the book is released from the student and does not appear in the student's checkout page.&nbsp; ) when a student who had issued a book is deleted, the book is not issued to other students waiting for the same book. ) admin account cannot be deleted. ) if admin tries to delete a student who has multiple pending book requests, the reservations are also deleted. ) one edge case i found was that as an admin, i had updated the count of a book to . when a student tries to check this book out, s(he) is not able to because of count and then a book hold request is placed. but then i as an admin updated the count of the book back to , but the student on the wait list for the book was not automatically reallocated the book. any other student could easily check this book out even though there is a student already on the hold list for this book.",1.0,,1,170
"yes, majority of features were tested but more testing is required. corner cases are yet to be taken care of.",1.0,,1,20
"student was able to add a library, which should not have been allowed for extra credit. view books link and edit profile links&nbsp;were visible on the ui but clicking on them redirected to an error page.&nbsp;",1.0,,1,39
"- good overall code quality, methods named appropriately - few lengthy methods in controllers - less logic on models more on controllers",1.0,,1,19
"- yes the system handles relationships properly. there are mapping tables for many to many relationships -there are few extra tables which introduce redundancy, eg. the user's table along with students, librarian, admin tables",1.0,,1,34
"- as the website&nbsp;stopped functioning on deleting a student, who checked-out a book, the edge cases don't seem to be handled",1.0,,1,24
 admin login details not provided. unable to test admin functionalities ,1.0,,1,10
max no of days a book can be issued in a library can be changed to negative.&nbsp;&nbsp;,1.0,,1,19
" back button does not work on multiple pages. book checkout can be on the same page where books are shown ' can ask for all attributes at time of sign up. adding university,undergrad, library can be a bit confusing after sign up. ",1.0,,1,42
proper validation not done for book fields. eg. published column takes text entry.,1.0,,1,13
the listing on the users page is mixed up. rows of data appear in one.,1.0,,1,15
"good coding practices followed, except some places where multiple nested-if statements&nbsp;",1.0,,1,13
most of the validations are not working. secondary show pages are not working.,1.0,,1,13
"improvements in the ui can be made. much of the functionality is left yet to be deployed. sign in , sign up and log out pages are working. first commit on github was just hrs before deadline.",1.0,,1,36
not any of the model or controller was tested except signup.,1.0,,1,11
"on deleting the library, corresponding books of that library do not get deleted. also, librarians should get deleted. there is no library attached to show for librarian",1.0,,1,27
"the book hold request functionality is working. however, admin cannot view the list of book hold requests. there is a new section for special book borrow requests instead of having it as general book hold requests. the link in reference is not working as expected. the books section has clear guidelines for everyone as to which is a special book. the links are shown to admins and librarians(should not) for requesting as well although the task fails as it is unauthorized by action. librarians can exist without library.",1.0,,1,89
" no the code does not follows the standards. there are separate functions for individual tasks most of the time, however in the scenario of returning the book, all tasks of book return, creating entry in history table and checking for existing hold request and issuing the book if request exists is all done in the same fns yes, a lot of fns such as (for bookmark)mark_book, unmark_book are named in ways which take a little bit time to understand the book return method is really long and follows a complex flow structure",1.0,,1,93
"the team did use github for collaboration purposes, however they have not created any issues, nor do they have a project board. also the commits are quite sparse with the commit details vague and only major functionalities committed.",1.0,,1,38
the book to library relation is undefined the library to university relation is undefined,1.0,,1,14
 the book history for that book is deleted. &nbsp;student cannot be destroyed no matter what (regardless of book issue status) no admin account email should not be allowed to be changed (currently it does),1.0,,1,35
"no. the team has implemeneted tests for book requests model and controller, however they are not thorough and only check the success for ideal conditions.",1.0,,1,25
no extra credit features added &nbsp; some naming has not been done well. eg. tablename bookreqs and bookrequests code looks clean and small functions have been defined. one identifiable malpractice is that lot of controllers have been used. just writing a function in the books controller would have sufficed for many cases.,1.0,,1,52
"there is no mapping table for university-library as well as library-book. also, referencing between tables is not specified at certain places. tables bookmarks, histories, bookrequests and bookreqs is not referencing on book id or any unique value from table 'books' &nbsp;",1.0,,1,43
admin account cannot be deleted unable to carry out&nbsp;most tests because book checkout is not working readme contains no information about working of code or cases that are handled,1.0,,1,31
the interface is simple and easy to understand. redirection of links to respective pages can be improvised.,1.0,,1,17
not able to login as admin. git repo is not accessible hence&nbsp;it is difficult to determine if good coding practices have been followed. &nbsp;,1.0,,1,26
"no mapping tables present.&nbsp;no referencing done by foreign key on all other book transaction tables with book table. however, the db schema is such that the relationships can be handled by query.",1.0,,1,34
"admin account cannot be deleted if admin deletes a user who has books checked out, user gets destroyed. this should not be possible, considering that the user will have to return the book. &nbsp;",1.0,,1,34
no mapping table present. but referencing is such that the relationship can be handled by queries.,1.0,,1,16
"authors fixed most of the changes. still, there are some pages not loading, such as (view books from students), (students crud from admin), (view overdue books and fines from admin) etc.",1.0,,1,31
 . books cannot be issued. (books view page not opening from students). . same as above. . handled correctly. . same as .,1.0,,1,18
" . the user interface is very beautifuly designed. tab navigation is very handy and easy to use. . icons are used in place of the show, edit, delete. which makes gui very interactive. . each functionality is properly divided on each page. &nbsp; . the logout button should be placed distinctively . you can't see who is logged in, while&nbsp;using the application",1.0,,1,60
- there is a mapping of the book to the library in the books table but it uses string rather reference to the library table.,1.0,,1,24
some of the features were not working. i think the primary reason was relying too much on text-based mapping. example library was stored as text it lost mapping somewhere as most of the features stopped working on creating a new library or if i enter some random library name in the librarian profile. library is important and i think it deserves its own table with its unique ids and using that id to map everywhere. &nbsp; there are some test cases for the controller but they are scaffold generated. i didn't find any test cases in the model.,1.0,,1,100
i can change the password for the admin but cannot change&nbsp;his/her name.&nbsp; &nbsp; the code has a proper structure and they have maintained a similar structure to what is generated by scaffold at first.,1.0,,1,38
- admin account was not working but that i am guessing is not their fault. - cannot checkout book,1.0,,1,17
- there is a mapping done but uses string instead of references. it's a good&nbsp;practice to use references if a column value points to another table id.,1.0,,1,29
could not test some edge cases due to missing functionalities. the cases that could be tested are handled well. &nbsp;,1.0,,1,20
all the commits on github were done on oct . this generally is not a good practice. i would suggest you to push your changes to github right from the beginning of your project for ease of collaboration and version control.,1.0,,1,40
" ) when a new student is added by the admin, it takes the user to the student login screen. this is not only unnecessary but it also makes the user think they have logged out as the admin, which is not true (going a page back takes the user to the admin's homepage). ) admin should be allowed to modify librarian and student accounts without knowing their passwords. ) librarian should be allowed to add/delete books to their library. ) librarian should be allowed to edit book information. ) librarian is unable to approve a book hold request.",1.0,,1,95
 ) book should have a -to-n relationship with book requests. ) librarian should have an n-to- relationship with library and university. ) library should have an n-to- relationship with university and an n-to- relationship with librarians.,1.0,,1,37
 ) admin should not be allowed to delete a book that is checked out. ) admin should not be allowed to delete students who had books issued that other people are waiting for.,1.0,,1,31
"yeah, they have a good test on admin functions. but there are still some bug as i said before.",1.0,,1,19
"the whole program is perfect, but i think the interface is one of few short coming. at the homepage, user must choose admin/student/librarian, which i think they should login at same place and tell by database.&nbsp; &nbsp; there are some bug i meet: .login as admin -- view book -- when attack back at bottom it jump to page not suppose to. &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; view librarian -- edit -- function didn't work",1.0,,1,84
"seems repo is private, i didn't get into code.",1.0,,1,10
most of the issues in round have been corrected. admin does not have the option to delete a library. books are global and not library-specific. admin cannot view all books.,1.0,,1,31
the system does not handle -n &amp; n-n relationships correctly. there are no library-specific books. all books are the same over all the libraries,1.0,,1,26
testing has not been implemented for any of the models or controllers yet. &nbsp; suggestion: &nbsp;implement testing for any one model and one controller.,1.0,,1,25
"apart from the auto-generated test cases, the author has not added any other tests.any controller or model has not been tested (apart from the auto-generated test cases). the tests (apart from the auto-generated test cases) are not very&nbsp;meaningful and do not have the potential to fail.",1.0,,1,52
the ui is easy to use and navigate through. the readme is also informative with all functionalities mentioned for each user type. suggestions: . add screenshots to make the readme more intuitive about navigating through the app.,1.0,,1,36
we cannot delete students.otherwise hey have handled all functionality well.,1.0,,1,11
applications break if we delete book which is checked out.cannot delete student.,1.0,,1,13
its alright but back button and logout button are too close so by mistake you might logout instead of going back.,1.0,,1,21
models are thin and controllers are fat kind of opposite what was suggested by prof,1.0,,1,15
"edge case admin tries the checked out books gets deleted, edge case admin can easily delete student who checked out book. no mention of how to handle edge cases.",1.0,,1,29
the ui is in initiutive and color combination is also good which makes the website lively but the sing in buttons are jumbled together which does not look good.,1.0,,1,29
"&nbsp;i tried putting - as an isbn number when creating a book and afterwards i couldn't see any books. admin cannot be deleted. students can't checkout, request, or bookmark books.",1.0,,1,32
a book can belong to a student and a librarian,1.0,,1,10
"when i tried to edit the librarian it worked when i submitted it and it redirected me to the show page. but when i clicked on the back button to get back to the home page of librarian it did not work. librarian's account created successfully and it asked for the admin's permission first. so, i logged in using the admin's account and tried to authorize the librarian. so when i clicked on the edit button it redirected me to page where i can edit the fields. the only thing i wanted to do was to approve the librarian but it asked for the password too. being an admin how am i supposed to know the password of the librarian. the only way i can proceed further was by changing the password. in the first submission, there was a problem where the librarian gets to approve itself. they handled this issue in the second submission. &nbsp;",1.0,,1,159
"there are some controllers present which i think is not necessary: confirmations_controller, passwords_controller, registrations_controller, sessions_controller, unlocks_controller. all of these are present for admin, student, and librarians. i can not find out the logical purpose behind them. there is one different model for the special_book. i think that is not necessary since we can get the same thing by just adding one boolean attribute in the books model. &nbsp;",1.0,,1,68
"i can see very few commits after the first submission or description of the commits are not self-describing. as i can see, there are some commits present after the submission deadline. most of them are in readme file but and some of them are about some core functionalities.",1.0,,1,49
yes they did regularly pushed the commits.&nbsp; but the description of the commit is not understandable.,1.0,,1,17
"admin is not able to delete the book in this system. it shows error. there is no way to change the university of the student in admin or librarian. if the admin tries to delete the book that is issued to some students, system stops working. it shows error. admin account can not be deleted from the system. admin is not able to delete student accounts.",1.0,,1,66
"yes, they have thoroughly tested most of the controller no, they have not tested the models.",1.0,,1,16
whatever present in ui as of now is good and easy to use. but there are some issues with the redirection. some of them are not working correctly.,1.0,,1,28
testing was not done using rails specifications for testing.&nbsp; i can not find any test cases other than autogenerated using scaffold command.,1.0,,1,23
"the project is able to perform some functions well, but there are some problem in the system. for example, the librarians list are not able to show and the back bottom will lead to a problematic page.&nbsp;",1.0,,1,38
"with the features this application contains, most link are easily to find. although some of the link&nbsp;are unusable, such as create new&nbsp;student account, the usable link are all clear and understandable.",1.0,,1,35
"the github for this application is not open for public, so i am not able to see any code of this application. besides, i am not able to login with the admin account on the home page. it's clear for me to see it without github page open though.",1.0,,1,50
"there are some problems. for example, as an admin, i can not edit and destroy library. also, as i mentioned before, i can still see the data string when i click 'book'. at last, it still doesn't have some&nbsp; link to go back to the index page.&nbsp;",1.0,,1,50
"it's readable but not so clean. for example, in student_controller.rb, def history_request is too long. you can do so much better.",1.0,,1,23
"no, it does not. i can't see any ""has_many"" in their model.",1.0,,1,13
"not so intuitive, but still can use.the link of login as an admin is too small to find. please improve that.",1.0,,1,22
"no, there is no relationship between book, library, student and admin. i can not see any has_many or belongs_to relationship in modules.",1.0,,1,22
"when login as admin, there is still the links to login as students and librarian, i thingk you can remove that.",1.0,,1,21
"admin should be able to view lib, librarian, students, and books. librarians should be able to view books. students function should be implemented, nearly every button in student page is not functioning correctly, please check heroku",1.0,,1,36
it seems the git repo is not public to everyone so we can't access to the read,1.0,,1,18
"test is not thoroughly, students have many thing need to take care of",1.0,,1,13
"as an admin, i failed to view all books, librarians and some other features. when signing up, the password is shown explicitly and without confirmation. totally, many functionalities have some faults. if more time and patience are devoted, there will be a great improvement...",1.0,,1,44
an interface that the admin account can be deleted is given and the admin account can be deleted.,1.0,,1,18
"the readme file gives good instruction on how to use the application. the website is user-friendly, but i wish there can be more ""back"" link.&nbsp;",1.0,,1,27
"the team did make great progress in this week. however, not all functions works correctly.the search function didn't work. the cover of the book can't be displayed correctly sometimes. students have no attributes to decide their education level. the checkout request of non-special books is rejected,as well as the bookmark request. the book history can't be accessed.&nbsp; since i can't check out books, i can't test all the&nbsp; functions related to it.",1.0,,1,82
"they defines many -to-n relationships well in their models. but i have not found the relationship between books and libraries. in this design, we have to make sure that books can't be created before libraries.",1.0,,1,37
"the team took some edge cases into consideration. for example, the admin can't be deleted. however, most of the edge cases i can think of are related to checkout functions. so i can't test these cases.",1.0,,1,38
"( )&nbsp;what will happen if the admin tries to delete book that is issued?: page went wrong. ( )&nbsp;what will happen if a student is deleted who had books issued and there are other students waiting for the same book?: page went wrong ( )&nbsp;can admin account be deleted? no ( )&nbsp;what will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted? student can not be deleted. ( ) the book number can be negative.&nbsp;",1.0,,1,84
"they haven't write rspec test. they have tested the librariancontroller. however, they haven't tested the librarian model.",1.0,,1,19
"database is empty update student not working librarian update not working ""view hold requests"" from admin: page could not be found libraries are not showing the list of books - option could have been added show books page stops working if all the books from a particular library are deleted by deleting the library itself even if new books are added students can have same e-mail id which is not possible view libraries under student not showing libraries although from admin it can be seen that there are libraries view books also not working inspite of the fact that a book has been added just prior to that by the admin to the lone library &nbsp;",1.0,,1,116
"not able to create new libraries. shows a validation error, even though the values have been entered. shows that the fines should be numeric when it is numeric. not able to see newly created student and librarian accounts as well.",1.0,,1,40
"pros: very clean ui and buttons look intuitive. functionalities are working as described. nice thinking for adding a tasks tab for admin. cons: isbn should be number, published date should be a date. available quantity should default to some value when book is newly created.",1.0,,1,45
features not working are mentioned in the readme which is good for testing. library deletion is allowed which automatically deletes all dependents without any prompt.,1.0,,1,25
email edit should not be allowed. back button flow does not work in some pages.,1.0,,1,15
"before, i was unable to even log in. since then, many problems have been fixed. the following features are not working: .&nbsp;view all books . librarian can view all books . cover photo can be uploaded for a book . validations in place for each book attribute . students cannot add books (pretty sure they just disabled the button to submit the form, but this can be done other ways) &nbsp; &nbsp; because of the above, i am unable to test: . book checkout . overdue fees . librarian adding books to library . librarian editing book information . librarian removing book from library . librarian viewing all students who have checked out books . librarian viewing student info who have books overdue . librarian approving hold requests &nbsp; &nbsp;",1.0,,1,119
"one problem: in the student model and book model, the code `has_many :book_issue_history` should be instead `has_many :book_issue_histories`. in the library model, the code `has_many :librarian` should be instead `has_many :lirarians`.",1.0,,1,31
"( ) books can be successfully deleted, and the checkout history won't show up in the view page of admin or the related student.&nbsp; ( ) when trying to do so, the system crashed, and no actions took place. ( ) there are no buttons to delete admin accounts, however, in the controller of admin, there is a destroy method. ( ) the system crashed as well, and nothing took place. ( ) i noticed that there is a cancel account option of student, thus i tried to cancel a student account with books checked out but not returned. and i succeeded. then i logged in as admin and view the list of students with checkout histories, and the record disappeared. and i logged in as another student and view the list of all books, then the quantity remains [max- ]. the book along with its checkout histories simply vanished. ( )&nbsp;when&nbsp;any student tries to borrow&nbsp;the book with isbn "" .asm.xrz""&nbsp;which is currently available, the system crashed. i don't know why.",1.0,,1,169
"some of the bugs after review have been fixed but some are still buggy. the following functionalities are still buggy: . admin isn't able to borrow books like a student can. . book checkout for some books redirects to a blank page (probably non special collection books) . books index page doesn't display if the book is a special collection book . unable to delete bookmarks . book validations are missing, able to add books with digit isbns . admin isn't able to approve special collection requests. . admin is unable to view overdue fines of students . when admin tries to create a new user, a button for login shows up which is unexpected . library attributes aren't actually updated from edit library page. . admin is unable to destroy users (redirected to blank page) and user still exists later",1.0,,1,135
the ui is a little difficult to navigate. for eg: on books page to view details of the book we have to click on the title which is not intuitive,1.0,,1,30
the admin student and librarian table can be merged into one table. a librarian belongs to library and is deleted once a library is deleted. but the librarian should not be deleted once a library is destroyed. he/she should be able to change his library.,1.0,,1,46
( ) methods maily manage one task only. however there are lots of commented lines in the controllers. ( ) a controller named 'paged_ ' doesn't seem to be meaningful. ( ) nothing besides a lot of commented lines.,1.0,,1,33
"only user and hold request model have relationships set properly. library doesn't have relationship with books. this missing mapping will lead to unintended behavior when, for examply, a libray is deleted.",1.0,,1,32
there is no code to review the test cases. missing validations suggest that code has not yet been tested thoroghly.,1.0,,1,20
 no validations when creating library: accepts negative overdue fines. new librarian not listed in approval list.&nbsp; creating a user is not intuitive nor easy from the admin page. new books don't show in the index view of books. list of books is not complete. search book feauture doesn't work: error view. student cannot shoose level. cannot checkout books! student cannot visualize hold requests. ,1.0,,1,66
 code quality looks ok. methods are simple and short. didn't use rspec framework. ,1.0,,1,14
"some releationships have been established properly, however book class, for example, doesn't have relation to library.",1.0,,1,17
" checkout feauture not working. can't test this case. checkout feauture not working. can't test this case. checkout feauture not working. can't test this case. no, admin cannot be deleted. ",1.0,,1,32
"at least, validation fields have note been tested. they accept various invalid values.",1.0,,1,13
 seems like not enoguh test where performed as some features were not working by the time of this review. email duplication is not allowed. this feature was tested. &nbsp;,1.0,,1,29
"though there are couple of relationships included,many relationships are missing.for example,librarian has to belong to a library,which is not mentioned",1.0,,1,24
"there are three separate logins according to the roles,but admin is given a sign up option in the ui",1.0,,1,20
"have tried fixing the issues from round one. but,when the admin adds books,the published date is considered as a string,which could have been handled properly,as published date is required in the search as well.also,the special borrow request view page throws an error in admin's&nbsp;",1.0,,1,52
"few edge cases pass,for example admin account cannot be deleted,can only be edited . but, few others don't. like,when a student that has issued books is tried deleting,it throws an error",1.0,,1,35
"code follows good ruby and rails coding practices,but the naming could have been done better",1.0,,1,16
"though the team has tried to include few relationships,they have missed handling the relationships at a lot other instances like in book,they have not mentioned ""belongs_to:library"" and many such",1.0,,1,32
"the view pages,for example the view books,view student checkout list is throwing errors when tried opening when logged in as an admin.the search functionality is not working properly.error on the 'back' link at many instances.ex:after adding a librarian",1.0,,1,44
"as the view pages are not working,the changes are difficult to capture.for example,the view books,view hold pages,view student checkout list are throwing a error already.so,can't check for the changes after a student is deleted.",1.0,,1,42
"there are sign up,login and signout set up,however can get to the application by clicking on home button,without a login",1.0,,1,23
though there are rspec tests for a controller and a model.these are not thoroughly tested in the controller.not all the methods are tested.,1.0,,1,25
"there should be link to go back instead of just log out and homepage. i don't see a option to enter number of copies while creating a book. it doesn't show when viewing the book. assuming there's only copy of the book, then admin is able to approve all the requests for the same book. also cannot place a book on hold. readme doesn't provide information to check this.",1.0,,1,73
ui needs to be redesigned links turn black upon hovering.&nbsp; also some of the links are jumbled up together.,1.0,,1,20
"student cannot check out book. student is able to create new books with existing isbn. librarian able to create new/view/edit/destroy other&nbsp; librarians and itself. cannot add books to library. cannot see the requests, history of books.",1.0,,1,40
admin credentials not provided. cannot check any admin functionalities. also no option on homepage to login/sign up as admin.,1.0,,1,20
when adding a book the fine tab sends an error that fine cannot be empty though i entered it which doesn't let me add a book.,1.0,,1,27
" / : i don't know. the checkout list redirects me to a page not found. : the admin can be over-edited but not deleted. the functionality seems to be there in the controllers, but i can't figure out any urls to make it happen. : can't view books so can't check them out. i'm rating this a since i can't check basically any edge-cases.",1.0,,1,68
"the code is written in a clean and readable way, but some methods are too long, such as index method in&nbsp;checked_outs_controller.rb.",1.0,,1,24
 . admin cannot view all books. . admin cannot view all librarians.. .librarian cannot view and edit the library he belongs to. . librarian can add books to libraries he does not belongs to. . librarian can edit book info. which doer not belongs to his library. . admin cannot approve librarian requests. &nbsp; . students cannot borrow and bookmark books.,1.0,,1,55
there are just some tests that are automatically generated. it would be better if they write some tests about controller and model to test some validations and actions.,1.0,,1,28
"there's no test plan section, thought there's a video walk through of what it looks like after the bug fix",1.0,,1,22
it doesn't have comments inline but the variables are pretty self explanatory,1.0,,1,13
"yes, the writeup explains the details about what team has been working on. i don't think they have mentioned about design pattern. other things are pretty clear. the only thing missing would be test case for&nbsp;app/controllers/tree_display_controller.rb",1.0,,1,42
"i couldn't find any test plan. moreover, i was able to see that some test failed on pull request.",1.0,,1,20
"the authors have not included about any unit test, functional test or automated test in the plan. however i believe that the user will include those in next round.",1.0,,1,29
"i wan't able to find any test plan related to rspec, unit test, functional test or integration. as it's early in the development, i believe team will work on this later.",1.0,,1,33
"the team has done&nbsp;some nice work with the writeup. they have included all the important aspects like introduction, implementation, code snapshots ant test. however i feel that code snapshots needs more description and test and test plan should be under same heading, something like ""rspec test"" and ""manual test"".",1.0,,1,51
"the team did add new test cases to spec/helpers/import_topics_helper_spec.rb and spec/models/team_spec.rb. in import_helpers_spec.rb, the team added a test to 'define attributes' which confirms the value of attributes and checks if the trimming of ascii characters with whitespace returns a non-empty string. in spec/models/team_spec.rb, the team added tests that checks if the expected output is 'new team name' and 'no name' when the 'handle_dups' option is 'rename' and 'rename_existing', respectively. &nbsp; &nbsp; although new tests were written, the test coverage decreases and it decreased by . % to . %.",1.0,,1,96
ui could not be tested as the deployment link does not load.,1.0,,1,12
"all the new if-else conditional blocks are commented nicely, which help in understanding the flow in an even better way. the rest of the changes, although minor should also be commented to help the reader understand the purpose of the changes.",1.0,,1,42
"the last commit of the pull request doesn't build pass. that might because they pull request from master to master. they finished their function on beta branch, so they should push the beta branch to beta branch.&nbsp; after i checked the code on beta branch, i think the&nbsp;instructor_id method should rename to get_instructor_id for fear&nbsp;ambiguity.&nbsp;",1.0,,1,62
"have seen the youtube vedio, function works perfectly. but no wiki page find upon.",1.0,,1,14
"they have solved some bugs like ""checkbox question not showing"" but did not put any comments that can help understand the changes done to solve the issue. they even converted haml to erb file ""team_users_popup.html"" but did not put any comments or why it was needed.",1.0,,1,47
they did not added any test cases in this submission and coverage did not increase. i understand this was ui change functionality but still they could have compared the flow that does both views of score report and review report are rendering from same template.,1.0,,1,45
"overall, the write up includes all the necessary sections which are easy to follow. only, there are few things which are hard to follow in ""purpose and scope"" section:- it has one line ""score report and review report use different code so ui is non-orthogonal"". now they have given overview of what ""review report"" is in that section but ""score report"" term has no background in that section. the section at the end discuss about scope of their work that their ""functionality will help user to search through all reviews for specific problem they are focusing on"". it does not mention how this can be achieved by their functionality. ",1.0,,1,110
"i did not find any test cases related to the test plan. it may be because all their changes are related to ui. so they need to include tests that compare view from student login's view ""review view"" and review report ""review view""",1.0,,1,44
"no, it still needs improvements as they have not handled exceptions well and also they have put all their code changes in the controller which is not recommended to do.",1.0,,1,30
"the features work well but the build did not pass in travis ci, so not sure if the code is ready to be deployed onto the production server.",1.0,,1,28
"no, the build did not pass in travis ci. there are failed test cases in tag_prompt_spec.rb, answer_tag_spec.rb.",1.0,,1,19
"yes! however the write up misses to include the location of code, nor is the code pasted in the wiki page. &nbsp;",1.0,,1,22
"comments added in assignment helper module , describe the functionalities implemented.&nbsp; but the code in the view file, has no comments added to it.",1.0,,1,24
"in&nbsp; module helper, # ta_ids = # ta_ids &lt;&lt; instructor.get_my_tas(session[:user].id) # ta_ids.flatten! # ta_ids.each do |ta_id| # ta = ta.find(ta_id) # ta.ta_mappings.each {|mapping| courses &lt;&lt; course.find(mapping.course_id) } # end the unused and modified code like the one above should be removed &nbsp;",1.0,,1,48
the team hasn't added any test cases.&nbsp; &nbsp;,1.0,,1,10
yes the given pull requests have passed on travis ci. but the test coverage has reduced,1.0,,1,16
"unused lines can be removed , not commented out # ta_ids = # ta_ids &lt;&lt; instructor.get_my_tas(session[:user].id) # ta_ids.flatten! # ta_ids.each do |ta_id| # ta = ta.find(ta_id) # ta.ta_mappings.each {|mapping| courses &lt;&lt; course.find(mapping.course_id) } # end &nbsp;",1.0,,1,40
"- even though most test_cases are easy to comprehend, some comments could be added to specify the function tested by each method - also the test_method names can be more descriptive, elaborating on what the particular operation is performed on -&nbsp;",1.0,,1,39
"the test cases cover most edge cases, however this method handles duplicated edge cases &nbsp; context 'and due_at value not nil' do &nbsp; &nbsp; &nbsp; ",1.0,,1,25
"the write up can be more concise, the code snippets can be taken from git diff",1.0,,1,16
the link for pull request hasn't been submitted. the code specified in wiki page has used proper variable names&nbsp; which are compreshensible. however the min_left variable can be changed to min_time_left to indicate that the measure is time.,1.0,,1,40
didn't find enough comments for some method. adding more comments will help other people better understand the functionality of methods.,1.0,,1,21
"while the wiki page mentions the solutions, it does not mention the reasons behind these particular solutions.",1.0,,1,17
most of the code is not commented. can be improved.,1.0,,1,10
very good job on the documentation. it covers most of the aspects of the project. would love to see the test plan and edge cases included.,1.0,,1,26
"the writeup is descriptive of what issues were asked for and what is the resolution. it however, does not define the implementation technique, wherever applicable.",1.0,,1,25
"the build passed however the test coverage reduced by % in the final build created by travis ci.the variable names, method names have a lot of inconsistencies and should be changed before merging it to the beta branch. for instance, the methods moved to the accountrequesthandler.rb need refactoring in terms of their names. likewise there are many methods that need name refactoring (mentioned in the additional comments) like created_approved_user, created_requested_user_record etc.",1.0,,1,72
"&nbsp;the test plan shows more results than implementation ad design of the tests, should include them before showing the results. it mentions that changes were made to the existing rspec tests but doesn't mention any examples of such test cases and i see only one file changed in the repository so how and where are the test cases changed.",1.0,,1,61
no comments are added to the code. the comments are added especially for the unsafe block that they have included.,1.0,,1,20
"the pull request is failing and the test coverage has not increased.within the code, the naming convention seems fine. although they have written code in unsafe block and allowed unsafe code inside the implemented struct. they have not added any comments as to why this was implemented. allowing unsafe code will skip any all the checks that would normally happen and allow you to directly access the memory, thus, making the code poor. had their been a reasoning of why that was implemented, it would have been better as a reviewer to judge there code, but without enough information in wiki and in code comments, it is difficult to apprehend poor code decision choice.",1.0,,1,115
"can't test manually, application is not hosted on the server. no link provided.",1.0,,1,14
"there are not comments for each method, however,&nbsp;many methods have inline documentation.&nbsp;a few methods had no comments, but great naming, such as&nbsp;'create_radio'. the comments have very good descriptions.",1.0,,1,34
"there is not a test plan section, but there is a ""testing"" section. this section shows that all the rspec and travis tests passed. however, it doesn't really show any of the code that was changed in this section.&nbsp;changes to the rspec code were shown in another section. i think it would be good to move it to this section. since the authors just restricted the role to be a student for testing, they don't need to consider more edge cases.",1.0,,1,85
"the build passes for the pull request, but the coverage has gone down - . %. most names have been improved. this group did a good job of removing redundant information in method naming. i like how they made helper methods such as 'update_checkbox'. this method is named well, and helps me understand the code better. before, there was more redundant, harder to read calls.",1.0,,1,62
"the deployment link was down, so i could not&nbsp;test the application. in the video, the project seems to work as intended. the project is a refactoring project, and nothing appears broken in the video.",1.0,,1,36
"in the background, it would be good to explain what an assignment policy exactly is. i can understand that its related to the number of reviews a student can submit, but i don't know what exactly it is. this makes it harder to understand the concepts around the functionality. it is somewhat unclear when initially reading it if the number of reviews a student can be assigned means how many reviews a student can do for another student, or how many a student can receive from others. it would be good to make the language of the document more specific.&nbsp;",1.0,,1,102
"they add test cases for the code they changed. the coverage decreased. there's no new added tests, so the coverage remains same as round .",1.0,,1,25
"they have implemented the functionality well, however they need to pass travis ci before being merged into production version.",1.0,,1,19
"in&nbsp;_submitted_files.html.erb file, i am confused by variable&nbsp;oinput and&nbsp;sfilename. what does ""o"" and ""s"" mean in this case? maybe you could explain it more clearly.",1.0,,1,32
"the code is not ready to be deployed on the server because the travis tests and checks are failing. since i could not properly test the st feature, i am not entirely convinced that that feature works. in any case, the team has done&nbsp;quite a lot of work so they would not have&nbsp;to redo the work. the team has brought the project to a level from where another team can continue&nbsp;working on.",1.0,,1,78
"the authors have, for the most part, followed proper nomenclature in code that binds with the expertiza code. however, in the&nbsp;js function that they have added in the frontend, the variable names are not very intuitive so it is a bit&nbsp;hard to follow how the code control flows.",1.0,,1,52
"the authors have not written comments where required. most of their code can be understood by just looking at the functions&nbsp;however database&nbsp;queries and some expertiza specific functions which are used could have their behaviour better explained with comments. but since variable names and arrays are properly named, the gist of the code can be inferred to some extent.",1.0,,1,62
the code as i said earlier is very nicely written. they&nbsp;have separated the code behaviour into different functions which are good to see. they definitely need to add more comments because some database-related code and array indexing cannot be understood just from the code alone.,1.0,,1,48
the team have&nbsp;not written a test plan section in the writeup so it cannot be said whether they have thought about a test plan or not.,1.0,,1,28
"the writeup is good. they have&nbsp;nicely broken the original issue to sub-issues and have approached each one separately. they have mentioned what kind of changes were required to solve which issue. the test plan also shows proper steps on how to test the system which makes it easy to test for the user. however, i did feel that if the team had explained the functions and the new code very briefly, it would have made the experience better. also, screenshots, if attached, of the results of the test plan would have made it easy for reviewers to test the code. but the team have greatly improved their writeup than the previous time.",1.0,,1,115
"the code is very nicely written. it is clean&nbsp;and modularized. the only issue is that some more comments would have been helpful in understanding the&nbsp;function of lines in the code in a better&nbsp;manner. the code doesn't comprise of long and complicated functions.&nbsp;for the most part, naming&nbsp;has also done properly except for or variables. i would say the code&nbsp;is dry. the code was already great&nbsp;in the st submission and the team has just built on that.",1.0,,1,90
"the new user email feature is not working for me. i followed the steps as mentioned in the wiki however i didn't get any mail. when i try to login using expertiza development user, it does not allow me to log in. the other features work fine.",1.0,,1,48
the authors have commented any of the code they added. this makes it harder to understand&nbsp;what the function or that block&nbsp;of code&nbsp;does.,1.0,,1,28
the team&nbsp;has already written code to solve&nbsp;the initial steps partially. this code has&nbsp;been tested and already merged into servo so it will definitely be correct. the new code that they are working on is currently not working&nbsp;properly since all checks and tests are&nbsp;failing.,1.0,,1,53
no team has not commented the code so it s hard to follow the process they have decoded to solve the bug and how it is working,1.0,,1,27
"methods are not long and they are dry, comments are needed in the methods, otherwose its hard to follow.&nbsp;",1.0,,1,20
"team has done very good explanation in write up in in telling about the bug, they also gave information about how to reproduce the bug and after their change bug was fixed, team could have done better explanation about the approach to solve the bug.&nbsp;",1.0,,1,46
"code looks good, code is dry, they have found out good way to solve the problem, comments can be improved on the code. rest all is good.",1.0,,1,27
"wiki page can be improved.,it would be nice if they can give project description and problem statement before sharing the test plan. indentation can be improved, team has used etc etc word alot that can be improved. they have give all teh details in references, team members and mentor that i like.&nbsp;",1.0,,1,54
"yes, they have created comprehensive test cases. almost rspec case for the new code written is created. but the overall coverage decreased slightly.",1.0,,1,23
the code they have written is clean and includes comments as well. but the only concern is build getting failed.,1.0,,1,20
the build didn't pass but it shows that their code doesn't have conflicts to merge. around errors are found in one of check which relates to the tag report.,1.0,,1,31
the test plan is not mentioned in the write up. and no results have been shown in the write up.,1.0,,1,20
"there aren't any new methods in this project. also the work would have been be very less as few requirements of the project itself has not been considered, may be team could have added comments for the already existing methods.&nbsp;",1.0,,1,42
"writeup explain why the changes has been done in a particular way. there are only lines and i think it has been explained properly in the wiki doc. since it's a bug fix, design principles were already followed so it's difficult to&nbsp;comment on the design pattern for this particular change.&nbsp; &nbsp; also the wiki doc or problem statement in it doesn't mention the requirement of writing the&nbsp;automated test cases which i think is one of the requirement when i checked in this sheet. https://docs.google.com/document/d/ v pyxo_qmc xzjcl csjxoxnofgh lzonexvvu snae/edit#heading=h.j j gyh phok",1.0,,1,110
"bug is fixed and it's&nbsp;working. i couldn't think of any edge case here, so looks good.&nbsp; automated test cases is also one of the requirement for the project and no work has been done upon it. please write automated test cases for this.&nbsp;",1.0,,1,49
writeup is fairly decent for the bug but writing test cases was one of the project requirement as there's not enough development work in this project. so team should have spent enough time on writing test cases and plan.&nbsp;,1.0,,1,41
"there's no test plan and coverage has been decreased by % which is big difference and should be handled. few methods were modified so existing cases can be used with some minor changes, also for the new methods, new test cases should be in place.&nbsp;",1.0,,1,46
"not exactly. there's no explanation for why something has been done in a specific way. but i understood why it has been done this way and that seems to be apposite to me. not everyone can understand with this limited text in the wiki, so describe why the changes has been done in a specific way and how that's the best possible way of doing it.&nbsp;",1.0,,1,69
"none of the test cases has been written, also there's no test plan in the wiki. i suggest that you guys should write test cases because in production applications, even a small piece of wrong code can break the application and it can get worse for the business.&nbsp;",1.0,,1,50
"it does explain that what needs to be fixed but doesn't mention that why it is important for the application. just explain that why these features are required in expertiza so that one can understand what is the exact use case.&nbsp; introduction is just one liner which can be ambiguous to understand, so just describe in - lines about the functionalities.&nbsp;",1.0,,1,63
"one issue is completely ui, other is&nbsp;concerning job scheduling with&nbsp;sidekiq. they have modified and existing method for the test scope, and mostly the methods are private so no tests required. however, i could spot one new method, not private, that is also included on the wiki which doesn't have a test case. total coverage reduced.",1.0,,1,60
sufficient comments added to specify the changes and more comments could be added in mailer_helper class and also commented section from the previous changes should be marked as to why they are commented.,1.0,,1,33
overall the code structure is maintained and ruby style guide is followed . although more comments can be added but much of the code is easy to understand with the given comments.,1.0,,1,31
test cases were not specified but weren't required either. they did show testing in the youtube video.,1.0,,1,18
there was no wiki page with the link and test plan was not specified anywhere . so maybe providing a wiki link to your page and having a testcase in that might be helpful.,1.0,,1,33
since there was no test planing so automation of test cases is not possible . create a wiki page about your project and a short description of what might be the potential edge cases and test cases.,1.0,,1,36
i could not find the pull request of the given issue. so could not check the travis ci build pass. kindly check .,1.0,,1,22
the email feature to be tested require production database for me to check because i cannot check mail for me as my data is not present. but given the video everything works fine and well.,1.0,,1,35
the youtube video shows everything. the wiki writeup link is not posted so you need to add the link in the wiki page.,1.0,,1,23
the code is&nbsp;readable but&nbsp;some&nbsp;variables are not in snake_case.&nbsp;,1.0,,1,15
"the changes made doesn't have the comments which is making it difficult to follow why a change has been done. there is no mention about the issue number they are fixing above the changes which can make it easy for the reviewers. since most of the changes use existing variables and methods, there is nothing to point out. &nbsp;",1.0,,1,60
couldn't find any test plan included in the wiki page. make be test cases like -testing the back buttons rigorously by checking different functionalities would be useful as there is loop problem while using the back button as mentioned below. -validation testing especially testing the titles and urls with numbers etc. -creating the bookmark and edit and deleting it. -visiting the create bookmark page and checking what happens if we don't create one and testing the navigation buttons etc. can be included in the test plan.,1.0,,1,88
"there is no test plan in the wiki page. according to the issues, we can test the scenarios like -deadline modification at the point where the main deadline finishes or something like that. -deadline extention features.",1.0,,1,36
test plan was well described. although the capybara tests seem to fail and hence the pull request did not pass travis build.&nbsp;,1.0,,1,23
"all the cases discussed in the test plan have been converted to tests, although the capybara is failing",1.0,,1,18
"the code does not include appropriate comments. good comments are required for understanding the flow of the newly added code. however, the code lacks good comments.",1.0,,1,26
"the write up explains the description of the project. however, it lacks actual code snippets and the areas where the code change reflected. also the list of team members is missing, the write up does not include the test plan as well.",1.0,,1,42
"the functions look good.&nbsp;email_submission_reviewers function could have a better name as this one is too long and does not convey the meaning well. also, some more comments are needed as it becomes difficult to follow the code.",1.0,,1,39
there are few test case contexts which could have been merged into one. eg.&nbsp;context 'when topic name empty' there are two contexts with same description which is not self explanatory and could have been combined into one context. &nbsp; comments are required as it was hard to go through the code.,1.0,,1,53
i didn't find any descripe comments for each method. but there is some comments about their each meeting. &nbsp;,1.0,,1,20
no. their build&nbsp;didn't pass in travis ci. there are issues left to fix. &nbsp;,1.0,,1,17
no. there wasn't any new code committed during the second round.,1.0,,1,12
"they have only one automated test. the rest of test was completed through ui. it should increase the coverage. but in their pull request page, their coverage decreased. &nbsp;",1.0,,1,29
"i don't think this code is ready to be deployed on to the production server. because there is many error&nbsp;in travis ci, their code may not be compatible with the repository.",1.0,,1,34
 ) they have been keep working on this project ) most code is committed before the nd round,1.0,,1,16
 ) they have modified existing rspec tests to fit their implementation ) the test&nbsp;does cover their implementation ) there is no way to know the cover range since no pull request,1.0,,1,30
" ) the code looks good for me, no bad names, long method and dry enough ) the functions also work well ) i think they should send a pull request to trigger travis ci in order to detect potential problems",1.0,,1,37
 ) they did not send pull request ) i am not sure whether it could pass travis ci since there is no pull request to beta branch ) no conflict need to be solved,1.0,,1,31
 ) there is no writeup provided ) they does provide a video to introduce their project,1.0,,1,14
" ) they have modified existing tests to suit their implementation ) it seems they delete more rspec test than add new ones, also the coverage drops ) i could not figure out their test's relationship with their implementation since there is no comments at all",1.0,,1,43
 ) no bad names for variables and methods&nbsp; ) there is no method too long and the code is dry enough ) there should be more comments about test part,1.0,,1,28
 ) most of code are covered with comment to help understanding ) some comment are either to short or too hard for others to understand what it does ) there should be more comprehensive comment,1.0,,1,32
 ) the newly added/modified code looks good and dry enough ) there are no test covered for the code ) i could not figure out the function for each code since&nbsp;some code do not have comment,1.0,,1,36
 ) the writeup does indicate what they are doing and the code they modified ) it is hard for me to understand why they are doing in this way since they did not explain enough ) there are lots of screenshots but few comment with each,1.0,,1,43
i cannot see any comments in the new code added,1.0,,1,10
i couldn't copy any assignment after first try. application kept on spitting&nbsp;the assignment was not able to be copied. please check the original assignment for missing information. and didn't copy assignments.,1.0,,1,35
i cannot see any test case being included in the committed code&nbsp;,1.0,,1,13
code follows almost all standards but does not include documentation and commented code is not removed so deducting stars,1.0,,1,19
fix&nbsp;issue # : assignments with &ldquo;use dropdown instead&rdquo; cannot be saved&nbsp;is not working,1.0,,1,17
"the coverage has decreased but this might just be an issue with travis, as this has been reported by the ta. the team has modified a test case but i don't see any test case being added",1.0,,1,38
i am not sure if the project has to be done from scratch or not but the ui just crashed so i don't think it must be deployed in production,1.0,,1,31
names of all variables and methods are intuitive and are named in a proper. the code is structured properly as well &nbsp; my only complaint is that commented code has not been removed,1.0,,1,33
in the comments - name should not be mentioned: &nbsp; # assignment without topic -yang,1.0,,1,13
"&gt; the writeup seems enough detailed and the task was defined very clearly. &gt; team was able to mention out all the fixes they have done. &gt; team could add the exact details about the test plan. there are a couple of lines mentioning the changes done for tests, however no specific section has been added for the test plan and if they were able to run it properly or not. &gt; the ""what's"" of the changes done have been mentioned but it would be good if the team can add some of the ""hows"" of the fixes. for example the changes related to pagination hasn't been defined clearly. &nbsp;",1.0,,1,112
"&gt; i dont see any content discussing about test plan or automating any of the tests. &gt; please add a section for test plan. &gt; there are a few lines discussing the changes done to tests, however its not very detailed.",1.0,,1,41
"&gt; the writeup discusses the fix and the approach taken and helps in understanding what the project does, however, a lot more content could be added. &gt; test plan should be added to the wiki. &gt; more screenshots or even a screencast for the fix or the test running could be added. for the fix, you can show that the same functionalities are running properly after refactoring. &gt; add a ""references"" section to your wiki.",1.0,,1,75
"&gt; the builds have failed so probably need to look into that. &gt; i don't see a point of doing the project from scratch but a few tweaks would be good enough. &gt; also, code coverage needs to be improved further.",1.0,,1,42
"i can see a ""testing using rspec"" section but it's blank. also, there's a ""testing from ui"" section but it just gives the instructions on how to test the feature on expertiza.&nbsp; &nbsp;",1.0,,1,36
 ) functions are not too long. ) i think the modules have been carefully created and do not need to be separated from how they have been implemented right now. ) definitely need comments in the code. i dont see any right now and its hard to follow up without them. ) code follows ruby style guidelines. i dont see any violations as such. ) code is not smelly.,1.0,,1,64
&gt; names for the variables/methods/class seems to be well chosen. they are descriptive of the functionality it offers. &gt;&nbsp; however some of the variable names can be improved. for example:&nbsp;rev_res_map.,1.0,,1,35
no new test cases were added and coverage didn't increase. but the old tests pretty much covers the project.,1.0,,1,20
there are no comments provided for some methods. please comment your code,1.0,,1,12
the team did add a number of test cases in the rpsec file however not much can be said about the code coverage since it is not mentioned in the wiki document implying that they have either forgotten to put it in the doc (i would suggest you do) or have not put so purposely due to the reduction in the code coverage.,1.0,,1,63
"the test plan is just a single line description mentioned in the document however, it would be recommended that you atleast visualize the edge cases getting validated with the help of screenshots. not only it shows that you have tested the application yourself but also makes the reviewer aware of the test cases for which the program is failing so that he/she can suggest some new edge cases for your task. moreover, i would also recommend you to give a list of instructions for testing the same from the user interface, which would enable the reviewer to view your working rigorously.",1.0,,1,102
"although self-explanatory, the team can do a better job at writing comments for the new methods created.",1.0,,1,18
"there don't seem to be any tests that have been implemented.however, the write-up has a mention of what could be a good test case for the implemented functionality.",1.0,,1,31
"the writeup is well written. the team has added many things in round . the description of the steps have been made less technical and more understandable to the first time reader. it would have been better if they had explained why they had to create pull requests instead of . this is the only thing i couldn't understand. else, everything is very clear from the documentation. scope written and flawchart drawn are very usefull to understand the project and their work. also, a section explaining what exactly webassembly is and how does it work would have made project topic much clearer and interesting.",1.0,,1,103
&nbsp;no new commits have been made during nd round. the last one was made on oct th. must be because the functionality is complete.,1.0,,1,25
"comments need to be added, the methods which have been refactored could be named better, please refer to the suggestions in the previous review.",1.0,,1,24
the function&nbsp;exporttabletocsv could have more comments as to what steps are being performed.,1.0,,1,15
"overall coverage seems to have decreased considerably, although the team has added simple tests to cover their code additions.",1.0,,1,19
the comments are there for some but not all methods. i am not sure whether it is in the scope of their project to add comments for existing methods.,1.0,,1,29
"i can't say if it can be deployed onto the production server since i don't have the link of the deployed application to check whether the functionality is working or not. additionally, the code coverage has been decreased by . % so i would not recommend it to be deployed. the tests and refactoring code looks good to me but i would need to test the deployed application.",1.0,,1,68
"there are some methods like&nbsp;choose_case&nbsp; in the&nbsp;assignquizcontroller &nbsp;class which do not have comments. however, i am not sure whether it is in their project scope to add comments for existing methods.",1.0,,1,37
"though there is enough justification provided in the writeup, i found both, the number and descriptiveness of the comments a bit lacking.",1.0,,1,22
"they have not explicitly made a test plan section in the wiki, but i could find mentions of changes made to test files in response to the refactoring. so, again, the writeup needs to be better formatted to improve readability.",1.0,,1,40
"the writeup covers almost everything required for understanding the changes, though the formatting and section headings could be better. currently, they are just listed using file names.",1.0,,1,27
there are comments only for some sections. i think more comments can be added to parts of code like the method send_mail_to_reviewer_method in&nbsp;mailer_helper.rb&nbsp;file and another method new_review_request_message in mailer.rb,1.0,,1,35
"the code in line in response_controller.rb is being unused and thus commented, instead it should be removed.",1.0,,1,18
the authors have not improvised the write up in accordance to the feedback given in round review. suggestion to add more description to the issues and solution was given but changes regarding the same are not reflected in the write up.,1.0,,1,41
the write up well written.&nbsp; they have appropriately mapped the issues with the solution code snippets. they could have been more descriptive about the issues as well as the solution.,1.0,,1,31
there is no test plan as of now that is available or written,1.0,,1,13
"&nbsp;the project is not ready to be deployed. my biggest concern is the checkbox functionality needs to be fixed before any other work is done .&nbsp; also, the second issue is not addressed properly as i can see only the issue where the instructor can make amendments to adding an assignment to nil course is implemented as well when the dropdown for the users to see only accessible content.but the function where ta can change the course of the assignment is not yet implemented . so this can effectively be good starting point for a future team to pick up .&nbsp; additionally good commenting will surely help the future teams .&nbsp;",1.0,,1,112
"the variables and methods are according the conventions and the code follows&nbsp; the code needs to be cleaned up so that&nbsp;optimized and refactored code goes into the production server&nbsp;eg line - in profile_controller.rb, line in assignment_helper.rb.&nbsp;",1.0,,1,43
"apart from the testing plan section, the documentation is well-written and improvised from the previous rounds .&nbsp; the documentation in the previous was lacking description on test strategy and it was not improvised in this version as well .&nbsp; the testing section in the documentation does not mention anything about the test plan. also, no tests corresponding to the lines of code added are written which makes it difficult to test the accuracy of code when it goes into production. suggestion: testing should have been incorporated so that each line&nbsp; written is well backed with tests.",1.0,,1,98
"the writeup is well written. the writeup starts with feature that they are talking about, followed by the problem statement that mentions about the issues they they are trying to resolve and what is their proposed plan. the proposed changes are attested with code snippets that make it easier to comprehend the work that has been done in this direction. along with this, the language is really lucid and easy to comprehend which makes it easier to understand and think about their vision in&nbsp; the project. however, there is a scope for improvement where the authors can elaborate more about the test plan they they have envisioned for the project,&nbsp; the design principles that they would use. also, adding an video showing before -after changes of the system will make the document look complete as well as visual understanding of the project will be improved.",1.0,,1,147
"there are no comments in the methods that are declared. but the self-explanatory naming of the variables eliminates the need for comments. eg: notify_reviewer_for_new_submission, email_submission_reviewers&nbsp;methods. also, the code - in submitted_content controller.rb is not clear as to what it is doing.",1.0,,1,44
" the functions are of appropriate length just doing the functionalities as the naming says. line - submitted_content controller.rb can be extracted .the reviewers object in line of submitted_content controller is not used before and we can safely assume that the code above is independent and can be extracted also, the code mentioned above is difficult to understand as to what functionalities it performs.&nbsp; code follows ruby guidelines and is dryed ",1.0,,1,71
"the coverage decreased which implies that the code written is not completely covered under tests. &nbsp; the tests only cover the scenarios where user submits project link&nbsp;of the project. thus, there is a need for more tests to be written to ensure that each line of code is effectively tested",1.0,,1,52
"there is no test plan written or automated tests that are present in the committed code. hence, i cannot comment on the edge cases or invalid input that they might have considered or if they have missed out on any.",1.0,,1,40
 there is no test plan mentioned in the automated test or even in the writeup. so i cannot comment on that &nbsp;,1.0,,1,22
"the team has added a host of test cases to test for various scenarios but we cannot call them as exhaustive. the code coverage has decreased which implies that the entire code was not tested . more tests could have been added like if user is allowed to review a test but he is not signed up for a topic , what happens when user has no submission assigned but can access the review via url.&nbsp;",1.0,,1,75
"there is no test plan that is presented by the author in the writeup. also, the website is not functional which makes it difficult to gauge and comment on the possible pre-conditions, edge cases and invalid test cases and other scenarios that can probably be included in the test&nbsp; plan",1.0,,1,52
the writeup was devoid of any test plan and no automated tests were found.,1.0,,1,14
"( ) code in student_task_controller.rb is long, and would be better if there are a couple of more comments. ( ),( ),( ),( ) are all satisfied properly.",1.0,,1,22
"the code is very neatly written with descriptive comments and intuitive variable names. the team has also added test cases to cover their bases in the code&nbsp;functionality testing.&nbsp; concern: the code changes made to tag_prompt.rb has some bugs due to which ""alternate view"" for a student viewing his/her assignment now does not work as intended. this can be resolved by a quick fix by the team. once this is done, the team can test their code (expectation is that everything should work fine) and the code can be merged after code inspection. i do not think the project should be done from scratch, future teams can pick up from here.&nbsp;",1.0,,1,116
"as per the documentation, the code works as intended. after clicking ""your scores"", i can see all the reviews count in the table and the number change is reflected every time you successfully tag a review. the tag count is persisted and no bugs were found in the steps provided. however, when clicking the ""alternate view"" button, there is a nomethoderror at&nbsp;round_number = assignmentquestionnaire.find_by(assignment_id: assignment.id, questionnaire_id: questionnaire.id).used_in_round&nbsp;in tag_prompt.rb's slider_control() function.&nbsp; the team can probably provide a quick fix to this since this is a functionality break and alternate view no longer works as intended.&nbsp;",1.0,,1,106
"my biggest concern with the code is the decrease in the overall code coverage of the project. there are no automated test cases, so in future if something new comes up which is dependent on this functionality, there&nbsp;will be no way to check if the existing functionality&nbsp;works correctly or not.",1.0,,1,54
"they have tested pre conditions, but have not tested invalid input values and edge cases.&nbsp;",1.0,,1,16
"i think it is a good starting place for future team. i think so&nbsp;because the overall code coverage has decreased. my biggest concern is that,&nbsp;the team has not added any test cases. overall the code looks good. i can't say much because the instance is not running in vcl.",1.0,,1,54
can't test as the instance in the vcl was not running.&nbsp;,1.0,,1,13
 )they pushed new test case into new commit ) but the overall code coverage is not increased ) overall it decrease by . % but after adding new commit it increases the code coverage. (before . %&nbsp; &nbsp;and&nbsp; &nbsp; &nbsp; . % after)&nbsp;,1.0,,1,39
 ) code follows ruby and dry principle&nbsp; ) add comments in test written (as why to include this test and all) &nbsp;,1.0,,1,21
"the functions are short, but not all of them are commented.",1.0,,1,11
there are no comments for the code and it is difficult to follow the changes they have made.,1.0,,1,18
the functions are short. the code requires more comments because i had trouble following the code. other things are fine that is the ruby style and also the code is not dry.,1.0,,1,32
they did not explain why the work was done that way. they did not mention any design principles or patterns they have followed. looking at the code i see they could have used a design principle.,1.0,,1,36
there are no comments for the code. the code looks easy to understand but having the comments gives more clarity as you have added a few lines. each line can have a short comment which gives more clarity.,1.0,,1,38
the code added by them is very small. the code has been written well and it follows the ruby style guide. adding comments for the lines will improve the readability.,1.0,,1,30
"they have mentioned steps to test the feature. the steps give good clarity but the link provided for testing the feature does not respond. they did not cover all the cases, what if the csv file has an invalid email id. does it import the csv or it gives an error.",1.0,,1,51
no tests added. i think adding automated tests will help test the feature better. it gives an idea of what test cases we have to implement.,1.0,,1,26
"the link provided does not work(the site cannot be reached), so i was unable to test but their screenshots give good clarity. they did not cover some of the edge cases. what if the csv file has an invalid email id. what if the student already has an account but with different mail id.",1.0,,1,55
i was unable to test the features by following their steps. i am assuming the feature works well based on the test plan and looking at the code.,1.0,,1,28
no new test cases have been added and the coverage has decreased by %. please add test cases in-order to increase your coverage.,1.0,,1,23
the modifications look good to me but we need to first check whether all features are working or not. does the code refactoring affect the functionalities or not. as the deployed link is not provided i am not able to do so myself. although they have made a video of the test cases and the working functionality so it does look like the code works and is ready to be merged.,1.0,,1,71
"the write-up doesn't include a test plan section. please include a section that gives details about the tests like&nbsp;different pre-conditions, edge cases, invalid input values, and other possibilities. the write-up consists of the problems and solutions but no description of how these solutions might work in different test scenarios.&nbsp;",1.0,,1,56
no test cases provided. please add test cases and also deploy the app so i can test my own test cases.,1.0,,1,21
"since no new commit has been made after the first round, i don't believe any suggestions were considered. 'def list' &amp; 'def save_topic_deadlines' quite long. 'def get_status' is also long and has quite many nested if-else conditions. more comments could have been added. otherwise, the code does follow the dry principle.",1.0,,1,53
"the write-up does include a test plan section but the authors have just mentioned a simple way to check the implementation of the function. it does not include any pre-conditions, edge cases or invalid input values.",1.0,,1,38
"no, the test plan's cases has not been converted into automated tests. i couldn't find any new test cases in rspec for the new code implemented which could be the reason for reduction in coverage. &nbsp;",1.0,,1,38
"most manual test cases are passing but one test case i found to be failing was: when i&nbsp;log into expertiza as the instructor&nbsp;-&gt; load all assignments. (manage -&gt; assignments) -&gt; click on 'view reports' button -&gt; choose 'review report' from the dropdown and click 'view' -&gt; i get a list of all the students and the reviews they've given. now, for a particular student, i select one of the teams from teams reviewed and open it in a new tab, i get the list of team members and the student's review of that selected team. when i click 'back', i get an error: the action 'response_report' could not be found for reviewmappingcontroller &nbsp; i am not sure whether this functionality was to be covered by you guys or not. but if it is, then have a look into it.",1.0,,1,145
they mentioned that they wrote rspec tests but there is no explicit test plan section.&nbsp;,1.0,,1,16
they haven't written a test plan but added some tests. however i was unable to view the test code. i can see that the coverage has increased by % though.&nbsp;,1.0,,1,31
the build is failing due to failures in the model specs.&nbsp;,1.0,,1,12
"names are pretty intuitive, one of the index names in the schema.rb file seems to be long ""index_track_notifications_on_notification_id"" but since it's not very widely used, i think its okay.&nbsp;",1.0,,1,32
test plan gives us instructions as to how to test the feature but does not include the various test cases possible/ edge cases.&nbsp;,1.0,,1,24
"- as most changes are refactoring related and the tests pass showing the features work as before, the changes can be deployed to production server - the code doesn't seem to be deployed to manually check if all fixes work; deploying on test server and testing is necessary before actually adding changes to production server",1.0,,1,54
"- the write up has no section explaining the test plan - as the project is based on refactoring, there should have been a complete run of tests indicating the tests worked properly before changes and another run after all changes indicating that the changes didn't impact any functionality",1.0,,1,48
"- couldn't find the deployed image, couldn't verify is sign_up_sheet_controller works as expected after the changes",1.0,,1,17
- the test coverage hs descreased as code has been refactored to include in private methods which aren't tested,1.0,,1,19
meta can be renamed to metadata. more clear that way.,1.0,,1,10
"comments are only provided in the ""describe"" section of the spec. no new comments added in the source files.",1.0,,1,19
"method could have been extracted out for copy functionality in assignment_form. but since the lines of code is under the proscribed length, it is fine.",1.0,,1,25
not sure about it's functionalities working as going through the steps didn't help me. the writeup might needs to change a bit.,1.0,,1,24
"yes, some new code was committed and travis ci failed for many cases, finally it worked",1.0,,1,16
the system from what is mentioned by following the steps as mentioned in the wiki page fails at step . there is some error in grades view,1.0,,1,26
not able to check the edge cases as the site was not working. the testing needs to be more thorough and rigorous.,1.0,,1,22
no new commits were made despite having suggested to document the new changes in form of comments making it an easier transition&nbsp;for&nbsp;developers. e.g having a comment next to a new variable name as //previously old_var_name would make it easier for the developers by just searching the old_var_name without having to go through the wiki of a pull request. this becomes more necessary since several refactoring changes will be merged into beta and in master in an even shorter time period making it harder to go through wikis.,1.0,,1,92
"overall, i think the code is not ready to be deployed to production server. they refactored the code in a good way and is successfully able to pass the travis build as well as all rspec tests. the methods have been organized to provide better understanding. besides my concern for the lack of comments indicating the changes regarding variable names, everything is good. there are case: e.g in review mapping controller where even the wiki does not mention the variable names changed. this creates a big problem in transition. &nbsp; hence, i don't think it is ready.",1.0,,1,99
"the team has not made a seperate section to include test plan making it difficult to find it. however, in section of changes implemented the authors do say that they are using the ""magic tricks of testing"" by sandi metz as guide and have moved the tests for newly created controllers to different spec files. i would suggest the authors to create a section to detail about test plan, and also include more detail about each change implemented in related subsection.",1.0,,1,81
"the code has been refactored in a very good way, however, there still are certain large methods - for instance the assign_reviewers_for_map. this methods can be refactored and separate smaller methods can be generated.&nbsp; &nbsp;",1.0,,1,35
"the deployed version on heroku does not work. however, pulling their github repo and rebuilding the expertiza into vcl, i was able to test the functionality. i would suggest the authors to update their heroku projet or setup a vcl instance.&nbsp;",1.0,,1,42
"no. the code climate and travis ci have failed. the issue is with how the tree_display controller has been edited.&nbsp; while they have successfully made the readability changes, their not choosing to use a new method with understandable name and instead opting to append to existing methods code will make it extremely difficult to merge. there is need for more comments",1.0,,1,62
"the test plan of the documentation include only ""modified the existing rspec tests for controllers to fit current implementations."".which does not say much. make a more detailed explanation for test plan.",1.0,,1,32
"the team has done a good job of documenting the proposed changes along with the reasoning behind the proposed changes. however, they have not mentioned the design principles they have used. the test plan of the documentation include only ""modified the existing rspec tests for controllers to fit current implementations."".which does not say much. i would suggest to make the documentation detailing the issues and subsections as problems and proposed changes. this would make it much simple and easier to understand the wiki. move the code part to another section ""implementation"". this creates a streamline so that while reviewing the pull the expertiza authors can process it faster.&nbsp;",1.0,,1,110
"in the first review, i mentioned they did not document the changes made in the rspec files, however, now the documentation also includes a test plan. however, the write-up is still not perfectly organized as it does not contain separate sections for the reasoning behind their approach. the code and description are in the same section making it more time consuming to review for merging the pull request. the manual testing instructions are not given in a separate subsection and just start off in test plan.&nbsp;",1.0,,1,88
"despite my suggestions to refactor their new code in separate methods and using them as checks, they have not made the change. most of their commits are due to codeclimate error&nbsp;pertaining to the readability of code. while they have successfully made the readability changes, their not choosing to use a new method with understandable name and instead opting to append to existing methods code will make it extremely difficult to merge.",1.0,,1,73
"the functionality of review count works as explained on the wiki: increase and decrease appropriately. however, the ""alternate view"" button leads to an error page. that needs to be rectified. this too, is only for the assignment for which the tag counting functionality is enabled. it works well for other assignments.",1.0,,1,51
there is no conflict which needs to be resolved. out of build&nbsp;failed in travis ci &nbsp;,1.0,,1,18
"a major piece of code is added to app/controllers/assignments_controller.rb. as there are no comments to the code, it is difficult to understand it and justify it's length.",1.0,,1,31
the project can be deployed after the bug indicated below is resolved. i just thought of a case where the author may not want to keep the directory name as it is suggested by the system (the auto-populated name) and there is where an error occurs.,1.0,,1,47
last commit was made on oct th and then directly on nov . commits are made to master instead of beta branch.,1.0,,1,21
"not all methods have comments. however, the names of the methods are self-explanatory and their function can be inferred in most of the cases",1.0,,1,25
the code is readable and can be understood in a couple of glances. a few more comments would certainly be more helpful to follow the code,1.0,,1,26
"yes, the team has tested the two new controllers and the existing controller no, the code coverage decreased by . % the tests thoroughly covered the range of the project&nbsp;",1.0,,1,29
"the writeup is exhaustive. however, it doesn't include a test plan section&nbsp;",1.0,,1,14
yes the pull requests did pass the travis ci test. but its confusing to decide whether its correct because the team has submitted two separate pull requests. and both pass independently. that means we cannot say just yet that it works fine on integration.,1.0,,1,44
the code seems to be written well. comments can be more descriptive and logical,1.0,,1,14
"the write up has been written well. it explains the issues, solutions and how to test the implementation.&nbsp; however, a few specific details important to the scenarios they have worked on are not mentioned which makes it difficult to test. eg. they have mentioned that to test issue , create a scenario with an approaching deadline, for which reminder will be sent. it is not clear how many days/hours before the due time, is the deadline 'approaching'.&nbsp;hence the person who is testing will not know what scenario to build for testing this.",1.0,,1,95
"solution for issue is working fine. for issue , bug is identified - participant is not getting imported with csv file (if user already exists in system but not assignment). also, on adding new participant as new user, it was not possible to test the working against issue because no email was sent to expertiza.development@gmail.com &nbsp; &nbsp; &nbsp;",1.0,,1,59
 . the writeup clearly mentions the reasons for the refactoring and the area they refactored. . they have written the documentation in a very clear yet concise format. . they should consider providing examples of why they chose to refactor the name of some method or a variable.,1.0,,1,45
"code follows the suggestions from code climate. which makes it more ruby way and follows the guidelines. there are some&nbsp;mwthods having long names, for example&nbsp;get_css_style_for_calibration_report.&nbsp;this could be renamed as&nbsp;get_css_for_calibration_report another example get_each_review_and_feedback_response_map",1.0,,1,40
"although there are comments for methods, there aren't any comments inside the function, which&nbsp;requires&nbsp;the reader to carefully read the code and understand the code by himself.",1.0,,1,31
there are some attempts of writing test cases for the new functions. but those seem to&nbsp;have failed while travis ci build was running. authors should consider writing some test cases to test the code automatically.,1.0,,1,37
"no new test cases neede, and no test plan mentioned in wiki",1.0,,1,12
the code coverage should not have reduced considering the changes were only of refactoring. and the code is very short of comments and documentation,1.0,,1,24
&nbsp;the code does not explain what changes each piece is performing via any comments. i could not find any comments anywhere in the code changes.,1.0,,1,26
&nbsp;having a lot of trouble understanding the flow of code because of lack of relevant documentation/comments.,1.0,,1,18
"&nbsp;i do not see a test plan section as such, but i did find the deployment plan and the steps to reproduce and test the fix, which are explained well enough.",1.0,,1,32
"&nbsp;test plan not mentioned in the documentation, neither did i find any tests implemented in the code changes.",1.0,,1,19
"&nbsp;the feature that was desccribed in the problem statement is working as expected, only problem found is that the user needs to refresh the page to see the intended changes.",1.0,,1,31
"the format of&nbsp; entries in csv is not consistent, the ""name"" values and ""comment"" values are put under double quotes, where as other values are put in directly. ps i do not see how delegation pattern as mentioned in the wiki is implemented in the code implementation.",1.0,,1,48
creating a new backend method(reportscontroller.export_details_fields(t_options)) just for the purpose of testing does not feel like a good idea to me.,1.0,,1,23
- changes not big enough and thus not a lot of scopes to add methods or variables. - no comments except for the issue number which doesn't necessarily tell me about the code itself. &nbsp;,1.0,,1,34
"- test cases were added but according to the pr, the coverage decreased. also, they don't have any mention of&nbsp;coverage on their wiki page.",1.0,,1,26
- i saw a test case running on the screencast but the associated files have not been added in the pull request. - only one bug has test case which was shown on the screencast.,1.0,,1,33
- the screencast was of only one&nbsp;issue. - the files associated with the test case shown on screencast not present in the pull request.,1.0,,1,24
"- the last commit build didn't pass but before that, it was passing. i have given them points as i am not sure whether failing of building necessarily their fault as the test cases running during the build is randomized. &nbsp;",1.0,,1,41
- test coverage decreased according to the pull request - `use_dropdown_instead` variable name sounds weird as it suggests that there is a counter variable with the name `use_another_thing`.,1.0,,1,26
- the code has merge conflict. they didn't follow a basic principle of git. always pull before making a push. they should have checked this conflict in their own repo before pushing to remote. - this is also causing the build to fail and is very important they look into&nbsp;these issues before merging.,1.0,,1,54
- it does have steps to setup servo on local but do not specifics of what to check and where.,1.0,,1,19
- no test cases or screencast provided for the fix that they have done in the project. - they did check the available test cases to see whether already working code has not stopped working or their test cases are failing.,1.0,,1,39
- i am not sure what these changes was supposed to achieve making it hard to judge it. - the setup is too extensive (not their fault). &nbsp;,1.0,,1,26
"since the build failed, i would not recommend adding it to the production server yet.",1.0,,1,15
create topic name could be a different function if possible and if repeated many times in the code.,1.0,,1,18
yes the write up does include the test plan section but the rspec test plan is only mentioned not explained,1.0,,1,20
manual testing is done on the ui which is not an automated test.,1.0,,1,13
the authors have not created any automated tests for&nbsp;the cases discussed in&nbsp;test plan. they have only demonstrated test cases passing using the existing rspec file and no changes are made to it. manual testing instructions are very informative though.,1.0,,1,43
the build did pass in travis ci. but the code climate check did not pass because of the following reasons: .&nbsp;method copy&nbsp;has a cognitive complexity of (exceeds allowed). consider refactoring.&nbsp; .&nbsp;method copy&nbsp;has lines of code (exceeds allowed). consider refactoring.&nbsp; .&nbsp;use next&nbsp;to skip iteration in line number . these are the issue that need to resolved.,1.0,,1,65
the write up does not include a test plan. &nbsp; &nbsp; the write up does include a very well detailed test plan. test plan shows how automated testing&nbsp;passes all the existing test cases&nbsp;as well as how manual testing for the team's feature implementation can be done. &nbsp; no newly added test cases exist for the new code written by the team. new rspec test cases can be written to test the newly added functions. &nbsp;,1.0,,1,80
there have been no comments added by the authors. all the new functions added have been added without any comments.,1.0,,1,20
"the team did not add any new test cases. existing test cases were refactored to match the other refactoring changes made in the project.&nbsp; the code coverage did not increase, it decreased by&nbsp;- . % to . % there are no newly added test cases, so it does not affect the&nbsp;tests covered range of the project.",1.0,,1,56
"the write up does not include any test plan. the authors have not added any test cases apart from the existing ones in the rspec file. the testing videos shows only the old existing test cases passing, and no new test cases&nbsp; to cover the newly added functions have been added",1.0,,1,52
"well, the code did not pass travis ci test and the errors are in model section of testing so i would not recommend deploying onto the production server. as why it is failing the test has to be addressed first.",1.0,,1,40
"variable name ""vmlist"" what does this mean.not understand ""round"" variable.methods are not thare where there should be as code written loops could be written as function.",1.0,,1,28
"yes, the authors have improved significantly like adding test plan, also better language of explaining things concerning the issues they solved. but still, they didn't made screencast for issue .",1.0,,1,30
the test plan was not provided but tests are added.,1.0,,1,10
there are many codes in the comments. if code is not required you can remove it.,1.0,,1,16
mail should be sent via the back groud task. sidekiq is added to the application. please read about that.,1.0,,1,19
some codes can be added to the write-up so that we can easily understand the refactoring part.,1.0,,1,18
some methods names are not self-explanatory like&nbsp;update_truefalse.,1.0,,1,10
should include why you have changed the code with the code changes that you have included.,1.0,,1,16
i suggest adding comments to the testing code. it's difficult to tell why some code is needed.,1.0,,1,18
the write up clearly explains what they did but how they did it is difficult to tell from the write up. the instructions on how to log in and navigate to the correct page helped. ,1.0,,1,35
i found a few places where the redundant code was present. functions could have been cut to a smaller line of codes.,1.0,,1,22
no comments are written for any code that have been changed.,1.0,,1,11
more comments are needed in order to understand the changes. otherwise the team did the good job. &nbsp;,1.0,,1,18
i can not infer exactly where to look for the test cases that they have wrote. i believe it should be in the wiki page but link is not present. you guys should write that down on wiki page so that other can review that part that is actually altered by you.,1.0,,1,52
i con not find the link to the wiki page. so i can not check exactly what changes are proposed by this improvement as compared to the one that is present in the system.,1.0,,1,34
"no, build in not passing in travis ci. three of the four sections are getting failed. &nbsp;",1.0,,1,17
"as the part of submission, we have to submit the link of our pull request so that reviewer can check whether travis build is successful or not. i can not find the link to pull request. but still i can go to the commits and see the code that they have altered. still i can not check build is pass or not.",1.0,,1,62
they could have added more comments to let others understand the code.,1.0,,1,12
"i can not find the link to the pull request or the git repository that they have been working on. so, i am not able to test that. if you can add that link to the submission, i would like to review again.",1.0,,1,43
"i can not see any test plan section. only some screenshots. please add some test plan before round , i believe you can do so much better!",1.0,,1,26
not very much comments added. i barely can understand the code.,1.0,,1,11
"yes but please check where you go after clicking ""copy"" on the assignment page before you deploy this code.",1.0,,1,19
the test plan section on wiki is too short. did you test the students are getting copied when copying an assignment? i only saw a few lines added in test cases.,1.0,,1,31
"the writeup looks very well. they have problem section, manually testing section, code section. the testing section is too short. what function did you test? &nbsp;",1.0,,1,26
"you code looks good, but when i followed your instruction to assignment page and clicked ""copy"", when page browses to ""edit course"" but not ""select the desired choice and copy the assignment"" as you stated in instruction. is the link or something wrong? please check. (i tried all assignments, and all the same)",1.0,,1,53
the build has passed travis ci. no conflicts. but coverage decreased.,1.0,,1,11
"names are good, but i can only see a few lines from the pull request. not sure why. when i look into their git repository, it seems that they did some works on master branch, maybe that is the reason?",1.0,,1,40
coverage decreased (- . %) to . % when pulling&nbsp; b f&nbsp;on sj :beta &nbsp;into&nbsp; eb da&nbsp;on expertiza:beta.,1.0,,1,21
"yes, however they need more test and a detailed test plan&nbsp;",1.0,,1,12
"the wiki explained the response, what is the issue and what i wrong, but there is less information about video and test.",1.0,,1,22
"the good thing is they have the explain in all the code, and there is no bad names or lack of comments. one of the module - assignmenthelper is still a long method,&nbsp;",1.0,,1,33
"the email_reminder is bit too long for me, may be can use mailer.rb to handle the email sending, the email_reminder only handle the sending logic.",1.0,,1,26
"their did a test plan, but all check failed so no coverage increase.",1.0,,1,13
"the problem i found is in their e-mail notification, they didn't include the old project code so that i can see the improvement beyond that.",1.0,,1,27
not testing part in wiki and no test part wrote on github,1.0,,1,12
"the vcl is not working, please check the vcl connection",1.0,,1,10
"based on the code that i can see on the wiki, this seems fine except for the lack of comments.",1.0,,1,20
i can very easily understand the problems&nbsp;from this write-up. i think what's missing is a full description of the solutions and how they are implemented. i appreciate the inclusion of the relevant code but wish it was fully explained in the context of the assignment.,1.0,,1,49
"they didn't get their test plan included in the writeup, although they did that in the code",1.0,,1,18
"no, they didn't. overall they are already a good project after round one.",1.0,,1,14
they provides a detailed test video to show how to test their work in expertiza. it can be better if they can provide a test video of rspec tests.,1.0,,1,29
"the quizquestionaire may not be that good, but it make sense.",1.0,,1,11
they explains their work well with detailed codes step by step. it will be helpful to get included some screencast when running the program.,1.0,,1,24
"the writeup explains their work well. however, there is some part like ""the instructor is allowed to edit"". i am not sure about whether this is the sentence exactly they want or they forget to put a period, but it doesn't look good.",1.0,,1,44
"the team simply lists all the changes they made in the writeup. i can understand what they want to achieve, but i think it can be better if they explain their design or how they made decision step by step in the writeup. it will help others understand their work better.",1.0,,1,51
"their link is broken. i can't test it manually. but i checked their wiki page, it looks like the email feature is working.",1.0,,1,24
i have not see any test write in the rspec. i look through all the github code commits which i cannot find any changes. so i think you do not have any automatic test but just test during the coding. and the edge cases as well.,1.0,,1,46
"the&nbsp;wiki pages wrote about the&nbsp;precise procedure to what to do about the bookmark, that is great but there were too many words instead of the code changing and also i cannot see the video in the middle. the wiki pages do not explain the way you fix the problem.",1.0,,1,53
no the methods don't have comments which could have been added,1.0,,1,12
 ) functions are of the correct length ) the test cases are in their proper files ) no comments made ) the code is in proper format ) no,1.0,,1,24
the explanation is very brief and could have been a little more elaborate.,1.0,,1,13
yes the writeup is clear but it only mentions about the problem and the solutions and doesn't mention about the methods or why it is done.,1.0,,1,27
the deployment link has stopped working but i have checked it in the first review and was working well.,1.0,,1,19
"i've tested the code as given in the wiki page for assignment - final project (and design doc), and faced the issue below:&nbsp; the following errors were encountered during import.other records may have been added. a second submission will not duplicate these records. mysql ::error: incorrect string value: '\xef\xbb\xbfram' for column 'handle' at row : insert into `participants` (`type`, `user_id`, `parent_id`, `handle`) values ('assignmentparticipant', , , 'ram') i did receive an email, but don't see the participant in the list of participants, as expected.&nbsp;",1.0,,1,87
"the code is readable, but there are no comments in the code. the file app/models/assignment_form.rb if condition section is the example.",1.0,,1,24
the team needs to fix the codeclimate issues for the code to be ready to merge into production,1.0,,1,18
the travis ci build passed but some code climate errors are seen. these should be fixed.,1.0,,1,16
test cases are added. but coverage seems to be falling due to new helpers not being tested (app/helpers/review_mapping_helper.rb),1.0,,1,21
there is no explicit test plan section. but the write up has good details about how to test the functionality they implemented. some screenshots would make it perfect.,1.0,,1,28
"coding is really clean and good refactoring. coding standards have been followed. some code commenting is needed. build seems to be failing due to some code not implemented yet. test coverage seems to reduce, so some new testcases need to be written for the parts that are working.",1.0,,1,48
"this code can only get merged after merge conflicts are resolved. also, they have fixed one issue but could not get it approved due to dependencies on the servo team's side.",1.0,,1,32
"build fails and merge conflicts detected. but it is a mozilla project. but the comments mention ""the test will continue to fail until we sync with upstream. that has not happened yet."" so i guess this can be updated likewise.",1.0,,1,40
&nbsp;as the pull request is marked as more changes needed. the code is not in the state where functionalities would work end to end. once more stuff is added this can be done to some effect.,1.0,,1,37
"i don't think the project needs to be completely redone. however, there seems to be a bug where you cannot change your preference on the profile page for where assignment actions show up. seeing as this was the main point of the project, this needs to first be fixed.",1.0,,1,50
"markup made sense, but it could have been useful if some details were given to explain the code changes.",1.0,,1,19
"preference_edit_flag and preference_home_flag aren't that intuitive. perhaps something like ""actions_on_edit_page_flag""?",1.0,,1,11
"all their comments are just copied the original ones, just place them from one location to their new location. however, it may be because the coding habit of this whole project contains few existance of comments. but i still recommend to make comments for every small part of your newly-added block of codes, in order to ensure the readability and maintainance, especially in some really long or complicated method or function.",1.0,,1,72
"actually, most of their changes only focus on some specific parts inside a function, seldom creating a whole function. so the length is always based on the original one, thus no need to blame. however, i do notice that they really like to put everything in one line, especially when the components of this line of code are complicated, for instance, the line&nbsp;expect { team.submit_hyperlink(""https://github.com/wangdavid /expertiza/wiki"") }.to change { actionmailer::base.deliveries.count }.by &nbsp;is obviously too long and not beautiful at all. my simple tip is to just convert some long lines into multiple lines and don't let them deviate from the main&nbsp;content too much.",1.0,,1,116
they did not make any further updates to their branch. thus there is no new test.,1.0,,1,16
"again, there is no writeup document, so it's hard to follow their test plan. in fact, i cannot find what they have tested for this project. all the things provided are just the youtube video, which only introduces how to test the system via the interface. and it did not include any edge cases to be tested, just the basic conditions.",1.0,,1,62
"there exists no writeup document, which makes this work pretty vague and hard to make an understand.",1.0,,1,17
"hard to check what they already tested. and the video only contains their test via gui. and no knowledge about what they planed to test originally. however, many changes wih respect to rspec test files can be found among their commits. the thing is, without documentation, and proper comments either, it is hard to try to figure out what they were testing and why they changed those files, because they made really great amount of commits.",1.0,,1,76
"again, there contains no writeup documentation, thus hard to follow they originally thought about and how they handled this task.",1.0,,1,20
"it deserves further work. the project is obviously still ongoing, and most of the tests are still failing, so it is still premature.",1.0,,1,23
"so the task involved is ""support asynchronous webassembly compilation"". on the wiki page, there lacks the explanation about how&nbsp;they realise that goal by creating the new structure and methods, which is precisely, the logic behind it.",1.0,,1,38
"i have to say that, although they made further updates including refactoring, the commits mostly failed. but it is ok if they continue working on this project as their final project. just keep on doing this job.",1.0,,1,37
no comments have been added but doesn't seem like the change requires many comments.,1.0,,1,15
no new test cases were added and test plan only talks about ui testing and no unit tests.,1.0,,1,18
"the code seems fine and the build is also passing, however, no tests were added hence, cannot be merged.&nbsp; yes, this is a good point to start for the next team as all features are working and just testing part remains.",1.0,,1,42
"all tests are passing. no tests were added and hence, there is a warning indicating that they should be added.",1.0,,1,20
the create method in assignments_controller.rb has become very long. some refactoring might help.,1.0,,1,14
"the following bugs still exist: . i was able to create a nd assignment with the same submission directory. to replicate: enter name of assignment as something else and change submission directory to the name of the directory used in another assignment . is the test name is 'test() assignment', the created submission directory comes up as 'test()_assignment'. maybe this is expected but according to the wiki, all special characters should be removed.",1.0,,1,72
"the basic functionality of disallowing duplicate names for assignment folders is working. however, () are not removed from the assignment folder name if assignment name is given as test() assignment. the assignment folder is created as test()_assignment.&nbsp;the document says that&nbsp;special characters like '/','\','$' etc&nbsp;should be removed but its not clear if () should be removed or not.",1.0,,1,61
"the team has added extensive tests and seem through. the coverage, from what i can see, has decreased.",1.0,,1,18
"the test plan has sufficiently well covering tests and these tests have been implemented as it can been seen in the provided videos. however, these tests don't seem to have been committed as the code for some of the tests is missing in the pull request.",1.0,,1,47
"all tests are passing.&nbsp; however, schema.rb was committed and wasn't reverted. &nbsp;",1.0,,1,15
"task : alphabetically listing university names: working fine. task :&nbsp;adding a new institution during creation of an instructor profile: manage users page doesn't load, request timed out task :&nbsp;listing of instructors should show their institutions on the same line:&nbsp;manage users page doesn't load, request timed out",1.0,,1,51
no commits have been made to the pull request. the code in the wiki page don't have comments for a number of implemented methods. especially in the code for problem .,1.0,,1,31
"the problems have been mentioned in the wiki page, however it is very difficult to understand how to test the application on ui as no information about that has been provided. unable to test features as there's a bug while trying to create a new assignment.",1.0,,1,47
"problem : unable to create an assignment. getting the following error: function populateduedates(topic_id, review_rounds) { elementsarray = ; $('[id^=""due_date_&lt;%= @assignment.sign_up_topics .id %&gt;""]').each( function(i, e) { /* you can use e.id instead of $(e).attr('id') */ elementsarray.push($(e).attr('value')); }); &nbsp; problem : as mentioned in the wiki, this feature cannot be tested, hence, cannot verify &nbsp; ",1.0,,1,57
"the build is passing but there are some code climate issues. there are some variable names that can be changed. for eg, due_array cur_due are little ambiguous.&nbsp;&nbsp;",1.0,,1,29
"no,&nbsp;they could have added more test cases. otherwise they have handled edge cases in the code",1.0,,1,18
the code can be deployed on the server after the team has added more test cases. overall i think the code is really written well . there is no need to do the project from the scratch.,1.0,,1,36
the test plan does not explain what does each function is for.,1.0,,1,12
some functions could be sub divided into smaller functions. they have moved the functions to helper class. apart from that they could have also modularised the functions to further increase the code readability and maintenance.,1.0,,1,35
 ) the length is good but the cource_optoins can be broken down in smaller functions. ) looks good ) i feel that that more comments needs to added ) the ruby style guide is not folllowed at some places. ) no,1.0,,1,36
no new test cases added for the code change. they can add images of the before and after ui changes that way it would be easier for a new person to follow what needs to be changed.,1.0,,1,37
the code does not violate coding guidelines. but i can see there is dead code which adds unnecessary clutter in the file.,1.0,,1,22
"althogh code is not diffuclt to understand, try to add more comments to make more readable.",1.0,,1,16
there is still commented code in&nbsp;spec/models/assignment_team_spec.rb&nbsp;file. only descriptions were added in&nbsp;spec/models/review_response_map_spec.rb&nbsp;for testing.,1.0,,1,26
write ok seems good. just try to stick to a single format: issue is described differently and with different format,1.0,,1,20
"video shows how the impelementation works. indeed notifications are sent to reviewers and instructors, however build still fails.",1.0,,1,18
description of the&nbsp;each solution is short. they assume the reviewer is familiar with the project.,1.0,,1,17
"method name in&nbsp;app/mailers/mailer.rb&nbsp;&nbsp;seems too long: def notify_reviewer_for_new_submission(defn) there seems to be a typo (reviwr) in namig the following method in&nbsp;app/mailers/mailer.rb: def self.submission_mail_to_reviewr(user, subject, mail_partial) &nbsp; &nbsp;",1.0,,1,42
"there have been comments added,but comments could have been added to describe the methods and functionalities",1.0,,1,17
the writeup does not include&nbsp; a separate section for test plan.suggestion would be to add it in the writeup,1.0,,1,21
"though there have been few comments added,they could have been more descriptive and clearly written",1.0,,1,16
"the team added has test cases,the coverage has decreased. so,there are not many newly added test cases,so considerable amount of test cases have to be written",1.0,,1,29
"not sure if it ready to be merged, as i didn't receive the email, which was the primary concern of this project.",1.0,,1,23
"there's one new method, but i don't see comment on that.",1.0,,1,13
"they did good just no comment on the method, it's not easy to understand without check the wiki.",1.0,,1,19
"the first issue was settle perfectly, but the second one still exist. the requirement want to show edit button only when the rubric belongs to the current user. now, the button is there for every rubric.",1.0,,1,36
i feel like rspec tests could have been written for this project - but i understand why they weren't.,1.0,,1,19
"i wish they explained the code more, they kind of just display it and go ""this is this and that is that"" without any reasoning as to why things are the way they are.",1.0,,1,34
the wiki should have gone through the added test cases.,1.0,,1,10
"it fails. they claim that the test is unrelated to their code - which seems to be true. however, from personal experience, rewriting code can lead to existing features somehow breaking when it should not interact with them whatsoever. due to that, i think they should have attempted to figure out why it broke and then rewrote the old code to fix it.",1.0,,1,62
"it does not work, it seems to be a problem with cur_date or max_due_date being nil in some cases.",1.0,,1,19
"yes, they did add some tests, however, the coverage not increased. the thing is, i still cannot log in to the website on the vcl. the website is crashed.&nbsp;",1.0,,1,30
"yes, they did improve a lot of things including more comments, more test cases, the test plans. most of things they did very well. but they still did not improve their website and i cannot check the functionality.",1.0,,1,38
"this team changed a little files and do not have comment. e.g. . there is a new function&nbsp;average_based_on_rubric, and there is no any comment. . like this line: validates_format_of :url, :multiline =&gt; true, :with =&gt; /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z - ]+([\-\.]{ }[a-z - ]+)*\.[a-z]{ , }(:[ - ]{ , })?(\/.*)?$/, they tried to set the limitation of url, however, they did not give any explanation and makes the reviewer be hard to understand.",1.0,,1,71
"most parts are well done! but still,&nbsp;they&nbsp;need to add more detailed explanation of code on the wiki page, and there's no code of rspec part.",1.0,,1,30
" . some of their method do not have comments. . their methods were written in good styles, however, they need to add more comment to it.",1.0,,1,24
" . they&nbsp; do not considered different pre-conditions, edge cases, invalid input values. . their test plan is good, however i think they need to add some comments.",1.0,,1,27
" . some of their test did not pass the auto test, but i think they consider the cases carefully.&nbsp; &nbsp;",1.0,,1,20
 . there is no comments for each method. . they do not explain clearly what the method does.,1.0,,1,16
 . the write up is less than passable. . less than half of code changes are explained . very little explanation is given for the approach they used.,1.0,,1,25
"( ) some of the functions are too long; ( ) more comments are needed, because you have trouble following the code; ( ) the code does not follow the ruby style guide. ( ) some code is not dry.",1.0,,1,32
"they did not&nbsp;considered different pre-conditions, edge cases, invalid input values, and other possibilities.",1.0,,1,16
"( ) some of the functions are too long; ( ) more comments are needed, because&nbsp;i have trouble following the code; ( ) the code does not follow the ruby style guide ( )&nbsp;some of their test code&nbsp;is not dry. &nbsp;",1.0,,1,39
 . the writeup is lacking in terms of explanation of how to test the functionality thoroughly. . at least half of code changes are explained.&nbsp; . explanation of reasons for the style of code and problem solving approach is lacking.,1.0,,1,38
"the method ""create_requested_user_record"" is a little bit long. in the previous version of code, it is already long. the code in this method can be extracted in to separate methods, and those methods are invoked in the ""create_requested_user_record"" method.",1.0,,1,39
they have test plan section in their writeup. and this section explains what they do to test the project and why they do in such way.&nbsp; but they didn't test if the paginate_list method works after it is invoked in right location. they also didn't write how to test their project form ui. there should be a testing form ui section in their writeup.,1.0,,1,67
"the writeup explains how they did the work and the results of their work. the ""abstract"" part that describes why the authors did the work is not detailed. they should list all the things that need to be done in detail. in the part that describes the paginate_list method issue, they can add some code showing the wrong invoking location and the right invoking location. &nbsp;",1.0,,1,66
"in general, their code is good. but the method ""create_requested_user_record"" is still a little long.",1.0,,1,15
"there aren't comments in their code. they should add some comments that briefly describe what the methods do.&nbsp; for example, in the _general.html.erb file, they can add a comments saying what the method does before the code that is responsible to generate path.",1.0,,1,47
"the code they added that generate path for assignment are already in a method. the code that checks if assignment name or directory name is duplicated if just one line. so, it doesn't need to extracted into separate methods.",1.0,,1,40
"yes, the writeup explains their work clearly. they wrote the description of the issue, the files that are modified, links they submitted, what they've done to achieve the requirements and how to test. but they didn't write what design pattern should be used and how they use the design pattern. in the ""list of changes"" part, i think their code may be easier to read if they add some comments in their code.",1.0,,1,75
i think they didn't test if the generated path can be overridden. the test can be add in rspec.&nbsp; they test all the other cases in test plan.&nbsp;,1.0,,1,31
the author have proposed approaches for issue but approach is already implemented. the author had said they would try approach if approach doesn't work but design for approach is missing.&nbsp;,1.0,,1,32
"i think few things are missing from design document and it is a bit ambiguous. i think the team should visually depict use cases, flows, etc.",1.0,,1,26
"the team has written the test plan. however, the authors have not included where the changes would be for the new rspec test cases.",1.0,,1,24
"the design appear to be good, few things to be noted here is, author could have used indexing to improve the search facility. the document doesn't talk about patterns.",1.0,,1,30
"though the design document covers all the important and the relevant content, the structure of the document itself is an issue. i feel like the team should definitely move the mentors and the team members section to the very bottom of the page. they should also have a separate goal of the project section on the top.",1.0,,1,57
"design seems to be almost completed, i just&nbsp; have one doubt how a student will make a review private if the review was submitted earlier as public. this part is not clearly stated in design.&nbsp;&nbsp;",1.0,,1,38
uml diagram should be more descriptive and provide program flow as well. uml diagram does not follow conventions.&nbsp;,1.0,,1,19
"proposed solution should be more descriptive, they should also mention in proposed solution what changes will be done in which class or file.",1.0,,1,23
"design seems okay, could use little more details. it would be help to mention what they want to change in which code flow.",1.0,,1,23
solution to most of the issues seems pretty clear and good. they have given flow chart to all the issues so they are easier to understand.&nbsp;,1.0,,1,27
document mentions three issues that need to be fixed in this project. first issue language is little confusing and could be explained in better words. rest of the problem statement is easy to understand.,1.0,,1,34
test plan looks okay. they have given steps for manual testing only and have not mentioned about any new test cases that they will be adding,1.0,,1,26
"team has given visualisation of all of the issues they are going to solve, flow chart are giving enough descriptions but they could have been better.&nbsp;",1.0,,1,27
"their only uml diagram is too high-level design, they should provide more details in the diagrams. besides, it now seems unnecessary, because it doesn't make their solutions clear. besides, i think their should add some screenshot of the score calculation in the background part.",1.0,,1,46
yes they have aptly used diagrams to describe the proposed changes in the system. just that they missed one point made in the specification and have not covered any where in the design doc about the students should also be able to see the list of meta-reviews done by him/her just like the list of normal reviews.,1.0,,1,59
"the design document is very verbose and included just one flow chart diagram and it also mentions high-level details and does not involve different entities that could trigger the flow. moreover, other than the only diagram they did not even used bullet points that will be lot easy to follow and be less verbose.",1.0,,1,55
the diagrams proposed does not cover the changes in detail and is not easy to follow. it would be great if they also provided the graph/metrics about the tagging details. the diagram does not cover the important part of how it will clock the time and flow of saving the time in database is not clear. both the diagrams proposed just cover how they will show report to the instructor/ta.,1.0,,1,72
the changes that the authors have proposed are readable and understandable. the explanations are very descriptive and adequate.,1.0,,1,18
the designs that the authors have proposed seem pretty good and adequate enough for the functionality. there do not seem to be any errors.,1.0,,1,24
the flowcharts and the use case diagram are very descriptive and helpful. the overall quality is pretty good.,1.0,,1,18
"yes, the design includes a test plan for each issue and these tests really test the functionalities pretty well.",1.0,,1,19
yes the main functionality that needs to be done is given in non-functional requirement. this means that this implementation takes a back seat. however authors focus on the functionality done rather than what they would be doing !,1.0,,1,38
"the writer has included&nbsp; diagrams along with the below lines ""the mathematical formulation is itself wrong in e and e and they have used the below shown diagram to represent the relationship"". though this serves as visual aid, it's misleading as the process the diagram describes is wrong",1.0,,1,50
the team provided the model or controller file that need to be modified which is clear and helpful. however the modifications are lack of details and explanation so it's not able to check the questions above. &nbsp;,1.0,,1,38
"no specific mention of code level changes is present in the doc, so cannot comment on this aspect. would advice the team to add code changes in the document.",1.0,,1,29
they don't have a test plan and database design. should add how they are gonna test the functionality and what will be the db changes as part of this project.,1.0,,1,31
more diagrams should be added or the current one should be made more elaborate.,1.0,,1,14
"the team mentions the files they will be changing and notes that they will need to add some methods, but they don't mention&nbsp;explicit method names. it would be good to add this or a uml, rather than just a list of files that need to be updated. i don't think the code will be smelly because the plan is to add computation-related checks in calculation methods. it is not particularly complex, as ui designs and code updates are kept minimal. these simple changes won't have an effect on response time either. i would just list out the methods you are planning to add, which will give it more detail.",1.0,,1,115
"yes, the authors have thoroughly explained the problem, what the solution must be, and how they will implement it. they walk through each feature that must be added, and detail what files will need to be changed. however, a few features don't mention what files will be updated (i.e.&nbsp;sending an email when the submission parameters don&rsquo;t change). these should have the files mentioned in them.",1.0,,1,71
"there is a test section, but it doesn't have many details. it just says that the team needs to update old rspec tests, add new ones, and do ui testing. however, there are no lists of rspec tests that need to be added. there are no ui tests either. it is important to have ui tests beforehand so that you can validate that you are creating the correct product.",1.0,,1,70
"the solutions are given for each problem. this is a good way to break it down, but changes to each file should be mentioned as well.",1.0,,1,26
a lot of the wiki page was just copied from the requirements document. it would be good to add more detail on top of this to give the reader a better understanding of the project goals.,1.0,,1,36
"yes, the general design appears like it will work. however, there isn't much explanation outside of the given requirements that details how the design will work. there should be a uml or a list of what classes should be changed. the requirements document simply has suggestions from the teaching staff.",1.0,,1,51
"i think the authors have done an alright job of explaining what changes the system needs. there are a few&nbsp;elements of the design that seem up in the air, rather than concretely defined (we&nbsp; propose to use&nbsp;`updated_at` in `answer_tags`). nevertheless, the general picture of what must be done is there.",1.0,,1,55
"the doc is off to a good start since it talks about purpose and a testing plan, but it doesn't have a section that thoroughly talks about the design. it needs a section that talks about what changes to classes should be made.",1.0,,1,44
there's no diagram in the doc. i hope they can draw a diagram to make the changes more clear in the future.,1.0,,1,23
"yes, their design appears to be sound. they have problem statement and tentative approach. however they don't mention about test plan. my suggestion is that maybe they can add a test plan section.",1.0,,1,34
"no, there's not a test plan. they should have a test plan to make sure your functionalities can work well.",1.0,,1,21
"the team have&nbsp;given a lot of effort&nbsp;in making the design doc extremely good. the explanation for their different approach has been well-defined. however, i feel that some explanations are verbose and could have been written more simply for example, in the proposed&nbsp;solution section. they already have a diagram to support their statements so could have written a bit less.",1.0,,1,66
" . team has not created any diagrams to explain the design, they have just mentioned about basic structure of solving issue and testing issue in loop.&nbsp; . no uml were created . diagrams seems irrelevant",1.0,,1,33
"team has incorporated all of the things in majority but explanation could have been improved. in test plan section team has mentioned about running test cases which is good but what new test cases for all the issues are going to get added, team has not mentioned about them. enough explanation of what issues are there is done but team could have give a better explanation about how they are going to solve the issue rather than just telling about the file names. some of the issues are self explanatory but for some other issues it needed more explanation. like for issue , &nbsp;",1.0,,1,103
"project scope is defined at such an abstract level, no details provided about the files and all whatsoever. no file names specified. there's no proposed code changes as well, no comments. can't get an idea of what would be done, and what impact it'll have on the other segments.",1.0,,1,52
"the documentation lacks proper explanation on the implementation of the new code. the team has attached screenshots, but without a proper understanding of the expected code changes, it is difficult to decide whether the design would be simple or complex.",1.0,,1,40
"&nbsp;the solution design appears okay. the team has explained the current scenario and the places where the code changes are required. however, the documentation lacks the exact places where code changes are expected and how those changes will affect the application. &nbsp;",1.0,,1,43
"the good thing they have demarcated the issues clearly, and at a low-level as well. like what button links are missing and all, however, there hasn't been a profound study on how they'd do about implementing the same. the topic being about late submissions, it deals with job scheduling, there is no mention of that in the architecture anywhere. expertiza, for instance, uses sidekiq, how would that be addressed?",1.0,,1,72
"the authors have explained expected code changes, but they are on a basic level. deeper insights into code implementation can help the reader understand the features of the system better.",1.0,,1,30
"test plans are important as the newly added code does not affect already existing in place features of the application. the team has documented the test plan. however, it lacks the exact places where the rpsecc testing would be done, and which features will be tested.",1.0,,1,46
it does include the test plan. but they haven't mentioned which corner cases or rare cases they would be testing to make sure that the system works in every possible case. it would be better if they could find out the rare/corner cases of the system and test for it.,1.0,,1,52
they have suggested solutions for each issue but it does not seem robust. they haven't included the files they will be modifying or the models they will be changing to fix the issues. nothing can be commented if the code is smelly as there isn't mentioned about the code they will be modifying/adding.,1.0,,1,56
they haven't included any high-level diagrams on the wiki page. at least a basic uml diagram like use case diagram could have been added or just the dataflow diagram.,1.0,,1,31
"it does include the test plan. but they just mentioned that they are going to refactor existing code and run existing cases, write new test cases and haven't mentioned what really they are going to focus on the tests. it would have been better if they could mention the name of the module or functionality they are testing.",1.0,,1,59
"the design details must be added. right now, i think the design document lacks in conveying what changes the team is going to work on.",1.0,,1,25
more work in all of the sections is needed to give more clarity on the design.,1.0,,1,16
"yes, the project involves fixing minor issues from previous years implementation and the design looks simple.",1.0,,1,16
there are issues in this project and a separate design strategy has been made for all of them which seems reasonable.,1.0,,1,21
there are issues in this project and they have made a point to cover them all in each section.,1.0,,1,19
"yes, the authors have adequately explained all aspects of the implementation/testing that needs to be carried out.",1.0,,1,18
"more cases need to be considered to find the problem in issue , i think there might exist some more scenarios where an assignment could be dropped automatically.",1.0,,1,27
"yes, a detailed test plan is included. although the issues were fixed last year, they lack tests and hence the team has appropriately included a list of tests to be carried out.",1.0,,1,32
ample diagrams and flow charts have been used to convey design the changes done and design strategy respectively.&nbsp;,1.0,,1,19
there's no design in the document. hard to say that whether it is simple or complex. design pattern has been explained but how does it help in this project should be explained in the document.&nbsp;,1.0,,1,37
"only the files are mentioned where the changes need to be made but haven't explained why these files should be changed, what changes will be done in these files.&nbsp;",1.0,,1,31
"test plan is not explained enough in the document. there are absolutely no details for the ui testing and rspec testing, what all test cases will be executed, how one can ensure that the project has been completed successfully.&nbsp;",1.0,,1,40
"there's a flow for the issue fix, test but not for the actual use cases. no uml, er is available in the doc.&nbsp;",1.0,,1,25
"as mentioned in the above question, there's no design section in the document as well as proposed solution, it's not possible to comment on this question until there's a design. kindly include the design or proposed solution.&nbsp;",1.0,,1,41
"changes are not mentioned in details. very few changes are explained, also if there's no design then it's not possible to figure out what changes will be done in the system. i can figure out based on the issues listed but it takes time and should be included as part of the design document. there are no details about the files which are supposed to be changed.&nbsp;",1.0,,1,70
project scope and expectations are very well mentioned in the document. kindly work on the design or proposed solution along with the test plan.&nbsp;,1.0,,1,25
a delegation pattern&nbsp;is said to be used in this design. but no explanation was given as to why is it a good fit.&nbsp;,1.0,,1,26
a few of the points mentioned in the project description were not given in the wiki page such as also showing ratings along with reviews.,1.0,,1,25
the team has documented the test plan. it involves manual testing as well rpsec testing . however the team could have elaborated some more on the implementation of the rspec testing and which features would be tested in each of the stated files.,1.0,,1,42
"the team has not added any uml diagrams to the write up. they have attached screenshots of web pages where changes are proposed. this actually helped in understanding what are the features currently lacking and how the proposed code changes will help in overcoming these issues. however, a use case diagram and er diagram would have helped understand the scenario better.",1.0,,1,61
"yes, the design appears simple when looked from the documentation perspective. however, the handling of the web page content can be a issue to handle, which depends on the implementation of the proposed code changes suggested by the team.&nbsp;",1.0,,1,40
"the team has not stated any test plan. the document lacks the test cases and how the proposed changes will affect the remaining application. also the uml diagrams are absent, which can help a reader to understand the scenario better.",1.0,,1,40
"the documentation includes the test plan. however, it lacks the mention as which part of the functionality will be tested by which rspec test case. test cases are important as, the newly proposed code change should not affect the already in place.",1.0,,1,42
"the design takes care of most of the functionalities. the team has tried to address maximum of the corner cases. however, the test plan could have been explained better. the authors have not explained well, which parts of new code will be tested and in what manner.",1.0,,1,47
"the authors have given quite good explanation of proposed code changes. however, it lacks the explanation of how can i distribute the ratings evenly between more than one member. the previous ratings also cannot be accessed.",1.0,,1,36
"yes, currently there's no check on the total contribution maintained by teammates. they would tally it up to , but a major question is whether the scope would require them to not let the user do this, or just warn. i see this as an open question, and they should've clarified this by now.",1.0,,1,55
"yes, decent test plan doc when it come to ui testing. however, rspec files haven't been explained in detail at all, no test cases mentioned as well.",1.0,,1,28
"the authors have proposed changes for the given issues. however the proposed code changes could have been better, if it was supported by comments, and description of files where the new code will be written.",1.0,,1,35
"the write up lacks uml diagram. use case diagram helps the reader to understand the scenario and get an idea of the proposed implementation. however, the write up lacks use case diagram. the team has however added screenshot of the page where issues are present and the features on which they are working. however, the diagrams can be improved further.",1.0,,1,60
"the design explains the issue as well as the proposed code changes. however, the explanation could have been more detailed. the test plan also lacks description as to what files will change and which new functions will be tested using the rspec model of testing.",1.0,,1,45
"the design includes the test plan. however, the team could have better explained the testing phase in the documentation. the features which will be tested in the late_policy_spec.rb and late_policy_controller.rb is also not mentioned by the team.",1.0,,1,39
"the team has not attached any uml diagrams. the screenshots give an idea about how the user interface will be affected by the proposed code changes. however, use case diagram or a class diagram can give the reader more insights about the code implementation and the new features being added or getting affected because of the same.",1.0,,1,57
the changes which author provided seems good and are explained well. they have mentioned the files in which they would implement their changes but it is not clear that in which file they would make what changes.&nbsp;,1.0,,1,38
"there is only mention of the files in which they would make the changes, but they failed to mention what exactly would they do in those files. thus, can not check for points&nbsp; and . &nbsp;",1.0,,1,36
"the uml diagram which shows the flow of their changes looks good but is a bit unclear as it is hard to understand as which issue would be resolved in what file. also, there does not seem a need for the use case diagram as the user actions are simple thus writing in words would have been enough too but it is good you did extra.",1.0,,1,66
they have provided a flow chart through which they are trying to explain what all changes to make and where exactly they should make them but in one glance it is not easily understandable.&nbsp;,1.0,,1,35
"they fail to mention and propose solutions for the issues mentioned in the document &nbsp; for &ldquo;author feedback report&rdquo; table, change the header name &ldquo;review response rejoined&rdquo; to &ldquo;review responded to&rdquo; and &ldquo;last rejoined at&rdquo; to &ldquo;last responded at&rdquo;. then, sort &ldquo;rejoinder&rdquo; and &ldquo;review &ldquo;review responded to&rdquo; as string (alphabetically), sort &ldquo;# author feedbacks done&rdquo; by the first number then the second number (same as &ldquo;review done&rdquo; in the &ldquo;view review report&rdquo; table) and sort &ldquo;last responded at&rdquo; as date.&nbsp; this has not been done for &ldquo;teammate review report&rdquo; table, sort the first columns as string and sort the last column as date.&nbsp; this has not been done. ",1.0,,1,134
"the author failed to mention the following issues which needs to be resolved :&nbsp; )&nbsp;for &ldquo;author feedback report&rdquo; table, change the header name &ldquo;review response rejoined&rdquo; to &ldquo;review responded to&rdquo; and &ldquo;last rejoined at&rdquo; to &ldquo;last responded at&rdquo;. then, sort &ldquo;rejoinder&rdquo; and &ldquo;review &ldquo;review responded to&rdquo; as string (alphabetically), sort &ldquo;# author feedbacks done&rdquo; by the first number then the second number (same as &ldquo;review done&rdquo; in the &ldquo;view review report&rdquo; table) and sort &ldquo;last responded at&rdquo; as date. &nbsp; ) for &ldquo;teammate review report&rdquo; table, sort the first columns as string and sort the last column as date.&nbsp; &nbsp; ) in chrome on windows , the dropdown has a tendency to freeze up, especially after one report has been viewed.&nbsp; please reproduce the problem, find a fix, and implement it",1.0,,1,155
they have added test plan for ui testing but they should have mentioned modifications/creation of specs.&nbsp;,1.0,,1,18
"design appears to be strong but during designing they should know what to do and where to do it. it is alright if they don't really know how to do it. there are few issues which lacks this understanding as they are uncertain about them. eg - test plan,&nbsp;files which require modification (tentative)",1.0,,1,55
their design method can be easily understood from the diagrams.,1.0,,1,10
"the changes to be made, to the best of their knowledge, has been explained properly i feel.&nbsp;",1.0,,1,18
"yes, they have provided flowcharts for each issue which are pretty self-explanatory. just that they have wrongly labelled a flowchart as a use case diagram.",1.0,,1,26
core snippet. files which are going to be changes are the way you are planning to implement the solution is missing. otherwise everything looks good to me.,1.0,,1,27
proposed solution is very abstract and difficult to gain detailed information about how this solution is going to get implemented.,1.0,,1,20
"yes, design include the test plan? are the tests shallow or they will really test the functionalities but test plans can be more detailed and informative,",1.0,,1,26
"they have draw a activity diagram of the proposed implementation, which introduce their data flow. however, they didn't draw any diagram for their user case yet. if they have draw a diagram for it, i think it will be much more easy to understand the relationship between user and function.",1.0,,1,51
"i think they could make more introduction about their test plan. for example, they could list the test case.",1.0,,1,19
" ) they have not provided changes to methods yet ) since design only propose general idea and implement it for specific roles, there is a possibility to make code ""smelly"". for example, simple add all methods/algorithms on user would make user contains too much ) since they will integrate new features, i don't think there existing gem could do it in a simpler way ) yes, and it is unavoidable, when every submit review the system will run algorithms. however, how much extra time would be spent is also part of problem itself ) overall it is good, but there could be more details about algorithms like input, output.",1.0,,1,106
 ) all major parts have been covered in this design ) there could be more details about how they gonna to integrate algorithm ) test plan should also include how to test from ui,1.0,,1,31
 ) they write plan to test it automotively by rspec ) no manually test solution provided,1.0,,1,14
 ) they well explained how to test from ui with different roles ) there is no plan about automotive tests like rspec,1.0,,1,20
 ) there are only two diagrams for their design ) the two diagrams are in the same screenshot with different size ) the information is hard to get follow since it is not uml or some kind of work-flow ) also hard to see the difference of these diagrams &nbsp;,1.0,,1,47
" ) the design looks reasonable and does follow appropriate principles ) however, no design pattern was used &nbsp;",1.0,,1,16
"though the design incorporates the formula and how to deal with calculating the score based on the self review as well, it does not include any details of the view aspects of the issues given",1.0,,1,35
as stated before the design document doesnot include the details for ui or the front end part of any issues hence i feel the document is still incomplete,1.0,,1,28
"the test plan is exhaustive, but the plan is very abstract and can include some details here",1.0,,1,17
"as far as i know test have to be written with little or no knowledge of whether a particular feature is working or not. it can be checked to validate the test cases but not to write the test cases. &nbsp; the team proposes to check whether or not the features are working and then move to test plan, which is wrong according to me tas please take a call on this.",1.0,,1,72
"overall the document is adequate, but is something visual was included it would have been the cherry on top of cake.",1.0,,1,21
there are no files mentioned in the wiki hence i can not comment on this. and since a detailed design is not mentioned i'm not sure on how to suggest improvements on the performance and other&nbsp;aspects&nbsp;,1.0,,1,40
more visual aids can be added in the writeup to better explain the flow of the project.,1.0,,1,17
team has mentioned the files that are required but thye have not mentioned what changes needs to be done. &nbsp; &lt;files which require modification (tentative) the following methods in the files might require modifications&gt;,1.0,,1,36
 ) the author is just editing the methods (so fat it feel so) ) design document is not yet given ) design document missing ) design document is missing. ) yes,1.0,,1,26
"diagrams would have been benficial to analyse the changes proposed, however they are missing and hence i cannot answer this question. &nbsp; however, team did a great job in identifying and writing the steps.",1.0,,1,34
"&gt; quality of explanation is not very good. more details should be added. &gt; the ""approach"" flowchart is added but it has not been explained. &gt; problem statement is also very briefly explained.",1.0,,1,33
"&gt; approach flowchart is added however it's hard to follow through without explanation. &gt; diagram follows the conventions. &gt; the only flowchart is high-level. &gt; more uml diagrams, mockups would be appreciated.",1.0,,1,34
&gt; i think the existing issues have been explained but the changes proposed could have been more detailed. &gt; more details to expected results and the diagrams would have been appreciated.,1.0,,1,31
&gt; most of the sections are added however they need more elaborate descriptions. &gt; please add more description to what exactly you are changing and how it will help.,1.0,,1,29
"code changes aren't explicitly mentioned, too early to review on those lines, as we only the concerned files at this point. the files mentioned are only the relevant ones, and they have included the correct schema segments as well. response time would be increased as now you'll be querying the db to get the past contributions, before displaying the questionnaire. ensure this query is optimized.",1.0,,1,67
"the design document appears to be decent following all the principles and appropriate patterns. but has few necessary sections like ""code changes"" which don't provide any information.",1.0,,1,28
"the design does include a test plan. but automated testing and coverage of testing could've been explained with more details. ""the coverage of coveralls bot will be filled after our finish all our work"", didn't exactly understand what this statement means in coverage.",1.0,,1,45
"there are no class or uml diagrams involved and as mentioned earlier, this would be by far the only thing that goes missing in the document.&nbsp; pictorial stuff should be added to the document to make it easy for the user to visualize what exactly is happening in the system. also include a flow chart that gives&nbsp; a bigger picture of the implementation and specifically under the approach section.",1.0,,1,71
"as explained in the previous comment, the explanation for the proposed solution is too vague maybe because the team has not come up with a solution themselves and hence was not able to explain what has to be done.&nbsp; like under project scope, instead of just writing 'the scope of this issue is to fix the function in ruby and write appropriate test cases' every time, mention specifically as to what is wrong and what changes would be made in that method/class. same thing with the flowchart.&nbsp;",1.0,,1,90
"the language used for the changes made in each of the controller and model is vague and hence i cannot comment on whether the authors plan to add a method to a wrong class. all in all, due to the abstractness of the document, the problem statement was easy to understand however, when it comes to understanding and comparing the current and previous implementation, not much can be commented on it. &nbsp;",1.0,,1,72
"while reviewing the document i felt that, the flowchart mentioned under the 'approach' section is too generalized for the project since that would be the case for any project. hence, it does not serve any purpose in understanding the requirements of the team's approach towards the problem statement. i would suggest that the flow chart is redundant and should be removed from the document. rather i'd encourage you guys to add some case specific uml diagrams and/or database design which would make it easier for the reviewers to understand how things are actually taking place at a lower level. also the screenshot put in the document is just copied as it is and left to the reviewer to understand what is actually wrong with it. i would highly recommend that you point out or highlight the flaws in the current design which would give more value to the image added.",1.0,,1,153
"i think there were a lot of changes that need to be incorporated in the document i.e. removing some redundant sections, altering some content and adding some stuff. add uml diagrams and database design in the document if possible. adding some annotated screenshots is a must. this makes it easy for the reviewer to visualize what's going on. refactor your content indexing as every sections comes under 'fix issues related to deadline and late policies'. &nbsp; &nbsp;",1.0,,1,79
"the team has followed the review comments to some extent and has added annotated screenshots and a flow chart corresponding to their project. however, i still feel that the flow diagram under the ""approach"" section is redundant and is not required. the flowchart under 'expected results' explains in a better way about the feature implementation post the changes and serves its purpose correctly.",1.0,,1,63
"again, the team has not really described a lot of things in detail. no actual changes which will have to be made are specified, so cannot comment on whether the changes will make the code smelly.",1.0,,1,36
the test plan section is not explained well. the team can do a better job here.,1.0,,1,16
"no visual descriptions, screens are provided. but since this is a test project, i don't think it should be of much importnce. although, the team can create a small diagram explaining the scenarios which will be tested. also, uml diargram can be used to explain the&nbsp;tests' relation with database.",1.0,,1,52
"yes, the design seems to be covering all the required functionalities. the project is about testing and the&nbsp;scenario wise tests are mentioned in the test plan.i know it is very unlikely to happen but what if one use case interferes with another use case? i would suggest the team also to add some tests testing a few use cases interefering with each other. (i.e. happening at same time. for e.g.,&nbsp; some author resubmitting the work after the review and instructor sending assignment deadline reminder notification at the same time.)",1.0,,1,95
"overall, the document seems covering almost every required thing and looks like self contained. only suggestion i have is to add some visual experiences/ diagram/ test result screenshots and to add some test cases checking what happens if multiple events requiring email trigger occur at same time.",1.0,,1,47
"explanations are very crisp and to the point, however more details on the first three issues could be included, with respect to the problem statement, propose solution and the implementation.",1.0,,1,30
"use cases for # and # could also be included. the team has mentioned ""what"" they have done to fix an issue, more details on ""how"" they are fixing the issues would be helpful. example: ""during changing the assignment, first we ask which course an assignment is a part of, and then list only those courses that the instructor or ta has access to. so the ta and the instructor can only deal with the courses they related to, but not the irrelevant courses."" how are you checking whether a ta is part of a course and how are you determining whether he/she has access to the same?",1.0,,1,107
plans for ui testing have been mentioned for most issues. i would suggest to think more about edge cases for each issue and add some&nbsp;rspec tests.,1.0,,1,28
"screenshots have been added for round , but their size is simply too big and distracting to focus on the content written above and below the same. please resize the screenshots and include more explanations to convey better. also, the diagrams contain too little information to be of much value, same depiction could be achieved using the text. please include more information in the diagram to make good impact.for example - ""show"" in # does not have significance on its own, you might want to replace it with ""show the icon on homepage"" or something similar. same goes for the diagram for # ",1.0,,1,100
again i feel the final project section is a bit lacking as the authors have just listed their plan and not elaborated on them. i know what their plan is but do not understand how they will go about doing it.,1.0,,1,41
there is a test plan section which explains how to test the changes but i think they are slightly vague and could be elaborated on a bit more.,1.0,,1,28
there are many screenshots and a flowchart included which make understanding the project flow quite easy. my only issue is that the final project section feels a bit lacking when it comes to screenshots compared to the earlier section.,1.0,,1,39
"again, i think the authors should be more specific as to how they will be actually implementing the code.",1.0,,1,19
the design doc captures the essence of the work to be done but lacks many details of the problem statement.,1.0,,1,20
"excellent work is done in explaining the solution. the purpose of the project is clear.however, there are a few areas which can be improvised like test plan should have been more elaborate like including the testing details and edge cases that will be taken care of, the problem statement should including the inconveniences caused and potential effects along with existing inconsistencies.",1.0,,1,62
"the test plan seems comprehensive. however, the authors have mentioned edge cases at places viz anonymised view for students, impersonating students&nbsp;using anonymised names and anonymizing team names&nbsp;which shows that those functionalities will be thoroughly tested for functionalities.&nbsp;&nbsp;",1.0,,1,43
"the design appears to be sound and logical. however, the authors should have written more about the design principles that will be followed and if they were planning to use any design pattern. the design is quite intuitive as well.&nbsp;",1.0,,1,41
"the diagrams included shows the proposed working of the system and flow of logic. however, the authors have described the changes to be made to the system in the documentation which eliminates the need for visual representation.",1.0,,1,37
"it was easy to follow and understand.&nbsp;the explanations were adequate and to the point.&nbsp;they want to test the functionality by writing test cases once to see if it is working correctly or not, which is good. however, what if it is not&nbsp;working&nbsp;correctly, what will be the solution? or what will be the course of action? this has not been mentioned.&nbsp; in general, when we submit a review in expertiza, it can't be updated. if authors plan to create update button, how will the review reopen? what are the steps associated to reopen a review? what are the files associated? has not been mentioned in the document. i would suggest to add up those two&nbsp;things in the document which will make it more precise and robust.",1.0,,1,137
code flow diagram is tough as a reader to understand without any context.&nbsp;,1.0,,1,14
"i think from the doc it is really tough to understand what authors plan to do. issue description and solution is well written and clear, however for issue and issue it is tough to understand.",1.0,,1,35
"team&nbsp;should work to make the documentation comprehensive and easily understandable. test plan comes after issue without proposing the solution, so it is tough to understand.",1.0,,1,27
issue: allow ta/instructor to add himself as a participant for this the proposed implementation of adding ta/instructor as participant is not good instead you should add some kind of role based permission mapping.,1.0,,1,35
the proposed design is simple enough and easy to understand. but at some point it seem too verbose. so team can work on that.&nbsp;,1.0,,1,25
the author explained the flow of changes and also the files to be changed but did not involve what changes are to be made. the explanation or the plan for implementation looks promising and is well planned.,1.0,,1,37
the author just mentioned about the classes to be changed but did not explain in detail about the code changes in specific. the author has selected the correct methods to be modified. the new design is not complicated but requires addition of more details explaining the code and not only the classes to be changed. i cannot comment on the code smells because the document does not include anything about the code to be modified.,1.0,,1,75
"the uml diagrams do not explain properly about the design, they need to add use case diagram which explains the design in detail. the visual aids do not provide enough details. the code change flows helps a little for better understanding.",1.0,,1,41
the authors did not make any comment about the methods to be changed or added so i am unable to comment about the code issues. they mentioned about the bidding algorithm which makes sense for this project.,1.0,,1,37
test plan can be significantly improved. could add more details regarding the test cases specified. for example the context and the role etc.,1.0,,1,23
"the team has made good use of visual aids. they has used diagrams, one is the flow diagram and the other depicts how they plan to implement the changes. i feel the other diagram is a little high-level and does not provide much details regarding the changes. for instance what do you mean by ""visualize the result""? please add more details to the diagram.",1.0,,1,65
"the team has identified the controller they need to make changes to. however, what changes and how they will try to accomplish them are not stated. please provide what changes will you make in which controller.",1.0,,1,36
"yes, the design does include a test plan however, it does not provide any details of the test plans. please add all the test cases and a little description. the test plan section can be significantly improved.",1.0,,1,37
"as i had stated in the last review, i still feel the visual aids used are quite high-level which does not provide any low level details of the functionalities.&nbsp;for instance what do you mean by ""visualize the result""? please add more details to the diagram.",1.0,,1,48
the team looks to have identified the problem and the solution but failed to articulate it in a better way. it would be helpful if you could articulate the thought process behind the solution.,1.0,,1,34
"they presented two approaches, one of which was elaborate. however, they mentioned that if that doesn't work they'll use the second one. the second approach was not explained in detail. also, they didn't mention why they believe that the first approach might fail in the first place and what problems they are anticipating.&nbsp;",1.0,,1,57
the design was very vague. they could've added more details as to how the db looks like and what changes are they making to the schema.&nbsp;,1.0,,1,28
"- the writeup mentions adding new methods but doesn't speficy how the methods would achieve the functionality. eg. it's interesting to know how the course_staff_helper.rb would determine whether the current user is a student or a ta - adding ta as a participant might be confusing and might start showing up on the team in reviews, marks and&nbsp;probably other parts which might get very difficult to handle;&nbsp; consider adding ta as another entity (reviewer or something) rather than participant and having only option to review",1.0,,1,89
- the authors have only highlighted the files associated with the functionality - it is unclear which files are expected to be changes; as only tests are to be added no controller or model must be modified in the project scope,1.0,,1,39
- no visual aids have been used -&nbsp;authors could have added a flow diagram of email functionality,1.0,,1,17
the test plan could have been more descriptive and more test cases could have been included.,1.0,,1,16
the design seems to incorporate everything. but they should list the issue and provide the solutions accordingly for that.,1.0,,1,19
"testing plan, project design and how they target the issues mentioned in the doc should be described in more detail.",1.0,,1,20
the changes made in the db should be mentioned via some form of chart or diagram.,1.0,,1,16
new course_staff_helper may not be necessary. look at alternative approach. no mention of database changes for review mapping. this is necessary to check and store the reviews done by ta? instructor adding ta/instructor as a participant: may not need showing student that their assignment has been reviewed by instructor/ta: perfect,1.0,,1,52
"based on my understanding the following tasks need to be done: : allow the instructor to perform reviews : alow ta to perform reviews : show student that their assignment has been reviewed by instructor/ta both this tasks are mentioned however, there is no mention as to how they will handle this as the review mapping stores the entries corresponding to student ids. the new table to be made as well as the changes which need to be made in assign review algorithm need to be documented.",1.0,,1,85
code-level specifics including proposed files to be changed and methods to be implemented is not clear. design pattern to be implemented needs to be decided.&nbsp;,1.0,,1,27
"the explanation is easy to follow however, the wiki needs to be re-organized. the tasks are not highlighted&nbsp;and&nbsp;detailed description is starting just right after. the easy language coupled with the flowchart and project design is enough to understand the task description as well as the proposed solution.&nbsp;",1.0,,1,53
the authors don't detail any proposition for code changes or testing. it is all pretty abstract at this stage with no mention of controllers or methods to be added.&nbsp; what is toggable? do you mean toggleable?,1.0,,1,38
the authors don't detail any proposition for code changes or testing. it is all pretty abstract at this stage with no mention of controllers or methods to be added. code-level specifics including proposed files to be changed and methods to be implemented is required. design pattern to be implemented needs to be decided. test plan has been improved and now includes automated rspec testing along with the travisci.,1.0,,1,70
"the code changes are vague at this point, with only a mention of adding methods, but not which controller.",1.0,,1,19
code-level specifics including proposed files to be changed and methods to be implemented is required. design pattern to be implemented needs to be decided. test plan is vague and details only the use of travis ci. &nbsp;,1.0,,1,38
"i think issue . and issue . can be merged in to a single method and a simpler implementation can be figured out.&nbsp;i am not sure of this but i am assuming that there might be a place in the framework itself where you can get list of all the instructors and tas of the course and if you get that list, approach to tackle issue . and . can be refined.",1.0,,1,70
"test plan is very straightforward and it does not include any&nbsp;edge cases. more test cases can be added like: if required,is functionality where more than ta's perform review of a same assignment supported of not.",1.0,,1,39
the proposed testing plan should've included rspec and simplecov too,1.0,,1,11
"not much has been written about where related code is in the project or where changes are going to be made.&nbsp; it is not clear what the team plans on doing. method addition/modification, file names are missing. hence its difficult to judge",1.0,,1,44
"it covers almost all necessary parts. although the content has not been explained very well. may be little comprehensive explanation would have helped. also, they have not mentioned the current files where related functionality is present or where they plan to add new code.",1.0,,1,44
the changes proposed look great as per explanation. a little more information about where the code changes are going to be made would have been helpful to understand the team's plan.&nbsp;,1.0,,1,33
"it is clear what the issues are in the current implementation. but it is not clear what they plan to change and where the changes will be made, what methods will be added/modified. in the test plan, it would be nice to learn what parameters the team plans on testing",1.0,,1,51
there is a flowchart but it doesnt add much value to the design document. because the flowchart is general and about the steps of project lifecycle and not about actual plan/action/code the team wishes to implement or flow of code.,1.0,,1,42
"it is difficult to determine the design the team has intended to implement.&nbsp; for every issue, the team has mentioned 'fix this issue' in project scope. it is not mentioned anywhere what the 'fixes' are.&nbsp; ",1.0,,1,37
"from the document, it is very clear what the issue in the current system is, in terms of functioning. however, that is just the project description as provided in the project description document provided to us. nothing has been mentioned on code level what is wrong, what part of code needs to be changed or possibly what methods could be added/modified to make the desired changes.&nbsp; &nbsp;",1.0,,1,69
nothing about which parameters will be tested has been written. it would look more clear if the team mentioned what parameters they plan to test according to the changes made,1.0,,1,30
"the authors have adequately explained the changes that would be made to the system. however, the test plan should have been more descriptive covering all the steps to cover edge cases.",1.0,,1,31
changes being done to controller should be more descriptive. the proposed changes are bullet listed and do not explain the functionality in detail.,1.0,,1,23
there are no diagrams or uml designs mentioned in the design doc. they're not that much required since it is focused on testing.,1.0,,1,24
author have proposed the solution in very abstract manner. more detailed breakdown of approach would be helpful.,1.0,,1,17
authors should properly explain about rspec tests and what they've done that tests won't fail. some descriptions of new tests should also be provided.,1.0,,1,26
"the approach they are using is changing/refactoring the preexisting solution, so the design document should have also talked more about the problems in the solution code in detail and the changes they plan to implement. the code is probably already implemented in delegation pattern which they plan to refactor, so essentially they are not implementing any pattern as such.",1.0,,1,60
"the team explained the changes made in the previous implementation of this project, they do not explain in detail the changes that they will be making on top.",1.0,,1,28
explanations are not clear issue - the solution has too much technical details without giving basic of the techniques and scripts like tablesorter etc. so the solution is confusing and does not clarify anything they mean to say at all. &nbsp;,1.0,,1,40
"issue - "" . sorting by the first number followed by the second number - it will require splitting up of the data into two parts separated by '/' and then sorting the first part, followed by the second part."" - if the score is to be split by '/', it better be appended back as a single number and then used up for sorting, would simplify the task and number of iterations. issue &amp; - no files to be changed mentioned for reference &nbsp;",1.0,,1,77
"the document seems incomplete testing plan is not mentioned. the reactjs approach is not described at all (if it is not designed, its better not to mention it - its okay if the current design does not work out and need arises for a new design later). &nbsp;",1.0,,1,47
"over insertion of diagrams, table images are not needed as they represent current state, and not the state after change(if any)",1.0,,1,22
- reading the doc it looks like all they have to do is code refactoring. if that is the case then they should have mentioned the problem areas in the previous code and their solution to it. - they mentioned that they are going to use the delegation design pattern but i do not see anything which justifies the use of this specific design pattern.,1.0,,1,63
- use case&nbsp;diagrams&nbsp;are a good addition. they are easy to understand and make it easy for the reviewer/reader to understand. - if they are really sure about the delegation design pattern i would love to see some explanations in the form of a uml diagram to support their approach.,1.0,,1,52
"- they have mentioned the design pattern i.e. delegation design pattern but i do not see any proper reasoning for using this particular design pattern. an explanation of why this pattern would be useful here.&nbsp;writing&nbsp;""code reuse by inheritance"" is a very generic statement.&nbsp;",1.0,,1,48
- the doc is very detailed except for the part they are supposed to do. they covered the part which is already done but didn't talk a lot about the change which they are going to do.,1.0,,1,37
"- they listed out why&nbsp;previous work was not good but i do not see why their work is better. they claim they need to implement gale shapely algorithm because they were asked to but do not much content to support it.&nbsp; - also, they suggested that they might consider algorithms but should the design phase consider this fact? they should already have an algorithm in mind.",1.0,,1,67
- why do you need a separate infrastructure of the flask? shouldn't this be part of the existing expertiza code base? why add more complexity?,1.0,,1,25
"- yes, they explained the part very well and have now mentioned the file names as well which needs changing. as i raised an issue regarding creating a separate flask based infrastructure i think they can add more details as to why it is needed and cannot be done in the current code base which is written in rails.",1.0,,1,58
- the uml diagram is a bit ambiguous.&nbsp; - they have used different color nodes but there are no legends present to inform which node is of which type and what do these differences in color signify. - the direction was arrows that were confusing. i wasn't able to understand the user flow. they mixed up the use case diagram and state diagrams.,1.0,,1,62
"- as stated in the previous review as well the uml&nbsp;diagram is a bit confusing. - no legends provided for the difference in the color of the different boxes. should add some legends so that&nbsp;reader can understand the difference in the&nbsp;used colors. if no such difference then try to&nbsp;make it the same color. - i am confused between is it a use case diagram, a state diagram or a decision flow diagram?",1.0,,1,77
"the document only mentions the files which will be changed, doesn't talk about how or why.",1.0,,1,17
&nbsp;the two use case diagrams in the document are supposed to represent two different approaches to achieve the task. but they are one and the same.,1.0,,1,27
moving functions from a controller to a helper class does not sound like a good idea. helper classes usually contain methods written for the view. their purpose is to clean up the code in the view files by separating out logic from them.,1.0,,1,43
"there is slight improvement from the previous version but there is still scope for improvement. a test plan should specify not only 'what' features will be tested, but also 'how'.",1.0,,1,30
yes they have not localized the changes to be made but it is a good design,1.0,,1,16
the test plan are good but they do not include a test plan for the student side where they open there received reviews and check for instructor review.,1.0,,1,28
"yes the changes the authors gave are easy to follow,but sorry for nitpicking but there is a grammar mistake i think in problem statement section where the line ""&nbsp;firstly, a ta can unassign an assignment from the course which him don't belong to"" i don't there is word ""unassign"" and it should be he instead of him.&nbsp;",1.0,,1,62
design is overall good however in issue# does ta's list where they will perform lookup will contain only present course ta is the instructor of or it will have list of course&nbsp; the person has taed.because it might give unnecessary access to the ta of there past course. also in issue instead of having a boolean variable for every icon they can also have bitmask where every bit represents whether to show the icon or not.&nbsp;&nbsp;,1.0,,1,81
yes the visual aids are properly done and self-explanatory.,1.0,,1,10
"the test covers basic functionality but it does not cover the edge cases like what if a user opens the tagging report and then goes to another tab what will happen then. also, test like what if i just open the tagging page they wander around without doing any tagging and close the window, etc. they really have to think about different scenarios to add to the test plan.",1.0,,1,69
"no the flow chart they gave does not show a way for how to get reliable tags according to the metric, they just showed for the chart displaying the time taken for review.",1.0,,1,33
the explanations were vague. i don't have a good understanding for how it will be implemented.,1.0,,1,17
from the flowchart explaining the logic of how times will be saved i don't understand how it works. it seems it only checks if things were tagged once at the top then there is a loop at the bottom that resets the timer without checking on whether or not things were tagged.,1.0,,1,53
yes they did mentioned the files that they are gonna change but there is no explanation on why that file in particular to modify. if that would have been given it will be much easier for everyone to understand.,1.0,,1,39
"they have a high level design diagram, but no uml diagram included. i can understand their project from a high level. i know what they are going to do, but i do not really understand how.",1.0,,1,36
"everything is pretty completed except for the user flowchart and design part, the flowcharts are stated in above sections so its good, so the team should do a uml diagram to explain the whole structure for easy understanding",1.0,,1,38
some explanations are not detailed enough. it is better to be specific to which file and which method need to be changed.,1.0,,1,22
some explanations are not detailed enough. it is better to be specific to which function to be modified.,1.0,,1,18
"it is better to have team members included. by the way, there shouldn't be any introduction about expertiza.",1.0,,1,19
the team gives detailed steps on ui test. they also need to get the rspec included.,1.0,,1,16
the visualization is good. but the second graph seems a little bit unnecessary to me.,1.0,,1,15
the explanations is a little bit too simple. it can be more specific.,1.0,,1,13
"it just simply explained what they want to do, without illustrating how this approach will complete the requirement.",1.0,,1,18
it just simply explained what they want to do. it can be better if the team can illustrate how these approaches will implement the requirement step by step.,1.0,,1,28
they have a workflow diagram&nbsp;included in their wiki. but the instructor part doesn't follow the convention.,1.0,,1,19
"the wiki page stayed the same as last time. they could have made some more improvements. like, explain in detail about their test plan.",1.0,,1,24
 they have a workflow diagram included in their wiki. but the instructor part doesn't follow the convention. ,1.0,,1,18
"yes, their document is simple and clear. from their document, i&nbsp;could tell they have completed most part of&nbsp;the project.",1.0,,1,23
"they have adequately explained the changes to be made to the system. for each section, they explained their approach step by step.",1.0,,1,22
"yes, there's a good test plan. they showed what they will do in their test in detail. issue# login as an instructor edit the course settings of other stuff recording a video to show how the homepage change ",1.0,,1,39
the wiki page looks detailed enough except that they could add the design plans,1.0,,1,14
"the testing section needs to be added as they have written in the document. so, that is something that needs to be done.",1.0,,1,23
"well one major change would be the way the overall score will be calculated, from just the peer review to now also include the self review. though the ""new process"" heading does give a link to a google doc, explaining the formula that would be used, this still does not make things clear, as to what methods are going to be used to achieve the same, in what class are these going to be used, and also what global (if any) variables will be introduced. also, the code changes flow section does not seem to be specific enough to understand what the significance of the arrows mean in this case. &nbsp;",1.0,,1,111
"in the use case section of the wiki, more specifics would've definitely helped in understanding the big picture. the current diagram does give a brief high-level design but things like the self-review has to be done before the user can view the other work, and the formula being used to calculate the overall grades could have been mentioned, to help the user understand the overall flow much much better. as for the code-changes flow, more specifics in regards to what happens on the arrow when traversing from one method to another, would've helped in understanding the overall idea, and the technical changes proposed.&nbsp;",1.0,,1,109
"the diagrams such as code changes flow and the use case give a very very high level view, as compared to what is needed. i feel a detailed technical understanding of how the project will be designed is not being shown in the figures/diagrams.&nbsp;",1.0,,1,46
"uml diagrams seem to be missing and incorporating them with the right set of details, in terms of methods being used and models-views-controllers being considered will help in giving a bigger picture.&nbsp;",1.0,,1,35
test plan and automated testing approach seems to be missing in the doc. also more insight into why the existing code fails and how it is being improved will give a better understanding of the project at hand.&nbsp;,1.0,,1,39
"the author proposes two ways to go about sorting - jquery or reactjs. questions like why go ahead with jquery over reactjs to begin with? what advantages does it pose over reactjs? also, how does the issue of it not being displayed on certain browsers be tackled? is that resolved by using jquery or reactjs?&nbsp; i believe these basic questions should've been answered in the wiki, so that the approach being taken is considered solid.&nbsp;",1.0,,1,77
"so such aid is being shown in the document, making it hard for the reader to understand what exactly is the flow of events, or when does the reports come into the picture in the first place. but good show of the ui change is being done, which does help in understanding the second issue.&nbsp;",1.0,,1,56
"the design for this project is mostly laid out and the problem statements is to show that the reports can be sorted in all browsers, and not specific to one browser. previously, technical mentions to the same had been present, but now it is unclear as to how the same will be achieved.&nbsp;",1.0,,1,54
"a testing plan is missing in the document. also i'm curious to see if the team uses rspec at all, considering that the views are to be changed, and not the models or controllers (this is what i'm assuming from the design document).&nbsp;",1.0,,1,46
they have explained the previous phase in good details. some more details regarding the implementation for this phase should have been added. i could not find the changes proposed specially for phase .,1.0,,1,32
the design is detailed and incorporates the requirements thoroughly. some lack of visual aids for this part of the project make the otherwise good document lacking in some ways.,1.0,,1,29
no test plan found. there should be a section of how they plan to test their requirement manually (ui testing) and automatically (rspec testing). this is an important part a design doc as this will make the project tdd.,1.0,,1,39
pro: they added the cases that they will have to test. cons: the test plan needs steps for ui testing and automated testing via rspec. this change would allow them to better understand the flow they need to modify making work go faster.,1.0,,1,43
the descriptions are very brief with a complete cursory view of the topic at hand. a lot more details should have been put into making this document.,1.0,,1,27
"there is no class outline as to where the changes would go. they have very briefly described what they are planning to do with no apparent thought put in the document. as of date, this document is unclear about their design.",1.0,,1,41
there is just one diagram which gives a brief on the proposed flow. there are no screenshots and mockups. no use of uml or er diagrams to give the reader any details.,1.0,,1,32
the requirements are mentioned in the doc. but there is no real analysis done for the issues at hand. there is no detail regarding how the existing system works and what they are planning to do to implement the requested change.,1.0,,1,41
not enough visual aids and the test plan was incomplete. also there is little to no details about how they are planning to execute the approach that they stated.,1.0,,1,29
"all the designs appear to be complete and appropriate. i can see from the flow charts, which clearly show the logic of all designs for first three issues, and designs for adding test for the other three issues.",1.0,,1,38
all diagrams appear to be useful and helpful for understanding the correspondant functionalities. and they have created diagrams for each issues to be done.,1.0,,1,24
"yes, according to the project requirement, all three issues along with other three from the pr of last group have been added into their wiki page.",1.0,,1,26
"yes, they have clearly listed all files to be modified among the first three issues. &nbsp; since the last three issues only need supplementary tests, there is nothing to be modified so far.",1.0,,1,33
"as mentioned above, their design strategy seems to be kind of shallow, and did not cover how to implement on specific files or codes. however, the documentation&nbsp;is comprehensive in general.",1.0,,1,32
"their current test plan looks very shallow. they only test on the links to the functionality related to get whether a reviewer added a file/link or not. there are much more to test, including possible edge cases.",1.0,,1,38
"specfic files are still left to do. but they have listed what to improve to the view pages, but only including part of in their diagram.",1.0,,1,26
the use case diagram seems fine. uml diagram for db and relevant tables is missing.,1.0,,1,15
"they have added the necessary details. just one thing, more details about the&nbsp;anonymised&nbsp;view functions can be added.",1.0,,1,21
"as stated earlier they have explained the changes but the exact implementation is little confusing. they have written that they will be using ""update_at"", but how they are creating the matrices in step is not explained clearly.",1.0,,1,37
"yes, the design doesn't appear to be complex as understood from the uml diagram. could have provided a clearer written explanation.",1.0,,1,22
"though the design document talks about what the project is about and what are all the functionalities are to be included,the methods to realise these functionalities are not talked about",1.0,,1,31
"though there have been citations of issues and corresponding idea as to what is to be done ,helps.but also it is necessary that these be even more briefly explained with plan in code changes",1.0,,1,35
"the design provided is simple and easy to understand. although,there are no methods mentioned for the suggested design,including them would have added to the ease",1.0,,1,27
"the design document also includes test plan as part of design document,though it explains scenarios of test cases,they could have been a little explicitly mentioned than being vague",1.0,,1,30
the visual aids have been used accurately to provide better understanding of the problem. they can add something related to the solution of the problem.,1.0,,1,25
the team has made no changes compared to last submission. they have not implemented the suggestion given earlier.,1.0,,1,18
the changes that they proposed can be more detailed and include the files they will change or add. also the description is too short which doesnt provide a adequate understanding of the approach.,1.0,,1,33
the document can be improved and the design flow of implementation can be added. test plan should be more descriptive.,1.0,,1,20
"it could just be the project itself, but i don't quite get how the score calculation and the email parts of this project correlate with one another. regardless, their approach seems solid. the reason i gave this a four rather than a five was due to the fact that they didn't list any of the existing specific functions that needed modification, only the files they were located in. i believe some pseudo code or pointing out existing code would have been a great resource for reviewers.",1.0,,1,88
"like i mentioned before, more depth should go into planned changes.",1.0,,1,11
"i don't think enough is specifically detailed in their implemented design for me to be able to comment on it. so more effort, definitely.",1.0,,1,25
"i believe that they do, though i also believe that its not quite specific enough for me to be certain that they plan to implement all functionality.",1.0,,1,27
"everything is there, but most of it needs to be more thorough.",1.0,,1,12
"they're okay, but could be better. some of it, such as the design pattern section, is really nice.",1.0,,1,19
i think it has all the sections but some of them need to be fleshed out a bit.,1.0,,1,18
"they explained the changes to be made to the system clearly, but it would be better if they could give more screenshot to help understand.",1.0,,1,25
"this team gives the proposed solutions and diagrams for each issue, however, they did not describe each issue clear and detailed. also, they should give the data flow diagram of the issue, not just the use cases diagram.",1.0,,1,38
"the new design of this group is very good.thy . they give correct proposed solutions to fix the bug, and the new design looks good.",1.0,,1,25
"it is well designed. the team gave a high-level overview of the changes that they will be making, also they used&nbsp;appropriate principles and appropriate patterns.",1.0,,1,28
"yes, the design of this project incorporates all the required functionality. they mentioned three issues and give the proposed solutions to each one. &nbsp;",1.0,,1,24
this team did very well and has a great design doc. the manual test description is very clear to understand. just add more details about descriptions of issues and modify the diagrams.,1.0,,1,32
the design doc included the test plan. this team localized specific files to do the test plan and they will really test the functionalities. &nbsp;,1.0,,1,25
"yes,&nbsp; their design did have the test plan, however, it is too simple to implement. they should mention more detailed test cases in the design doc.",1.0,,1,27
"in your 'approach' section, their diagram is&nbsp;too high-level design. i think it's better to clarify what the expected output is.",1.0,,1,24
their explain about the changes is a little high-level. such as 'fix the function in ruby'.,1.0,,1,17
"the test plan is missing details, i think it's better not only use the automated code.",1.0,,1,17
it seems that they just repeated the requirement in the given document and didn't explain their plan in detail. it would be better if they add explanations to each point of problems to explain how they plan to change the code to achieve the goal. but the code changes flow diagram is clear and shows that they have their plan of work. and they design a formula to calculate the composite score. the formula is reasonable and in detail.&nbsp;,1.0,,1,81
they add a visual aid to describe the progress of calculating the score of a question. but it is a little too high-level because it doesn't explain how they plan to fix the problem. the diagram doesn't provide enough details about their work.,1.0,,1,46
the sorting functionality for items seems a bit convoluted as it has a lot of repeated code and many different branches to an if statement. this could possible be made dryer.,1.0,,1,31
"no, just doesn't go through (no error message though)",1.0,,1,10
not fixed:&nbsp; x&nbsp; &nbsp;admin is still able to edit email/password fields on admin acct (when going through manage users) fixed: - sorting for all columns that need to be sorted - otp functionality - proper functionality hidden from visitors - admin can buy items &nbsp; &nbsp; &nbsp;,1.0,,1,47
able to access other user's profiles by modifying the link url,1.0,,1,12
"there is a test file for availabilities, but it has no meaningful tests",1.0,,1,13
 unable to create/edit/destroy users&nbsp;as&nbsp;admin credit card information is missing note: editing users forces you to create a new password for them,1.0,,1,27
"the change_status function in transaction folder. although it is understood that the status is getting changes, but not indicative of what, item or transaction? &nbsp;",1.0,,1,25
"two commit on master ) fix bug item form, quantity, error info ) backup yarn.lock and package.json",1.0,,1,17
"the method def create in transaction controller has many if/else and nested statements. also the update method in the same controller have many if/else statements, some of which are based on character matching. so if the string or character changes in the ui by any chance, all the backend code supporting it will fail. &nbsp;",1.0,,1,57
the variable permitted in the sessions controller was a little confusing to read on the first go. the variable contains email id and password for the user signing in. it would have been nice if it was more explanatory as user_id_pass or something. also&nbsp;valid_transitions is a list of statuses. this list didn't tell much information of what each status code represents in transaction model. it could have been made more sense to make and enum with status names for better understanding.,1.0,,1,84
the code is pretty organized and readable with the names of controllers and models clearly indicating the intent. the structure has been well thought of and error handling has been done everywhere possible. only critique would be refrain form using nested if/else and relying on ui text for controlling actions.,1.0,,1,51
subscribe approval of return items sort functionalities are breaking the page&nbsp;,1.0,,1,12
the wishlist and cart functionality has been implemented nicely. the subscribe functionality is not implemented . i could not check for admin functionalities as admin login id and password were not provided. overall i really liked the ui and taking care of age restricted items is nice!,1.0,,1,46
"many of the commits were something like ""development"" or ""new change from master"" or ""fix bugs"" with no ties to issues nor any more info about them. i would suggest for them to use the github issues to track commits closer.&nbsp;",1.0,,1,42
"some of their issues, like&nbsp;https://github.ncsu.edu/yzhan /csc -p -crazy-wolf/commit/a f eebf fe c cfcf bd d handle many different things in a bunch of different classes .&nbsp;",1.0,,1,35
the create for transactions was crazy long method that handled many different tasks. same with the update. i think they made some of their other methods cleaner by shoving it all in that method. it was lines long!,1.0,,1,38
most of their code was good ruby code and used great conventions including low method coupling. the exception was in their purchases controller where they had huge methods that did a lot of crazy things.&nbsp;,1.0,,1,36
mailer to subscribe to unavailable items not implemented not able to see a buy now option to directly go to payment page user not able to clear cart no emails sent on completion of purchase user not able to request a return&nbsp; no emails on approval of return request &nbsp;,1.0,,1,51
any item in cart is removed on the user logging out of the account. therefore could not test this functionality&nbsp;,1.0,,1,21
the&nbsp;buy_it_now_checkout and&nbsp;buy_cart_checkout methods in the checkoutpage controller could probably be broken into smaller pieces using methods.,1.0,,1,20
"the user can click on ""sign up with facebook"", which will take them to a new account page with their email address pre-populated from facebook. however, there is no way to login through facebook. the user must type in their name and password as usual.",1.0,,1,46
"the only model test i saw was test/models/availability_test.rb, which was empty.",1.0,,1,14
"the requests still appear, and lead to an error page when the admin clicks on ""approve request.""",1.0,,1,17
"i noticed a bug with checkout/buy now. initially, i entered by birthday as "" "" and both checkout and buy now took me to an error page. when i changed by birthday to "" - - "" i was able to checkout and buy now successfully. there needs to be some kind of validation to ensure the user enters a valid birthday. also, the user can enter a phone number, credit card number/expiration date/cvv that is the wrong length or that contains letters. as the admin, i was able to change the quantity of an item to - . when i tried to change an item's id to a number that was already taken, the app changed it to a number that had not been taken.",1.0,,1,122
"multiple non-descript commit messages such as ""new pull"", ""merge"", ""update master"", and ""new change from master"" are used.",1.0,,1,19
some of the commits (especially the non-descript ones) handle multiple tasks.,1.0,,1,12
"admin still cannot see purchase history categorized by users. in addition, the popularity metrics used are not apparent, even to the admin.",1.0,,1,22
"there is a notice/warning, but the same notice/warning pops up even if an item is not in a user's cart.",1.0,,1,23
"many of the commit messages were non-descriptive. for instance, some commit labels were ""actionmailer under development"", ""fixing bugs"", ""fix error"", and ""final refactoring"". these are all non-descriptive and very vague messages that could be more tailored to the tasks at hand.",1.0,,1,43
"some commits handled many different non-related tasks. for instance, one commit handled routing for admin, rating conditions, and add item functionality. in addition. one other commit handled the feedback functionality along with sort and filter.",1.0,,1,36
users could finally login as an admin. sorting based on popularity and cost still was not functional and filtering by brand/category/availability was rather crude in that users could not filter based on multiple criteria. items could not be bought or added to wishlist without giving an error.&nbsp;,1.0,,1,50
"users can see all the feedback made along with the names of the user who made the feedback, a feature that should only reside with the admin.",1.0,,1,27
"there was an attempt at allowing users to login via facebook. however, i could not login using this method due to an error with the api used.",1.0,,1,27
the test cases used were auto-generated from the scaffold and minor tweaks were made.,1.0,,1,15
"taxes are not presented as intuitive numbers, instead labelled as ""tax slab"" with no context on the numbers. also, visitors can see the ""add to cart"", ""add to wishlist"", and ""buy now"" options under the ""show"" section of each item.",1.0,,1,40
"this application does not let a user successfully sign up for an account. therefore, none of the functionalities for a user could be seen.",1.0,,1,24
there is an error when attempting to delete a user that was subscribed to an item.,1.0,,1,16
user cannot add items to a cart without getting an error.,1.0,,1,11
"for the functionality present, most edge cases (except multiple filtering criteria) were handled.",1.0,,1,13
no option to reject return/special item request for admin.approval of return request/special item requests fails in some cases. might want to check fkey violations.,1.0,,1,27
some methods seem a little convoluted where the functionalities could have been refactored as a method.for example index method in purchasescontroller . the sorting code is repeated and could have been refactored as a method with params.(violates dry principle),1.0,,1,40
"some commit messages are confusing and do not indicate the actual changes being committed.for example,&nbsp;can images be added now?&nbsp;, is this a question,a fix for the problem?",1.0,,1,32
there are fewer and larger commits for functionalities/entire features.it is a good practice to make smaller commits and extract feature branches for the feature you're working on.,1.0,,1,30
"all variable names are descriptive. however a few extra&nbsp;tables are found (articles, statuses, order items) their relevance is not immediately clear and&nbsp;the db design seems a little convoluted.",1.0,,1,32
"some functionalities are still broken.cannot view/add to carts, the app crashes.user should not be able to view all&nbsp;feedbackscannot edit users",1.0,,1,25
"a few extra&nbsp;tables are found (articles, statuses, order items) their relevance is not immediately clear and&nbsp;the db design seems a little convoluted.",1.0,,1,26
"item attributes seem to be present, but could not test any of the functionality and if the data was actually saved.",1.0,,1,21
"needs a lot of work, no admin credentials provided.could not signup with a user.&nbsp;",1.0,,1,16
"clicking my wishlist for admin redirects to login page, while admin is still logged in.",1.0,,1,15
"when submitting the otp, the button should say submit rather than search. when wrong otp is entered, the order is added to the purchase history but the status is rejected; not sure if this meets the above requirement. the checkout page should show the added tax according to the tax slab.&nbsp;",1.0,,1,52
"&nbsp;i feel like the admin should be able to sign in through the regular user login. when editing a user as admin, i should not have to enter a password for the user i am editing for the form to save. i don't see the ability to view purchase history by users. i don't see where the admin is able to receive special item requests or return requests and approve them. checkout functionality not yet implemented. age restricted items do not work properly, under can still purchase. there is no buy now button. completion emails are not being sent. orders page does not show what actual item i purchased.",1.0,,1,112
otp is not enabled as checkout page doesn't work correctly. tax slabs are not visible on checkout page.&nbsp;,1.0,,1,20
i don't have admin credentials. i am not able to sign up for an account and get an error. i do not have account credentials to test the listed features. cart and wishlist don't seem to record items. visitor has access to add to cart and buy now buttons as well as wishlist. there is no feedback button.&nbsp;,1.0,,1,61
"the sign up form sometimes causes to stay on the same page after submitting(all passwords correct, must fields added). the create new button creates a new item but gives a error.",1.0,,1,32
"the ui for going to admin login and user order is very unconspicous, they can be highlighted better so user does not have to look in the page to find where they are.",1.0,,1,33
"in general, the messages are clear. the last few messages could have been clearer.&nbsp; final touches more elaboration on what these final touches are would have been more indicative and clear.",1.0,,1,32
could not test the application as the application was not deployed. the link provided only displays the default heroku welcome page. they should&nbsp;have double-checked to ensure that the application was deployed correctly.,1.0,,1,35
i could not really test this completely because the cart page is not working and even creation of a new item with quantity was not possible as new item age is also throwing error. screenshots for the same have been attached in the previous comments.,1.0,,1,45
"again i could not test this functionality as well as the create user module is not working as expected and no new user accounts are being created. however, judging by the code in the repository they seem to have implemented it.",1.0,,1,41
"deleting an item which is in users cart happens smoothly, however, the cart page stops working:&nbsp; https://drive.google.com/open?id= vy udnzv vlotdoe-e zgehog gccgv &nbsp;",1.0,,1,30
the following are the commits where multiple tasks were handled https://github.ncsu.edu/shmehta/store-management/commit/ a ca d c ab eccbfe c d cb ,1.0,,1,27
"while creating a new item the categories field seems to be reading from an existing list of the items. this causes problems because the field is compulsory and if the list of items is empty in the beginning. while editing the user profile it is asking for the password, which is not required as the password has already been given.",1.0,,1,60
 the mail of the purchased details does not include the tax in its total amount. the mail of the purchased details of a senior citizen does not include the discount applied ( %) and the tax applied during the purchase. unavailable items can be still bought if the user goes into the show page of the item and click on the buy now button. ,1.0,,1,62
"the&nbsp;dependent: :destroy has not been used in the users - orders, users - carts, users - wishlists associations, which will mean that if the user is deleted, then the corresponding information will still persist.",1.0,,1,33
"some of the commits' messages are not clear. the following are the commits that i found to be unclear- &nbsp;https://github.ncsu.edu/skmuppal/store-management-redefined/commit/ fa e bf bb ba a b d b e &nbsp;-&nbsp;this says ""main page and stuff"" which i found to be unclear. &nbsp;https://github.ncsu.edu/skmuppal/store-management-redefined/commit/ eddd f eb ef f e e cbdf &nbsp;- this says ""something is cooking"" which i found to be unclear. &nbsp;https://github.ncsu.edu/skmuppal/store-management-redefined/commit/ c c fccbb cbaff bc bd ed e&nbsp;- this says ""just testing waters"" which i found to be unclear.",1.0,,1,113
"there are some commits that have multiple tasks. the following are the commits that i found to have multiple tasks- https://github.ncsu.edu/skmuppal/store-management-redefined/commit/ a d c c ef aad cc cdc e f&nbsp;- ""done with cart and wishlist"" which is handling multiple features. &nbsp;https://github.ncsu.edu/skmuppal/store-management-redefined/commit/b ee ee f f e f f b bd c da&nbsp;- ""done with cart and sort"" which is handling multiple features.",1.0,,1,83
subscribe feature is visible but the notification email of the availability is being received. website crashes when attempting to use buy now button. website crashes when attempting to buy an item through the cart. cannot test the approvals as the application crashes after attempting to buy.,1.0,,1,46
"user.rb -&nbsp;has_many :items, dependent: :destroy &nbsp;the above statement means that when the user is destroyed, the items are destroyed as well, which is a problematic association. &nbsp;has_many :purchases &nbsp;has_many :carts &nbsp; the above statement means that when the user is destroyed, the corresponding purchases and the carts will not be&nbsp;destroyed as well, which could make the website prone to errors. &nbsp;item.rb -&nbsp;has_many :carts&nbsp; &nbsp; the above statement means that when the&nbsp;item is destroyed, the corresponding items in the cart will not be destroyed, which could make the website error-prone.",1.0,,1,103
the subscription option although available is not implemented as the user is unable to get the mail of availability.,1.0,,1,19
cannot check the special item requests as the website crashes after attempting to buy.,1.0,,1,14
"there are some commit messages which are not clear of what changes were made in the commit. example, i am not sure what 'minor changes' does, or 'updated session#new' does. but these were only a few of them. most of the commit messages are self explanatory.&nbsp;",1.0,,1,48
i am not receiving an email once i purchase the items from my cart.&nbsp;,1.0,,1,15
there are few&nbsp;ambiguous commit messages.example a) minor changes b) otp changes,1.0,,1,14
"there are some ambiguous commit message such as ""still in dev stage"" or ""can images be added now?""",1.0,,1,18
i didn't find the design intuitive and easy to navigate. i would've preferred links to add to cart and buy now closer to the home page. i also didn't understand the functionality of new cart (though i couldn't check how it worked since i wasn't able to create a user),1.0,,1,55
add to cart and add to wishlist worked in the previous&nbsp;round but don't work now,1.0,,1,18
"the navigation has been made better but basic functionalities such as&nbsp;sort,add to cart,add to wishlist, buying items don't seem to work",1.0,,1,26
"the models are not as concise as they can be. an example is the presence of item , wishlist and wishlist_item, where wishlist_item seems excessive for&nbsp;the required functionality.",1.0,,1,29
"even though the user attributes are present, i wasn't able to sign up no matter what format of dates i tried. hence payment couldn't be checked. login also couldn't be checked since no admin info was provided",1.0,,1,40
user is unable to buy items and special items feature is not implemented&nbsp;,1.0,,1,14
cant be checked since user cant add items to the cart,1.0,,1,11
not many edge cases can be tested since many basic functionalities don't work,1.0,,1,14
there are some commits that do not make s admin basic functions working can images be added now? cart functions working&nbsp;what functions? dev nita &nbsp;,1.0,,1,27
create method in registrations controller. update method in cart items controller. index method in items controller.,1.0,,1,16
"@comment in comments controller, not sure why it was named comments controller. @wishlist_total in wishlist controller does not make sense. cart_qtys in admin model does not make sense.",1.0,,1,28
"is the admin able to log in and create/view/update/delete items/users? are the email and password fields disabled/hidden when she/he tries to edit the admin account? is the admin able to buy items? is the user able to log in with his/her email id and password? is the user able to edit his own profile? is the user able to see a &ldquo;buy now&rdquo; button for an item and does it redirect to the payment page? can the visitor see a &ldquo;register now&rdquo; button or &ldquo;register to buy&rdquo; button? are the features that should be visible only to registered users, hidden for visitors? (for example, visitors should not be able to add to cart/subscribe to an unavailable item) are the visitors able to give feedback? is it possible to sort items based on some sort of popularity metric? is it possible to sort items based on popularity/cost? is it possible to sort items based on brand/category/availability? &nbsp; is the mailer implemented for &ldquo;subscribe&rdquo; to unavailable items? &nbsp; &nbsp;",1.0,,1,186
the two spaces indendation had been followed well. &nbsp; dry priniciple has been followed &nbsp; tests have been written &nbsp; clever use of the ruby in-built methods &nbsp; only draw backs would be - ) not good use of each instead of for ) not smart use of enums.,1.0,,1,47
not able to sign up as an user and log in,1.0,,1,11
"not able to check the details as i m not able to buy items from the user, not able to go past the card page.",1.0,,1,25
not able to add items to users cart to check this feature,1.0,,1,12
can create users have date of birth greater than today. expiry date can be any random number quantity for items can have negative values,1.0,,1,24
"i could spot a few commits saying just ""bug fixes"" and ""update ui"".",1.0,,1,13
" . visitors can still see the buy now option but are redirected to the login page. . admin is still able to see the destroy button for his own account. however, it doesn't actually destroy. just removing the button would be better. . the user can still add unavailable item to the cart. however, he can still not purchase it. i think&nbsp;he shouldn't be able to add it to card as well.",1.0,,1,73
the request still shows up in the list. it should have been deleted.,1.0,,1,13
it seems that the card details are not provided at user sign up but they are asked at the checkout. i think that might be because the application may handle one-to-many relationship between a user and multiple cards. this could be more intuitive if you can mention it while user sign up.,1.0,,1,54
" . visitor is still able to see add to cart and add to wishlist. however, it is redirected to the login page afterwards. . all the sorting options seem to be broken. application error! . admin is not able to view the purchase history . user can not add items to cart/view cart. application error! . user can't buy an item. even after adding the card details on sign-up, i was being asked to enter card details on buy now. so i entered the details again and then it said ""user must exist"".&nbsp; &nbsp;",1.0,,1,93
"as a no-admin user, i was able to reach ""https://herokart-app.herokuapp.com/user/index"" which is the admin panel listing all the users.",1.0,,1,26
"it seems to be broken. i am receiving the following error: ""url blocked: this redirect failed because the redirect uri is not white-listed in the app's client oauth settings. make sure that the client and web oauth logins are on and add all your app domains as valid oauth redirect uris.""",1.0,,1,53
"since user couldn't buy and item, i couldn't send the request to special item and check this edge case.",1.0,,1,21
"since i can't add items to cart, couldn't test this case.",1.0,,1,13
"i&nbsp;wanted to try adding the same item to cart and wishlist. then but it directly from the wishlist, and check if the cart is affected or not. but since the cart and wishlist doesn't work, couldn't test it.",1.0,,1,42
"current_wish, only_see_own_page methods in &nbsp;app/controllers/application_controller.rb ,&nbsp;sort_by&nbsp; method in&nbsp;app/controllers/items_controller.rb,&nbsp;&nbsp;byuser and byitem method in&nbsp;app/controllers/purchase_history_controller.rb do not indicate what exactly they are doing.",1.0,,1,39
"credit card information can be seen only while checking out, while updating the profile its not visible.",1.0,,1,17
"the feedback has no association to user/admin/visitor. item in wish list does not have association to user,&nbsp;",1.0,,1,20
"the team tested user model. the missing test cases are, are credit card details present, is credit card number digit, is cvv number digit an does the user have address ?",1.0,,1,30
"restricted item, special item and tax slab attributes are missing",1.0,,1,10
"credit card number, name on card, expiry date and cvv are all missing",1.0,,1,13
 ) updating credit card details of the admin is not possible. ) the history of special items and return requests is not being stored anywhere.,1.0,,1,23
"though the homepage shows the items, it doesn't provide any details. no option to sort items.",1.0,,1,17
"in multiple controllers file, there have puts('hi') and puts('hello'). i am confused about what it expected to do.",1.0,,1,20
" in the checkout page, there isn't tax and all cost of the order information. in the cart age, it has the tax, but it's hard to notice the different tax. the detail of tax isn't show in the cart page. ",1.0,,1,43
"in the orders_controller, i not sure what session[:q] and params[:q] are.",1.0,,1,13
" the image of item doesn't work no information shown when click buy now and input credit card information. it just shown a payment code,&nbsp; i can't see the item, values, tax i bought before the age restricted and special item restricted are processed as same special restricted item.&nbsp; when nothing in the cart, the cart icon on the top is shown as ""cart "". when i click into, it shown ""cart "" some error happened when admin check each user's purchase history. in one user(eg, td, mailertest) purchased history,&nbsp;multiple users order history are shown in one user history the order has a status which is ""pending payment"". but there is no way to actually keep going to pay this order ",1.0,,1,126
"in my own opinions, the return_items_controller is doing the return action of item that is better to put in items_controller. same thing for order_process_controller and orders_controller.",1.0,,1,26
" image of the item (png or jpeg files only) tax slab. in the cart, the tax can't be showed. the item can't be sort combined the availability, brand and category.&nbsp; the item can't be searched by name. the item can be sorted by the category and brand, but it need customer to input the category and brand. the customer should could choice the categories and brands from dropdown. ",1.0,,1,72
" the admin can't checkout in the cart page. the admin can't buy now in the item age&nbsp; and admin can't approval the special item requests and return requests.&nbsp; the admin can't view the purchase history by items. in the orders page, the&nbsp; ",1.0,,1,49
"""the page you were looking for doesn't exist."" when i delete the user who subscribed an unavailable item and try to update the item to available.",1.0,,1,27
" when i add all repository of one item in cart, i add the item from wish list button ""add to cart"", the quantity of the item in cart can over the number of the item. i add book in the cart, the number of book is . i can add book from wishlist, the quantity of the book could be it can pay successful for the item quantity expected to buy more than the number of item it have. i can buy book which only have when all of one item be bought, the item won't shown as unavailable when admin check the item, some button ""add to cart"" ""buy now"" ""add to wishlist"" is inactive, but the quantity of this item is . ",1.0,,1,123
"commit # ebcc, the commit message said ""user management added for admin"", but the actual content pushed was about purchases.",1.0,,1,19
creating an item with empty form and going back to the items page by clicking the 'online store' as an admin all led to error pages. not sure if these were errors in deployment?&nbsp;,1.0,,1,35
i can access every user's information without logging in.,1.0,,1,10
no tests were found. all the currently existing tests seemed to be auto-generated.,1.0,,1,14
"credit card information also to notice, i signed up with my school email but the website indicated me as an admin...",1.0,,1,21
"was trying to submit an empty item creation form, hoping to see error messages asked me to change some invalid inputs, however, the app crashed instead. also, there are no validations of inputs everywhere of the website, and it should be the cause for your program to break.",1.0,,1,48
"expiry_mm.nil? and expiry_yy.nil? even tho i know what they mean, i dont think its a good idea to have abbreviations for names, could be confusing. &nbsp;",1.0,,1,28
"there are a lot of migrations, could be confusing.&nbsp;",1.0,,1,10
"no items to see at the moment, link to view items is not working.",1.0,,1,14
user shouldnt be forced to put apt/suite as it may not apply to all. cannot see items to add to cart.,1.0,,1,22
the subscribe is not actually working i don't believe.,1.0,,1,10
"i do not see any methods that are not indicative of their purpose. there are, however, controllers whose purpose is not clear. like mainpage_controller, store_controller, and purchases_controller vs. purchaselist_controller (they both should list purchases, so what purpose is unique to each?).",1.0,,1,41
"the commit messages are descriptive. it is easy to track down what changes happened in each commit. the one bad one i noticed is ""because we're merging"". this&nbsp; does not describe what is happening in that commit.",1.0,,1,39
"there was a commit message that states ""done with cart and wishlist. ideally, even though cart and wishlists are related, these should be done in separate commits to keep commits as small as possible and limited to one feature. also, i'd say ""added"" cart and wishlist, it is more descriptive to what is happening.",1.0,,1,55
there are no items in the store and i can't log in with admin to add items to the store.,1.0,,1,21
"i cannot create a user. before, i had trouble creating a user, but was able to. my phone number was not formatted correctly when creating a user, but there was no error message indicating that was the issue, so it took a lot of trial-and-error to figure it out. this time, even with the phone number formatted correctly (or at least what was correct last time), the app crashes when i attempt to create a user. if i can't create a user, i cannot test. it would be good to have helpful error messages as to why user creation is failing. &nbsp; i was able to sign in via google. but cannot update my info afterwards.",1.0,,1,119
"i am unable to access private content of other users. however, i have had a lot of trouble around creating a user to test with, and am not able to view purchase history since i cannot purchase items. therefore, it's hard to test whether this is functioning correctly.",1.0,,1,49
"there are test classes for every controller, but they seem to only test positive scenarios for basic crud operations. corner cases are not tested.",1.0,,1,24
"in many places, yes. however, there seem to be controllers that don't seem to have unique purposes or even a purpose at all. in the registrationscontroller, there is a method that simply returns the path for items. there are built in helpers for this. in the mainpagecontroller, the index just redirects to the items page. you can set the root path to items instead. the mainpage does not have a purpose. in the wishlistcontroller, there is only an index function. how do items get added to the wishlist? wishlist functionality should be in here. the storecontroller only has an index function, and i see this line ` format.html # index.html.erb`. not sure what the intended functionality is, but it is not clear.",1.0,,1,124
there are no items in the store and i can't login with the admin. so i can't tell if there are missing attributes for item.,1.0,,1,27
"i created a user with the google sign in since i couldn't using the normal process. since then, the app now crashes every time the admin tries to view users, so i cannot test this functionality.",1.0,,1,37
"after creating a user with google since i couldn't create a user using the normal process, i added an item to my cart. the app didn't crash immediately after deleting the item, but after going back to the user's cart, the app crashed.",1.0,,1,46
"since i cannot create a user normally, i created a user via the google sign in. after that, a lot of functionality seems to be broken. e.g., admins can't view users. as the user, the app crashes whenever i try to access purchases, cart, or wish list. i also can't purchase items (app also crashes). it is hard to test corner cases when a lot of the functionality isn't present.",1.0,,1,74
"most of the commit messages are indicative of what changes are made in that commit (even though there are some extra files which are not related to that commit message), however some of&nbsp;the commit messages are too generic. for example: bug fixes:&nbsp;https://github.ncsu.edu/shmehta/store-management/commit/af e b e c cd bd b baa ecc dc minor changes:&nbsp;https://github.ncsu.edu/shmehta/store-management/commit/d a b ebc a e a a ce cb a f add search functionality:&nbsp;https://github.ncsu.edu/shmehta/store-management/commit/b afe d dd b f b c &nbsp;",1.0,,1,108
some of the commits are handing multiple tasks: bug fixes:&nbsp;https://github.ncsu.edu/shmehta/store-management/commit/af e b e c cd bd b baa ecc dc minor changes:&nbsp;https://github.ncsu.edu/shmehta/store-management/commit/d a b ebc a e a a ce cb a f add search functionality:&nbsp;https://github.ncsu.edu/shmehta/store-management/commit/b afe d dd b f b c ,1.0,,1,73
"-&nbsp;if a credit card is not present for a user, the user gets informed during checkout process, however, the navigation from adding credit card back to checking out the cart is difficult. it would be better if there was navigation bar in each page, so that a click on a button would redirect use to that page instead of having to go back multiple pages.",1.0,,1,66
 all the issues that were related to visitor have been fixed. all the issues related to admin have been fixed. all the issues related to user have been fixed all the issues related to otp have been fixed following issues still need to be fixed: the checkout page doesn't use the associated tax slab with each item for calculating cart value there is no tax slab associated with any items ,1.0,,1,71
"- tax slab for an item is missing - item image is missing - unique id of an item is missing - total available quantity of an item is missing - there was only one option for category - ""sports shoes"". hence, i had to save ""car"" in sports shoes category.",1.0,,1,45
"delete option is given for the admin user , but nothing happens on clicking ok",1.0,,1,14
redundancy can be reduced at some places. code can be reused,1.0,,1,11
the user should be able to continue purchasing after adding a credit card.,1.0,,1,13
subscribe for unavailable items is not implemented. the user shouldn't be able to buy unavailable items. there should be a back button after clicking on checkout cart.,1.0,,1,28
"it seems the sorting function is not working properly, after clicking on ""update"" button, an error occurred saying the website is not working or so.",1.0,,1,25
"the mailer is implemented but seems not to be working properly, after clicking on ""subscribe"", the web is redirected to a page with a line of code on it, saying ""{""id"": ,""created_at"":"" - - t : : . z"",""updated_at"":"" - - t : : . z"",""item_id"": ,""user_id"": }"".",1.0,,1,39
"&nbsp;although i am able to see all the three items by clicking on the ""item"" button, i am not able to see corresponding items in the categories.",1.0,,1,28
"when i tried to sign up, it ended up with an error, saying ""we're sorry, but something went wrong""",1.0,,1,20
expired credit card new change from master merge update master new change from master save change,1.0,,1,16
"all model tests seem to only contain one test case, should test various types of validations associated with each model as well as any functions that exist in the respective model",1.0,,1,31
"item deleted with no warning, but app doesn't crash.",1.0,,1,10
delete test fixing bugs merge branch 'nita_user' into cart_dev can images be added now? added routes,1.0,,1,16
"can kind of sign in with facebook, however when taken to the facebook page an error is thrown. very possibly caused by how i have facebook settings set up.",1.0,,1,29
should tests each validation for a specific model as well as any model functions implemented for that model respectively.&nbsp;,1.0,,1,20
"i was unable to sign in as the admin account even using the email and password on the site. i was unable to sign up as a user and got the generic rails error when i clicked sign up, but thought it must have been tied to the format. i was able to sign up when i changed the format of my phone number. unfortunately, there is nothing present in the store, and i am unable to to add any new items. actually, nevermind, i was able to go to the /items/new path by typing it in on the url, and add an item (too lazy to erase what i wrote). &nbsp; there is no wishlist. no mailer. not enough inputs on the item (just name, brand, category, and image but no price, restrictions, or quantity). no buy now button. you can remove items from the cart, but only one at a time. no checkout cart. no purchase functionality or history.&nbsp; &nbsp; visitor is unable to get to the items page without using the url, but once there, can use the register to add button which properly routes to the sign up page. &nbsp; &nbsp;",1.0,,1,197
"it seems that special item and return requests cannot be rejected. otherwise, all functionality implemented as requested in previous review.",1.0,,1,20
"there was an attempt to implement this feature. it cannot be done from the ui, and visitors are redirected to the login page whenever they try to use the url, but once signed in, a user can access another user's page by using&nbsp;https://sleepy-wave- .herokuapp.com/users/ .",1.0,,1,51
"the code seems to follow good practices in most places, however there are a lot of scaffolds implemented that may not have been necessary.",1.0,,1,24
"the request does not get deleted, and the app crashes when you try to approve the request.",1.0,,1,17
there are no validations for credit cards past the presence.,1.0,,1,10
"""removeone"" in the carts_controller file doesn't give any indication of what is being removed, or why, but otherwise pretty good.",1.0,,1,21
"fairly consistent and useful, though there are some like ""still in dev stage"" and ""can images be added now? that aren't entirely useful.",1.0,,1,24
"i am unable to accomplish much with the design of this site, and even on the pages that seem to be doing things, their responses (like the cart) aren't formatted in a way that lets me know what's happening.",1.0,,1,41
"overall, there are very few methods that do more than one task. there are functions in the controllers like the carts controller show method that set several variables but may not call other functions to do so.",1.0,,1,37
"some instances of twice nested methods in items controller and users controller, but overall, methods are fairly simple.",1.0,,1,18
"fixed: admin is able to log in admin is able to create items (but users and visitors can also do this) email and password fields for admin account are hidden user is able to log in user is able to edit their own profile mailer implemented for subscribe to unavailable items&nbsp; visitor sees register now button (doesn't say register now, but it redirects to the login page) filter by brand and category not fixed admin not able to view purchase history admin not able to edit or delete users admin does not receive special item requests admin unable to add items (since the cart option for the admin seems to redirect to user sign in) user is unable to add items to the cart (error) user is unable to add items to the wishlist (error) email not sent when a subscribed item comes back into stock. age restrictions user unable to clear cart check out&nbsp; purchase and emails purchase history returns visitor being able to see restricted pages (view feedbacks) sort by popularity sort by cost otp emails ",1.0,,1,181
"i don't think you needed all models. and i am confused about the relations between some. you have implemented different ""items"" where i think only two were necessary. the wishlist does not require any modification of items, so it could probably just use a has_many :items. i'm not sure that the category model was necessary. items have a category in their schema already. the admin model was also a little unnecessary, as was the separate admin login. i thought the status, tax, and payment models could all probably be implemented in the schema of other models as well.",1.0,,1,100
"i am able to use the url to get to the user index and see information about all the users. as a visitor, trying to click anything on the pages usually redirects me to the login page.&nbsp;",1.0,,1,38
all tests are missing. there are no tests written for the models.,1.0,,1,12
"there is a lot of just commented out code that makes the entire repository seem pretty bloated. there is also very little done in the model, and most of the functionality is carried out in the controllers. also, there are far too many models and controllers. i think you could have modified some of the initial ones rather than adding so many new ones.&nbsp;",1.0,,1,65
"there is no sorting of items. i'm not really sure what the point of the categories is, but it seems unnecessary.&nbsp;",1.0,,1,23
"i didn't have any admin login credentials so i was unable to login as the admin.&nbsp; i was also unable to create a new user. i am guessing that this was somehow related to the data being taken in. i got the default rails error when i pressed 'sign up'. luckily it seems that the site doesn't do much to remove capabilities from the visitor, so i will give my review based on the assumption that the visitor is acting as the user.&nbsp; the cart - the cart is poorly formatted, so i really have no idea what is in the cart. i can't be sure if the item was added or not, i see nothing in the developer tools that makes me think that the item selected was ever passed to the cart. i can destroy a cart, which would effectively clear it, but then there is no cart to add items to. this seems flawed. i am at least able to view all items wishlists seem to have been scaffolded, but again show nothing ",1.0,,1,180
"since users cannot be deleted, and an email is not sent when the item comes back into stock, this edge case cannot be properly tested.",1.0,,1,25
"there is no way to see special item requests, and the admin cannot delete users, so this is not possible to test.",1.0,,1,22
"there is no way to add an item to the cart right now, and the admin is unable to delete users, so this edge case cannot be tested.&nbsp;",1.0,,1,29
"some of the commit messages were not so descriptive ""nothing here"" ""fix filter"" which filter? ""typo in html"" which page? mostly, the commits have perfect amount of info.&nbsp;&nbsp;",1.0,,1,30
it does not seem that subscription functionality is in the web app.,1.0,,1,12
"when a return request for example is submitted with a user, and then the user is deleted, the return request is not removed.&nbsp; i think this could be implemented in the destroy method for users.&nbsp; when destroying a user id, also remove requests for that id.",1.0,,1,48
one annoying issue is when creating items.&nbsp; it only accepts .jpegs and .pngs.&nbsp; all my images are .jpgs.&nbsp; and it would not accept that format.&nbsp;&nbsp;,1.0,,1,30
"viewing the cart, viewing the wishlist, adding to each, it is not so intuitive.&nbsp; using a navigation bar would better help site map control. &nbsp;",1.0,,1,26
"some overlap for models. ""cart"" and also ""cart_item"" ""wish_item"" and ""wishlist"" ""article"" i think it is unnecessary&nbsp; ""order"" vs ""payment"", can it be consolidated? &nbsp;i still give this high grade as a .&nbsp; because it is a choice of implementation.&nbsp; but some of these models could have instead been implemented as array attribute for user model.&nbsp; for example, user.cart would contain array of item id's that are in the users cart.&nbsp; and a table could be implemented in such a way that mvc is not needed for cart_items.&nbsp; this may have been easier to implement.&nbsp; but again, design choice.&nbsp; and the model structure looked good + followed template designs.&nbsp; i saw many familiar practices, such as has_many: and belongs_to:.&nbsp;&nbsp;",1.0,,1,131
"from what i mentioned in the above edge cases.&nbsp; when logged&nbsp;out,&nbsp;the visitor can still access many of the pages on the site by just typing in the url.&nbsp; for example, a visitor can delete users.&nbsp; and sort of hack their way around the site.&nbsp; many of these forms and important content could have been hidden, by adding render conditionals, to check whether a session is logged in or is_admin? for example, before displaying information on views.",1.0,,1,84
i do not believe facebook authentication works for customers.&nbsp; my facebook blocked the authentication request from the heroku site.&nbsp;&nbsp;,1.0,,1,22
"there are many test files, for almost all models in the web app.&nbsp;&nbsp;but it seems that most of them are empty.&nbsp; in fact, i didn't find any models that were actually tested.",1.0,,1,37
"there is no register now button.&nbsp; instead it seems that i can view add to cart, add to wishlist, buy now buttons.&nbsp; also i can use those buttons to view cart and wishlist and add payments.&nbsp; fyi, you can hide buttons or render things differently based on ruby conditional in the views.&nbsp; try adding a method called ""is_admin?"" and ""is_logged_in?"" , and calling to to check whether the current user is logged in or is an admin.&nbsp; then you can render tables or hide them based on those method returns. i cannot find a place to leave feedback for items.&nbsp; if it's there it should be more apparent.&nbsp;&nbsp; i also see no way to sort items.",1.0,,1,124
"when i was trying to log in, i was getting the following error.&nbsp; i'm not sure if something entered in the form is wrong.&nbsp; but if that is the case, the model can include a validates attributes, and the controller can include a throws errors option, so that the user for the site has some idea of what errors are occuring, when trying to create an account.&nbsp;&nbsp; &nbsp; we're sorry, but something went wrong. if you are the application owner check the logs for more information.",1.0,,1,92
"as far as i am aware, there is no special item requests.",1.0,,1,12
"return request and approval, this commit has been done multiple times. maybe changes present but not sure. final touches sounds very vague.",1.0,,1,22
unable to check this properly because of issues with creating users. visitors were unable to view others.,1.0,,1,17
"testing seems to be done but doesn't contain many tests. also, not able to find rspec testing.",1.0,,1,18
unable to test this because&nbsp; i am not able to create any user profiles itself.,1.0,,1,16
"wanted to try with otp, but none of those pages worked.",1.0,,1,11
&nbsp;requested &amp; update methods in return_items_controllers are very long.&nbsp;,1.0,,1,11
"the name welcome_controller might be a little confusing. other slightly confusing examples include&nbsp;only_see_own_page in user_controller. however, these are just minor issues, the variable names are good in general! in order_controller there might be slightly too many if else for method create and update.&nbsp;",1.0,,1,46
"it was good in general with only a few minor things.&nbsp;for the admin, it is a little not intuitive to use another login page (admin login). and i did not see how to start a return and the admin seems cannot find the purchase history of the users. these functionalities were not very intuitive to find. &nbsp; &nbsp;",1.0,,1,60
"this around only has new features that were not working last time, not the opposite. but the cart cannot save the items. when i logout and login again. the items disappeared. i&nbsp;think it was not like that.",1.0,,1,39
"yes, the age restriction and admin request approval and reject are now implemented. but the cart cannot save the items. when i logout and login again. the items disappeared.&nbsp;",1.0,,1,30
"some attributes of the items were missing or not easy to find in the model such as age-restricted, item description-- i noticed that these can be found in the app, so i assume they are in other places but not included in the model of item. more validation of the attribute type is recommended.&nbsp;",1.0,,1,56
the code is very good in general!! maybe there are slightly too many controllers. the code could have been design with less controllers and more concise.&nbsp;,1.0,,1,27
"no image attached to items it would be good to have an and&nbsp;filter for multiple rules: category, brand, etc.&nbsp; the website missed ""sort by cost.&nbsp; &nbsp; the website was good in general!&nbsp;",1.0,,1,37
"admin gave an error when editing the user. but it did not show what the error is. the operations for admin were a little not intuitive such as a different login page.&nbsp; i did not&nbsp;receive the purchase email after the order. i was not restricted by age (i set my born year &gt; ) but can still buy age-restricted items. i did not see how to start a return, maybe i did not find it, it was not intuitive to find.&nbsp; the admin seems&nbsp;unable to&nbsp;find the purchase history of the users.&nbsp;",1.0,,1,100
the set_line_item_in_cart function in shoppingcarts controller has a slightly confusing name. there are a couple of functions using the default name from the scaffold but did multiple things such as the index function in the itemscontroller.&nbsp;,1.0,,1,37
"there are a few commit messages did not well represent the changes such as&nbsp;can't see deleted items,&nbsp;nothing here,&nbsp;otp box not pre=populated,&nbsp;bugs from reviews",1.0,,1,33
there are a few commits handling multiple tasks or the name was too confusing such as&nbsp;update line_item.rb,1.0,,1,20
the index function in the itemscontroller is a little over-complicated.&nbsp;,1.0,,1,12
"there are some confusing variable names such as&nbsp;send_avail, new_quantity, buy_cart, sitecontroller",1.0,,1,13
the testing was not complete and did not test all the functions for the&nbsp;availabilities_controller,1.0,,1,16
purchasescontroller has global variables which is not recommended. the number of controllers could be reduced by better algorithm design.&nbsp;,1.0,,1,20
"after admin click approving the return, it should redirect to somewhere or pop some message to say it was successful.&nbsp;",1.0,,1,21
i could barely test anything last time. this is somewhat better. i still cannot make a user account just like before.,1.0,,1,21
missing attributes: unique id brand category image of the item (png or jpeg files only) restricted item?&nbsp; age restricted item?&nbsp; quantity cost tax slab (you can define your own tax slabs. make - slabs and each item should fall under one of these slabs) ,1.0,,1,45
"i do not see these fields present. date of birth credit card information (fake ones!)&nbsp; name on card digit card number expiration date (mm/yy) digit cvv (security code) also i cannot make an account.... i get this error... ""we're sorry, but something went wrong."" ""if you are the application owner check the logs for more information.""",1.0,,1,59
buy it now crashes. checkout crashes. user creation crashes. viewing some user purchase history makes the app crash. &nbsp;show item link after editing is broken.,1.0,,1,26
"most of the commit messages are clear, however there is a handful that could be better reported: &nbsp; minor changes final modifications",1.0,,1,22
"there is good navigaton in the site, however could not test much of it due to lack of items",1.0,,1,19
"most of the functionality is there now. no sorting implemented, no popularity metric available.&nbsp; tax slab not implemented on cart, but is available on checkout",1.0,,1,26
"cant test item functionality and all other associated functions since items are not seeded, and creation is failing to categories being an empty dropbox. vissitor has no access to store.",1.0,,1,30
"&nbsp;messages provided little information, and there was no descriptions available.&nbsp; some examples of this commits with the following names and no other descriptions: &nbsp; recreated tables, lol sign up link merged dev to ramya/dbcreate",1.0,,1,37
"&nbsp; yes a good number of the commits on the project encompass multiple features as opposed to handling a task or feature at a time. added tax slab for products, populated tables with sample data got basic app running on local with some db and default value changes&hellip;&nbsp; ",1.0,,1,50
&nbsp;the cart item controller uses convoluted logic to match carts to users and then store items in them. the cart controller uses multiple nested ifs to validate the existence of cart price and then to show it.,1.0,,1,38
&nbsp;yes the only mvc where is not evident what the function is by looking at it is the articles mvc.,1.0,,1,21
"&nbsp;admins could be an extension of user, the tables are identical. wishlist items and cart items serve the same purpose as join table models to connect items to wishlist/shoppingcart they could be condensed in to table and use the controllers to determine how they are managed. tax could be a property of items. category could be a property of items comments could exist inside feedback",1.0,,1,67
"item missing image, cant sort items by any metric. tax information not provided.",1.0,,1,13
"problem with deployment cant&nbsp;create new user, also no links to admin credentials",1.0,,1,14
"unlogged user can navigate to items create, edit, destroy by simply typing in to url. controller does not verify admin. unlogged user can navigate to user create,edit, destroy by simply typing to url. controller does not verify admin. sign in with facebook does not work because whitelist is not set up properly &nbsp;",1.0,,1,54
it's kinda cumbersome to navigate the site... it would be nice if you added a header to your ui to easily navigate around the site.,1.0,,1,26
"homepage shows the items but not the actions to be able to buy or add to cart, had to navigate to /items in the url in order to do that. so it works functionally but not intuitive. user cannot change their dob. what if they accidentally put in the wrong dob during registration? ordering a restricted item did not require an admin approval to complete the order.",1.0,,1,67
credit card can still consist of alphabetic symbols. expiration month can be &gt; . users can crud other users' credit cards via url.,1.0,,1,22
"don't think there is a reason to have a categories scaffold. that can be be an items param.&nbsp; orders model has the same address params as users, which is redundant.",1.0,,1,32
"none missing, but i can set dob to a future date. i can also put letters in the phone number and zip code. also credit card expiration month can be set to greater than and expiration year can be set to greater than digits.",1.0,,1,44
"the checkout page does not show a breakdown of the items, cost, or tax -&gt; this seems to be done in your carts page. it would be nice to also have that included in the checkout page. even so, the tax is not shown in the price breakdown, but it is still calculated towards the final price.",1.0,,1,57
requested and updated methods in return_items_controller are doing a lot of tasks. create in orders_controller.,1.0,,1,15
"it seems redundant to have models of other models (wishlist model is made up of wishlist items models and same with returns and carts). it would be dryer to just have the wishlist model, cart model, and return models by themselves.&nbsp;",1.0,,1,42
"admin can crud other users' credit card info. as a logged in user, the route user/orders shows me all order with the same email, not of the current user. i deleted one user and created another with the same email, it showed me order info of the past deleted user. this should not happen in a regular market app.",1.0,,1,60
"only tested the show method of the wishes controller, but the controller you were testing only had a destroy method? seems like a nonexistent method was tested and the only existing method was not tested.",1.0,,1,35
"phone number exists, but does not reject invalid phone numbers.",1.0,,1,10
"as a logged in user, the route user/orders shows me all order with the same email, not of the current user. i deleted one user and created another with the same email, it showed me order info of the past deleted user. this should not happen in a regular market app.",1.0,,1,52
"some instances of general ""made changes"" or ""fixed bugs"" commits that don't specify what/where.",1.0,,1,16
if i type in /credit_cards/ it'll send me to checkout even with an empty cart and mailer will send me a otp. then i can complete an order with nothing actually bought. i cannot delete my credit card information or add another card.,1.0,,1,44
create method in transactions controller is super long with a lot of nested conditional statements.,1.0,,1,15
"a couple of variable names named ""integer"" and ""number"" that don't explain what they are.",1.0,,1,16
visitor/user&nbsp;can still view list of other users and their email addresses.&nbsp;visitor/user&nbsp;can view other users' feedback. visitor/user can view transaction history for all orders.,1.0,,1,32
a lot of repeated methods for if an admin is logged in versus a user. could be combined into a single method and insert conditional statements where needed rather than adding entire conditional methods with mostly repeated code.,1.0,,1,38
phone number can be a string of invalid symbols and less than digits. credit card can be string of invalid symbols and not digits exactly. i am not allowed to edit my email address.,1.0,,1,34
no changes to tests but there is no test&nbsp; plan,1.0,,1,11
there are loops in the lottery controller. it'd be nice to see what each line does. just to make it easier for the next user.,1.0,,1,26
"in line where you fetch teamuser, you can directly pass the teamuser fetched in the previous function. it might help reduce computation time",1.0,,1,23
the methods names look apt.one change that i'd suggest is to try and rename users_bidding_info.&nbsp;,1.0,,1,18
the coverage is the same as before. it is somewhat sufficient but it would be better if the test cases were elaborated on in the wiki page.,1.0,,1,27
"the writeup does not seem to include a proper test plan. a detailed description of the coverage would be helpful. the authors have included a few screenshots of the tests they ran, but not a detailed plan.",1.0,,1,37
"build is not building on travis, but passes the spec tests for specific class addressed",1.0,,1,15
the travis build has failed. but this branch has no conflicts to be resolved.,1.0,,1,14
"it appears that the authors ran some automated tests, but did not write any new tests.",1.0,,1,16
"the introduction section was helpful for understanding what the project does. the wiki does need proofreading; there are some spelling/grammar errors (e.g., ""the new servo browser from mozzila""), and some of the grammar sounds a little strange.",1.0,,1,39
the team didn't add any new tests; they only ran the pre-existing rspec tests.,1.0,,1,16
"most of the methods lack commenting, making some methods hard to decipher just from looking at the implementation.",1.0,,1,18
"methods were not too long, but commenting was absent from most of the methods.",1.0,,1,14
there does not seem to have been any new commits in the second round. no history of pull requests and lack of actual code changes in the final pull request makes this difficult to discern.,1.0,,1,35
"the functions for the most part were succinct. however, comments were virtually non-existent for any of the code written. in addition, the team left in unused code (i.e., //void close() in imagebitmap.webidl and //to do statements in imagebitmapmethods).",1.0,,1,41
"there are some useless comments such as # initial commit at the top of the criterion.rb file. also the comment for the complete method is useless; it really is just a commit message. the comment for the view_completed_question method is more descriptive, but still fails to really give me an overall sense of what the method does and how it does it.&nbsp;",1.0,,1,63
" . the complete method is still really long. . you could probably extract the code dealing with advice like the code under ""if !question_advices.empty? and advice_total_length &gt; "" to a separate method. . more comments are definitely needed inline to make the code readable . it seems strange to me to have all this code in a model file rather than a few view files. is there not some other way around having to build the html up in a model file?",1.0,,1,78
"i don't think the code is quite ready to be deployed to production server. i would increase the descriptions for the rspec tests so that any reader could understand the scenarios in which they could occur. while the team did a great job refactoring, i still think the code is hard to read due to the fact that they are building up html as a string. i am not sure about the best way to build html up, but they might be a better design pattern that would make things clearer.&nbsp;",1.0,,1,93
the testings section is there but it only states that you used rspec tests and manually testing. you should explain what your rspec tests do and what your manual testing does. also what changes did you make to the test files due to your changes?,1.0,,1,45
"yes, the writeup clearly explains why the authors completed the work that they did. in the complete method section, you say ""another thing we did is reduce the number of lines used by condition statements by using the shorthand."" what is ""the shorthand""? you didn't really explain how you did the work that you completed that well.&nbsp;",1.0,,1,59
there is no mention of specific test cases in the test plan. it doesn't look like there are any tests added in the pull request.&nbsp;,1.0,,1,27
what does size attribute refer to? the method name complete is not descriptive. complete what? i think you should give a description of each parameter name passed to each method.&nbsp;,1.0,,1,31
you should give specific instructions in the test plan for manually testing your changes. was it necessary to change the bundler version? this makes it harder to test as the expertiza environment was set up with a different ruby version and different bundler version.&nbsp;,1.0,,1,45
i wished the team had talked more about what the code does at a high level. i don't have a clear idea about what the code actually does besides concatenating strings to form html code. i know a little about what the complete and view_completed_question methods do but there is no mention about how the different conditionals in the code change the outcome of the html. what are the options and how does the code determine which path to take to create the right html?&nbsp; also the writeup appears to be written in all italics which makes it weird to read.&nbsp;,1.0,,1,104
"the authors have improved the code. the build now passes, the test coverage has increased. on my previous review, i had asked the authors to add comments describing what each of the parameters meant for the methods which hasn't been done.&nbsp;",1.0,,1,43
you refer to the criterion.rb file as both a model and a controller in the writeup. which is correct? i wish you would've gone into more detail about what the parts of the html are supposed to be included in each view. screenshot would've been helpful to understand what the html was building up to.&nbsp;&nbsp;,1.0,,1,60
 . i don't think any methods are too long. . i don't think additional code needs to be extracted. . more comments and more descriptive comments are needed. . code appears to follow ruby style guide. . the handle_missing_assignment_details methods seem too trivial to need to exist.&nbsp;,1.0,,1,45
"yes, i believe that the code is ready to be merged, but only after the travis ci build passes when the refactor assignment_creation_spec.rb pull request gets merged in. the team did a good job refactoring a lot of the code into separate helper methods which increases readability. all the previous written tests are passing. i also don't think that methods like update_copy_session and update_assignment_badges should be their own methods since they contain very little code and are only called once.&nbsp;",1.0,,1,83
there is no mention of specific test cases in the test plan. there is no mention of testing edge cases or invalid input values. are the rubocop offenses supposed to be fixed now? maybe show a before and after picture of that.&nbsp;,1.0,,1,43
there don't appear to be any additional tests added.&nbsp;,1.0,,1,11
the build does not pass tavis ci. not exactly sure how to grade this question as the wiki makes clear that their build fails but there is a fix out there in another team's pull request that makes changes to assignment_creation_spec.rb.,1.0,,1,43
the user_timezone_specified method is confusing because it looks like that method gets called when there is actually no time zone specified. exist_assignment seems like a weird name for a variable. i think handle_assignment_directory_path_nonexist should be changed to handle_assignment_directory_path_nonexistent,1.0,,1,38
"you should add instructions to the wiki that list the steps to manually test your code, especially including edge cases. however, code appears to be working correctly to create and edit assignments.&nbsp;",1.0,,1,33
the test plan was a great improvement to your writeup. i wish you had included a section in your test plan that specifically tells a reviewer how to manually test your controller through the ui to aid in manual testing.,1.0,,1,40
"overall, i think&nbsp; the code is written pretty well.&nbsp; i think there are a few methods like update_copy_session and update_assignment_badges that contain very few lines of code and are only called once. i don't think these should be in separate methods.&nbsp;",1.0,,1,45
"there does seem to be some added testing done for the project, but the metric for coverage isn't easily accessible.",1.0,,1,21
as far as comments are considered they are extremely necessary for the methods which this refactor concerns. both the methods are extremely long and intricate and it is impossible to understand what different chunks of code is trying to achieve. the developers should seriously consider adding more comments to the the code file so that it helps to understand the code better.,1.0,,1,62
"overall the code changes done by the developer adheres to good&nbsp;naming and other coding&nbsp;standards. however, they can further improve on a few things. first, more comments can be added within the method to explain what different blocks of code is trying to achieve. as of now, only limited comments are present which makes it extremely difficult to understand the code. another aspect that i would like to point is that the size of the 'complete' method is still too long and can be further split into multiple methods. the name 'complete' itself is not very intuitive and can be refactored. apart from that good work!",1.0,,1,109
"testing is one of the most important aspects of a refactoring project. the&nbsp;team&nbsp;has done a commendable job with respect to refactoring the code and maintaining good documentation to explain the problem, however, the documentation lacks quite a bit. the 'testing' section&nbsp;lacks quite a bit&nbsp;document and the test plan section is also missing.&nbsp;the travis ci build is itself failing so i am not sure if they have done any testing at all. on the positive side, their code changes seem to be complete and they only need to focus on the testing and documentation side before the final deadline.",1.0,,1,108
the developers have done a good job with the documentation. the wiki documents clearly explain the problem with criterion.rb. the wiki includes a side by side comparison of the code changes that they have performed which&nbsp;is a great idea in my opinion. the side by side comparison helps to easily understand the code changes that the developers have performed. the only downside is that the testing section of the wiki lacks quite a bit. there is not proper documentation about the test that they might have performed. hopefully they will update it by the final deadline.,1.0,,1,99
"the test plan section itself is missing from the wiki document. thus there is no concrete saying if the developers indulged in any kind of testing because even the travis ci build is failing. hopefully, they will indulge in some kind of testing and document it before the final review.",1.0,,1,50
the wiki page of the project is extremely well written. it explains the problem in detail and also notes the changes that the team implemented. the only downside of the documentation is that the testing section is lacking quite a bit. the developers have enough time to make the required changes in the document before the final deadline.,1.0,,1,58
"there are a decent amount of comments in the code that they were refactoring but the developers should definitely consider adding in some more comments in the new methods that they have declared. for example, the method 'handle_assignment_form_save' does not have comments anywhere to explain what it is doing.",1.0,,1,49
"the team has added&nbsp;some decent amount of new code - lines. however, they haven't added the code to test this new code. even some of the method names have been changed but there are no changes in the test files to test it. the code changes look good but the tests are real lacking.",1.0,,1,56
"no, i don't think that this refactor is quite ready as of now. the&nbsp;travis ci build is failing for a test related to adding an assignment to the course. that should be investigated before deploying the changes to prod. apart from that it looks good.&nbsp;",1.0,,1,49
"the documentation does not include a test plan section as such but the wiki describes the various testing which the team have performed. this indicates their test plan. in spite of that the team should definitely consider a separate section to describe the test plan. apart from that, the developers have done a good job explaining the testing performed.&nbsp; &nbsp;",1.0,,1,61
the authors have not explicitly mentioned the test plan as such but have provided a screenshot depicting the passing of rspec tests. the travis ci build is failing so i am not sure that they have involved any other testing in their project. on the positive side since most of the changes have already been implemented by the team they can work on the test plan and other testing details before the final deadline.&nbsp;,1.0,,1,75
the travis ci build is still failing. the team seemed to have completely ignored the build results as i don't think that they have made any attempts to address the errors. one of the tests to check if an assignment can be added to the course if failing. this is a pretty important test and the team should have fixed it. here is the error link https://travis-ci.org/github/expertiza/expertiza/jobs/ ?utm_medium=notification&amp;utm_source=github_status,1.0,,1,80
the names used for the variables are intuitive as such and i could not find any variable name which do not follow the standard naming standards. if i were too nit-pick a fault then i will say that they can probably use the entire word in place of the annotated variable names. eg 'ques_array' can be replaced by 'questions_array' in assignments_controller.rb.&nbsp;,1.0,,1,64
"yes, the writeup is extremely well written. it is easy to understand the problem with a single glance to the wiki page. the changes to the code have been well explained and proper images have been added to better understand the changes. one&nbsp;changes that i recommend with regards to the write up is that some of the pictures are very blur and are therefore very difficult to read, especially the ones in the section 'the branch condition size for edit method is too high'. the team should also&nbsp;consider reducing the number of code pictures and simply paste the code in the 'code' tag. &nbsp;",1.0,,1,108
the given link is not functioning. cannot open it. please provide the correct link again.,1.0,,1,15
"the address provided to test the functionality is different in the submission and the wiki expertiza page. as the link provided in the submission crashes, please change the link provided in the submission.",1.0,,1,33
i cannot log in to the given link with my already existing account. please include the steps to test it manually.,1.0,,1,21
the only problem with the write up is that the credentials of the required roles to be tested have not been mentioned. please mention them so that the reviewers can verify the manual testing.,1.0,,1,34
the writeup mentions the roles of instructor and the admin/super admin but the login credentials are not mentioned. please mention them so that the manual testing can be verified.,1.0,,1,30
the tests have been mentioned but do not include the test plan.,1.0,,1,12
test plan has not been included. please include the test plan.,1.0,,1,11
"the test plan given in the writeup seems to have made a comprehensive coverage of the possible test cases. it is also mentioned that the rspec testing is not yet present and therefore, that is the only missing aspect of testing that i can find.&nbsp;",1.0,,1,46
there are no rspec automated tests that are written for the test plan provided in the writeup&nbsp;,1.0,,1,18
"modified some tests for the new implementation.&nbsp;the write-up says the coverage has increased, but i couldn't see it in the test results. also no screencast of the tests running given, so can't verify.",1.0,,1,38
test plan hasn't been mentioned in the report but the prewritten model tests seem to work,1.0,,1,17
it&nbsp;is very well written and follows all dry specifications. a few more comments would be helpful,1.0,,1,18
not a lot of comments made that make it very readable or understandable.,1.0,,1,13
"the test cases are not yet added, but it looks like the team will be adding them on further steps.",1.0,,1,20
"the features are working well, though the build had failed it seems to be responding to the changes specified.",1.0,,1,19
the code is well written and looks good. the only concerns i could find was&nbsp;specific_average_score for the name of this function is not all that intuitive. the same is with&nbsp;signuptopic not sure what it means. apart from these all other files are well written and typed too.,1.0,,1,51
"the write up is well written and well documented for the user to read. would be more helpful if the navigation of links were better, but feel this document was very ellaborate.",1.0,,1,32
i could see comments mentioning a team member's name. so you could fix that and improve the comments a bit. i believe they could be rephrased in a slightly better way.,1.0,,1,32
test plan is not included in the wiki as of now.,1.0,,1,11
"a lot of files were changed in the project. although the variable and function names are intuitive, i feel the comments were not enough and i was a bit lost sometimes on what exactly is going on. eg: the bookmarks_controller included a new functions named 'specific_average_score' and 'total_average_score' (which are intuitive) but comments would've made a new person to understand it better.&nbsp;",1.0,,1,64
my&nbsp;only concern is the lack of comments which is not critical but will improve the code base and readability for the future team to pick up.,1.0,,1,28
"the writeup involved a good initial description of the problem statement. however, it took me sometime to actually understand the exact working/usage of a bookmark. i was able to understand it after going through the completed stories and testing plan section. so, maybe a little more clarity in the problem statement section might make it better.",1.0,,1,57
just the lack of some comments. they did add some after the first round but i believe it could be improved a bit.,1.0,,1,23
"as mentioned before, the writeup is decent and i would just like to see a bit more clarity on the functionality in the initial section of the wiki. i got the complete understanding after reading through the test plan which is almost at the end.",1.0,,1,45
"there are comments for each method,&nbsp; the following comment can be more descriptive. # this method is called for assignments which have their is_intelligent property set to . (line : ) &nbsp; &nbsp;",1.0,,1,30
" ) nope, the size of each function is fine ) i don't see a possibility of breaking function to chunks without breaking the functionality ) for the comments part, except one comment, other comments are apt and descriptive enough to understand the code. (good job). ) th ruby style guide is not followed in few instances like ) final new line is missing at end of the program ) space is not provided right after the {&nbsp; ) usage of unnecessary variables like bid at line no. . ) the code is structured properly and does not violate dry principle.",1.0,,1,92
"there is no section for test plan in the write up. so ,cannot comment on it. &nbsp;",1.0,,1,17
"the tests discussed are executed and the tests covered the code percent. all the test cases are being passed. however i see, clode climate issues are not completely resolved.",1.0,,1,29
"in&nbsp;app/controllers/lottery_controller.rb&nbsp; the method name remove_current_user can be misleading, can be modified to remove_user_from_previous_teams.&nbsp; the variable name team_bidding_info can be misleading, can be modified to topicwise_teams_bidding_info.&nbsp; &nbsp; other than these two, naming convention clear and good",1.0,,1,43
"in the method imagebitmap.rs, the author could have given comments explaining what the particular method does or how it works instead of giving a link in the comments. otherwise, all the methods have comments.",1.0,,1,35
the authors have pasted screenshots of the successful build for each test case. they could have also explained what were the test cases to help readers understand.,1.0,,1,27
"the authors have done test automation and the results are successful. however, they could have listed the test cases and explained the need for a particular test case.",1.0,,1,28
"using the set up instructions given, i have tested the code for few test cases. however not covered every edge case. i would suggest the authors to look into the edge cases such as the nil cases.",1.0,,1,37
i did not find any test plan in the write-up.,1.0,,1,11
"no link to the deployment is given to test. also, no instructions on how to test is given.",1.0,,1,18
" they use origin assignments_controller_spec.rb which was design good. it's better if you can test the new methods you created, like ""update_assignment_form(exist_assignment)"" they don't have the test plan about where i should go to test manually.&nbsp; ",1.0,,1,40
"some failures in travis test. one for ""couldn't find assignment with 'id'=associate_assignment_with_course"", one for ""undefined method `each' for """":string"" in ""child_nodes.each do |node| &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;initialize_fnode_update_children(params, node, tmp_res) &nbsp; end"" in ""./spec/features/assignment_creation_spec.rb"" they advised the pull requested fail may due to other pull request, but the another pull request they provided is passed. it also could be other reason, but it's better to check again.",1.0,,1,76
it's better if they provide document about test plan,1.0,,1,10
"they didn't provide comments, i think it because most of changes are in origin html.erb.",1.0,,1,17
"they didn't provide automated tests, but i agree with them that it is better to test controller and model.",1.0,,1,20
those spec test cases are each explained by their 'it' headers. no comments found in the&nbsp;assignmentcreationhelper&nbsp;module.,1.0,,1,20
"i think the code is partially ready to be deployed onto the production server. the team had a good idea to split the original file into several small files. however, i felt like some tests do not belong to their file. for example,&nbsp;i felt like the ""adding to course"" describe block should not be placed in assignment_creation_page_spec.rb as it does not deal directly with the page. in addition, some variable names&nbsp;don't make sense to me, such as&nbsp;finder_var.",1.0,,1,85
"the authors told about what they did about the test,&nbsp;like fixing some existing broken tests and adding some additional test cases. i think it's better if you include a summary of what the existing tests are and why you think the tests you added are helpful and meaningful. no detailed test plan has been provided yet.",1.0,,1,59
"the writeup explains both the reasons the team refactored&nbsp;some&nbsp;pieces of codes&nbsp;and&nbsp;the decisions&nbsp;to&nbsp;not touch other pieces of&nbsp;codes. i would&nbsp;suggest that you could delete the three methods in your code snippet (get_questionnaire,&nbsp;get_selected_id, and&nbsp;assignment_creation_setup) because it seems like only the&nbsp;assignment_creation_setup&nbsp;method has to do with the later refactoring you showed.",1.0,,1,70
"no test cases were discussed in the test plan, however, the authors did show what additional tests they wrote.",1.0,,1,19
newly-added codes look good to me. the only thing i'm concerned about is that the&nbsp;get_questionnaire&nbsp;and&nbsp;get_selected_id methods&nbsp;have a parameter named&nbsp;finder_var&nbsp;which does not look understandable from the maintainer's perspective. &nbsp;,1.0,,1,43
"i'm not able to test your refactored code. could you submit a link to your deployment, please?",1.0,,1,18
"for the test plan, instead of offering&nbsp;a list of bullet points of the scenarios under each method you tested, you could make it more organized by using levels of indentations so it's easier to see where the failure path goes. and to demonstrate the additional rspec tests created, instead of screenshotting what you had, explain more of why these additional tests are needed and what they are doing.",1.0,,1,71
looks like no tests have been added or modified yet.,1.0,,1,10
"a major purpose of this project was to reduce bad coding practices including functions that are too long, creating reusable code, and styling. the team did a good job with this in assignment.rb in my opinion in some places, like app/models/assignment.rb, there is a block of commented out code added in the pull request. this should be deleted.",1.0,,1,62
"my main concern is lack of new test cases. while it was a refactor and theoretically functionality should not have changed, there was a large number of code changes including new methods and it seems odd that no new tests could have been written.",1.0,,1,44
"there is no test plan included. while this project was a refactoring assignment and ideally no business logic should change, tests are still important for preventing unintended regressions. i would recommend adding a section that states that the current automated tests are still passing at % after the refactor. and, if any new functionality was added (even something small), a new test is most likely warranted.",1.0,,1,65
there were no test cases described in the test plan.,1.0,,1,10
"`rev_q_ids` is not a great name. the fact that this is a bad name is mentioned in the wiki, but the name is not changed. `review_questionnaire_ids` is not currently used and is more descriptive. however, in another place, `tscv` is renamed to `teams_csv`. this is a good variable name change since it makes the name more descriptive. &nbsp;",1.0,,1,58
there don't seem to be comments on each of the methods.,1.0,,1,12
"unfortunately, it seems the project does not pass the ci build process.",1.0,,1,12
more details about the test cases or the test code will better explain if the test plan is complete enough.,1.0,,1,20
"number in the refactor section of wiki page shows a method called ""datetimeklass"" is used, just curious if&nbsp;""klass"" is&nbsp;a typo?",1.0,,1,24
"the team added test cases and the coverage increased, but i didn't see any detailed explanation about the test cases.",1.0,,1,21
no test plan section is included in the wiki page.,1.0,,1,10
"i feel the team has done good work. though the test cases were passing, i feel there should be more test cases covering all the edge cases and provisioning of manual testing.",1.0,,1,32
the write-up is informational. the introduction was crisp and the description was accurate. a slight description on manually testing the changes could have been helpful.,1.0,,1,26
the code structure looks good but there has been the usage of both camel case and snake case for the variable names.,1.0,,1,22
all test cases were passing. but the team didn't describe how to manually test their implementation on the ui.,1.0,,1,20
a few comments exists in certain sections but are not very descriptive as to what the code does.,1.0,,1,18
"overall write up is good however it lacks a manual testing section, and some sections could stand to be explained further.",1.0,,1,21
"not test plan present the testing section gives a very high level overview of what was done and changes that were made to the testing file, but doesn't go into detail about how they used the test to ensure quality.",1.0,,1,41
"overall good documentation, however some sections could be further broken down into subsections for easier readability and navigation.",1.0,,1,18
"some comments exists however most are either defining next steps, or commenting out lines of code. some do provided useful insight into what the code is doing.",1.0,,1,27
"has a testing section, however doesn't describe the testing plan and only shows the result of past tests passing. pretty sure my group made the same mistake as well.",1.0,,1,30
"overall i think the content of the write up is stellar and easy to digest, simply missing a test plan from what i can see.",1.0,,1,25
"overall the write-up is good and well organized, however the testing section can be expanded with more information about the tests, and any added tests cases.",1.0,,1,27
"overall i think the content of the write up is stellar and easy to digest, however i feel the organization could be edited for easier navigation and readability. one thing i would think of doing is adding more subheadings the the write up.",1.0,,1,43
"very well done. i thought you did a great job of outlining what had been done, however when i look at the pull request there are files that have been changed, but in the writeup i only see mention of around files. even though some of these changes aren't very relevant to the overall changes you were making, it would be nice to see mention of them. also, we had a discussion with our mentor about whether to use diffs or code blocks in our writeup. he didn't give a firm answer, but did like the idea of placing '&lt;pre style=""color: red""&gt; &lt;/pre&gt;' around the code that gets removed and green preformatting on the code that gets added when using a code block instead of a diff.",1.0,,1,134
"not all of the methods have comprehensive comments, some are missing a comment, others just say ""helper method for..."", but in your writeup you mention that you will likely add more documentation, and i think after that you will be good.",1.0,,1,41
"i think this was a good start to refactoring. one of the goals of this project was to reduce the size of the controller, but they have added around lines to the controller. many of these are in comments, but there could be more refactoring to trim this down.",1.0,,1,49
"i thought you did a good job of documenting your future testing, but didn't go into detail. i would have liked to see what edge cases you want to test, or descriptions of new tests that should be added because of your changes.",1.0,,1,44
"i would recommend that you let the code changes you made do less of the talking.&nbsp;the first task has a good mix of what the problem is, what you did to fix it and why, and then the code that actually made that change. it would be nice if all the tasks were that straightforward and well documented. some of them look like a wall of code, which most of the people in this class won't be familiar with since they worked on other areas of the code. overall, you did a great job of documenting the changes you made and why you made them.",1.0,,1,108
"as mentioned in your future plans section of the wiki, you still need to update the tests, but haven't added any descriptions of what else should be tested.",1.0,,1,29
"the build did not pass in travis ci, but there were no conflicts with the base branch.&nbsp;",1.0,,1,18
"methods that need comments: needed_ruberics update_copy_session update_due_date update_assignment_badges user_timezone_specified update_feedback_assignment_form_attributes the existing comments are very concise and descriptive, so use them as a model, but make sure each new method is commented.",1.0,,1,32
"code changes specifically to assignment controller look good.&nbsp; my biggest concern is that build does not pass for travis ci, but using assignments in ui seemed to work.&nbsp;&nbsp;",1.0,,1,31
"typo:&nbsp;assignment_controller_sepc &nbsp;this is just the output for rspec tests, i would recommend including any changes you performed or why you thought changes were not necessary.&nbsp; i also recommend including section talking about manual testing of controller functionality via usage of local host.",1.0,,1,46
"all tests are automated , such that the rspec is the only thing included in the test plan.&nbsp; but test plan should maybe include, what changes or why you decided not to change rspec, i.e. thought it was thorough enough.",1.0,,1,41
coverage increased significantly - good job. all naming conventions look great!&nbsp; good job!&nbsp; all methods are verbs and names are intuitive for all changes. handle_assignment_form_save name is a bit clunky.,1.0,,1,31
write up is clear and table of contents makes navigation easy.&nbsp; they took my recommendation and made images less blurry.&nbsp;&nbsp;i recommend adding manual test in write up.,1.0,,1,31
write up is good but be sure to adjust images attached so that they are less blurry / easier to read.&nbsp;&nbsp;,1.0,,1,22
manual testing is not included so i do not understand fully how to manually test.&nbsp; but navigating through the assignments tab in expertiza has not produced any errors.&nbsp;&nbsp;,1.0,,1,31
"methods that need comments: specific_average_score list total_average_score questionnaire bookmark_rating_response_map contributor make sure all methods have descriptive comments. what comments already exist, look great to me.",1.0,,1,25
"yes, and the test plan includes specifically how to manually test the code.&nbsp; currently no rspec automated testing, but this is specified as an action item for next round.",1.0,,1,30
"great, except no automated tests currently, but this is noted as an action item for next round.",1.0,,1,17
"specific_average_score bookmark_rating_response_map methods should be verb, but in this case, they seem ok. names for variables, methods, classes, look great.",1.0,,1,20
"some edge cases have been mentioned but not clearly mentioning what is expected, what newly added is mentioned though.",1.0,,1,19
it's difficult to test the edge cases without knowing the full functionality.,1.0,,1,13
"it did not pass the travis ci build. not able to find the exact failure but this seemed to be the case with what we had too initially, mostly it's due to spaces and indentations.",1.0,,1,36
"the writeup has good content with code snippets explaining what is being done. one thing i found missing was the instructions needed for ui testing, this would have been helpful for a reviewer.",1.0,,1,33
"not sure if i covered the full functionality. there is no proper details for ui testing mentioned, this was limiting me a bit.",1.0,,1,23
"the test coverage increased but when checking the spec code, nothing new is added.",1.0,,1,14
"wasn't able to check the edge cases as there wasn't a proper material explaining the full functionality. need to ensure this before deploying. apart from that, it seems good.",1.0,,1,31
"it is sequential covering the process step by step and addressing the issues one by one. they have added code snippets and explained, making it easier to understand. however, one thing i noticed was there's no proper explanation of the controller and how to test the features manually, this limited my capacity to do the manual",1.0,,1,57
manual testing: can't find backchannel application review. error occured when click research project &amp; select your scores.,1.0,,1,18
"the functions are not too long. however, the testing codes are a little bit too long in general. i did see comments for the new added codes.&nbsp;",1.0,,1,28
no new commits were made for the nd round.&nbsp;,1.0,,1,10
the codes may need more slightly&nbsp;cleanup and comments to be deployed.&nbsp;,1.0,,1,14
the writeup was not very detailed. i would recommend to explicitly write problems and solutions with the two words in bold font.&nbsp;,1.0,,1,23
"the code was written greatly. there are some bad names such as&nbsp;testdirectory , testlocation . ",1.0,,1,15
some test cases added. coverage increased slightly. but&nbsp;travis ci checks did not pass.&nbsp;,1.0,,1,16
bugs need to be fixed.travis ci checks did not pass.&nbsp;,1.0,,1,12
"there are test plans. however, the test plans did not say which part is to test which clearly. and the final build did not pass.",1.0,,1,25
the test plan was not completed and the build check failed.&nbsp;,1.0,,1,12
the testing build did pass and the features crached.&nbsp;,1.0,,1,10
"the write up is good in general. however, too much code was pasted and it was a little messy.&nbsp;",1.0,,1,20
there are bugs.&nbsp;travis ci checks did not pass. example bad names:&nbsp;update_nil_dd_deadline_name,1.0,,1,15
"there are some descriptions. however, the relationship between files are not very clear such as how controllers are related to views, etc.&nbsp;",1.0,,1,23
"i don't see a lot of comments for each method. but i also don't know rust well, or its comment style.",1.0,,1,23
i think more comments would be good. i'm impressed you all jumped into rust so well.,1.0,,1,17
the test plan shows the results but i don't know anything about these tests. perhaps the group can elaborate on their testing approach.,1.0,,1,24
i think they are all automated. i think the wiki should elaborate more on them though.,1.0,,1,16
assignments_helper.rb line :&nbsp; i'm not familiar with the syntax `rev_q_ids = if round.nil?`. what does it end up doing? &nbsp; assignments.rb lines - :&nbsp; is a chunk of commented out code. does it need to be there or can it be removed?,1.0,,1,44
no test plan section. &nbsp; one test&nbsp;is failing with a divide by error: https://travis-ci.org/github/expertiza/expertiza/jobs/ ?utm_medium=notification&amp;utm_source=github_status,1.0,,1,28
"consider adding a link to the e project description provided by dr. gehringer. he suggested we add that section to our wiki as well. about assignments: ""assignments is the most important base class"" seems like a strong assertion. i would consider rephrasing. the last sentence of the first paragraph talking about what assignments can do is a little long winded. consider breaking up into more detail. assignments.jpg does not display the last sentence talks about a questionnaire. does this belong here? great definition of an approach and good examples to show how you thought through each method to refactor them!",1.0,,1,101
"name changes were updated in the test plan, but missing test plan. tests are failing in the build.&nbsp;",1.0,,1,19
the same comments from the previous revision are the only ones there. there are no new comments for the new methods.,1.0,,1,21
"it's more of a generalized test plan without mentioning specifics. i would like to see a more thorough test plan that mentions exact number of new methods that the code is broken into and the exact number of tests that were planned on adding. it seems like the implementation of your general test plan does a great job, but being more specific in the planning section would go a long way.",1.0,,1,72
"the write up does a good explanation of the work completed. it seems like updating the model testing was not done, so all of the new methods that have been added go untested. the tests are still the same from the previous revision of the model. i would like to see rspec tests added to validate the refactored code.",1.0,,1,59
"there was too much code dump in the write-up; the explanations were adequate but the entire code was pasted in like - times throughout the write-up. it would be much easier to read if they left out the entire code dump and only included the code that was relevant for each change that they were explaining at the time. also the entire article is still in italics. i think i mentioned these things in the initial review, but doesn't look like anything changed.",1.0,,1,85
"the assignment_creation_rubrics_spec has a lot of repetitive code, it's basically the same code repeated for every line in the rubric.&nbsp; there are inconsistent tabs/spaces with the assignments_creation_dates and assignments_controller with the rest of the added files. (nit-picky) &nbsp;",1.0,,1,42
ruby style guide was not followed but the code was quite readable.,1.0,,1,12
"there is no test plan mentioned, so i am forced to not have an opinion on this.",1.0,,1,17
just found a need for comments but overall a pretty good package.,1.0,,1,12
could have a test plan and why the changes were necessary.,1.0,,1,11
very few comments have been written but the code is quite readable.,1.0,,1,12
"yes, the automation has been done through rspec framework but not really sure if all the cases were converted.",1.0,,1,19
the build fails and this leads me to believe that a few cases were not handled and a few features not perfected.,1.0,,1,22
the author needs to give more information on what file they are going to edit and why their new implementation is better,1.0,,1,22
they are using an already existing chain of responsibility as the design pattern. it'd be nice to explain why this design pattern is used over what it is,1.0,,1,29
the authors have mentioned about the changes. it's not very elaborate,1.0,,1,12
the author has not spoken about any testing strategy.&nbsp;,1.0,,1,10
the test plan says that they will be doing some testing but nothing about how they will be doing it,1.0,,1,20
the diagrams are elaborate but its very difficult to zoom in and understand what is to be done,1.0,,1,18
"there's a&nbsp;work flow diagram that is followed by&nbsp;improvement on the previous work and i have no idea which of them is the one you are going with nor why the others exist. you provide no actual explanation on what you plan to do besides your goal and vague tests. if the chain of responsibility pattern is important, then explain more of how you envision the chain instead of the abstract request handler image you have.",1.0,,1,80
"i would suggest expending more effort on the design since it is very abstract and not necessarily tied to this project besides your problem statement and confusing work flow diagrams. find out what files you are working with at least. for example, does the mentor already have an attribute that says their role is a mentor? if so, then you know at least one file/object you're working with.",1.0,,1,70
testing is vague and not elaborated upon. i suggest expanding upon your rspec tests at least.,1.0,,1,16
you have two work flow diagrams and the first has nothing said about it. it just exists.,1.0,,1,17
"sentences like: it is about adding a new feature in expertiza which enable students to learn from seeing examples of good reviews, something like the one from eli review. should be redone. it follows nothing besides a header, so i would not assume the header itself is part of the sentence. it causes confusion. &nbsp; in the&nbsp;features section, you say that a student can click a check box that changes the ""status"" field to ""selected,"" but you described the status column as having [private, public, publish]. this should be clarified. while acceptable, the features appear to be copy-pasted. that's fine, but it was not proofread and it can be shortened. &nbsp; the sentence:&nbsp; . to allow instructor to select among the public reviews make changes in /app/views/popup/team_users_popup.html.haml should not start with ""to allow"" if you are listing your changes. start with the changes then all the extra jargon for an easier read.",1.0,,1,161
"you can describe your rspec tests if you are making new ones. if not, specify that you are not.",1.0,,1,19
"the sequence diagrams are nice, but they seem to be just method relationships. i'd suggest something simpler, but the current diagrams are fine if you want someone to track the code concretely.",1.0,,1,33
diagram was very minimal and did not specify which controllers they were touching,1.0,,1,13
some explanation for the db but limited or none other places,1.0,,1,11
"no automated test plan, only manual. not addressing previous teams work",1.0,,1,11
good test plan but could be more specific with more rspec tests,1.0,,1,12
missing any sort of testing or validation. how do we know this works? how would we test this manually or physically,1.0,,1,21
no real test plan. describes how to run a test but not at all what are in them,1.0,,1,18
"while for the most part the authors were clear in their approach, there was a hint of uncertainty when noting that ""...several other files need the above refactor as well"".",1.0,,1,30
"the changes in the files to be changed makes sense. however, i felt that the solution itself could have used more description.",1.0,,1,22
"given the task at hand, the number of changes to files seems more than necessary and refactors class methods that may not need to be refactored.",1.0,,1,26
the team could have done better to explain the abstract solution rather than giving a simple one liner.,1.0,,1,18
"overall, the document seems complete. however, maybe consider adding more detail under ""proposed solution"".",1.0,,1,14
you don't explain what changes you plan to make to the code? what classes are involved? what new rspec tests do you plan to add to test your implementation?,1.0,,1,30
 . no discussion of methods to be added in the design doc. . i see a rescue block without any code in it. seems weird. i also think the notify_single_team_member method is unnecessary. just use the notify team members method but only pass it one email address. . i think more details should be included in the design doc.&nbsp;,1.0,,1,57
i believe the work flow diagram is too high level and doesn't provide enough details. it's basically a recap of the problem statement and not much about design.&nbsp;,1.0,,1,31
you could add to the diagram how you plan to assign mentors to teams. do you assign a mentor who has the fewest teams? i don't see that part in your work flow diagram. also how does the chain of responsibility design pattern fit in with the work flow diagram. you could definitely elaborate on why that pattern is a good choice for the project.,1.0,,1,66
the authors mention the files they plan on changing but there is no mention of what methods or what functionality they plan on modifying or adding to those files.&nbsp;,1.0,,1,30
"i think you covered all the main sections, but you should much more details to project design and test plan.&nbsp;",1.0,,1,21
"there is a testing section, however it is very high level. no mention of specific test cases or a description of steps to manually test the changes in the ui.&nbsp;",1.0,,1,31
"the visuals don't really describe the changes to be made to the system, just the design of the system. it would have been help to list the changes that were being made to each file and each method.&nbsp;",1.0,,1,40
"the diagram to help understanding of the top trading cycles algorithm was helpful. however, the flowchart is simple and a bit redundant. i would include something like a uml diagram to discuss which classes and which methods are being changed.&nbsp;",1.0,,1,41
"there isn't much discussion about the actual design of the project, the focus is more on fixing problems with the previous implementation.&nbsp; &nbsp; why do you include source code for the web service in your design? shouldn't you just call the webservice function like the lottery_controller?",1.0,,1,49
you mention the files that need to be modified or added but you don't discuss specifically what changes/ methods are added to each. the suggested improvements section covers some of the methods for the review bidding controller but you should mention what other methods are in the controller.&nbsp; &nbsp; where does the webservice get called?,1.0,,1,57
there is a test plan. it only discusses a few test cases and doesn't mention the expected results so it is not as helpful as it should be. there is no discussion of manual testing.&nbsp; &nbsp; i think the test cases are really too general and should be made more specific.&nbsp;,1.0,,1,54
you should make it clearer that you are modifying the response object table in the database. how are students supposed to revoke their review and change it from public to private if the review can't be edited after submission? i also think you can elaborate more on what specific methods you will use or modify or add.,1.0,,1,58
 . there wasn't any mention of specific methods to be added. . ) the new design sounds like it might increase the response time if you have to load all the assignments for the professor to select which to show the review as a sample on.&nbsp;,1.0,,1,45
"the use case diagram looks rather simplified especially with the generic ""review and assignment controllers"" box. i don't think this diagram is particularly helpful. you could maybe use a uml diagram to illustrate which classes are involved.",1.0,,1,38
"""it is about adding a new feature in expertiza which enable students to learn from seeing examples of good reviews, something like the one from eli review. however, the desired feature is expected to differ in the following ways:"" what does it refer to? what is eli review? these sentences sound too casual.&nbsp; &nbsp; the test plan is good so far but you should add tests that test the feature of a student marking their review as public.&nbsp;",1.0,,1,80
test plan is pretty good. i would add the scenario to manual testing where you set the review as public but then later want to change your review to private.&nbsp;,1.0,,1,31
"there doesn't seem to be much in the way of an explanation for the workflow diagram, but all diagrams make sense.",1.0,,1,22
"all of the design is surely there, but for some of the diagrams as mentioned before it would be nice to have a little more of an explanation of at least one way through the workflow diagram.",1.0,,1,37
"yes, as far as the changes in the design are concerned the authors have done a good job of explaining the proposed changes. however, it would be much better the team could actually state the specific file names which needed to be changed to implement the specific changes.&nbsp;",1.0,,1,49
"the existing implementation according to the current problem statement seems correct. the idea of using the chain of responsibility pattern also makes sense for this problem. however, the authors haven't mentioned as to what will happen to teams of size less than % of team strength. there should be a button using which the instructor should be able to trigger the assignment algorithm again to assign mentors to teams less than size %.",1.0,,1,72
"yes, the design appears to be sound&nbsp;however they still haven't addressed my concern that i had highlighted in the previous round - how will the teams with members less than the threshold be assigned a mentor? one suggestion could be to provide a button to the instructor which could trigger the algorithm.",1.0,,1,54
"yes, all the sections of the design doc are more or less complete as of now. the testing section could have been more elaborate. the authors have mentioned that they are going to modify some of the test files but haven't specified the names of the files or the specific tests they are planning to change.&nbsp; &nbsp;",1.0,,1,59
the 'testing' section of the wiki is too brief and does not elaborately describe the test plan. the test plan should at least specify the specific files they need to change and/or also specify the tests that they need to add.,1.0,,1,42
"the visualization and figures do clearly describe the changes however, just like in the previous round they are too small. increasing the size of the images specifically the picture just above the testing section will improve the overall presentation of the wiki.",1.0,,1,42
"although the design document is complete, i found it very difficult to understand their problem statement. i had to refer to the problem statement documents to get a better sense of what the problem is. a bit more&nbsp;elaboration of the problem statement will definitely make it much easier to understand the problem. the test plan section only includes steps for manual testing. there is no nothing mentioned about rspec test. hopefully, they'll include it before the final submission.",1.0,,1,81
"the team has added a number of uml diagram to the design document which makes it much easier to understand the proposed design changes. the sequence diagram for a list of sample reviews is, however, too small and impossible to read without zooming in. apart from that, the documentation is extremely well written.&nbsp;",1.0,,1,54
"the explanations under each section are written in simple language. however, i feel that it is a little verbose and some of the concepts explained under the features section using text, can be replaced by diagrams instead.&nbsp;",1.0,,1,38
a section can be used to explain the testing process which will be used,1.0,,1,14
the changes proposed by the author are exact and mentions how to tackel to problem. a detailed explaination is given as to why filters are required by the the code to display the rubric not created by t/a's and how it is being used. also a testing plan is in place to make sure the changes are being checked for legitimacy. the only concern i would be having is whether the&nbsp;&nbsp;app/helpers/assignment_helper.rb change will be suficient as i believe there will be more links from this file being coupled to a few other places. a detailed investigation of this could prove more useful.,1.0,,1,110
the design incorporates all the functionality required from the document specified in the link. there is a clear explaination of how the various aspects of design have been already implemented or are needed to be implemented. the design stratergy subheading gives a clear indication of what the requirements are and how the design that is in place is dealing with them and what the shortcoming of them are. the ideas of allowing ta's to view the other rubrics not created by them using&nbsp;the right filter and also the actions invloved into changing the code is depectied well. it would be more descriptive if the file that is needed to be changed can be shown with parts of it are lagging implementation and how it is being rectified. the database elements being modified are also shown well and the uml digram is pretty explainative.,1.0,,1,146
yes the design does include a test plan but the concern i have with the test plan in place is that it only says that rspec tests will be written for the specified controllers and models but then there is no information on these will be carried forward. the manual test cases should also be written in more detail explaining why exactly the various design points are build and how they may misbehave in certain situations.,1.0,,1,76
"the author has proposed to enhance the exisiting implementation by incorporating changes that would make for creation of the&nbsp;createimagebitmap method and the corresponding overload method for it. the identification of the webidls being completed is documented and shown in already completed worked. the chagnes that are to be done and the code base that will be required to be changed are well shown. my only concern would be that the&nbsp;imagebitmap.rs would be used to create image bitmap, but i feel the actual function would be required to be written on a diferent .rs file which i am not sure would be which one. identifcation of this piece of code would be vital to projects success.",1.0,,1,120
"there is only one diagram which has been placed at two parts of the document. even though this diagram shows the flow that need to be followed to complete the project, it doesn accurately describe anything about the system and how the elements would change based on the implementation. more digramatic explainations of the uml flow and how the ui interacts with the systems needs be presented and shown.",1.0,,1,69
the design follows the algorithms suggested by the html standards for image bitmap construction to a canvas. the algorithm is a common one followed by the entire web browser industry and is the best way to move forward. also the description of the files that will be required to change looks very good and impacts the project in the right manner making it easy to start coding. the coding can be followed up with the algorithmic diagrams that are drawn in the document to make it easy.&nbsp; more elaborate test cases could be written,1.0,,1,95
"the design document is very sound in the way it is approaching the design of the system. after the first round it was unclear as how the team was progressing with the required createimagebitmap() methods, but now the various algorithms that are involved with the function are described and put into the design system. the several input method of the functions ranging from canvas to another bitmap image have been addressed with well drawn flowcharts that show the ordering of the processing instructions to convert the image. also the description of the previous work is clearly shown in the images and how it is going to be carried forward is also depicted. the testing plan section holds information about the usage of the requried automated cases that servo porvides with but again i feel the use of more manual testing before running mach test/tidy would make more sense.",1.0,,1,149
"the design document is complete from the prespective that there is enough imformation that is being shown stating the pieces of the code that will be required to change, which makes it easier for the team to start coding. the parts that are missing are the algorithmic explaination of the various changes that needs to be made to implement image bitmap(). there is a standard algorithm present in the html standards that all browsers use. this will be the same algorithm that is goin to be used by the servo too. an explaination of this algorithm would be the core feature of the design document, but it is not present at the moment.",1.0,,1,113
"the design does inlcude the test plan that is suggested from the servo's side, that involved the use of use the mach build and mach test/tidy which should suffice for the system in place, but the concern is that more effort should be put in place for the manual testing activities to make sure the canvas is being suppoted in the exact way as descibed in the project, which would make&nbsp; testing more accurate and increase converage.",1.0,,1,80
"the proposed changes related to code changes appears to be a bit vague. document mentions that the ""code placed in wrong locations to be moved to the desired locations"". i believe there is a lot of ambiguity in that statement. specific files and modules should be mentioned to give&nbsp; better clarification to the reader.",1.0,,1,55
"i believe the design changes were included by the previous team, that means refactoring and testing to be the main focus of this team. however, the proposed changes doesn't include much details regarding that.",1.0,,1,35
 . the proposed changes section needs to include more details on the changes.&nbsp; . the ending seems to be abrupt.,1.0,,1,19
testing is too vague and could be more specific in terms of use case and instances.,1.0,,1,16
"as mentioned in the first round, visualisations may have been presented in a better way.",1.0,,1,15
"in addition to the current tests, including rspec testing could help improve the testing plan.",1.0,,1,15
"yes, the document includes a test plan. they have clearly mentioned the case that would cause the functionality to break. however, i feel description of the tests that they would like to automate using rspec in ruby would be helpful. the approach they would use to test their test plan is not mentioned.",1.0,,1,53
no mockup screens which should be important in this project because most changed files are view files.,1.0,,1,17
"it's better to provide a more detail problem statement. the ""features"" part includes what they should do and how they plan to implement it, it would be more clear if they can state what they should do and how they plan to do seperatly. no db design",1.0,,1,48
"it should include db and mockup screens about the view files would be changed in the implement, like ""respon, team_users_popup, and student_review/list""",1.0,,1,23
"the design of the diagram is really good, but all diagrams are vague which due to the problem of wiki picture size.",1.0,,1,22
there didn't have the different between with problem statement and solution statement.&nbsp;,1.0,,1,14
it better if they could provide more detail statement about what they plan to do.&nbsp;,1.0,,1,16
"&nbsp;the design strategy part is hard to follow. for example, consider this sentence, ""the feature we have to implement was not fully committed due to the previously mentioned problems, so we have to reincorporate the missing code. however, a resulting issue is the inability for an instructor or ta to use rubrics that they did not create."" just before this sentence, you explained that there were two issues with the implementation but the previous team had solved them, so i feel confused about what's the missing code you are going to incorporate. maybe more explanations needed here.",1.0,,1,99
"the test plan section should include detailed descriptions of what new tests you are going to add and what existing tests you are planning to modify. it is vague to say ""implement new ones that might be required once we start on our implementation."" in other words, you should plan your tests ahead rather than&nbsp;writing tests based on your implementation.",1.0,,1,62
"the authors mentioned the spec files that need to be modified and passed, but it would be better if they can describe what modifications they planned to make because it seems like there were no test cases included in the test plan.",1.0,,1,42
"explanations of the proposed changes are concise, yet descriptive and thorough; however, they do not list specifically which classes/files will be modified, which makes it a bit difficult to know exactly what will actually be changed from a concrete perspective.",1.0,,1,41
"apart from not specifically naming the files/classes/etc. that are going to be modified, the design document appears fairly complete as-is.",1.0,,1,23
"the only images provided were a couple of (mostly identical) step diagrams that illustrated the steps that had to be taken in order to complete the project. however, these images were mostly redundant, since they just repeated information that had already been typed out in text; the only purpose either image served was to show that the first step had been completed.",1.0,,1,62
"everything appears accounted for, except that the testing plan is absent.",1.0,,1,11
"test plan is there, could explain ui testing, and what will be needed to test ui. otherwise good!",1.0,,1,18
"the description of the proposed changes are clear. the algorithm for the bidding process is described well. however, i think more details could be included around changes to the ui. it is not very clear what changes are being proposed to the ui.",1.0,,1,43
"the visuals in this design doc are helpful. i like that there is a visual representation of the algorithm they plan to use. however, the uml diagram could use some additions. currently, it only shows one path of user behavior.",1.0,,1,40
"a testing plan is not included. it is mentioned that they plan to ""write suitable tests to ensure that the implementation is working"", but this does not describe what will be tested or how testing will be done. ",1.0,,1,38
"a testing plan exists, but it does not appear to be very thorough. there are general scenarios listed, but not the steps taken and for some the expected result is not listed. this makes it difficult to understand what each case is actually testing. more importantly, there is no mention of rspec tests despite multiple files being added or modified. rspec tests should be added for corresponding changes to these files.",1.0,,1,71
"there are few missing components, which i have mentioned in my other comments. based on what the team has done till now, they have explained fine, except&nbsp;they should provide more&nbsp;explanation for contents in suggested improvements sub-section.",1.0,,1,41
"since the project was implemented in previous semesters as well, the team has to only fix few issues, which they have listed down in their wiki in suggested improvements sub-section. however, the team&nbsp;hasn't elaborated on what specific changes (files, methods, modules) they will be modifying. currently, this is what's mentioned in their document&nbsp;for suggested improvement: . change the location of the running bidding assignment to the appropriate location. . write the code where it is suitable, following the dry principles. . write suitable tests to ensure that the implementation is working.",1.0,,1,95
"testing plan is missing. the team doesn't mention anything about testing. similarly, the design for suggested improvements (which is part of their current work, since most of other works were done by previous team) is not complete.",1.0,,1,38
"the team has provided scenarios based on their use-case. however, the test plan still lacks the process of testing - how would someone test that scenario, and what to expect as the outcome. maybe the team could have provided a screenshot of ui for at least one of the scenarios.",1.0,,1,50
there are two work flow diagrams but the resolution are low. there are not any explanation about the two diagrams and i am confused of what do they represent respectively.,1.0,,1,30
the files to be changed are listed but more explanation to the reason of changing these files are expected.,1.0,,1,19
"more details should be displayed since only rename, relocate and deletion of methods are shown in the documentation.",1.0,,1,18
"test plan is included in the documentation, but more details are needed.",1.0,,1,12
"need more details other than just work flow diagram to describe the project, also database diagram is missed.",1.0,,1,18
"the documentation doesn't show any patterns used in the design, more details need to be put into the documentation.",1.0,,1,20
perhaps some more in depth discussion of how the implementation would be handled would be beneficial,1.0,,1,16
"overall the design seems sounds, especially since it can from a past project so code examples can be given. i do, however, notice no mention of design patterns. i think the use of design patterns can be used to example the project in a more digestible way and help understanding. one example pattern might be the strategy pattern since they are working with a variety of file types.",1.0,,1,68
"test are mentioned at a very high level. no specific high level tests are mentioned, only how test should be performed. 'test should pass' is a good criterion, however not informative when included in the test plan.",1.0,,1,37
"i think you could have written some about the automated tests that you plan to write, rather than only talking about the manual testing.",1.0,,1,24
"very nice diagrams.&nbsp; help in understanding lower level implementation of your functionality.&nbsp; regarding the user flow chart, i would recommend touching up on this.&nbsp; adding more conditions, arrows, cases, etc.&nbsp; right now it is just one linear thread&nbsp;",1.0,,1,43
"yes, based on the implementation of previous projects, it looks good, and seems to address previous issues.&nbsp; one existing issue was the lack of adequate tests.&nbsp; so, i would recommend adding that section for next round, to show intention of addressing this in next pull request.",1.0,,1,48
"as mentioned above, the diagrams for algorithm are great.&nbsp; i would just focus on developing flow chart, to handle more conditionals and cases in the process of bidding for reviews, as right now it is just a single linear use case.&nbsp;",1.0,,1,43
"does not&nbsp;mention any design patterns. but the design is sound.&nbsp; it clearly separates the existing functionality from the suggested improvements, and references code.&nbsp; the implementation separates code adequately.&nbsp; &nbsp;",1.0,,1,34
"i would problems found in previous works and suggested improvements closer to the top of the page.&nbsp; or maybe section off previous work vs your work.&nbsp; recommend adding a testing section. for both manual and automated testing algorithm steps should be indented. or consider using a,b,c.. instead of numbers.&nbsp; it is hard to understand that this section is still in the scope of "" . implement top trading cycles on a web service as mentioned in the paper""",1.0,,1,81
"yes, but it is hard to follow on the wiki page.&nbsp; i recommend a section that includes what files will be created, and which ones will be edited, as a reference, in addition to you chunks of code",1.0,,1,39
"again, focus on test cases.&nbsp; i think project design is well defined, and the clear differentiation between files for modifying and creating is good.&nbsp; easy to read, and well organized.&nbsp;&nbsp;",1.0,,1,34
"includes test cases.&nbsp; i think at this point specific controller files should be mentioned for testing the code updates.&nbsp; also, an ordered list for manual testing would be effective. ""as of now, and as far as we understood the feature."" it is not needed to be said",1.0,,1,49
"the proposed changes are very brief.&nbsp; i think more detail needs to be added to the proposed design.&nbsp; also, the write up is not 'dry'.&nbsp; there is a lot of repetition between the two sections you have included.&nbsp; makes it harder to read.&nbsp; i recommend adjusting organization.&nbsp;",1.0,,1,53
"i&nbsp;believe more effort should be expanded on the design.&nbsp; i think it would be easier to answer this question if details were included regarding previou stages of development, what those projects have done, and how it will contribute to your design moving forward.&nbsp; as for utilizing any existing packages or gems, i do&nbsp;not have expertise here, but it does not seem to complicated to implement.&nbsp;&nbsp;",1.0,,1,73
"the diagram is used twice.&nbsp; it only details the phases of the development process.&nbsp; i recommend adding a diagram to show a user case for someone utilizing servo, and then how your work will play into this functionality.&nbsp;&nbsp;",1.0,,1,42
"the design seems to be sound, and the scope is clearly defined for their step of implementation.&nbsp; one recommendation is organization of ""details about current work on implementation.""&nbsp; the two sections are ""starting with.."" and ""implementing a...""&nbsp; .&nbsp; i would be more consistent for these headings, maybe say implement instead of starting with.&nbsp;&nbsp;",1.0,,1,58
"i would recommend adding a problem statement. recommend adding a section for previous work, emphasis on their design, how you're building off of this.&nbsp; do not recommend having ~ the graphic twice on the page.&nbsp;&nbsp; steps proposed / tasks for implementation seems like a not so coherent way of organizing the page.&nbsp; i would recommend splitting it up between existing implementation or previous work, then the design chosen for this project approach.&nbsp;also recommend adding a test plan.",1.0,,1,82
"yes, they did a great job of describing what seems like a complex functionality pipeline, by specifying their work flow in a concise manner.&nbsp; wiki page is well organized.&nbsp; only recommendation is including a section easily visible for what files you will specifically edit and create, or where your methods to be created exist in the scaffold.&nbsp;&nbsp;",1.0,,1,61
"more information should be included in project design, and some updates to the organization of the document may significantly help.&nbsp; the testing plan needs to be included for both automated tests and manual tests.&nbsp;&nbsp;",1.0,,1,37
"the team put a lot of work into technical flowcharts for various image types.&nbsp; a user case flow chart may also be useful, or maybe a screenshot of front end web app to describe the functionality.",1.0,,1,37
increase words in visual. some boxes the text are very small. sequence diagram too small. hard to read db schema.&nbsp;,1.0,,1,21
the explanation of the proposed code changes is a little unclear. it can be improved by adding more details.&nbsp;,1.0,,1,20
there is one diagram which is good. diagrams illustrating the relationship between database tables or classes/functions can make it better.&nbsp;,1.0,,1,22
"the design is simple. however, the sequence diagram can be further simplified.&nbsp;",1.0,,1,13
"the explanations are good. however, illustration of why these modifications are need and the relationship between different classes and methods is desired.&nbsp;",1.0,,1,23
"great visualization. however, the text on the diagrams is blurry and hard to recognize.&nbsp;",1.0,,1,15
since the description was a little unclear and not enough details were included. i am not sure how did they design it exactly.&nbsp;,1.0,,1,24
"there are two diagrams. but it is too huge. more diagrams are suggested such as indicating user behaviors while interacting with the website, database relationship, project components structure, etc.&nbsp;",1.0,,1,30
it seems to have all the functionalities but the proposed implementation is not quite clear.&nbsp;,1.0,,1,16
good explanation. the explanation for the test plan can be more in detail.&nbsp;,1.0,,1,14
"i did not see the testing plan. the project design is not clear and detailed enough. it is suggested to include more details of the design, motivation, current problem etc.&nbsp;",1.0,,1,31
there was no mentioned design patterns. i think listing the relevant patterns will help the reader understand the approach better. overall sound design.,1.0,,1,23
"while the team mentioned the spec files, they do not cover a logical test plan that tests basic functionality and edge cases. it would be nice to that. list the new cases that must be tested to prove your design is functional.",1.0,,1,42
diagrams could use some explanation of what they do in general.,1.0,,1,11
"diagrams show the schedule for the project, but don't show block out what the code would look like. it might be helpful to show the code in block diagram form to give the reader an overview of what the feature looks like.",1.0,,1,43
&nbsp;the new design may potentially make the code smelly but it's a minor fix.,1.0,,1,16
all the design components are included but the negative test cases could have been also incorporated.,1.0,,1,16
&nbsp;the design includes the test plan and they test the functionalities. it could have done better with some negative case testing.,1.0,,1,22
the diagrams seem to reproduce what is written and do not add to the overall understanding.,1.0,,1,16
"the documents indicate good design, the imagebitmap api has some steps done, and the current team is taking it forward. the plan for the same is concrete. the design for the same is solid. some concerns remain how they would integrate the final code since the dom can potentially affect other dependent files like window.rs",1.0,,1,56
was not able to test since i cannot see courses.,1.0,,1,10
"the only message i get when logging in is ""welcome, teacher @ gmail.com"".&nbsp; course manager does not link to anything.&nbsp;",1.0,,1,22
was not able to view anything outside of a greeting message.,1.0,,1,11
some commit messages are not descriptive. some bug fixes say 'bug fix'. good to mention the description of fix.,1.0,,1,19
i am seeing almost zero associations in either the model files or the db. how are you linking your objects together on the backend? this is very strange to me.,1.0,,1,30
"unable to test - i cannot add a credit card to my test student account, so i cannot purchase any courses.",1.0,,1,20
"admin is not able to set up a course for a student and a teacher.&nbsp;problems: . an error message is prompted after selecting all the fields stating 'student can't be blank'. i don't see a student field. . the dummy data is incomplete and ambiguous. please work on that. . the ui is ambiguous too. i am talking about the information displayed and not the format. for example, in the catalog drop down, there are two options - and . i don't know see a field named 'catalog' and none of the ids are or . therefore, i don't know what i am choosing.",1.0,,1,104
there is no separate list to select a teacher for each course. the dummy data consists of the same details.&nbsp;you&nbsp;can add one more drop down named 'teacher' so that the student is able to pick a course by selecting a teacher.,1.0,,1,45
"no, the teacher is not able to see a class (s)he has with a student. when i click on 'view mentored students', it redirects me to a page stating 'the page you were looking for doesn't exist'. please work on it.",1.0,,1,43
"no, the teacher is not able to view students they mentored. when i click on 'view mentored students', it redirects me to a page stating 'the page you were looking for doesn't exist'. please work on it.",1.0,,1,38
&nbsp;there is no option for deleting an item that is is a user's cart. &nbsp;,1.0,,1,17
"there doesn't seem to be a page for registered courses. clicking register clears the cart, but the courses dont end up anywhere.",1.0,,1,23
"when i create payment for a new student. i got error message said "" studentid has already been taken"". ",1.0,,1,18
i got error when i delete course and the course still in the table.,1.0,,1,14
admin could create course but can't assign a course to student or teacher. but admin could remove student from a course and remove teacher from a course.,1.0,,1,28
"there is a page to show students. but when i register the course , the student could not find me when i try to select teacher for .&nbsp; &nbsp; &nbsp;",1.0,,1,29
"there is a page to show students. but when i register the course , student could not find me when i try to select teacher for .",1.0,,1,25
no the students don't have any such option to change or remove course from their course purchase list.,1.0,,1,19
no the teachers don't have any such option to change or remove course from their course purchase list. if they go to show course and edit course they get the option to edit the course itself which shouldn't happen.,1.0,,1,41
i dont see this functionality working. as i can see an option to see all the available courses but when i click the register or add to cart option and it registers the course for the admin.&nbsp; i see no separate option to add or register a course on behalf of a student or teacher.,1.0,,1,56
i can see that the admin can see all the available courses but it even has the option of adding to cart or registering the course for the admin itself which is not something we want. we want the admin to be able to register the courses for a particular student.&nbsp; there is a button to show all students and what courses they have taken. there is a button to show all teachers but not a view which shows any course history or purchase history in terms of a teacher's view. according to my understanding it needs to show a list of courses that the teacher teaches or taught and the list of students who have taken that course.,1.0,,1,121
student b can modify student a's information by tampering the url,1.0,,1,12
"no, in the cart view there is a fields for listing courses to select but it is empty. viewing the courses and trying to add them did not work either.",1.0,,1,30
"mix of descriptive and non-descriptive commits. descriptive outweighs non-descriptive. &nbsp; ""update code"" &amp; ""last minute"" are an examples of non-descriptive.",1.0,,1,23
"i see the option for ""view registered"" but received a&nbsp; &nbsp;error. i assume this is where course history would be. the page you were looking for doesn't exist.",1.0,,1,31
"unable to test this feature due to error when trying to go to ""view available courses"".",1.0,,1,16
"it is semi intuitive to add a course. however, this process of viewing course sections fails possibly if there isn't a current teacher signed up for the course.&nbsp;",1.0,,1,30
"it doesn't seem like they can. the button is there, but it doesn't do anything.",1.0,,1,17
i can view and edit the accounts of other students as well as teachers as a student.,1.0,,1,17
"they have no tests, but there is no code in the models.",1.0,,1,12
"i couldn't really tell. i could see the option, but i wasn't able to get a complete message.",1.0,,1,20
they are able to view courses registered for by the teacher's view. the student view doesn't work. run's into an error message. i would suggest an easier way to get to this.,1.0,,1,35
i believe that the navigation to the course-list is not clearly defined (need to alter url to access).,1.0,,1,19
"yes, even as a teacher, which means there should be a restriction to only students.&nbsp;",1.0,,1,16
"yes, even as a student, which means there should be a restriction to only teachers.&nbsp;",1.0,,1,16
"if you, in the url, add /teachers/# - # representing a teacher number, then you can look-up specific teachers. however, a student can edit this teacher, which is not what should occur.&nbsp;",1.0,,1,32
"it works only you fill all info when creating account. i tried with no detail info, then the website went wrong:"" nameerror in students#create"",",1.0,,1,25
"upon clicking delete, i got the page ""we're sorry, but something went wrong.&nbsp; if you are the application owner check the logs for more information.""&nbsp; this was / at : pm, if that's helpful.",1.0,,1,36
"project looks great, only thing im seeing is that my student account broke when i went to courses. i would get this error: undefined method `id' for nil:nilclass &nbsp; # @tid = teacher.find_by(id: t.teacherid ).id # @tname = teacher.find_by(id: t.teacherid ).name @teacher_course_dict[@course_id] &lt;&lt; teacher.find_by(id: t.teacherid ).id end respond_to do |format| format.html # show.html.erb im not sure why but hopefully that helps. user interface looks great",1.0,,1,75
"conditionals often contain large and hard to decipher expressions such as&nbsp;elsif courseregistration.exists?(:teacherid =&gt; @student_list.teacherid, :courseid =&gt; @student_list.courseid, :studentid =&gt; @student_list.studentid, :status =&gt; @student_list.status) plus it is all on one line which makes it even harder to read &nbsp;",1.0,,1,46
"there are tests but they do not test anything significant. the tests are just very generic and probably auto-generated. i&nbsp;don't see a controller where any edge cases are tested, and couldn't locate the rspec tests for verification.",1.0,,1,42
"no models are tested, all of the tests are either insignificant or commented out.",1.0,,1,14
although not in requirements students are not able to change classes or remove themselves.,1.0,,1,14
"admin is able to create courses, but cannot setup them for teacher or students. admin cannot&nbsp;register teacher for a course, and cannot add course to students cart.",1.0,,1,29
no email is not sent when account is created. this was not in original spec either.,1.0,,1,16
"there is no mailing functionality. teacher and student can't update email themselves, price can be negative",1.0,,1,17
the write up&nbsp;has changes made to the different spec.rb files but does not explain their test plan.,1.0,,1,20
"all tests are passing, however i am unsure of what their test plan was from looking at their write up, so it is difficult to gauge what may be missing.",1.0,,1,30
the plan covers testing of most of the changes but scenarios for the method initialize_chart_elements can be covered. a little concerned about the coverage also which has decreased maybe due to deleting several existing test cases which is acceptable.,1.0,,1,39
the writeup gives information about the login for accessing the expertiza but does not give any instructions to follow for replicating the scenarios. neither is a ui page posted to guide what was the functionalty before vs what is the functionality now. this makes it harder to test their functionality.,1.0,,1,50
the functionality is sound and the write up provides clarity about the rationale behind their changes and test plan. but its difficult to see what the project does without a visual description of the working.,1.0,,1,35
good refactoring .there is one minor typo in the comment.,1.0,,1,10
it was good. only small things like more comments and a little shorter method names would be great,1.0,,1,18
variable names are good enough but some are very lengthy,1.0,,1,10
"the test plan as it stands now could be fleshed out more. i'm not seeing a ton of documentation surrounding the team's testing strategy, edge consideration, etc.",1.0,,1,29
"the writeup is a good start, but it feels like they are favoring code screenshots over expanding the documentation",1.0,,1,19
could not see the changed code. could not find pull request or code in write up,1.0,,1,16
write up does explain the things but changes in code is not mentioned in terms of pull request&nbsp;,1.0,,1,19
i don't think this code is ready to be deployed onto the production server. my biggest concern is the issues that are detected by the codeclimate. but this is a good starting place for a future team to pick up as the issues could be fixed by them.,1.0,,1,49
i am not sure how to comment on that since there is no clear test plan mentioned in the wiki page.,1.0,,1,21
the build was successfully passed in travis ci. there were no conflicts that needed to be resolved but there were issues detected by the codeclimate.,1.0,,1,25
"the write-up explains the problem(s), but does not include any work done to address the problems. looks like the write-up hasn't really been started yet.",1.0,,1,29
"see previous comment, no testing yet in the write up. i do see a spec file for the project though and it looks like the tests took a lot of work. nice.",1.0,,1,32
"fyi if you go to the pull request you sent me, then go to commits, travis will tell you which commits are failing travis. it was your first commit (you only have ) both by the same team member.",1.0,,1,38
i don't know how to test it manually because there aren't any steps in the write up on how to do so.,1.0,,1,24
"&nbsp; variable names are bad: defn? (paramater), rev_res_map ? and cur_date is just a bad name for the a variable for today's date&nbsp; imo. no comment for app/helpers/mailer_helper.rb or app/mailers/mailer.rb ",1.0,,1,37
"i am seeing this error when i click on&nbsp;manage... -&gt; assignments &nbsp; argumenterror in treedisplaycontroller#goto_assignments wrong number of arguments (given , expected ) extracted source (around line&nbsp;# ): # refactored method to provide direct access to parameters # added an argument prevtab for sending the respective tab to be highlighted on homepage def goto_controller(name_parameter, prevtab) node_object = treefolder.find_by(name: name_parameter) session[:root] = foldernode.find_by(node_object_id: node_object.id).id # if we have to highlight a tab, we store this arg. to the last_open_tab elements of session &nbsp;",1.0,,1,86
"i believe it will work but i can't use ui to test it. thus, i'm not % sure it is ready to deploy.",1.0,,1,24
"no design pattern, but i have no idea about how to convert this topic to a design pattern.",1.0,,1,18
could not test since there is no link to the server.,1.0,,1,11
"no, like i mentioned before. this project leave error to handle no report cases which is not a good for deploy. if this case is fixed i believe it will be ready for deploy.",1.0,,1,34
i dont see any mention of any spec file in their wiki or changed files on git commit so i am assuming no tests were made or changed. thus couldnt check.,1.0,,1,31
"the test plan does not include testing edge cases. also, i got an error while testing according to the instructions mentioned.",1.0,,1,21
i don't see a video that shows passing test cases.,1.0,,1,11
the deployed application is not working. could not test the feature.,1.0,,1,11
"works well, and can be deployed.&nbsp;requires more comments for readability.",1.0,,1,12
"writeup is incomplete and doesn't give any details about how the work was carried out, methodologies used, or how tests were conducted.",1.0,,1,23
tests are not include in the wiki and integration tests fail on making the pull request.,1.0,,1,16
"the writeup describes what exactly is to be done, but doesn't give details of how it is being carried out.",1.0,,1,21
"only a couples of comments present, and they're not descriptive enough of what the code is doing.",1.0,,1,18
"code is appropriately added to functions, and follows decent coding principles. however, it is barely commented and is tough to follow.",1.0,,1,21
"the test plan section is not explicitly mentioned, and doesn't contain code snippets of rspec tests. only contains a video, and a couple of screenshots.",1.0,,1,26
flags (from what i'm assuming) being used to denote the user's preference of showing additional options can be changed.the names are: preference_home_flag homeactionshowflag ,1.0,,1,26
there's no deployment of their work. i think the test can not proceed.,1.0,,1,14
the wiki page is not very detailed. the implementation part is missing.,1.0,,1,12
there is no test plan or rspec tests for the same.,1.0,,1,11
"i cannot find the login instructions for the link. i do, however, see the working screenshots.",1.0,,1,16
"i do not think so, there are two checks that did not pass and the coverage did not increase",1.0,,1,19
there are no test plans but i also didn't see we need that on the requirement page. yet they have a video showing how they test their functions in their writeup.&nbsp;,1.0,,1,33
easy to read and with pictures inserted as examples. but some of the picture could be smaller and the introduction part is kind of redundant in my mind.&nbsp;,1.0,,1,29
there are comments within the methods except for a few that do not have any. the methods themselves need comments that are currently missing.,1.0,,1,24
the planned tests are described in the tasks section and it is very general at this time. looking at the code there are plenty of conditionals to test to increase coverage and actual rspecs written. remember that coverage is calculated by comparing added lines of functional code vs non-redundant test cases.,1.0,,1,52
the current build fails and there is no link provided for vcl to access a working image.,1.0,,1,17
the wiki mainly consists of the code that was added with some supporting details. the functionality added was easily explained but it would have been good to add comments to the top of the methods for documentation.,1.0,,1,37
this portion of the project has not been done yet.,1.0,,1,10
tests have not been added yet that i could easily see.,1.0,,1,11
"i am not sure, there is no test plan in the documentation",1.0,,1,12
explained what they were using to test and what it is testing to ensure functionality. i'm not sure if it is relevant for a refactoring project but didn't mention what edge-cases or preconditons should be tested and how they were tested&nbsp;,1.0,,1,45
tests were outlined and described in the documentation but they mentioned that currently the build does not pass with the tests included so that issue will obviously need to be resolved.,1.0,,1,31
"there was no obvious test plan section, didn't discuss any edge cases or pre-conditions that could be relevant for the project.",1.0,,1,23
wasn't really sure how to test the file uploading feature but the ta feature worked correctly and as intended!,1.0,,1,20
no changes in tests visible in pull request or mentioned in documentation,1.0,,1,12
"some checks were unsuccessful including code climate and total coverage, these should be fixed if it is to be merged. it is a refactor project so simplifying it should not break these checks",1.0,,1,33
"overall, the writeup is well written. but, it could be useful to use less photos and more writing. at first glance it just looks like a lot of screenshots",1.0,,1,29
"most all the variables names included in the code i am reviewing appear to be initiative of their functionality. however, there is one variable @additional_info which seems to be less descriptive than the rest. on initial glance, i would have no idea what @additional_info is referring to. reputation_web_service_controller ( )",1.0,,1,48
"write-up does a great job clearly explaining what work was completed and what the thought-process was for this group. no testing section was included, however.&nbsp;",1.0,,1,28
tests fail according to travis ci. all are failing here.&nbsp;&nbsp;,1.0,,1,12
"team added test cases on the db folder, set up the database on the seed.rb. i would not suggest to touch anything on the db folder. should added test on the rspec folder.&nbsp;",1.0,,1,35
"i think the main code is ready to be deployed onto the production server, my main concern is the test cases. also changing the content on seed.rb will give the website some unnecessary pre set up database. i will not add it personally.&nbsp;",1.0,,1,45
their writeup is very thorough and clear. i can tell exactly what their project was and what they did. the one thing they are missing is edge case scenarios/testing which makes me unsure about the durability of their implemented functionalities.&nbsp;,1.0,,1,42
"following the steps in their documentation for manual testing, i run into an error on the last step (""alternate view"" for viewing the scores). i tried with a few different students from a few different courses and for a few different assignements - including following exactly what they say in the documentation - but all of them caused errors at the last step. because of this i am unable to determine if any of their project works as intended. error description:&nbsp;nomethoderror in grades#view_my_scores showing /home/srcapezz/expertiza/app/views/grades/_summary_reviews.html.erb where line # raised: undefined method `each' for true:trueclass &nbsp;",1.0,,1,104
"it seems like their page is down, i was not able to connect in order to do the ui testing that is listed.&nbsp;",1.0,,1,24
"a small number of methods do not have method comments, and most of these are simple methods whose function can be easily deciphered.",1.0,,1,23
"there exists explanations but not all explanations are clear, and the formatting of the webpage makes it difficult to easily find changes and their corresponding explanations.",1.0,,1,26
"@assign_id is unclear to me.&nbsp; it reads as if an id is being assigned as opposed to an assignment id. check_content_size and file_size_limit are both relatively intuitive, but i think they could be more consistent.&nbsp; for example, check_file_size and file_size_limit or check_content_size and content_size_limit.&nbsp; in check_content_size,&nbsp;the second parameter would be clearer if it were named size_limit instead of size, as it is not the size of the file being passed in.",1.0,,1,76
"when&nbsp;viewing an assignment, the ""alternative view"" link next to ""my scores"" returns a nomethoderror (details are below).&nbsp;&nbsp;i checked this error on my project, and it exists for me too.&nbsp; this doesn't seem to be directly tied to the project, so i am taking off no points. nomethoderror in grades#view_my_scores showing&nbsp;/home/skumar /expertiza/app/views/grades/_summary_reviews.html.erb&nbsp;where line&nbsp;# &nbsp;raised: undefined method `each' for true:trueclass extracted source (around line&nbsp;# ): &lt;% if !@summary[round][q].eql?("""") @summary[round][q].each do |sentence| safe_concat ""&lt;li&gt;"" concat sentence end trace of template inclusion: app/views/grades/_participant.html.erb, app/views/grades/view_my_scores.html.erb &nbsp;",1.0,,1,121
"they used one of my suggestions, but they did not use the other.",1.0,,1,13
"there is no test plan, but one of the commits states that the program is incomplete.",1.0,,1,16
comments seem to be missing a bit of detail and explaination,1.0,,1,11
"i am only concerned primairly with your comments, other than that the code looks to be following guidelines and quality standards",1.0,,1,21
tests work however the test plan is very vague and&nbsp;does not&nbsp;actually cover anything in detail. the two cases provided were solid.,1.0,,1,25
can't figure out how to test /&nbsp;only minor changes to visual elements,1.0,,1,14
variable q and q_choice could have been named better. q could have been named question.,1.0,,1,15
test plan doesn't explain how one&nbsp;can test their implementation.,1.0,,1,12
update_max_or_min has not been explained. looking at this one cannot understand what min max this is updating. needs some minor tweaks.,1.0,,1,21
heading of topic doesn't reveal what writeup is about. topic has not been included on&nbsp;https://expertiza.csc.ncsu.edu/index.php/csc/ece_ _fall_ . topic doesn't have name of team members. &nbsp;,1.0,,1,36
create_multichoice&nbsp;methods&nbsp;comments have grammatical mistakes and it doesn't have a comment above it describing what it does.,1.0,,1,21
the test plan mentions how to run rspec test cases as well as how to test the application manually. test cases have been modified to incorporate changes made. the test coverage has decreased by . % but that is not the teams fault. for manual testing it should mention what id should one use to login into the application. there is a document with screenshots mentioning the steps which is a good addition.,1.0,,1,71
the heading of document should not have abbreviation rlm. peer review information should be part of testing details itself. a background for expertiza isn't really needed. files modified in current project section shouldn't have description of&nbsp;assignment participant model and reviewmappinghelper rather it should be in description itself. &nbsp; team members have not been mentioned,1.0,,1,58
"automated test are missing in documentation although they have been modified in code for a few methods, no new test are present in pull request either to test the changes made to view.",1.0,,1,33
the team doesn't mention if there are any existing rspec tests or if they have added any tests.,1.0,,1,19
there are steps but i cannot access the link its broken. i wanted to verify if the work with views has been done on teams part and if they forgot to commit it(as screenshots showing it were there) but can't do that now.,1.0,,1,45
unable to test an edge case because i couldn't find such a scenario. maybe the team could have mentioned an edge case,1.0,,1,23
there's no new test scenarios in rspec test file. eg no&nbsp;automated test for&nbsp;create_multchoice method,1.0,,1,19
may need more comments for the edited code to illustrate their functions.,1.0,,1,12
there's no tests and changed code on the wiki page.&nbsp;,1.0,,1,12
could&nbsp;not see the changed code on&nbsp;github.,1.0,,1,10
"could not see&nbsp;""improvements for code readability"" part directly.",1.0,,1,10
"saw comments missing on user.rb methods, response.rb methods.",1.0,,1,10
"the last time, when i checked the deployed app on / / , the app was not working. however,it seems to be working fine now. the layout of the app is clean and simple and easy to follow. there was no confusion in navigating the app. however, it took quite some time to enter the address in proper format. same goes for the website and revenue while creating a company. you may put a sample address and phone number in the readme if you are strictly restricting the format. when applying for a job as a job-seeker, the error prompt for the portfolio format says that it should be of the form http(s)://www.website.com/org/etc however it only accepts the format http(s)://www.website.com. the same issue arised while creating a company while signed in as a recruiter. otherwise, the readme file is very detailed and helps the user to understand the working of the app very well. it could be a little brief or be displayed as bullet points instead of paragraphs to make it easier to read.&nbsp;",1.0,1.0,1,185
"the code for the most part follows good coding practices.the code is clearly written and is easy to understand for the most part.however, the use of comments especially for non-scaffold generated methods will help the user to understand the code much better. for eg:- filter function in the jobs controller. some of the empty-body methods can be written in a single line for eg:- ""show"" and ""edit"" method in users_controller. in the applications controller, there are parameters ""j_id"" and ""job_id"" which is slightly confusing. also, there are two controllers application_controller for authorization of users and applications_controller which handles crud methods for job applications. you could name it differently to avoid confusion. methods for destroying and closing an application have been defined in the model ""application.rb"" and similarly, in the job model file ""job.rb"" this negates the use of mvc architecture where the controller controls the interpretation of actions. &nbsp;",1.0,1.0,1,155
"the code is clear and easy to follow. however, it is pretty much the basic code generated by scaffold generation. in the authorize method of the application controller, the notice just says ""xyz"". this could be changed to a more specific message.the homepage controller has only two empty methods, create and new. this implies that its function is just to manipulate the views. i feel that this could be implemented in the user controller itself instead of creating a new controller for it.",1.0,1.0,1,84
"the admin model hasn't been tested at all. the configured email and password is not being authenticated.&nbsp; when the show button is clicked while viewing the company/job information , the recruiter is being able to edit the job &amp;/ company info even if not belonging to that company. furthermore, if a recruiter leaves a company, the jobs created by him/her are retained and can be edited/destroyed by the same recruiter which shouldn't happen according to the spec file. all these things should be take care of . you just have to put certain conditions in the appropriate views to display links to certain pages.",1.0,1.0,1,108
the models and controllers&nbsp;have not been tested properly. the code for testing the models and controllers is not present. the could also have developed the testing code.,1.0,1.0,1,29
"your code still follows good ruby and rails coding practices.&nbsp; your models/views/controller look good in terms of functionality, establishing relationships between classes, and your routing from page to page.&nbsp; i did notice some files that were blank as i was looking through your code.&nbsp; for example, a few controllers like welcome_controller.rb and homepages_controller.rb contains just the template and nothing else.&nbsp; in the future, you can individually make your own files in the terminal if you need just a model/view/controller (i.e. rails generate(or g) model model_name model_attributes).&nbsp; there's a scaffold i believe for models/views/controllers also if you prefer to use rubymine's way of generating code.",1.0,1.0,1,121
"very intuitive, the views are nice. the home page buttons could be space slightly better but there is nothing wrong with them. for a few forms (user sign up/create/update) if you try to put a password that is too short it crashes. update this so that instead it gives an error and tells the user what to change and to try again. on users there is also no validations for your phone number field. please update the color of text after the buttons have been clicked, its hard to read them. i really like the jobs in this company portion of the company show view, same for applications and jobs. the job seeker application process is a bit wonky, would add an apply button to job show and index.",1.0,1.0,1,131
"the user interface was slightly hard to use. in my opinion, there were too many clicks to get to applying for a job. by looking at the url in the browser (and in routes.rb), i see that you guys have -level nested resources. this may be a bad idea. i suggest looking at the following link for more information: https://medium.com/@jaredrayjohnson / -things-i-learned-toying-around-with-nested-resources-in-rails-fed d e &nbsp; furthermore, the readme.txt on github provided enough information for me to get started.",1.0,1.0,1,92
"the controllers' code is sometimes not dry. for example, the team specifically checks if the user is logged in with ""if !logged_in?"" in the companies_controller.rb&nbsp; &nbsp; instead of this, they can use a before_action in someplace thats more common for the flow of code (like the application_controller.rb). the code in the controllers also seems to ""play it safe"" when creating or editing things (they use new and save instead of functions like create! or save!). &nbsp; the team also did a decent job with the models. they look for validations and assign associations between the models. in the views, the ""code"" was simple enough to follow. the team did not fill the vies with ruby code too, which is good.",1.0,1.0,1,123
"yes, the team pushed a total of commits to&nbsp; master.&nbsp; on top of this, each team member contributed a decent share of the commits so this is good!&nbsp; this number of commits suggests solid group contribution.&nbsp; committing and pushing to github regularly is helpful for many reasons.&nbsp; one, it makes building a large, shared application much easier as everything can be built in little bite sized pieces.&nbsp; while it appears you all had no problem achieving this, one thing that might prove helpful in the future, is utilizing separate branches, and the issues section in github.&nbsp; using separate branches, allows each issue to be associated with a specific code branch off of master.&nbsp; this is useful, as when a pull request is made into master, the other team members are able to see exactly what that pull request contains.&nbsp; creating github issues is helpful in that it makes chopping up a large project into smaller, easier to understand tasks very simple.&nbsp; each issue can be assigned to different team members, and it helps everyone contribute an equal amount and work well together as a team.",1.0,1.0,1,195
"yes, the application has been deployed successfully.&nbsp; the user interface is clean, and though it is a little bland, it is easy to use.&nbsp; the readme is helpful when getting up and running with the application.&nbsp; it does a good job explaining how to login as an admin and such.&nbsp; one area i see for improvement still is in the readme layout and styling.&nbsp; github allows for the use of markup to style and edit readme and wiki documents on github.&nbsp; this is a great tool for creating tables, headers, and bullet points to help make documents more readable.&nbsp; if i were to give your team one suggestion moving forward with this section, it would be to give markup a try to help make the readme and other documentations more readable.&nbsp; here is a helpful resource regarding markup shortcuts, and how to use them!&nbsp;&nbsp;https://github.com/adam-p/markdown-here/wiki/markdown-cheatsheet",1.0,1.0,1,164
"pros: - no violations of ruby on rails coding practices. - proper naming conventions used. &nbsp; suggestions: - validations need to be added. (regex, empty values, etc.) - relationships should be defined clearly. (eg: has many, belongs to)",1.0,1.0,1,34
"&nbsp;the radio button on the bottom made it easy to switch between roles.&nbsp; an improvement could be recruiters being able to view job applications for a specific job.&nbsp; if they are viewing a job, they should be able to view its applications.&nbsp; it's ok as is in this system, but in a larger system with a lot of applications, a recruiter would want to be able to go from a job to its applications directly.",1.0,1.0,1,80
&nbsp;the readme could be made more clear with different sections for each user type,1.0,1.0,1,15
"it's pretty easy to navigate within the team's web application. they have drop-down lists whenever it's useful and appropriate, which makes it easier to choose, not typing. they also added&nbsp;a lot of&nbsp;additional instructions on their ui in readme, which could be a bit shorter.&nbsp;there is one suggestion i would give to the team&nbsp;that would probably improve the ui: -putting&nbsp;""home page"" and ""log out"" buttons in the upper right corner, which would&nbsp;make them more visually noticeable, and prevent an accidental log out case.&nbsp;",1.0,1.0,1,99
"the code looks great. the team followed &ldquo;good ruby and rails coding practices"". they use indentations and blank lines appropriately.&nbsp;just one&nbsp;suggestion: breaking some lines in your code into several would improve readability (line&nbsp; &nbsp;applications_controller.rb, ln in&nbsp;companies_controller.rb).",1.0,1.0,1,47
"i went through each file in test/models, and couldn&rsquo;t find any tests for any model.&nbsp; there are some tests in test/controllers folder though. some information on tests in readme would be helpful. one suggestion is to restrict some data types on data fields. like, revenue should be only integer, phone number should be max digits long, email addresses should follow conventions.",1.0,1.0,1,66
"in general, it is easy to navigate within the team's web application. i think it's&nbsp;good&nbsp;that they added some additional instructions on ui in readme.&nbsp;although, i'd like to give some suggestions that would probably improve the ui: adding ""home"" (for an easy jump to homepage) and ""log out"" buttons would be helpful on every page, maybe, in the upper right corner. keeping ""back"" button&nbsp;consistently at the same spot throughout the web app, maybe, even a little bit away from other buttons. adding drop-down lists for&nbsp;employment type,&nbsp;gender,&nbsp;race,&nbsp;veteran status,&nbsp;disability status. making 'additional information' for a job application optional. ",1.0,1.0,1,117
"the code looks good and ""dry"", and the team followed &ldquo;good ruby and rails coding practices"". however, i&rsquo;d give some suggestions: &nbsp; &nbsp; &nbsp;&nbsp;use indentations: for instance, when declaring &ldquo;private&rdquo; (applications_controller.rb, line ). it makes a declaration more visually noticeable. &nbsp; &nbsp; &nbsp;&nbsp;use blank lines between methods (applications_controller.rb), which improves readability. &nbsp; &nbsp;",1.0,1.0,1,63
"while this project excelled in all areas (best project i have reviewed), the documentation was its weakest part.&nbsp; the documentation wasn't bad (very good) but was a little hard to read/understand everything. specifically in the introduction of the problem.&nbsp; you go into detail of the task plan but i had a hard time understanding it all because the intro wasn't as strong.&nbsp; the youtube video helped fix this but i think both should stand alone.&nbsp;&nbsp;",1.0,1.0,1,83
"the code seems to be very well written.&nbsp; i like how you moved more code to the top of the file to avoid having to repeat code over and over for each test case (like you did in the first round).&nbsp; overall, very good job with the code.&nbsp;&nbsp;my only complaint is that you create these test , test , etc objects.&nbsp; if they were only used in a single test case it would be fine to name them that since i could discern what they were used for.&nbsp; however, since they are used in multiple test cases it is hard for me to determine why you use test rather than test (just an example).&nbsp; naming them with a more descriptive name could help with this.&nbsp;&nbsp;",1.0,1.0,1,133
"i understand perfectly what the goal of the project was. &nbsp; there's some awkwardness in the english, but nothing that's super important: &nbsp; ""the current functionality only allows for the author to review the bookmark, and the reviewer is not able to assess the usefulness of a bookmark."" has a random ""for"" in it and is a bit excessively wordy. -&gt; ""currently, only the author can review the bookmark, and the reviewer cannot assess the usefulness of a bookmark."" &nbsp; but that's picky and something that would be dealt with by the editor for a document, not the developers.",1.0,1.0,1,102
i had to search for the unity id of the student to locate the pull request. you might want to rename it to include the group number and name of the project. the&nbsp;coverage increased to . % some of the checks in the build were not successful. the test file has elaborately named tests which are indicative of its function and also which method they are testing.,1.0,1.0,1,67
"i was unable to verify the ui but the video and the screen captures show the working efficiently. more tests can be added. for eg- the first test only checks if a name for the menu is present. however, i feel checks should be made for the naming convention. this will help maintain uniformity throughout all projects.the team has checked if a menu name is nil. similarly, tests could be written to see if an invalid name is entered. also the test case . is just a slight extension of test case . . i wonder if an additional test is required for the same.",1.0,1.0,1,103
"in the&nbsp;app/helpers/response_report_helper.rb, the class summaryrevieweereport has many attributes contained in the class summaryreport. using inheritance would be a better option to keep the code dry.",1.0,1.0,1,30
"since it is&nbsp; a refactoring project, extensive code changes have been made. the team has posted snippets of all the changed code in the wiki. this has made the document unnecessarily lengthy without much information about the project or the refactoring itself. mostly, the code is repeated except for the addition of helpers. also, it would be more helpful to explain which sections of the test were already present and which sections were newly added. other than that, the team has explained the different aspects of the project very well.",1.0,1.0,1,91
most of the aspects are fine. the authors should include some code related to their functionality even if it is just the migrations.&nbsp;,1.0,1.0,1,24
"well as seen from comments on the pull request, the build has failed and also there are some conflicting files. also, code climate mentions few significant issues that needed to be fixed. i suppose that once all these issues are sorted out the code can be deployed on to the production because as far as the functionality is concerned the team has done commendable job. the current work is worthy enough to be considered as a starting point for future teams that are assigned this project.",1.0,1.0,1,86
"although there were not many problems with names selected, code climate reports few serious issues like function itemtemplate and method load_add_signup_topics exceed the allowed number of lines, few blocks have high number of lines, etc. the team should look at the suggestions provided by code climate for these issues and should fix these",1.0,1.0,1,53
there is one variable count in&nbsp;automatic_review_mapping&nbsp;which does not clearly indicate what it does even though the team has mentioned its significance in the wiki and in a comment in the code. one suggestion would be to change the name of this variable to something that is more suggestive of its functionality. rest of the naming convention seems quite reasonable and are suggestive of the proposed functionality.,1.0,1.0,1,70
as a few issues remain unresolved this code is not ready yet according to me. the functionality of the menu editor needs to be tested and after complete implementation should be deployed on the production server. but as the implemented functionality works fine this can be a good baseline for the future team to work upon and fix the remaining issues.&nbsp;,1.0,1.0,1,62
"no controller code has been altered by this team and hence i would not be able to accurately review this. the changes made only includes a migration which is done in a standard manner. however, there is an empty migration updatingbookmarksratingquestionaire which kind of adds redundancies.&nbsp; i would suggest to rollback this migartion.",1.0,1.0,1,54
"no the code is not really ready to be deployed. only one of the three issues have been fixed. even though the build passes, there are some code climate issues which needs to be looked at. unfortunately , this team faced a lot of problems with their interactive menu javascript. firstly, these issues needs to be resolved. secondly , since no tests are included, the newly added features should be thoroughly tested before deployment. i believe the project should not be completely scrapped. rather , the issues with it needs to be fixed and the future team can use this work as a reference.",1.0,1.0,1,101
"no test plan was included. no form of testing have been performed by the team. as some of the functionality mentioned in the problem statement is incomplete, i would suggest writing thorough tests beforehand and writing the functions till the tests passed. once the said functionality is included, the code can be refactored to make it dry. &nbsp; these test cases will formulate your test plan and thus increase the coverage.",1.0,1.0,1,71
the writeup is very descriptive. it clearly defines the problem statement and proposed solutions of the author. the karma points system designed by the author is pretty impressive. the instructions for ui testing are illustrated in details and thus are easy to understand.the authors have also proposed solutions for unimplemented problems which is impressive. they were unable to do it due to some other javascript error which is not really their fault. one suggestion i had was to include the db files or the new migrations created in the wiki for the reader to understand. this would have enabled the reader to understand how the previous migrations were faulty and how it was changed.&nbsp; plus the functionality of the new migration would be clear. at least the names of all the migrations altered or created should have been included. &nbsp;,1.0,1.0,1,142
"the wiki is properly documented. the problems are explained in detail along with the proposed solution. the unimplemented functionality is mentioned which is neat and helps the reviewer in accessing. the result are depicted in the form of screenshots displaying the implemented functionality. this part is done well. however, i think the wiki could have been enhanced if some code snippets were including showing the previous code with faulty migrations and the corrected one. this would enhance the overall understanding. the proposed model with karma points is impressive.",1.0,1.0,1,88
no writeup provided by the author. please provide the writeup for the next submission.,1.0,1.0,1,14
the authors have given a brief introduction to their project. they mention that they are required to add rspec for&nbsp;collusion_cycle.rb&nbsp;model. they can add a brief introduction to tdd process and a wikipedia link can be provided. other than that the document is well written.,1.0,1.0,1,49
the build passed travisci&nbsp;but did not pass the code climate check. the authors need to fix these issues to make up to the coding standards of the repository.,1.0,1.0,1,30
the authors have not provided any screencast of the testing they have performed. they have also not created any pull request (not mentioned anywhere). they authors must add a screencast of their work if they do not deploy their application so that reviewers can see their work.,1.0,1.0,1,47
the functions are adequate in size and cannot be extracted in a separate methods. it would have been helpful if more comments were given on the test cases. the code fillows good ruby and rails practices.,1.0,1.0,1,36
"the build passed in travis ci. the codeclimate issues still exist and they could be taken care of, moreover i feel the code could have been dried up more by removing repeated let statements.",1.0,1.0,1,34
"the code is well written but could have been dried up more, there are some repeated declarations in the let(..) statements of rspec that could have pushed up in their before(:each)&nbsp;",1.0,1.0,1,33
"as the pull request is not visible i cannot comment on the the coverage of these test cases, moreover their are a few places in the code that could be dried up, otherwise the test cases seem to pass and it seems that they cover a lot of scenarios. all in all, by doing a coverage test if the coverage is above % then i feel that the code could be deployed on the production server.",1.0,1.0,1,75
" i do not think that they have any of the functions which are too long. they have followed a pretty neat style of coding as said earlier, the code does look good however, i see there is some cleaning up left to do (file ex: github_data_cotroller.rb, lines: +) i worked on a mozilla project, so i did not have a chance to work on any part of the code of expertiza. overall, they seem to have followed good modularity. however, as i mentioned earlier, for better practices and for making reviewer's life easier, a brief description for a not-too short function could help. the code does seem to follow the ruby style guidelines very well. they have defined actions in the controller which is a good practice. ",1.0,1.0,1,129
"the write up was certainly well structured and covered the basic sections (why they are doing it, what needs to be improved, how they plan to improve it). not that this is something mandatory, but something i would like (as a person who is reviewing) is, i would also put up a side by side comparison of how their information would be different from the previous work. they have done their part of the job by adding link to previous work. i did try to skim through the link, however this is not your part, it was a long read and i had to figure out what was going on just by looking at the figures. apart from this, good work on explaining your project.",1.0,1.0,1,125
"there are gem related updates in the gemfile which majorly seem to be for a newer version of gems. but this is not the primary concern of the question. apart from that, i reviewed&nbsp;github_data_controller.rb&nbsp;file. the actions defined in this file seem to have understandable names (assignment, assignment_team). however, a brief description about a function (action_allowed?) would have made my job a little easier and code would follow a better practice ofcourse. was able to understand what this meant (possibly for checking if it is a pull request?) github_pull_regex = %r(https?:\/\/(?:[w]{ }\.)?github\.com\/([a-z - _\-]+)\/([a-z - _\-]+)\/pull\/([ - ]+)[\s]*)i a comment would have been helpful here. overall the naming conventions do not seem to be a problem, however, i would add some more comments describing briefly what each action in the controller intends/expects to do.",1.0,1.0,1,144
"the team has provided the screenshot of their working code's output, which is great! however, i have not worked on expertiza project and i do not have idea of how to build and test their code. i am not sure if they were supposed to deploy it. but a screencast of their demo would have been a lot better to understand their work. i would create a small screen cast explaining briefly the aim of the project and show a demo of your work.",1.0,1.0,1,85
"they seem to have done a really good job at refactoring blobs of code and breaking them into meaningful modules and also stating what, where, why and how they did that. even though they have done a good job at breaking down the code, i would add comments on functions to make code better and easier to understand for a rd person.",1.0,1.0,1,62
"i would recommend trying to build your factories rather than creating them.&nbsp; the difference between building and creating is that if you build an object, it won't be saved in the database while creating does save it to the database.&nbsp; the goal of testing is to create objects that you can use for testing purposes, so you shouldn't need to save them in the database.&nbsp; if you do want to do that, i would recommend cleaning your database with a gem called databasecleaner.&nbsp; also, you don't need to re-introduce factory builds if you are already doing them outside of your tests.&nbsp; you can remove those and your tests should run fine.",1.0,1.0,1,120
"great work on your code!&nbsp; you labeled your variables appropriately, the ruby syntax is on point and you&nbsp;cleaned up your file by adding duplicate code to before each lines.&nbsp; the only thing i would suggest is adding in comments for your tests.&nbsp; while i know it's listed in your wiki page, it's a good habit to document your code so that a code reviewer understands your work if they do not have access to your wiki.&nbsp; regardless, i think you all did a great job unit testing on_the_fly!",1.0,1.0,1,96
"based on the youtube video provided, all tests cases pass for the menu_item_spec file.&nbsp; however, no mention of where their coverage is at is mentioned in the writeup or the youtube video, so i can't tell if their coverage has increased or if they managed to reach the achievement mark for this project.&nbsp; for now, i am assuming that everything works properly and that they achieved the maximum amount of coverage they are told to generate.&nbsp;",1.0,1.0,1,80
"they do not have a test plan or any talk about implementation of tests. first i would recommend starting with ensuring everything works assuming all inputs are logical. then i would ensure these metrics update in the expertiza db as commits are added, or whatever other metrics are being considered. these are just some ideas to start from, because testing in my opinion is truly the most important aspect.",1.0,1.0,1,69
"there is no explanation of the actual implementation, only of the proposed plan, so i can't say they explained any of the work they did. i think they should work on adding these to the website as soon as they can, so we can get a idea of how things went.",1.0,1.0,1,52
"the first think i notice is in the problem statement they say they want to calculate ""meaningful"" metrics from github. what does that mean? it isn't explained further in a sort of implementation section. that sounds good as a base problem, but i think they should expound upon that to include specifics. they do explain the background, that they want to include functionality to take metrics from github and display them to instructors, which is pretty good. they describe their planned implementation, but don't go into project level specifics and actually explaining them going through the plan or how it works. they simply provide the interface by which they will receive these metrics, but not how it will talk specifically to expertiza. i think they need to work heavily on shoring up their logical flow of information and explaining the implementation, as well as their thought process going through the 'how it works' section.",1.0,1.0,1,156
"in some cases, such as when you included this statement&nbsp;allow(on_the_fly_calc).to receive(:score_assignment).and_return(''), you can use a before (:each) do block to perform this allow statement before each of the contexts, or even at the start of the test file if it is used several times. if you use the same time of testing returns, you can make a much more dry and readable testfile this way. i would say i can't quite understand what it is doing, but that mainly goes along with not having these methods explained on the web page too well. the length of some of the tests could be improved by implementing the dry technique i mentioned already.",1.0,1.0,1,118
"i suppose my answer to the previous area could be used here as well. basically, i like the way you explain your plan, but i think it would be very helpful for us and yourselves to explain the true function you are trying to bring, besides just saying you are testing this model, but not explaining what it does. i believe you could definitely come up with a great explanation and then this area would be perfect! to be honest, it looks like its a work in progress, as you have the sections made already, and so i'm sure once you explain the sections this area will be fulfilled.",1.0,1.0,1,110
"there is not too much to comment on the code, because it is simply a lot of test code, which uses fairly logical names in order to store fake objects. i would recommend delving into why the build has failed and the coverage had a % decrease, when this is a testing project, so i would assume the coverage will increase a fair bit.",1.0,1.0,1,63
"i believe it gives a good basic understanding and even laying out a plan of work, which i think is a good touch. what i wish was explained more, was what exactly does&nbsp;on_the_fly_calc_spec.rb do? you explain the places where you need to add tests, but i am having difficulty simply understanding the point as to the model and tests. the names themselves arent even defined enough to provide me the insight, so i would recommend explaining the point of the project in that regard. as such, what functions would performing these tests provide to expertiza? what do they do? explaining this would also help me and any other users the ability to understand how the project carries out these calculations and performs its purported function.",1.0,1.0,1,128
"baisc steps were explained, but having a more detailed infromation on 'how' they did the work, different steps taken etc , would be encouraging to have.",1.0,1.0,1,25
"pull request couldnt be found for the project .&nbsp; it would be good if the authors provided the pull request name&nbsp; the code , variables names and class names look well written&nbsp;",1.0,1.0,1,33
"basic functionality is written&nbsp; well that they wanted to give the matic after parsing the github commits information . if more detils of what was bad with the earlier design is written , it would be easier for the reader.reference could be added to the earlier implementation.&nbsp;",1.0,1.0,1,48
"different test cases were written for different functions . if there was a chance of making the code dry by adding more number of common test cases to be used, it would make it look better .&nbsp;",1.0,1.0,1,36
"more information about the model functions / what each function did and what exceptions were tested , would help the reviewer understand it in more easier way",1.0,1.0,1,25
"it being a test file and the conditions being in plain english already , it was easy to read through and follow them .&nbsp; if it was possible to move few of the object creations into the earlier / common steps , like in four node cylces . it would be good to make it look more dry&nbsp;",1.0,1.0,1,55
a little bit more explanation on what was&nbsp;two node cycle or three node cycle does would help the reviewer understand in more detail on what test is being accomplished&nbsp;through this task&nbsp;,1.0,1.0,1,36
"as the reviewer i had a good understanding of this, but additional commentary on why the testing strategy was the best option would be helpful.",1.0,1.0,1,25
"no test plan was mentioned in the wiki, it gives the impression that testing cases has not yet been considered, i would start adding test cases in the wiki and also mention what corner cases are to be considered.&nbsp;",1.0,1.0,1,40
"the images submitted should have been part of the wiki, there is no mention of design patterns or principles, it would have been very useful if they had mentioned what files would be affected and what plan of action would be, the objective should have been disintegrated so that it could have been relatively easy to understand.",1.0,1.0,1,57
"there were very few or no comments and it does become extremely difficult to work on such next time for someone, i would consider adding more comments.&nbsp; it can be seen that the ruby style guide has been followed and there isnt any code smell.",1.0,1.0,1,46
"i found some methods to be long, but that does seem okay as we are dealing with test cases.&nbsp; some variable names do seem to be a bit invalid:&nbsp;participant ",1.0,1.0,1,32
"yes, it can be clearly seen what the plan of action is and what they intend to do in the project, the one thing i would add here is a brief about what the test case would be doing or some minor piece of information indicating what work would be done and what checks would be taken care of and some additional images.",1.0,1.0,1,63
"by reviewing the code, i made the following observations: ) none of the functions are too long; all are around - lines each and good modular approach was followed. ) i felt the code was already modular and hence no new method is needed. ) although comments were added in many places, i felt more comments could be added to help improve code readability, especially in the github_data_controller.rb ) proper ruby conventions were followed throughout, including double spacing, having less/no logic in the views and no code felt repetitive.",1.0,1.0,1,86
"although the writeup explains the problem statement, it does not explain their work extensively. the proposed design simply says they are using graphql git api but doesn't explain that further. they haven't mentioned the use of any design patterns. however, the writeup does say that the&nbsp;github statistics api used by the previous team doesn't produce the required results and that is the reason for using graphql api. i'm deducting points for not clearly explaining the proposed design or adding any screenshots.",1.0,1.0,1,87
"the writeup seemed to end abruptly. improvements and testing sections were blank presumably because they are still working on it. i liked the way they had broken down the problem statement into smaller tasks, so i was able to understand the requirement. although they had provided a link of the previous team's writeup, i couldn't really understand how this team's design works. perhaps they could have explained the proposed design with design patterns, or screenshots or code snippets. &nbsp;",1.0,1.0,1,82
"while the write up does not contain an explicit ""test plan"" section, it does contain a section explaining the different tests that were written.&nbsp; these tests do a good job presenting the reader with the code and a what the code does.&nbsp; that being said this section could definitely be improved.&nbsp; i would suggest adding an explicit ""test plan"" section as ell as updating the test conditions and what they do.&nbsp; i like how you included the test cases in this section, but instead of including the raw code and then farther down the page a description of what the code does, maybe add a description first, and then the test.&nbsp; this would help with readability.&nbsp; other then this though, it seems like you hit all of the main scenarios within the scope of the tests.&nbsp; good job!",1.0,1.0,1,145
the only part that could probably be rename is changing from @test to @test_menu_item to more clearly show what the test variable is like you did for @controller_action,1.0,1.0,1,28
"i could find the code contributed easily, which i appreciate. the ruby guidelines have mostly been followed. there seems to be no issue there. no function is longer than necessary. there are a few redundant spaces that rubocop has detected. also i would suggest adding more comments to make the code and tests more readable.",1.0,1.0,1,55
since there is no feature or link for a deployed application to test and i do not see a screencast or a video of the tests in action to know if the test cases are working as intended. i recommend adding a screencast explaining all test cases covered and how all corner/edge cases have been handled.,1.0,1.0,1,57
i really like the way they have written out their writeup. it is detailed and has relevant headings/sections providing a good flow and readability to the user. the use of images for explanations is really helpful. i would like to see a little more information about what the project was about as i could not quite understand what they meant by a collusion cycle and i had to go through the project description. overall very well done.,1.0,1.0,1,78
"it was a bit difficult to find the files modified by the team. i went through the commits and found two files that have been created/modified: github_data_controller and github/show.html.erb. the code mostly follows good ruby practices and there are a few comments provided that tells what that particular code should do. the functions don't seem to be too lengthy either which is good. i am not sure how the graphql should be, but it seems to use many lines for a couple of words which i don't think it should be. you could add some more comments for someone else to be able to follow the graphql lines. overall, good work.",1.0,1.0,1,117
there is a testing section but it is yet to be implemented. this gives an impression that the users have not tested their implementation yet (even if they might have). consider writing detailed test cases on how you would test the commits made and scenarios when the user uses a different git account but has still contributed towards the project.,1.0,1.0,1,60
"the authors have included images as part of their submission which gives a little idea about what they're trying to achieve. however, the images could have been included as part of the writeup on wiki giving brief descriptions and instructions on what was done and what a user needs to do to see it working. there is a proposed plan section that briefly describes their intended plan of action, however i feel it could have been more thorough with the use of images and examples. also, plan on including the design principles/patterns you have used.",1.0,1.0,1,97
i could not find a pull request that matched the project description. have you opened a pull request yet? consider opening a pull request at the earliest so that the expertiza team can check the work you have done and integrate it if it passes their requirements.,1.0,1.0,1,47
"the problem statement is explained well and one can understand the need for it in expertiza. there are well formed headers distinguishing between each section. however, the contents haven't been filled yet and need further work on. adding a section on items completed and tasks left would help the reviewer understand the flow better. the team has identified the sections they want to include and i believe the next submission will include it.",1.0,1.0,1,74
"the writeup clearly explains the purpose of the project. but i guess it is found lacking in explaining how the team has implemented whatever changes they have incorporated. the writeup clearly states which functions need to be tested but what these functions do isn't elaborated. also, it would be nice if you could explain what a particular test is for.",1.0,1.0,1,61
"the writeup does not have an explicit test plan section. the work you did looks promising but you could have included all the cases that you considered in the writeup. again, i understand there is a not a lot to describe, but it is difficult for a reviewer when not all aspects are described in a proper manner.",1.0,1.0,1,58
the writeup describes clearly what functionality the work is related to but it is not descriptive enough when it comes to describing what all change the team has done and how they have done it. adding screenshots and elaborating on the code that was incorporated would be helpful.,1.0,1.0,1,48
"the code is nicely written. one minor thing is in the suggestion_controller, lines - , maybe remove commented out code?",1.0,1.0,1,18
"yes, it seems they have thoroughly listed and explained every steps they took in detail. but i'm a little confused about the ""expertiza environment setup"" part cuz they didn't include&nbsp;installing bower code in ""setup commands"" which is essential to run expertiza on local host. also, i didn't find database migration in their setup process.&nbsp;it's a minor problem but i'd recommend making that part complete.",1.0,1.0,1,73
"wiki for this project is well written and organized. the hierarchic structure almost covered every thing need to be mentioned: there're ""introduction"", ""problem statement"", ""plan of work"", &ldquo;implementation steps&rdquo;, &ldquo;conclusion and learning outcomes&rdquo; and &ldquo;references&rdquo;. but i'd make suggestions: . the &rdquo;introduction&ldquo; part is&nbsp;very long and all about&nbsp;explaining what expertiza, tdd and unit testing are, which i think is not necessary. ""introduction"" should focus more on your project&nbsp;rather than something so general. . there's no result shown in the write up such as how many coverage percentage they finally got.&nbsp;",1.0,1.0,1,106
explanation of each change is very good and detail - i really like the screenshots.&nbsp; i do think you need a better introduction explaining things.&nbsp; just go into a little more detail about what expertiza is and what you're trying to do.&nbsp;&nbsp;,1.0,1.0,1,46
"the diagrams are super messy. there are both arrows that turn into other arrows at corners and lines that properly continue through the corner. there are places where multiple control flows combine into one and there's no combination diamond there, they just awkwardly kinda kiss these are flow diagrams that have blocks like ""instructor"" and ""student (team_id)"" and ""your work"" that are clearly not actions that are being taken. there's also no start node or end node in any of them (the little black circle in a white circle and the other little black circle that's on its own) there's also a decision block (is srq enabled?) that has one exit and no condition on said exit. they would definitely be useful if they were actually uml flow diagrams, i'm sure, but they're mostly just confusing. the first one is probably unnecessary, though. it just kinda looks like a list of buttons the user is pressing. the screenshots are nice, though. love those.",1.0,1.0,1,169
"yes, yes they have. &nbsp; they go into great detail about what work they will do. it would be nice to have a bit more information about what the system is, though. the only real information about the existing system is ""servo is experimental web browser developed by mozilla to ""to create a new layout engine using a modern programming language"". by automating servo (the web browser) we were able to quickly see if servo could render the randomly generated pages."" &nbsp; it doesn't even say which ""modern programming language"" it is!",1.0,1.0,1,93
"it's a mozilla project, so most of this is just provided by mozilla, and there's not a whole lot that could really be added. &nbsp; a little bit of background on what servo is would be appreciated, though, since most of the students in the class have never interacted with servo ever.",1.0,1.0,1,54
"the explanations for the changes proposed are good and makes the reviewer understand what needs to be done but i feel the explanations that are provided do not answer the question ""how it is going to be achieved?"". so i feel there can be certain additions to the explanations that describe how the proposed changes will be implemented. suggestion: mention the files that will need changes and what kind of changes so that the person reading the document can understand what changes on code level have been proposed. &nbsp;",1.0,1.0,1,89
"the authors have not included a testing plan in the document. the major focus of the project is on making a lot of changes to the ui. so, the authors could have mentioned about adding certain tests that will verify whether the changes that have been made to the ui are correctly working or not.",1.0,1.0,1,55
"the explanations provided by this team are very short. they do explain the ideas but not many detailed have been divulged. the files to be modified have been provided which is good. however, what changes the authors intend to make have not been provided and explained. only diagrammatic representation of the result has been given. this alone is not enough for the reviewers to gauge the performance of this team.&nbsp; for the next submission , i suggest to explain the proposed design and the problem statement in detail. include a flowchart or a uml diagram to explain the functionality and the data flow. also thoroughly test the code. include a test plan with an exhaustive set of scenarios.&nbsp; this would enable the reviewers to better understand the work of this team and thus analyze their performance and make it easier for the readers o understand. also i would suggest to add a brief explanation of the two result images provided and clearly indicate the part that has been added by this team.",1.0,1.0,1,173
"yes, some visual aid has been provided. this team has included a hand drawn diagram of the&nbsp;potential page. this makes it clear to the reviewers what the team is looking to implement. however, i suggest that the authors should include a flowchart to explain their proposed implementation. this would make it easier for the reviewers to understand. also , i suggest this team to include a uml and a use case diagram to explain the data flow and the different operation scenarios.",1.0,1.0,1,83
"yes, the design appears to be sound. the proposed design has been explained with the help of a uml diagram and wireframes. these are quite descriptive and help in understanding the proposed implementation by the author. however , only a brief explanation has been given of these diagrams. it would have been great if the authors would have elaborated&nbsp;more&nbsp;over the diagrams. also, i believe most of the doc gives an overview of the proposed idea. only some information have been given about the actual implemenattaion. it would have been better, if more information would have been provided on this front. but i understand that can be difficult at this early stage. also , i believe that it would have been better if the authors would have included some more information about the peer logic, ajax and jquery and how exactly will it be integrated with the design. for someone , with no prior information about peer logic, it can be slightly difficult to understand.",1.0,1.0,1,165
"yes, the authors have adequately explained the changes to be made to the system. they have clearly and eloquently explained the problem and the solution proposed by them to solve these problems. the use of the uml and wireframes have made the design and the author's intentions very clear and the data flow is easy to understand. however, i have one suggestion. i like the fact that the files to be modified have been listed. however, they should mention in brief what changes are to be brought about in the file. the authors have provided the uml which shows the changes that they plan to make. however, adding a brief explanation of each of these changes proposed in the corresponding file would have enabled the reviewers and the readers to get a better understanding of the implementation.",1.0,1.0,1,138
"yes, a test plan is included in this document. the test plan is very descriptive and elaborative. it clearly states the different scenarios to be tested and a detailed description of the various tests performed for each scenario has been provided. the test cases are well thought of and are quite exhaustive covering the entire range of functionalities. however, the test cases included are mostly only for the views. i would suggest to include tests for the controller methods where a response is received from peer logic and the response is checked for correctness. various scenarios of the json response received for different requests can be checked. i would suggest to add some controller tests which tested the different controller methods written for tone anlaysis.",1.0,1.0,1,125
"yes, the visuals included in the doc are very descriptive of the proposed design. the uml diagram is very illustrative and gives a clear indication of the data flow. the wireframes included gives a very good idea of the intended results to be achieved by this team along with the steps to achieve it.&nbsp; i have one suggestion though, it would have been good to include a flowchart or a use case diagram to illustrate the steps of implementation. while they have represented their idea pictorially , the actual implementation lacks some representation. including a use case diagram or a flowchart of the implementation would have aided in understanding the program flow.",1.0,1.0,1,112
"the design doc incorporates all the functionalities that are required to be implemented for this project. it explains the role of each functionality and explains the plan of action for implementation. just one suggestion , the project requirement states that in the review report , the course name and the student name must be shown as correctly it does not display that. this part has not been clearly stated in the doc but rather implied. it would be better if this is also stated as a goal and implementation steps are shown for it in the next submission.",1.0,1.0,1,96
"the design doc is almost complete. it includes most of the relevant subsections. the problem statement has been clearly explained with the help of images. the design which the team proposes to solve this issue has also been explained thoroughly. however, the test plan section is missing . they haven't mentioned anything about testing their proposed design. also this team has mentioned the changes that they need to make in detail but have not mentioned the files that needs to be changed. this would make it easier for the reader to gauge these changes and see if they are accurate or not. thus, i would suggest to add a test plan explaining in detail the proposed testing methodology and include the files to be changed with a brief explanation of changes in each file.",1.0,1.0,1,134
"yes, the design appears to be quite sound. they have included a detailed design proposal which explains the concept they have in mind very well. the design is neat and accurate and addresses all the problems in the problem statement. the overall design flow is also accurate and without any fallacies. they mostly require changes to be made to the views such as adding checkboxes and additional questions so that part of the implementation would be dry. they have mentioned that they will be creating a subclass of questionnaires controller called srq. however , they haven't provided any implementation details such as what methods this class would have. since it is a subclass of the questionnaires controller, i would suggest to use inheritance to its fullest. also, i did not really understand how exactly the appending of the questionnaires would work. i would suggest to include some details about how this appending would function which would make it easier to understand for the reviewers.",1.0,1.0,1,164
"yes, a hierarchical test plan has been included which explains the testing scenarios they have in mind. however i believe that the current test plan included is too short and just provides an overview of testing. since this team plans on adding a new class and altering views for it, they should thoroughly test the functionality. i suggest to include a detailed test plan, where each scenario is described and the different tests for that scenario are mentioned. this would enable the reviewer to gauge the test plan and maybe provide an insight into any of the cases that may have been missed by this team. i scenario that i can think of is that they should test if the correct questions are graded. like the extra student generated questions are not graded.",1.0,1.0,1,133
the wiki doesn't have many visual aids maybe because hard to explain in a visual way.&nbsp;i think can put some pictures of every steps in what to be done section.,1.0,1.0,1,33
"the team has given a short description on what the project is about and the files that has to be modified. clear explanation is given on how the changes can impact the system. the design of the ui screens is provided in a neat and clear manner. tone analysis is also shown at each of the review. only the above informations are given. the team has missed to provide the uml diagram, or any mockup screen of the present working scenario. this would have enhanced the readers understanding. please try to provide a short information on what expertiza is about.&nbsp;",1.0,1.0,1,101
the document starts with two lines of explanation on what expertiza is about and then followed by existing review report shown for the users. mockups are shown that helps to understand more on the problem. problem statement is shown that explains what exactly the project is about in a crisp way. review report page is then explained with all possible screenshot with the proposed changes for the screens. testplan is not mentioned anywhere in the document. please add test plan that adding bulleted point wherever necessary could have improved the readability of the content.,1.0,1.0,1,94
"the authors have done a great job explaining the intent of the project. the screenshots and descriptions are very helpful. the only improvement i can suggest is to segregate the sections properly. at the moment, the ""present scenario"" and ""proposed implementation"" are mixed up. the authors need to separate these into different sections. secondly, the proposed implementation should also contain details of the application files (views/models etc) that needs changing. third, the authors need to add a ""test plan"" section and describe the same.",1.0,1.0,1,85
"the authors have clearly explained&nbsp;the tasks related to the project. some of the sections needs more explanation. such as section in ""work to be done"" states ""-generating elements trees of arbitrary depth"". the authors could explain these bits in more detail.",1.0,1.0,1,43
"the&nbsp;authors do not mention about the proposed design. it mentions ""what"" tasks need to be completed in the ""work to be done"" section but does not mention ""how"" to do them"". a proposed design section lists screenshots and descriptions of how the application will look or work after the changes are made.",1.0,1.0,1,54
the authors have only provided one screenshot of a generated html. they need to provide more diagrams which will describe aspects of their application such as: . modules of the project and their relationships.&nbsp; . flow of the application. . testing life cycle specific to the application (if different from ).,1.0,1.0,1,48
"the design document clearly mentions the purpose of the project. they also mention the proposed next step. but the&nbsp;authors need to add more sections in the design document: . ""test plan"" is not mentioned anywhere in the document. . also, the authors need to add a ""proposed design"" section. the ""work to be done"" section can list more specific details such as models/controllers to be changed (or related code changes).",1.0,1.0,1,71
"the test plan is brief. the authors need to add&nbsp;specific test cases pertaining to their project. for example: . given input x to browser , input x to browser , both browsers should render same. . given input x to browser , input&nbsp;y to browser , rendering results should be different. .. so on. &nbsp;",1.0,1.0,1,52
"the test plan seems to be superficial and shallow. the team could have mentioned the different scenarios in the controllers and models that are going to be changed , they could just mention the changes these files will have and can briefly mention all the possible test cases that can be implemented on these files.",1.0,1.0,1,54
"though the files that will be changed are mentioned, a high-level overview of what code changes need to be made to these files is not given. it is suggested that this section be added.",1.0,1.0,1,35
"while the explanation of methods and tables is complete, this section may be better exemplified by using an erd for the tables and uml diagram for the methods.&nbsp; the same is true for the test plan.&nbsp; for example, test could be drawn out with decision diagrams to show the flow of execution and error/pass conditions.",1.0,1.0,1,58
"the test plan and the functionality of the controller sections detail what is to be done well.&nbsp; it would be better if these sections were combined so that a reader does not have to scroll to get further context.&nbsp; for example, if a reader is looking at the create_requested_user_record(number ) test, they can see how the test is run, but they have to scroll up to the functionality section to see what the method is supposed to do.",1.0,1.0,1,80
"the test plan section could be improved by the use of visuals.&nbsp; for example, the text below could be better portrayed as a decision diagram. . ""does the user belong to any institution? if yes, good. otherwise, set a new institution."" . ""is the user already existed and valid? if both yes, good. if the user already exist, send notification. if the information is not valid, fail.""",1.0,1.0,1,66
"these changes are difficult to visualize.&nbsp; adding one or two mockups with arrows with the bullet points pointing to the relevant section of the mockup would be helpful.&nbsp; for example, the bullet item ""when a student goes to &ldquo;your team&rdquo;, he should be able to select a duty from a drop down menu."" may be better shown with a screenshot of the ""your team"" page with the added drop-down and an explanation of its function.",1.0,1.0,1,80
"the functionality is covered in the proposed implementation section, but this section is too verbose. this may be rectified by adding mockups as stated before.",1.0,1.0,1,25
"the design document sections are complete and satisfactorily cover the need, approach, and testing required for the project.&nbsp; it would be helpful to have some diagrams/mockups in the test plan or proposed implementation.&nbsp; in the test plan section, the word ""role"" should be replaced with ""duty"".",1.0,1.0,1,49
"the test plans cover the flow of the ui well, but it would make the test plan more complete to add negative tests to the positive, ""happy path"".",1.0,1.0,1,28
proposed code changes are not given in the proposed design section; please add these.&nbsp;add a screenshot to the proposed design for issue ; these are a good visual add in seeing what will be changed.,1.0,1.0,1,36
"the design appears sound in that it appears to work well within the existing functionality.&nbsp;the proposed use of principles and patterns is not given. this could be accomplished by, for example, stating what design patterns are in place and will be kept for the existing functionality.",1.0,1.0,1,48
"the authors proposed to review the db schema and update the wiki. however, no more detail at all was given, and as such it is difficult to gauge the quality of the explanations present.",1.0,1.0,1,34
the design appears to be simple and easy to understand by a normal user. the team could have made use of more visual aids to make it more appealing. the team could also include the test plan.&nbsp;,1.0,1.0,1,38
the design appears to be sound with all the required information about the project. it contained the details about the previous work and work to be done now. it has all appropriate principles and patterns. it is complete and may include some use of visual aids to make it much better. it could also include the testing plan which is highly appreciated.,1.0,1.0,1,62
the authors have explained the project well. the design document included the previous work and the changes that need to be done for the next work. the authors have taken enough effort to make the design document easy to understand. the team could have used more visual aids that would add to the explanation of the project.&nbsp;,1.0,1.0,1,58
the design document did not include the test plan. including a test plan in design document is greatly encouraged. the test cases must also be included in the test plan. this would improve the coverage of your project and hence will improve the range of the project.,1.0,1.0,1,47
there is no class diagram in the design document. the visual aids in the design document is a screenshot. these figures are contextual and relevant to the explanation. the screenshot clearly demonstrates the previous work. use of more visual aids is greatly encouraged as it would make the design document easy to understand.&nbsp;,1.0,1.0,1,54
"under proposed implementation, i don't think they need to explain each step they are going to use for the problem, instead, they should focus on describing their ideas, which would be enough.",1.0,1.0,1,33
"the arrangement of the context under proposed implementation can be improved, e.g. don't use bullet points to separate two sentences that's should flow&nbsp;sequentially.",1.0,1.0,1,28
i am not sure if implementation doubts should be part of the design doc? maybe they should just meet with their mentor to solve those doubts.,1.0,1.0,1,26
it might be redundant to separate&nbsp;problem and solution since they both use the same screenshot. i would suggest that they just describe each problem with its solution and then use the same screenshot.,1.0,1.0,1,35
"they explain the project purpose well, but when they explain the design, or what they will do satisfy this purpose, i feel they could be more explicit. perhaps in the resubmission they could explain the exact places they will look and files that will most likely end up being changed, but this document is fairly lacking as it is. also, the testing plan only states that they will ensure previous tests work. what are the pivotal tests that must work? graphical inclusion would be a great idea, and im not sure listing the entire documentation is too great of an idea too because its rather confusing and doesnt actually explain what&nbsp;their&nbsp;contribution will be.",1.0,1.0,1,117
"in general the document is really good and complete . i appreciate the teams effort in analyzing the requirement . test plan was also written , few things i think could be in cooperated are&nbsp; . i was not clear on how the visualization would be incooperated into the table view , more details will be pretty helpful&nbsp; . a little more information on testing like , it is to the unit test files or would it be a ui test etc could help a lot",1.0,1.0,1,81
the team mentioned the files to be modified. if possible addition of a little bit more finner details will be really helpful to answer this question&nbsp;,1.0,1.0,1,27
"in some cases it is mentioned which files would be changed but they are only related to view, it would have been beneficial to have included changes in controller as well. in ""assignment of good reviewer"" its very difficult to just know a column by icon, usually if the space is very small it makes sense to have icon, but in this case it would be better to have written text.",1.0,1.0,1,71
one change i would suggest in the proposed implementation is adding the files which would be affected by the change proposed or in the file modification adding what this change is for. the proposed changes no where mention when the instructor will add questions related to each role. &nbsp; overall the proposed implementation gives a good idea what&nbsp;one might need to do to accommodate this change . &nbsp;,1.0,1.0,1,69
"the document appears complete in the proposed implementation: i do have doubt regarding what if one&nbsp;student&nbsp;is doing multiple things&nbsp; in the files to be modified, it would have been better to include what changes should there be in each file, would give better idea as to why these files need to be modified. test plan should be more elaborate: testing before submitting project all the students should have some role in the new files section rather then mentioning duties table, it would have been better to write about migration script and specify the columns and their data types &nbsp; &nbsp;",1.0,1.0,1,105
"i did not find a section where the classes, models, controllers or views that would be impacted were listed. they could have listed it in a separate section so that they could have been visible properly",1.0,1.0,1,36
the uml diagram looked very informative. but apart from that i could not find other screenshots . they could have provided some more diagrams that could have explained the design doc better.,1.0,1.0,1,31
"the design document is well presented, but i felt that the introduction part could have been written in points , because it is the most important part of the project and if it is written in points, the reader can have an overall understanding of the scope quickly",1.0,1.0,1,47
"the design doc felt a bit incomplete to me. although the problem statement was explained in detail, the document does not say what was wrong with the previous version of the project and why an improvement was needed. regarding the design, a single mockup was provided which gave me an idea about what the team is planning, however it would have been better to provide uml diagrams and names of files that are to be modified/added. also, a tentative test plan could have been included.",1.0,1.0,1,86
"there was a single uml diagram which was a class diagram that was very detailed and also showed the relationships between the classes. but i felt that at this stage, a usecase diagram and an activity diagram would have been better choices to help explain the problem clearly. there was also no mockups, hence i am deducting points.",1.0,1.0,1,58
"the design looks good. it has been supported with uml diagrams such as a class diagram, however usecase or activity diagrams would help in explaining the overall design of the system whereas a class diagram explains only the relationship between certain classes. hence i am deducting a point.",1.0,1.0,1,48
"a test plan is provided and it looks detailed enough to test all of the new functionalities of the system. however, i am deducting a point because rspec test files could have been mentioned where the necessary changes are to be implemented.",1.0,1.0,1,42
"they have provided the external link to introduce the required functionality, but it would better if they include some materials on their own page.",1.0,1.0,1,24
they have the general structure. it would be better if they can include more background information. and they can reserve one extra paragraph for their team members.,1.0,1.0,1,27
"the portions that the team added at the top of the write up are good, they explain what is required of the project, and some of how they plan to get those steps done. but the bottom part, the list to all the tables in the db, seems a bit overkill. the write up does not need to link to every table that will be touched, maybe if you want to include them they can be added in a simple string of links rather than these large blocks? since they are added i feel there should be some details attached to them as well, like what each is used for, and how you plan on updating that specific one.&nbsp;",1.0,1.0,1,120
"no testing section is included, but the tests for this project are going to basically involve running the test from each other module that has some db interaction. so that is out of the scope of this project i think.",1.0,1.0,1,40
"overall very well done, especially in the future work section. one area i can see room for improvement in is the previous work section, parts through could have some small explanations added to them.",1.0,1.0,1,34
"the explanations were a little hard to follow at times. however, most of the time, i understood the changes that would need to be made to the first part of the project. adding a link to new topics so that a reader can have the chance to learn more if they are confused will be beneficial to this document.",1.0,1.0,1,59
"the design document incorporates all the functionality required. however, this functionality was only described in words. a kind of pictorial representation or a flowchart of the code that will be written would have been useful to the doc.",1.0,1.0,1,38
"yes, since the team's project is to write integration tests, they of course need a test plan.&nbsp; the team provides a solid test plan and has done a really good job explaining what each method they test will do.&nbsp; while they have done a pretty good job explaining what will be tested, it might help to add a short explanation for each test.&nbsp; this is something i mentioned as well in my initial review.&nbsp; for instance, under the ""create"" method, one of the described tests states, ""is this the name new? if yes, good. otherwise, register the user by email address"".&nbsp; this is a bit confusing to me, as i don't fully understand what is going on.&nbsp; it seems to be saying if the name is new, then don't register a new user, but this seems contradictory to the idea of a ""create"" method.&nbsp; because of this, it would be nice to have some added explanation attached to each tests.&nbsp; other then that though, everything looks good.",1.0,1.0,1,178
"as i stated in my first review, the author does not appear to have proposed any changes out side of reiterating the project description.&nbsp; since this project mainly focuses on clearing up the db, i do not feel as though there is really any need for formal documentation such as wireframes or uml documents to be made.&nbsp; that being said, it is important that the team lay out a plan of action so that both reviewers and other team members alike have a good idea what is going on.",1.0,1.0,1,91
"while the team reiterates the project description, they do not appear to hvae worked though any design decisions as of yet.&nbsp; this is something i pointed out in my first review.&nbsp; to keep a team unified towards a common goal, it is critical that a well&nbsp;laid out design document be written up.&nbsp; because of this, i highly suggest that you all focus on writing up a design plan before beginning to code.",1.0,1.0,1,77
the design proposed by the team is good.&nbsp; their step by step course of action sufficiently describes how they intend to approach the project.&nbsp; one thing i would definitely suggest adding to their design document though is a uml diagram and a wireframe as explained above.,1.0,1.0,1,48
the team has not as of yet included many diagrams or visual aids.&nbsp; i would highly suggest adding a uml and wireframe as described earlier.&nbsp; the team did add a sample screen shot that complements one of their required functionalities though.&nbsp; this definitely helped me as a reviewer to understand the scope of the problem.&nbsp; i would love to see more examples like this attached to other functional requirements.&nbsp; other then that great job!,1.0,1.0,1,79
"the team has done a really good job describing their previous work, as well as what they plan on completing in this up and coming iteration of their mozilla project.&nbsp; they have done a good job breaking it down into steps and describing each step in detail.&nbsp; one thing i think should be added though, is a uml and wireframe.&nbsp; both of these can be super helpful when trying to get a team on the same page design wise.&nbsp; my favorite website for working with wireframes is balsamiq.&nbsp; a free trial can be activated on sign up here https://balsamiq.cloud/.&nbsp; when it comes to creating uml diagrams, my favorite free program is draw.io which can be found here&nbsp;https://www.draw.io/.",1.0,1.0,1,131
"the team has done a great job integrating figures into their design document.&nbsp; this is something i thought was lacking when i first reviewed their work, but they have addressed this problem nicely in their final write up.&nbsp; the team has provided a simple, easy to read flow diagram describing the system as a whole.&nbsp; one item i would definitely suggest adding though, is&nbsp; uml diagram.&nbsp; for documentation on creating uml diagrams checkout this&nbsp;wiki article that i think is really good and helpful:&nbsp;https://en.wikipedia.org/wiki/unified_modeling_language other then that, great job!",1.0,1.0,1,102
"the approach is as simple as possible and changes are not much to be done. the project is an easy one and the authors have not made any complicated decisions. however, reference to old work would be helpful to evaluate the work.&nbsp;",1.0,1.0,1,43
there is no testing plan present. the design doc can be more informative and have more images for the reviewers to better understand the approach the authors would like to take.&nbsp;,1.0,1.0,1,32
"i think almost all sections are there. the only one missing is the background information for expertiza itself. while i already know about expertiza i think it would be appropriate to include a background section saying what expertiza is and get more specific about how this project will benefit the expertiza project. &nbsp; the other suggestion i would make is to either put references in the references section or have them referenced somewhere in the wiki. you currently have no references. you could add references to things like tdd, expertiza, your own github&nbsp;repository, etc. to help flesh out the document.",1.0,1.0,1,102
"the explanation is easy to follow just by reading the code. however, i think more information can be present in wiki and the authors can include images to make it more informative.",1.0,1.0,1,32
"yes the work is explained concisely. however, the authors can use mockups of the ultimate system will look. since it is a mozilla project previous work is not present to evaluate whether the things they have implemented or not.",1.0,1.0,1,39
i didnt find any visualisation in the given wiki. i think the authors can use mockups for better explaining their project.&nbsp;,1.0,1.0,1,22
"the design document provides in depth details about the current issues and things to be implemented which is good. they make use of images to good effect. the only issue i see is that they are missing a few key sessions. consider thinking forward and adding test plans, as well as setting up a git fork that you'll be working on and adding it as necessary external links.",1.0,1.0,1,69
"the authors need to be more explicit about the changes they will make. it is good that the team communicated that they will update the wiki to reflect the current db schema, however instead of stating the potential changes, the structure of the entire wiki was instead presented. i think once the team dives a bit deeper into the project, they will be able to provide the names of the db tables that were changed or removed.",1.0,1.0,1,77
"no visual aids were used, and it would be a bit tricky for the team to include any on this one. however, screenshot of how various tables in the db are linked together presently would have been a nice use of visual aids. i would suggest somehow providing a visual aid that helps provide the rationale for each change made to the db. this would allow for more understanding regarding the project and the impact of the changes.",1.0,1.0,1,78
"the design copy and pasted the required funcionalities listed on the main document, so yes, objectively the design does incorporate them somewhat. however, the actions that team stated they will take are not very detailed, so it is difficult to guage whether or not the requirements are being met.",1.0,1.0,1,49
"there is no visualization, and it can be argued that there need not be any for this project. however, i would recommend that on top of the instructions that team provided for navigating the db schema, that the team also provide a screenshot of the console here as well.",1.0,1.0,1,49
"the explanantions provided are very clear and understandable. the specific actions that team will take for each of these changes are explicitly outlined and the scope of their changes is very apparent. i would suggest that the team be more specific with regards to which files will be modified and, perhaps also use a few visual aids such as mockups to illustrate some of the visual portions of their proposed changes (e.g. how the differences between rendered web pages will be indicated).",1.0,1.0,1,83
"there are no visual aids in this doc, and i think there should be at least one. based on the scope of the project, it is apparent that a lot of classes are interfacing here, and new classes will have to be made. a uml diagram would be very useful provided that they are accurate. in addition, a visual aid that shows how web page rendering comparision process will be done will also need to be added, as it is an important and visual component of the project's objectives.",1.0,1.0,1,90
"the design of the doc appear to be simple and clear, however, there a few parts of the design that lack detail. for example, the team mentions geckodriver, and it appears it is quite crucial to the project. if that is the case, the team should have linked to the geckodriver website within the doc or provided more information on it overall.",1.0,1.0,1,62
"the document is quite well written. the purpose of the project, the proposed actions, and the testing plan are all apparent from reading the doc. there is, however, a general lack of visual aids, so it hard to see what the current state of the project is. another suggestion would be to outline a more detailed and thorough testing plan, and also putting in a seperate section by adding a eading.",1.0,1.0,1,71
"this project seems like it would require quite extensive testing, yet the team did not include any. some of the testing proceure is implied, but i think the team should have a section named ""test plan"" that cleerly outlines what exactly they will be doing to test the functionalities.",1.0,1.0,1,49
"the team added a screenshot of a randomly generated html page, which is a major component of their project. this illustration provides a decent visualization of what this means. however, a design mockup of their visual results as described in the doc (e.g. the differences between rendered web pages), would have been beneficial.",1.0,1.0,1,54
"they wrote the potential changes in propose implementation which is quite easy to understand and followed the requirements. but it's just too short, details of implementations are not discussed and it's almost a copy of the requirements, so i'd recommend apart from propose implementation&nbsp;they may write implementation plan which discusses each proposed change in detail and includes newly-added files, classes, methods, variables and their functionalities.",1.0,1.0,1,71
"the team's wiki seems to be written after they have fully&nbsp;understand the goals of the project and i think they almost got everything needed in their wiki. they got overview, diagram, proposed implementation, test plan which is good. but i'd mention that test plan is kind of brief. they just wrote what need to be tested, so i'd recommend to include more information about testing such as the to-be-tested&nbsp;files, to-be-created rspec test files and brief descriptions of to-be-tested methods.",1.0,1.0,1,92
"&nbsp; yes. they got an excellent diagrams to illustrate the relationships between several models that are related to their project and how they relate to each other. but i got a little confused on some signs such as "" "", "" .."""", "" .."""" on those orange lines, so you may explain that a little bit in wiki.&nbsp;another minor problem is that the pictures are too large and can't perfectly fit the page&nbsp;so you may consider fixing this. &nbsp; &nbsp;",1.0,1.0,1,79
"the explanations for the proposed changes are straightforward and quite easy to understand but they are almost the copy from the requirements, so i'd recommend they discuss them in detail. for example, for "" . go through the expertiza_development database to find tables that not used any more or redundant records."" they may explain the criteria they decide to use to find the useless or redundant tables.",1.0,1.0,1,66
"project name could have been better. methods were kept small. comments were left out in some controllers/views. if-else blocks weren't properly indented in some cases. hard-coded numbers were used for comparisons. a better way is to create enums representing different values(such as roles) and using those enums in code. this way, something like if role == becomes if role == realtor and thus is more clear. &nbsp;",1.0,1.0,1,70
"the system performs all the desired functionalities. a shoutout to the idea for the auto filled inquiries. i really liked that feature where the inquiry is already filled after which the user gets an option to edit the inquiry. some parts need improvement. for ex: the link ""new houses"" in the house list redirects to the&nbsp; users/edit link. its a minor issue which could be looked upon. the layout of the homepage for house-hunter can be fixed as links overlap each other. also, the houses list shows edit/destroy options for the entire house list, that's a bug which needs fixing.",1.0,1.0,1,105
"overall, code is clean and readable.&nbsp;naming and project structure is consistent with good practices. one issue that stood throughout the code is that authorization is done directly in controller methods. it would be better if this common functionality was moved to a separate function call (e.g. validating user's role in houses_controller#create method)",1.0,1.0,1,57
"the ui for the login page is the only thing that loads, as i'm unable to sign up. a suggestion for the future would be to provide a username and password for an account that is already created to be provided somewhere to ensure a reviewer can log in even if signing up does not work.",1.0,1.0,1,57
although branching strategy was followed. the commits mostly seem to be made on the second-last and last day of submission. it will be helpful to keep committing code at the end of each day or every couple of days so that there is no major issue of merging at the end. also it ensures that all team members are working on the same copy of code.,1.0,1.0,1,67
code looks good. the first cut for good too.&nbsp; i still do not see code for models in model files if an additional gem has been used it would be good to mention that in readme,1.0,1.0,1,37
"the type of user in the view user panel through admin login is unavailable, would it be possible for the team to have two separate views/controllers and crud functions on realtors and hunters?",1.0,1.0,1,34
"the code quality is fairly standard,&nbsp;the code practices dry principles fairly well. i would suggest creating new controllers for managing house hunters and realtors from admin profile since, on creating a new realtor/house hunter the admin logs out and this seems like stop gap fix.&nbsp;",1.0,1.0,1,49
all methods and classes are well designed and serve well defined functionality. good job! could have named the methods and variables a little better. each function performs a single task. every method is short and to the point i.e does not contain many nested blocks or if.,1.0,1.0,1,48
"there a large set of variables that do not follow typical ruby naming convention. an example is that ""existassignment"" should be&nbsp;""exit_assignment"". additionally, some names are not very helpful. for instance, the variable ""frm"" is used for a form, but why not just use ""form""?&nbsp;there is also a lot of javascript written directly on the page and are difficult to read and understand as there is missing method names or other non-intuitive variable&nbsp;names",1.0,1.0,1,79
"- the write-up does mention the files changed but misses out on adding code snippets. - little formatting inconsistencies found like ""-- expertiza project"" in the introduction, and a "":-"" only for overview but none of the other headings. - looks like ""separate the list of 'teamed with' students from the current tasks box"" needs to be a heading rather than plain text! -&nbsp;now we have created a separate table for assignments"" sounds ambiguous - does it mean a new database table or a html table..? please be specific. - ""a helper function was also added to format a string into multiple lines"" - please mention what the string is about (what it represents), what are these multiple lines that it is getting split into, and why you would want to split them. - test cases are not stated. test plan does mention one as ""for example"" but the testing process could've been given a little more respect. :)",1.0,1.0,1,152
"the code is clear and concise. the variable, method and class name choice is correct.&nbsp; one variable i feel can be changed is&nbsp; top_max_choosers can be renamed to topic_max_slots, as slots has been used in the function name as well and it will be more consisted &nbsp;",1.0,1.0,1,49
max_choosers name was not changed. as far as i understand it denotes the maximum number of slots and should be called max_slots. which is not changed. apart from this code is good.,1.0,1.0,1,32
"i could only see commits with no significant file changes. i would request team to add and contribute the changes as soon as possible. with the present changed code, methods names and variables and class names are proper with reasonable naming conventions.",1.0,1.0,1,42
can not find any video or link or ip address link to manually test the changes. i would request team to deploy the changes so that we can test the system partially.,1.0,1.0,1,32
"an unnecessary commit has been performed because&nbsp; of which&nbsp;build has failed, and i think it wasn't required as already code&nbsp;had % coverage. you should check that out, it just an indentation issue i think.&nbsp;format it using rubymine and push, it should work.&nbsp; a&nbsp;shorter video to explain the work has been added as well.&nbsp;",1.0,1.0,1,64
"a commit has been performed days back , which isn't&nbsp;making any change to the code just the indentation, and since then&nbsp;build hasn't passed. you should check that out, it just an indentation issue i think.&nbsp;format it using rubymine and push, it should work.",1.0,1.0,1,50
set_proposer is a setter but appears to be used as a getter.,1.0,1.0,1,12
"the travis ci build did not fail exactly but it did not pass either. it showed in progress. but when i clicked on the details, it showed that the test failed.&nbsp; suggestion: travis ci issue should have been rectified.",1.0,1.0,1,40
"method&nbsp;remove_instructor is written twice in the same file, delete it.",1.0,1.0,1,12
it only explains how they did but not why they did. the various approach could have been mentioned in the wiki.,1.0,1.0,1,21
"code snippet added.&nbsp; still, git link is not of the pull request.&nbsp;&nbsp; no link provided for the change. either screencast or the url of the deployed application would have been ideal.",1.0,1.0,1,34
"the authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.",1.0,1.0,1,22
"writeup clearly explains what their use cases are and what solution they came up with. there is a lack of background about it, how to test it from ui, test plan, test cases, dry principle etc. their write up is not on wiki, which makes it difficult to download the file every time and check it. although it was pointed out during the first round, the team didn't change it , or they didn't update the wiki page which they created.",1.0,1.0,1,82
"the code changes are very less, so not much to say about refactoring, dry problems etc. the code has ""put"" statements which are also pointed out by the code climate bot.having put conditions is not a good coding style, the authors could have considered to remove the statements. puts ""hi, im in import"" puts name.to_s the authors could have debugged to see the flow of code, or remove them before committing.",1.0,1.0,1,73
"the document clearly explains what was the problem and what was the solution they proposed.they have also compared and contrasted with the previous solution which is good. they have talked about how different roles come into play with respect to security perspective and what the pros and cons of having/not having those roles. comparing the code changes gave a clearer view of the code changes. one improvement could be in the 'background' part.&nbsp; taking it as it was: the majority of the project was related to solving issues regarding the deletion of administrator and instructor accounts. administrator and instructor are both account types that inherit behavior from user but are ( )handled and deleted in different codepaths. furthermore, properties are used on a user that aren't on an administrator, ( )such as team ids or course associations&nbsp; ( ) the different codepaths could have been shown to get a better view (atleast a screenshot, considering it wasnt within the problem scope) ( ) although, why these properties arent on administrator is defined in the forthcoming sessions, it was little unclear while reading it. (it could have been quoted that 'as we will see it in the forthcoming sections')",1.0,1.0,1,197
no new test cases were added. the new code changes don't change the modify the existing code coverage. the modifications were mostly on ui. they could have added capybara testing.,1.0,1.0,1,31
"for the ruby changes they have made, they have used intuitive names and used naming conventions as much as possible. def update_feedback &nbsp; some places, the variable names are used in camelcase whereas few places they werent used. few variable names were directly used from legacy code, although refactoring could have been done. curquestionnaire quesparams . questarray",1.0,1.0,1,56
"write up is good and self explanatory. test plan helped a lot in understanding how to test it. as discussed in the earlier review, images could have been resized for better visibility. was little difficult when one had to scroll along the page to view the entire image.",1.0,1.0,1,48
"the writeup s format on how they distinguished the features and explained solutions for each and everything is good. first they give a bird's eye view of the problems and then deep diving into each problem with solution and screenshot is good. the background explanation given could have been more specific towards their problem statement, rather than just about expertiza. the images tend to occupy the entire page and its little difficult while going through it, a little foramatting could have made their page really good.",1.0,1.0,1,87
"yes, the team has explained their code and the reason for the additions made. however, for the issue # , some more information about the tablesorter and some additional comments would improve the writeup. solutions to issue # and # are explained clearly and are easy to follow.",1.0,1.0,1,44
"most of the variable names and function names are named based on proper convention. suggestion: function addcreatetopicsection()this function name could be changed to maybe createtopic() or addtopic()apart form this, all other names look good",1.0,1.0,1,36
"there is no link provided to test the code manually. however from the video provided, i can infer that all the features have been implemented and are working properly. issue # and # are working as expected. in issue # , i could see that the previous version of the 'add new topic' page had a topic description and topic category field which is not seen in the updated version. suggestion: the team could implement that or if already implemented, add that to the wiki page to reflect the way in which that is handled",1.0,1.0,1,91
"the project is ready to be merged. the source code is clearly structured&nbsp;and&nbsp;can be used for the future team&nbsp;to work on. the project has % code coverage.&nbsp; in order to avoid potential problems of using assignmentparticipant instance, participantsuper object is defined in factories.rb, which is an instance of&nbsp;participant class. the possible&nbsp;suggestions are&nbsp;to deconstruct&nbsp;#scores method and introduce 'context' constructs&nbsp;to&nbsp;enhance code documentation.",1.0,1.0,1,79
overall the code looks good with most of the coding standards being followed. however i think it lacks proper commenting and also there were few stray&nbsp;pieces of commented out code lying around. adding few more comments and deleting unused code would be better.,1.0,1.0,1,45
"the code has been written as per the coding standard. the code written by the team adheres to dry principle. however, as per my first review comments it is advisable to follow better naming conventions. the team could rename their function names such as the below one to something smaller such as get_time_diff. the code needs refactoring in names and addition of comments.&nbsp; def get_time_diff_btw_due_date_and_now(due_date)",1.0,1.0,1,67
ruby coding standard has been followed. only one function has been added in controller as per requirement. code follows dry principle. the&nbsp;team can add comments for the code added which would be useful to understand the code.,1.0,1.0,1,39
the team has done good manual testing but it would help to add few test in features to test the impact of the changes done in functionality of the project.,1.0,1.0,1,30
the team has not included any test cases. it would be easy&nbsp;to include the test cases on the&nbsp;&nbsp;app/controllers/suggestion_controller&nbsp;for the&nbsp;update_feedback&nbsp;method that has been added. also&nbsp;the team may add some features test cases as most of the changes made are in html files. the&nbsp;team can refer&nbsp;the existing features present in the&nbsp;.spec/features folder.,1.0,1.0,1,72
"although i believe this project is ready to be merged into the branch, i would still like to make sure as to why their build is failing in travis ci. most likely it's not because of their own code, but as a suggestion the team should have also looked into this matter themselves, and explicitly stated somewhere in the wiki by getting clarification from the instructors.",1.0,1.0,1,67
"unfortunately, the build failed in the second round.&nbsp;but, in my opinion this was not due to the team's mistake. the build failure says the two examples failed are in files ""assignment_spec.rb"" and ""assignment_participant_spec.rb"", both files which the team had no connection with. i could be wrong though. as the build was passing and there tests were running in the first round, i am inclined to believe it was because of another team's incorrect code that this team pulled into their branch by mistake.",1.0,1.0,1,89
"the test plan is missing in the wiki page. the content in this section could be the one suggested in the above comment, to just include all the test cases added and write a brief description about each.",1.0,1.0,1,38
"the code is well written. although as suggested earlier, the team has not added comments to the code. in the wiki page, the team displays of how the code was before and after. but, i still feel this is not adequate information for a layman to be able to follow line by line what the code does. adding comments in the code for future projects would be my best suggestion. or, as an alternative, briefly explain in a line or as to what the code does.",1.0,1.0,1,86
"the code is very well written as previously said. however, some test cases are still not passing and that may be troublesome if deployed onto production server. it would be a really nice opportunity for students in further classes take this up and improve the work so that they can complete the work which was left incomplete due to time constraints.",1.0,1.0,1,61
"there have been only two commits - one on th oct and second on st october. there have been no commits since. it would have been better if you people had given one more commit resolving the issues given by code climate, since most of them are trivial.&nbsp;",1.0,1.0,1,48
"it feels like test plan only covers one aspect - ""changing of the background color for tasks as we approach the deadline."" &nbsp; here are other aspects which can be automated for testing, perhaps by rspec or the likes: add past due assignments to the student&rsquo;s task list (on student view). -- verify if they are being added/saved check for correction in due dates of assignments (when an assignment&rsquo;s due date is edited, it should be appropriately moved from the &ldquo;past assignments&rdquo; list to the &ldquo;current assignments&rdquo; list if needed) --- check if the functionality works. on student task page, separate the list of 'teamed with' students from the current tasks box. -- test if this works write the required tests before implementing/refactoring the methods in the above-mentioned classe ",1.0,1.0,1,136
"the write-up is very detailed as to what features have been implemented but lacks on explaining how they are implemented. it can be improved by adding how the features have been implemented, why they chose this logic to implement the features and how to test the code or show how they have tested the code.",1.0,1.0,1,56
"i think user experience and code readability are as imp as producing a working code. so based on how urgent is the requirement for this functionality, i would prioritize refactoring the notices and display messages to more appropriately indicate what action was taken when we try to add a participant to the assignment or import using a csv file. secondly improving the comments as explained with an example in the first question.",1.0,1.0,1,72
"there were some issues which i reported regarding comments and notice messages displayed to user which needs to be improved. but they haven't been incorporated. it is not a blocker but definitely an important change to improve user experience and better code readability. for example, in submitted_content controller there is a comment which says sending email to users. however it is just a method call which redirects it to delayed_mailer.rb. so this should be properly mentioned as it will be helpful for someone refactoring or understanding the code later.",1.0,1.0,1,91
yes good number of tests added coverage increased a but but i would like to see more -ve tests. mostly +ve test cases are covered in the tests &nbsp; &nbsp;,1.0,1.0,1,30
write up is good. great job. however i could find few points that if rectified would make it even better.&nbsp; it would be good if the problem statement could list the issue (hyperlinks) that are being fixed. that would make it easier to navigate instead of pasting screen shot for solution it would have been good if few words detailing approach would be put. post that screen shot could be put. &nbsp;,1.0,1.0,1,73
"comments in code are missing. there are few lines that need to be removed but still exist, it would be nice to delete those eg #emails &lt;&lt; assignment.instructor.email&nbsp; &nbsp;function length looks okay, most functions have len &lt; lines which is an acceptable number. since the code is implementing very specific issues over it has specific local changes.&nbsp; other change are okay and ruby like",1.0,1.0,1,70
"authors could use empty? instead of checking unityid != ''. another thing that the authors have taken care of ttml mails but what if the somone needs to non-html mails.&nbsp; attribute copy_of_all_emails does not look like a good name, it would be nice if they could rename it to email_copy_all or so this help in reader understand as well as in ide intellisense.&nbsp; code coverage has decreased&nbsp; &nbsp; &nbsp;",1.0,1.0,1,71
"write up is okay, the test plan comes before solution / approach section . pls change the ordering. there is no reference section&nbsp; instead of putting screen shots of code it would be better if the authors had put code snippets &nbsp;",1.0,1.0,1,41
"@all_task vs @student_tasks &nbsp; the name 'all_task' does not sound appropriate. it should be student_all_tasks. &nbsp; . all_tasks =&gt; student_all_tasks &nbsp; . student_tasks =&gt; student_available_tasks &nbsp; . current_student_tasks =&gt; student_current_tasks . past_student_tasks =&gt; student_past_tasks &nbsp; &nbsp; also, the filename will_paginate_array_fix.rb&nbsp;seems misleading to me. a better name would have been support_array_pagination.rb. &nbsp; also, i am not sure this file should be in the initializers, as it is just a require statement. may be this should be included in the places where the pagination is required, instead of loading it&nbsp;during app initialization.&nbsp; &nbsp; &nbsp; &nbsp;",1.0,1.0,1,96
"the how part is clear. as to the why part, thought they have clearly mentioned the the problem statement, i think a little bit more of an explanation could go into why is that actually a problem.",1.0,1.0,1,37
"the code is written aptly and it does what it is supposed to do. however, code comments are missing.",1.0,1.0,1,19
"yes, i was able to understand the issue as well as the solution overall. but i couldn't understand why there is a need to append a team name to an assignment. it was just mentioned that it is done in other part of the code as well. mentioning that would have given me a better idea.",1.0,1.0,1,57
"it is pending while i am doing this review. when i click on it, it did not pass travis ci, but it fails on tests on features, while this group is testing participant, it happened to our group as well, i assume it is not an issue with their code.",1.0,1.0,1,50
"commented-out code should be removed (at least one example found in participant_spec.rb). also, there are some indentation issues as well as other issues flagged by codeclimate. otherwise, the code seems to comply with the ruby style guide and be fairly dry.",1.0,1.0,1,43
"the writeup was fairly specific on how the solution was implemented, although more qualitative description should have replaced the source code dumps. the writeup barely explained why the improvements were needed, focusing on what was implemented.&nbsp;",1.0,1.0,1,37
"the team added the test plan section but it was too short and did not explain all the test files created and/or modified. the implementation section could do without the many code dumps. otherwise, the writeup was concise and effective.",1.0,1.0,1,41
the authors have documented the steps they did to solve the issues. although they haven't mentioned any particular design principles or design thinking that went on in solving the issues. they should have&nbsp; explained all the functionalities of each file they have modified and stated why they have modified the particular file. one thing they could have added were class diagrams and dependency maps. or some pictorial representation of the flow of each task which will help the reviewers and instructors to quickly catch up on their idea.,1.0,1.0,1,90
"the code written is following the ruby on rails guidelines. the variables, methods, and class names do seem to follow proper convention and are suggestive of the functionality they are being used for. in some cases they could have used a little more descriptive names for variables for example inside app/helpers/student_task_helper.rb&nbsp; they could have used background_colour instead of rtn as a variable name in the due_date_color() method. it will become more readable for the reviewers to understand the functionalities. also they have added to few commits for the amount of code change that they have done. the commit messages&nbsp; are not descriptive enough about what changes have the authors committed. ",1.0,1.0,1,115
the bug fixing does work according to the screenshots provided by the authors. they have provided a step by step screenshot of the issue that they have fixed. the authors haven't hosted their version of the expertiza so it is very difficult to actually check the functionality. they could have hosted expertiza on vcl or they could have put a screen cast of the working functionality to help in reviewing.,1.0,1.0,1,71
"the code was well written and there was no issue with the naming or functions used. however, a few comments could be added to the current_team,new_team and team to make the code more readable.",1.0,1.0,1,35
the write-ups been written well. a small suggestion to the team would be to explain their solutions in more detail as it would better the understanding of what the project does. also the team could use code snippets instead of screenshots of the code.,1.0,1.0,1,45
"i believe the overall coding objective was completed successfully! however, a lot of the logic is performed in the controller rather than the models. for instance, the search functionality contained a lot of business logic that was somewhat length. this may have lived better in tour model and just simple make a call to the tour model.",1.0,1.0,1,57
"there appears to be a lot of code in some of the controllers; the most pressing example is the bookings. you can create methods within the model that handle this logic in order to simplify code, then save the object within the controller. i think it is a little odd to create new ""search"" objects. it might be more intuitive and less wasteful to filter results dynamically using select with appropriate ruby blocks. i would also recommend abstracting common validations/attributes between your agent/admin/customer classes. this would help your code become dryer. also, agent should not be dependent on tours, but tours should be dependent on agent.",1.0,1.0,1,109
the user interface could be improved. ex - links can be placed on top of the page for ease of access. -search options can be shown on the same page as tours for better search. - a back/home option can be added on users page. &nbsp;,1.0,1.0,1,45
some function calls can be made in users_controller rather than embedding code at one place. everything else looks good. there were too many nested loops in tours_controller.,1.0,1.0,1,27
"the ui is very easy to use but there is a minor issue i faced when i was using the application. when i press the home button on top right corner, it takes me to the sign up or login page, but when i again press my profile, i log back into my profile. this is a minor page directing issue and can easily be looked into by the team. i used the read me file for admin user id and password, however read me file gave a very informative introduction about the application.",1.0,1.0,1,94
"most of the functions work well. one thing i'd like to point out is that the system should not let agent to decide whether a tour is completed/ in future/ cancelled. instead of that, the system should decide that based on the date of&nbsp;a tour.",1.0,1.0,1,48
"there are some test cases added to model tests and controller tests. for model tests, i think there should be more tests to thoroughly test the functionality. i would say the controller tests are good.&nbsp;",1.0,1.0,1,36
"from what they have completed, i found code easy to read and they seem to have decent ruby on rails coding practices. following are my observations: ) ""book_tour"" method is found inside tour_controller, ideally it should be in bookings controller and method ""bookmark_tour"" is found in bookings controller ideally it should be in bookmarks_controller. ) method ""cancel_booking"" in bookings controller performs more than one operation i.e. it updates the booking details and also updates the tour details. the code to update tour details is common and can be dry'ed out. )model ""user"" should have been named as ""customer"" as ""user"" of the system can be admin, agents or customer and what i can see from the code is that ""user"" model is defined to implement customers model. )&nbsp;also, the method ""cancel_booking""&nbsp;has too many nested if-else blocks.",1.0,1.0,1,140
used unittest/functional instead of rspec. please do testing with roles rather than just gets. no models tested.,1.0,1.0,1,18
"it is extremely simple and straightforward, and i had no issues in testing out the features at all. &nbsp; there is one thing i could suggest if i may, that the search fields were at the very bottom of the tours page. at first, there were a lot of tours and i did not realize that was where the search was, a better positioning would be a little nice. a user might not want to scroll through an entire list of tours to eventually reach the search bar.",1.0,1.0,1,88
system appears to work well. tours should display the itinerary. having contact info as a phone number instead of a foreign key to user is awkward. admin cannot create users. you should probably have a link to bookmarks and bookings from the tour index page not just the show page.,1.0,1.0,1,50
"the bookmytour function in booking does not appear to be streamlined. what is the point of mode ? perhaps an ""allow waitlist for seats"" option would be better than somewhat related cases. also makes for sloppy code in the bookings controller. for tour filteroutresults, it might be better to pass a dict of search options and use the keys and values in the where statement. current version with a bunch of if statements is sloppy and you could not easily add/remove search terms. when creating a search, why do you store things in the session?",1.0,1.0,1,95
&nbsp;may want some additional navigation links. see additional comments.,1.0,1.0,1,10
everything is well mapped and looks good. except&nbsp;i'm not sure whether another bookings_waitlist.rb&nbsp;model was needed to add. you could have simply used the same bookings&nbsp;model to implement the waitlist functionality.,1.0,1.0,1,38
"i believe that the code is messy and needs to be cleaned up in the following way: ) the logic should be moved from the controller to the helper methods. a lot of&nbsp;conditional statement&nbsp;that has been implemented here make the controller code difficult to understand. ) the code should be properly commented. i found the amount of comments to be lacking and hence i could not understand many parts of the program especially inside the controllers. ) no helper method has been used to clean up the code other than the session helper. this, should be cleaned up in my opinion.",1.0,1.0,1,102
"i believe that the ui is very bare bones and that is why it does not confuse me at all about what i need to do with the application. i can navigate easily to all parts of the application.&nbsp; however, the readme does not provide any instructions about how to navigate throughout the application which should contain information about navigating throughout the application.",1.0,1.0,1,64
"the code generally follows good ruby and rails practices. however, there are some&nbsp;suggestions that i would like to make: . other than the session helpers, there is no code that has been moved from the controllers to the helpers. a good rails practice would be to move the logic statements from the controllers to the helpers. . the same can be done with the views.",1.0,1.0,1,65
"the code generally follows good rails practices. the flow between models, controllers and views is easy to understand. however, i would like to point out that the team should consider moving the logic from the controllers to the helpers. also, it was advised to us to use postgres sql in the production environment which has not been done. instead sql lite has been used.&nbsp;",1.0,1.0,1,65
"the code is well constructed and easy to understand, however, i felt it would've been much readable if there were more comments to represent what each block of code does. the team has done a good job of evenly splitting the code into appropriate methods instead of stacking all the operations into an individual method. the naming convention they followed is also pretty straight hence making the code easy to follow.",1.0,1.0,1,72
"- code quality is pretty good. follows good naming conventions and can understand what each function is doing when read through.&nbsp; - schema wise, i see a bit of redundancy.&nbsp;for this project ""location"" was not needed to be a model and could have been implemented with tour. - if used oath, by default user is given ""googleuser"" password. as they will be logging in using google key, this default password could have been removed or a random value that admin cannot see would have been a good option",1.0,1.0,1,88
" )yes, each method handles only one task in most of the places. but, inside the tours controller, validations were added in the create and update methods. it would be better to implement them as separate functions and placing function calls within the controller. )yes, controllers and models were implemented separately to address bookmark functionality. also, a separate method call does the job",1.0,1.0,1,62
"it has followed pretty good practices, but felt some of the things could be refactored tours controller is clumsy. 'delete image' could've been handled in a controller which handles rest of the image functions. 'my tour' and 'set tour' and similar functions could've been added to helpers instead of controllers regarding the models, you can add validations here to check the fields before getting stored in the database. i can see that you have handled them in logic but it might be easier i felt waitlist need not be that heavy because it is needed only for updating the booking. it can be added inside bookings controller itself regarding the views, so many validations and operations are preformed in views. for eg, validating the minimum length of the password. it is better to add validations in models and use views for rendering. i can see that you have done a lot of work, but as a peer seeing the code for the first time it took a while to get used to the flow",1.0,1.0,1,176
"for the most part, i found the code easy to read, and was not confused by the code organization!&nbsp; a few suggestions: the email format regex&nbsp;/\a[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i&nbsp;is defined in the code in places in app/models.&nbsp; to be more ""dry"", you could define this in just one place (perhaps in a helper). there are occurrences of ""&lt;%#"" when i search in&nbsp;app/views.&nbsp; ideally once code is known not to be useful, it is removed rather than commented out.&nbsp; this can make reading the code easier. i was expecting to find more code in&nbsp;app/models.&nbsp; my understanding is that in an mvc app, the ""m"" should do a lot of the heavy lifting.",1.0,1.0,1,132
"for the most part, i found the code easy to read, and was not confused by the code organization!&nbsp; a few suggestions: the email format regex /\a[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i is defined in the code in places in app/models.&nbsp; to be more ""dry"", you could define this in just one place (perhaps in a helper). there are occurrences of ""&lt;%#"" when i search in&nbsp;app/views.&nbsp; ideally once code is known not to be useful, it is removed rather than commented out.&nbsp; this can make reading the code easier. i was expecting to find more code in&nbsp;app/models.&nbsp; my understanding is that in an mvc app, the ""m"" should do a lot of the heavy lifting.",1.0,1.0,1,130
"rigorous testing has been carried out on the user controller and model. url directed testing has been carried out in various files such as ""searches_controller_test"" and ""tours_controller_test"". some more basic test cases like email uniqueness and validation, password limit validation could have also been implemented. this would have added better test cases as well as helped in running some basic functionalities too. several test cases have been added to the rspec&nbsp;file.&nbsp;",1.0,1.0,1,74
"the code is quite readable,&nbsp;that is the models, controllers and views have been correctly placed with proper code. it is easy to find the code of a particular function looking at the name of a file. when a spelling convention is considered, the team has done a good job. the models must be singular,&nbsp;which are in its&nbsp;place. in one particular case, ""bookeds_controller"" is set as a file name, which is a misspelling instead of ""booked_customer"". the same spelling error has been repeated in views too. in case of function calls, the team has taken careful measures to call the functions implemented correctly. but in case of a bookmark, that particular functionality has not been correctly implemented. in coding a particular method, no long and nested methods are called, that shows that the team has tried to work with simple&nbsp;method calling correctly.&nbsp;",1.0,1.0,1,150
"the commits made on the github repository are not very clear in the first place. this sometimes becomes very difficult for a developer to track the code and identify the changes made during a particular commit. also, most of the commits have been contributed by a single person rather than the team. when considering commit changes in round , several commits and changes have been made. the app is made much better through the changes made after round . in case of some functionalities, the team has shown very good&nbsp;efforts as compared to the round application.&nbsp; i would suggest the team to make use of all the team member and its contributors in the upcoming projects.",1.0,1.0,1,117
"the code on github follows good ruby and rails coding practices. the code is readable and elegant. the work focuses more on the task and less on the technology. on the other hand, when maintainability of the code is considered, the github could be maintained better. for example, when a particular commit is made to update the code, the comments could be more clear, in order to identify and keep a track of the changes in the future.&nbsp;",1.0,1.0,1,79
"the mapping relationship seems to be good enough for the functionalities&nbsp;to be implemented correctly. for example, the agent-tour relationship was found to be to n appropriately. however, while implementing the waitlist functionality, booking model could be used instead of creating a separate&nbsp;one.&nbsp; this would have been an effective technique since a whole separate model need not be created in that case.&nbsp;&nbsp;",1.0,1.0,1,69
there seems to be contribution to the repository from only one member of the team who has updated git properly when the changes were added to the app. the others could also should feel free to push the functionalities added by them so that they can also get to work with a version control system.&nbsp;,1.0,1.0,1,56
"user interface is intuitive and the readme is very well documented.&nbsp; only recommendation might be to place the bookmark button next to the book button when tours are listed, but it's not a big deal.",1.0,1.0,1,37
your tours_controller and users_controller has way too much logic in it. according to rails best practice you should move most of that logic to the model.,1.0,1.0,1,26
tourscontroller has a huge if statement in it. there has to be a more better way to do this. maybe take advantage of datetime class instead of using strings.,1.0,1.0,1,29
"the system properly handles all relationships among the tables. no obvious problems our found. all relationship data is found in the models files. for example, user has many reviews, listings (for agent), bookmarks (for customers)m bookings, waitlists, tour (through listings, bookmarks, bookings, waitlists) tour has many reviews, photos, visits, bookmarks, bookings, waitlists, listings, starts_ats and etc. i see that some tables in the system are unnecessary, such as starts_at. since each tour has its own starting date and starting location, this relations is -to- and could be stored within tour table. however, the team has chosen to do it different way. give full credit since no obvious db relationship errors are found.",1.0,1.0,1,113
"overall, code looks clean, and follows good ror coding practices to a certain extent. i've noticed couple of things that can be done to improve code quality: . avoid bulk of if/ elsif / else statements in the controller. in fact, controller should be as simple as possible and contain no logic whatsoever. . keep all the logic in the model. . app/controllers/tour_controller.rb is a little over-extensive, which makes it a bit complex. may be consider refactoring it. may be bring some of the methods out of the file, or create additional helper or even new model classes. . model looks clean and with enough comments in it. i've noticed it has a way too many relationships with other tables. but this is your team's design, nothing can be done to improve it.",1.0,1.0,1,135
"the controllers/bookings_controller.rb file is a little overloaded with bulk if/else statements. in general, avoid bulks of if/ elsif / else statements in the controller (lines - - )). try to make your controller as simple as possible and move any logic out into model. if it becomes too bulky, consider refactoring controller. may be bring some of the methods out of the file, or create additional helpers or even new model classes instead of bulk of if else statements. model look great. but consider refactoring some views files. for example, tours/index.html.erb has a lot of complexity with if statements. i gave full credit because i know it is kind hard to keep track of all the things, especially in such short time. we are trying to make things just to work. otherwise, really good app.",1.0,1.0,1,137
"the interface was good in terms of being able to get to the various features from most pages.&nbsp; it would be good to add the navigation links to the pages associated with the user profile.&nbsp; also, it would be good to send the user straight to their profile instead of a profile list if the user is not an admin.&nbsp; the ""itineraries"" view was a bit confusing to me.&nbsp; i believe that itineraries should be associated with specific tours, rather than being peers to tours.",1.0,1.0,1,89
"a lot of the business logic was in the model, which is good.&nbsp; i believe the logic that filtered resources by user role would have ideally been put into the model as well.",1.0,1.0,1,34
"the admin login seems to be fixed as i can now log in as an admin. creating a tour with empty field still results in an error, and i was not able to create a tour with valid format without getting errors (possibly due to the format of the data fields). the new tour creation would be easier if the date was a drop down menu. admin cannot see accounts.",1.0,1.0,1,70
"overall, the commit history documents changes made throughout the project period and i can see one pull request as well as branch. i would recommending making more branches as per feature and merging it to master so it is easier to see changes throughout the project period.&nbsp;",1.0,1.0,1,48
"the application is deployed on heroku, and it is overall fairly intuitive. readme could be more descriptive in terms of which field we need to fill in while booking a tour and making an account. waitlist and booking steps would also be beneficial as i was not able to do either. on the flip side, the ui is pretty good and looks modern. sign up page is also simple and effective. profile edit feature is a great and easy to update as well.&nbsp;",1.0,1.0,1,84
"one improvement you can make is isolate the sql code to the models by making a function in the models, and including the filters such as the search in tourscontroller. it is good practice to put the database code in models rather than the controller itself. overall, dry principle seems to be followed, and the code is easy to follow.",1.0,1.0,1,60
the readme file could have been made better by giving the reviewer a clear demarcation of what you have implemented and what you have not. because the readme file suggests a lot of things that you have missed out.&nbsp; you can add a section always to state clearly what is left to implement.&nbsp;,1.0,1.0,1,55
"-the admin part. i can see the list of tours and customers. i can create tours and customers.&nbsp; -the agent part. i can create and edit tour. i can see the bookmarks from customer. -the customer part. i can see the list and details of tour, but i can't book the tour. i think they might have the&nbsp;wrong link with booking. the link makes me go to booking list page. -others. couldn't sign in with google account. when i click sign up wi google, it gives me page. it might because the devise&nbsp;gem. couldn't search tour properly. even when i search the tour that exists, the page went wrong. ",1.0,1.0,1,117
"i have to say the layout is very beautiful and i find you use bootstrap. i can find where is to sign up and login. but the problem is i don't know how to book and remark my tour. i saw there is controller in the code, maybe it is not complete or something. in readme, it's great that you provide admin account and others mentioned in the documents(the other two team i make review didn't follow that). as the comment on piazza, it would be better to write the connection with link. this is also the problem of my team. i think it will make the whole readme file more clear and understandable.",1.0,1.0,1,118
"from the code, i can see the effort in this project. there are a lot of commit here and whole team involved the work. the whole structure of code is nice and i can find the relationship between each object through the name of object. i t is easy to figure out how the code works. the only problem is that you haven't fully used model part. you can define functions in model instead of controller. it is more reasonable in mvc model and it will make the whole structure easy to work and maintain i think. all above is my understand of mvc model, fyi.",1.0,1.0,1,107
"interface is decent. one suggestion i'd give is to add a 'back' button to go to the previous or the required page. also, i wasn't able to&nbsp;go past more than a few functionalities.",1.0,1.0,1,37
"the user interface is very intuitive and easy to use. additionally, the missing features have been highlighted in the readme. separating the role/user specific views and functionalities was a nice touch. however, there are chances of missing the bookmark and book buttons, because its at the very bottom of the page. i would suggest moving these buttons to the top or making them bigger.&nbsp;",1.0,1.0,1,66
"the business logics are applied on the controller, while it would have been meaningful if implemented in the model. for instance, in the bookings controller, the update and create methods are too long and the entire business logic is applied within those methods.",1.0,1.0,1,43
"code is written cleanly for the most part. in some instances, for example in the cancel method in the tours controller, the 'if' statement evaluating newseatsavailable is a bit long, and could likely have used some additional method calls.",1.0,1.0,1,39
"looking specifically at the tours controller in the index method, it is very easily readable. there are some parts (for example in the waitlist method) where macros could have been used to more easily understand what's going on in your code, but otherwise it is quite good.",1.0,1.0,1,48
"controller testing is adequate, it seems that positive test cases are covered. it seems that more negative test cases could've been created, however. model testing isn't very thorough.",1.0,1.0,1,30
"the basic functionality works very well. one thing i don't like is that you can't just list all tours. there is the search tours button, but it won't let you just not search anything.",1.0,1.0,1,37
since the travis ci build is not passed. the team should make some changes in the code to be working appropriately then it could be merged onto production server. it need not be done from scratch but there are few changes that must be made to pass the build.,1.0,1.0,1,49
as both code climate and build failed. these things have to be handled before deploying or merging,1.0,1.0,1,17
the writeup is very clear and informative. it also gives introduction to new concepts being used for implementation. though it is difficult to understand what the project exactly aims at. it would be better if they include a seperate section on the problem statement and the tasks that needs to be accomplished.&nbsp;,1.0,1.0,1,53
the written code is easy to read and understand and merges well with the existing code base. the function length can be improved and the dry principles should be kept in mind. some code get repeated which can be merged into a helper function.,1.0,1.0,1,44
"i feel the code is ready to be deployed with a little modification that will help in improving the codeclimate responses. there is no need to redo it from scratch. others might feel that some more refactoring can be done. for example, the naming conventions are improved keeping one thing in mind, the common goals can be self understandable, and not clog the function names. there can be many other directions of improving the&nbsp; naming conventions such as - the 'get_link_updated_at' function name does not make much sense or give idea of whatt it does.&nbsp; - it could be changed to -&gt; 'get_last_modified_link' many variable names could be refactored as well, not qouting examples as there are many. but how much ever the team has done, it is functional, tested, working and improving piece of code which i appreciate.",1.0,1.0,1,139
"write-up looks good. they have explained why they have refactored, what they have refactored. they could have included a portion on why they 'have not' refactored certain functions, like what they thought made it a good function or pattern for not changing the existing code/name. i hope i make sense. they claim to use strategy pattern, but i am not sure how. it would have been better if they had given a bit of description on which of their code implements strategy pattern and how. to make the entire document more succinct, they could have added some more explaination to their screenshots, though they are self-understandable, but might not be so for someone who does not want to delve very deep into their code or implementation.",1.0,1.0,1,129
"i don't think so. there are some build failures that needs to be looked at. but it definately&nbsp;doesnt need to be redone from the sratch. the team has put good amount of effort in the working of said features. a good starting point would be to see why the build is failing, revert back changes on the db files if they are not reqiured and see if the existing test cases work well.",1.0,1.0,1,76
"the write-up is clear and concise - it does the required job to make the reader understand the motive, goal and way of implementation of the project, however there are a lot of ways to improve it: ) a demo of the working code could be given ) a fllow of implementation could be shown to visually draw the mvc interactions used for the project&nbsp; ) the writeup could mention what more needs to be done to complete the project in its complete sense or any future refactoring needed. basically adding more visual components to it could have improved the quality of the wirteup &nbsp;",1.0,1.0,1,103
scope of improvement: there was no proper mention of the rspec testing. this is something team could improve upon for the next round. i could see some of the commits related to rspec which means the team has worked on it. it would be more presentable if the team could include the rspec work in the document.,1.0,1.0,1,57
"the work that the authors did was adequately explained. there is just probably a misplaced title ""definition , demo code and snapshots""&nbsp;",1.0,1.0,1,22
"all the test cases have passed but they do not mention what exactly is being tested. if there is a little more elaboration on that, it would be perfect.",1.0,1.0,1,29
all the tests have passed but a little more elaboration on what it is that they have tested would be helpful,1.0,1.0,1,21
the travis ci bot shows that the build failed. it should have been updated after the first submission.,1.0,1.0,1,18
"the test coverage was reduced by the changes. also, there are a lot of code climate issues that came up. you can work on them to overcome that and it will help in improving it overall.",1.0,1.0,1,36
"the writeup mentions the changes performed but not the motivation behind it. also regarding the design principle, it just mentions the pattern but not the part where it was used. it would be easy if you could point out the part where you used the pattern in the writeup.",1.0,1.0,1,49
the writeup is very well written and it covers all the changes they performed but not the reason as to why a certain change was performed. can include extra information regarding the reason for the changes.&nbsp;,1.0,1.0,1,37
"i could not find any section of the writeup which explains why the authors came up with this approach or which design principle or pattern the team would be implementing. it would have been a&nbsp;better approach if the team&nbsp;had specified the design principle in the ""future works"" section (since most part of the implementation is yet to be completed)&nbsp;to indicate the plan of work.",1.0,1.0,1,70
i could not find any test plan in the writeup but i checked&nbsp;response_controller_spec.rb&nbsp;and i can see few test cases written over there. more test cases needs to be added to make sure existing functionality is not hampered.,1.0,1.0,1,42
there was no test plan section. although as suggested above a video showing the passing of all test cases would be a great add.,1.0,1.0,1,24
the writeup provides detailed information about the different fixes performed by the author. more information regarding testing could be added such as a video of the rspec tests passing to prevent any issues being missed during refactoring.,1.0,1.0,1,37
the good news is test coverage has slightly increased. bad news is that there are shallow tests. fix this by writing relevant expectations (not static contents like html code).,1.0,1.0,1,29
"looking at the pull request, i see that the build passed in travis ci. however, there are unnecessary rspec gem require. suggestion: remove it as it is already included. the expertiza-bot also suggests to avoid shallow tests by writing relevant expectations (not static contents like html code).",1.0,1.0,1,48
no testing link provided. team should have deployed in an vcl instance to allow testing of changes by the team even though this a refactoring project.&nbsp;,1.0,1.0,1,27
"there are changes to the schema.rb file which should not have been included in the pull request. this file should have been skipped. otherwise, the project seems to be ready to be merged.",1.0,1.0,1,34
"the build passed, but there are still warnings on the pull request. most of them are warnings that are not under the team's control such as more than lines changed, but one or two of them such as ""your pull request has many duplicated commit messages. please try to&nbsp;squash&nbsp;similar commits.&nbsp;and using meaningful commit messages later."" could have been resolved.",1.0,1.0,1,66
"in the users_controller, you may want to transform the block comments on lines - into method comments and make them a bit shorter (for instance, lines and are not useful. would belong in wiki but not in code comments). on line of the users_controller, is there something in the creation of the assignmentquestionnaire that sets the default notification value? because that seems like a roundabout way to set that. is there a better way?",1.0,1.0,1,73
"why did you change files in the bin directory (such as bin/rails)? if this was unintended, you should remove these changes. you also may not need to send the .coffee and .scss files; you may want to remove these.",1.0,1.0,1,40
"in the account_requests_controller, maybe 'create_approved_user' should be 'create_user'. it looks like this function also has the rejection condition. you refactored names of 'requested_users' and maybe you should do the same to the method 'create_requested_user_record'. you might want to make it 'create_account_request_record'. the method 'foreign' does not have a very instructive name (unless that is a special syntax or convention). 'find_user_roles' may be a more informative name. personally, i lean in favor of 'get_role' over just 'role'. &nbsp;",1.0,1.0,1,77
"in the account_requests_controller, the roles_for_request_sign_up method does not need a separate method. in the users controller starting on line , shorten the comments a bit. remove commented code lines in the users_controller (line - ). long comments on would be better placed in the wiki. remove the project number indication from comments. for pagination, is there a reason you pass options and not a number (that being the number of records to retrieve)? why have the mapping on line ? aside from small details and comment changes, code looks good!",1.0,1.0,1,86
"the writeup is good and has well structured. however, i felt that design pattern should have been above the implementation section which makes the reviewer look for what kind of design pattern they have implemented and then check for the same when looking at the refactored code. and same with screencast. it should have been above the implementation section.",1.0,1.0,1,59
"the writeup does not include any section to explain how and why the authors did their work. also, the team has not included a design pattern section in their writeup for the implementation that is carried out. i would suggest the authors to include information from the project description.&nbsp;",1.0,1.0,1,50
"the writeup adequately explains the functionality of the work in the about section. the team is trying to refactor the model to make the code close to crud functionality. the team has not added a section for how and why the code is being refactored in the writeup. i would suggest the team to include a ""proposed approach"" section for refactoring the model.",1.0,1.0,1,63
"their writeup is decent and they do have some good implementations in their fixes. using helper functions where the code was not dry before was a good strategy to make it dry. however, i did find some objections to their choices: . the team showed what solutions they implemented to fix the bugs in the code, however, they did not show a ""before and after scenario"" to argue why their code implementation is better now. some of their code snippets are confusing as to what they are trying to accomplish in that code.&nbsp; . they renamed&nbsp;ad_info&nbsp;to&nbsp;get_ad. however, i believe a more intuitive way to rename this would be get_ad_info, especially if we are not trying to use every ""ad"" information here.",1.0,1.0,1,126
"i found the code to fairly well written. i dispute some of their naming choices and the lack of&nbsp;testing documentation makes it harder to review. some design choices, on the other hand, like the use of helper methods, are good. i believe that they tried to make their code as dry as possible. i still believe some of the if-else statements in the controllers should be entirely moved to a helper function.",1.0,1.0,1,75
"i sincerely believe that the team has made a great effort to put all their design choices into their documentation and i find the code to be explained in an easy manner. i like how the team has made use of a problem and solution format to drive their point home and the document is to the point. however, i would like to point out a few issues. . the document fails to mention any testing that they have performed on their new code. . the implementation has not been hosted on any vcl or heroku app, so testing their implementation is difficult for me as a reader.",1.0,1.0,1,106
"the functions previously existing in another controller were moved to a newly created controller. all the methods are named as [crud]_&lt;controller_name&gt;. i can understand why there was a need fro this when all the methods were existing in the previous controller but now in the new controller, you can refactor the function names to [crud] only. that would make it a lot more in line with ruby on rails style of naming.",1.0,1.0,1,76
i understood clearly the questions as well as the solutions implemented from the documentation. the documentation could have been better formatted. (also there are a few 'to be completed' remarks in the documentation) i also would have liked to see a screenshot of all tests of both controllers successfully pass so that i would know that no functionality as broken because of creation of a new controller and changes to routes.,1.0,1.0,1,71
"the project is not ready to be deployed. the biggest concern is the build failure. also, the authors have not provided a vcl instance to test changes and not given screenshots in the documentation of them having tested those changes. this makes me a little apprehensive of deploying these changes. i do think that the work that has been done is worth while. it just needs a little more effort to make the build pass. i don't think that this warrants enough work that another team has to be assigned this project. if this team could just complete this since they already are familiar with the changes they made, that would be perfect.",1.0,1.0,1,114
the write up was very clear and well written. some of the explanation sounded repetitive.&nbsp; but i would much rather have a verbose documentation than a vague and short one. my one problem is that is lacks the screenshots of test cases passing.&nbsp;,1.0,1.0,1,45
"authors have mentioned that the team has used strategy pattern in the last section of the wiki. overall, there are just lines of code added and i am not sure where this pattern has been used.&nbsp; from the three partials changed, the method names are changed and in the helper file,&nbsp; its mosly refactoring the method name and adding comments &nbsp; any inormation on how the team has used the strategy pattern and why did they use this pattern would help the reviewer to understand the writeup in a better way.",1.0,1.0,1,93
"the authors have tried explaining the motive behind the proposed solution. there is no mention about the design principle or the pattern and i believe, we might not need one for this project.&nbsp; &nbsp; explaining a bit more on how the solution can help in redution of instructor's work or on what basis did the team finalize on this solution might help in easy understanding",1.0,1.0,1,67
"authors work cannot be tested at this point. as this is a new feature, i believe deploying the solution on heroku/vcl can help the reviewer to verify the feature. in case, this is a bottleneck, a short video can help the reviewer in better understanding",1.0,1.0,1,46
"write up looks clean and easy to understand. from the first round, team has made changes to the write up to make it more understandable. &nbsp; i would still be interested in reading ""proposed solution"" section (removed in round ). task identified section clearly explains what the team wants to do. the explanation for the solution taken could have been added for better understanding.&nbsp; &nbsp; at the end of the wiki, ""design"" section has been introduced with no explanation what so ever. was this due to the pressure of adding one into the project? i couldn't find where the team has used delegation pattern. it would have been great if the team explains more about the usage of this pattern in the project",1.0,1.0,1,124
"the variable names and other stuff looks clear. i am not sure why the team used this line when compared to the previous version ['super-administrator', 'administrator', 'instructor', 'teaching assistant'].include? current_role_name one major reason not to use this kind of coding is this line crosse characters. the previous version that ran across various line was much easier to read and understand. in case, if you take up code review, you don't wnt long lines like these in your code ",1.0,1.0,1,81
"&nbsp;the team has tried explaining why they are making copies of few files in the design choices section. the teams explaination&nbsp;"" even though the two forms happen to be the same right now, some time in the future, they may deviate. this option gives some flexibility to the accounts_controller to modify the form without affecting the user's form."" does not convince me. &nbsp; the partials copied are not the entire files rather email, password etc. as an application, there is hardly any change that we make to these fields and if made, would like to see the changes on all the pages. copying these partials misses out the advantage. in case, there needs to change these partials (say email form), i would see a same kind of change in the entire application. in my understanding, using the same partials would give us an edge when compared to copying the files",1.0,1.0,1,153
"there was no code changes in the nd round. also, the changes informed in the first round of reviews don't seem to be made into author's work. &nbsp; additionally, the number of commits is too high. there have been numerous failed commits. i would suggest testing the code locally and then commiting only when you are sure that the code is running as expected &nbsp; fd @kunalnarangtheone comment get user list for testing purpose f eb @kunalnarangtheone comment get user list for testing purpose try cf c @kunalnarangtheone comment get user list for testing purpose try c a @kunalnarangtheone comment get user list for testing purpose try e f d @kunalnarangtheone comment get user list for testing purpose try a dfd @kunalnarangtheone comment get user list for testing purpose try e cd ba nikitaparanjape merge branch 'debug' into beta a fb a @kunalnarangtheone comment get user list for testing purpose try fc c @kunalnarangtheone comment get user list for testing purpose try dec d @kunalnarangtheone comment get user list for testing purpose try c &nbsp;",1.0,1.0,1,177
"team has created the new test file based on the requirements for this project. as the team introduced new controller in ""account_requests_controller"", a corresponding rspec file has been created and the tests from users_controller.rb has been moved here. &nbsp; however, there is no additional test cases added by the team. as there has been quite a few changes in the way account is requested, adding few tests here would have made more sense.&nbsp;&nbsp;",1.0,1.0,1,76
"&nbsp;the team has copied the tests from user_controller rspec file&nbsp; and have tried running the test. based on the screenshots, it looks like all the tests have passed. &nbsp; as this is a new controller, i would suggest the team add a couppleof specific tests that trigger usage of account_request_controller in a specific way. using the same tests may not cover all the voundary cases",1.0,1.0,1,67
"&nbsp;yes, writeup clearly explains one part of the project, that corresponds to pagination of the user page. the reason to choose is clearly mentioned and the team provides enoughtinformation for the user to understand. &nbsp; i would suggest explaining the problem statement at length (separate all methods related to the workflow of a requesteduser object). for a first time user, the explaination for user_controller needs to self sufficient. also, as there was no requesteduser controller, explaining the need of this object or how it is being handled and why do you need this to be moved out would help the reviewer to understand in much better way",1.0,1.0,1,108
the team has pushed the code to beta branch and have not synced with master to run code climate/travis or other services. i would suggest team to read through piazza post that tells how to sync the branches in git,1.0,1.0,1,41
"code looks clean in most of the cases. almost all the changes are done in a reasonable way. &nbsp; one of the concern i have is the usage of parameterized query in users_controller.rb file (line ) @all_roles = role.where('id in (?) or id = ?', role.get_available_roles, role.id) as ruby active record in inherently uses parenthesized query and the usage in this context, this line may not be required.&nbsp;",1.0,1.0,1,69
"i'm giving the benefit of the doubt on whether the automated test&nbsp;assignment_spec.rb&nbsp;passes.&nbsp; i actually got an error beginning ""failed to load command: rspec"" when executing ""bundle exec rspec spec/..."", even though this works flawlessly on my team's code.&nbsp; however, i don't have any reason to believe that this is the fault of the code.&nbsp; rather, every time i have tried to get a rails project up and running, it has been quite bothersome (as noted further up in this review), and i simply lack the time to fight my way to a running state for several reviews.&nbsp; the tas are practiced in this and i'm sure they will execute the automated tests on every project.",1.0,1.0,1,128
"very clear, with the exception of how this requirement was met:&nbsp;""in addition, functions code can be optimized to ensure that it follows dry principle"" also, one unneeded method was commented out.&nbsp; imo it is preferable to remove such a method entirely rather than commenting it out.",1.0,1.0,1,49
"according to me the code added for the new function doesn't seem to be long enough, i.e, cannot be refactored. the one thing that could have been improved in the project is the addition of the comments for the new code added. this would give a clear idea for anyone seeing the code for the first time.&nbsp; along with that, the coding style also seems to be good with no bad namings as well.",1.0,1.0,1,77
"the writeup is clear and explains adequately on what is to be done and how is it done. the project idea is very clear and is explained on the wikipedia page along with the workflow of the project. for understanding, the authors have also given a brief idea and an introduction to the technologies used ""rust"" and ""servo"". however, the wikipedia page only gives partial information (that is, what all is implemented until now) because of which it is not very clear as to what is to be exactly carried out in the project. i would suggest the team to include some more information on how to follow the code.",1.0,1.0,1,110
"the writeup did not have any section on what work they did and how they did it. i would suggest the team to include a section of ""problem statement"" which would list the tasks that need to be carried out. because at times i had to go through the project description to understand the ideas of the project. also, the team has not included a design pattern which must be added. i would also suggest the team to include ""strategy design"" pattern as it is used to dry out the code.",1.0,1.0,1,91
"since i could not find any test cases other than a few mentioned in the response_controller_spec.rb&nbsp;file, the authors have not converted the test plan into automated tests. more test cases need to be added to make sure that the functionality that is existing is not hindered in any way possible since that is a very important thing to be considered during refactoring.&nbsp;",1.0,1.0,1,66
"the writeup introduces the concepts (servo/webbluetooth) the team is going to work with and what their work to be done is (refactoring vale from enum to trait). they have listed the steps to be followed and files to be worked with. the build procedure of the repository is also mentioned with which i was able to set up the environment.&nbsp; but that is all i was able to see in the wiki page, there were no details about how much progress the team has made with respect to the project and even in the links submitted i was not able to see any commits or pull requests. it would have been helpful if the team had mentioned the amount of progress/problems they are facing while implementing the above project.&nbsp;",1.0,1.0,1,133
the code was refactored and made dry-er.&nbsp; the only possible issue i see is confusing and long if conditionals.&nbsp; i think creating a helper class containing methods with meaningful names for those conditionals might be helpful to understand what the code is doing better.,1.0,1.0,1,47
"testing section needs to be improved. please include all of testing strategies team used to verify integrity and correctness of the code. provide enough information indicating how the code improvements/changes were verified and tested against new issues that could be caused by your implementation? list all relevant testing steps performed on the fixes that you have done. ensure to test your code changes/improvement with at least following steps and include&nbsp;results/observations in the wiki page: . code inspection . passing/fixing existing rspec tests (you still need to fix ""response_controller"" test) . running through a live demo in the expertiza instance through the ui that runs over changed/improved code in the controller (you may even record a short live demo and submit it here) the above test strategies are sufficient to ensure integrity of the code and indicates that you did not introduce new issues into the source code. complete this information into testing section.&nbsp;",1.0,1.0,1,158
"no tests were added and travis did not pass.&nbsp; since new methods were introduced, corresponding test cases should have been added.",1.0,1.0,1,22
"the writeup describes the reasoning and approaches used well.&nbsp; i would note, however, that in some cases the code is actually changing the behavior of the application, which is strictly speaking not refactoring.&nbsp; for instance, problem now flashes an error for a previously allowed operation.&nbsp; problem changed error message text.&nbsp; also, problem simply added comments to a method that was seen as too long, which arguably does not solve the problem.&nbsp; problem introduces the ""can_delete_topic?"" method which has side effects beyond simply returning a bool, which i believe is not really kosher.&nbsp; a route was removed from routes.rb, which presumably also changes the application behavior.",1.0,1.0,1,112
"the writeup includes before and after, and mentions the design pattern used. however, i would advise more explanation on the strategy pattern and concrete examples through screenshots. overall good attempt!",1.0,1.0,1,30
the names are definitely shortened which is good. however they still include the 'get' prefix where in most cases its not really needed. for example get_team_color can be replaced with team_color.,1.0,1.0,1,31
they have given examples for the renaming the method names and adding comments to various functions which is good. however i felt they could have cut this down short by giving fewer examples and giving more examples for code optimization for implementing dry principle which they mentioned in the problem statement.,1.0,1.0,1,51
"compared to the first round, the team has improved a lot with respect to the code. looks like the team has followed dry principle and haven't added unnecessary functions. the only problem i had was following the code that they've written as the code walk-through is pretty unclear to me. i feel comments could have been added for the code or the code walk-through could have been more clear.",1.0,1.0,1,73
"the writeup is good. they've mentioned the problem statement and they've added solutions for each and every problem. they've also added the test cases that need to be checked. the only problem is that, no information has been given regarding setting up the environment for expertiza. i feel they could have added that to ease the work for the people reviewing.&nbsp;",1.0,1.0,1,65
the write-up is clear. each and every&nbsp;section explains what the issue is in the users controller and what approaches have been done to overcome the issues. the only suggestion that i have is to add a bit of information regarding what kind of tests have been performed.&nbsp;,1.0,1.0,1,51
"in the create method, on line where&nbsp;prepared_mail is assigned, i think the method call is long. a suggestion is to have the method call with the parameters on multiple lines instead of having the method call all on one line.",1.0,1.0,1,42
no test plan found. please add a test plan section to the wiki.,1.0,1.0,1,13
i really like the before and after pictures along with the written descriptions of the changes. the table of contents is also nice. i think it would be great if there was an explanation of what the&nbsp;http:// . . . : &nbsp;link is for. i assume this is the example to test. also to provide the login information (in case the reviewer forgets).,1.0,1.0,1,62
"i think the code written in the controller is well written. only suggestion i have is in the ""redirect"" method. there is a if&nbsp;params[:return]...else if&nbsp;params[:return]...else if&nbsp;params[:return]... code block section. perhaps use a switch statement to have ""cleaner"" code.",1.0,1.0,1,49
the writeup is very explanatory but they have not added any snippets&nbsp;of their&nbsp;code showing where and what are the changes they made. it would make it much easier for the reader to find the issues and understand them.,1.0,1.0,1,42
"a high-level overview is given in regards to what was done and why it was done, but it is not explained on a case to case basis exactly why things were named as they were. i think significantly more detail can be given here.",1.0,1.0,1,45
"the write up explains the how they implemented clearly. they had a few name changes done. the new names follow good practices and proper naming conventions. when it comes to the whys, there are places were they have mentioned why they implemented the needed a certain way. for example, load_add_signup_topics is renamed to get_assignment_data. they have explained that they have done it to make it more intuitive. for solution in problem , they have moved duplicate code to helper function but they have not explained why they did so. maybe they thought it was self-explanatory. but adding such details would make the page even better. &nbsp;",1.0,1.0,1,106
"there is a portion in the page which has a little bit of code. but nowhere does it specify if they have done it,&nbsp; or if it is part of the problem statement. &nbsp; it would be great if the page followed a flow: problem statement-&gt;steps to take-&gt;implementation method",1.0,1.0,1,54
the write up is good. maybe contains too much information and is a cluttered. having simple and brief information in certain topics would make this an easier read. (adding bullets wherever possible),1.0,1.0,1,32
the write up is very clear. additional links describing certain topics makes it a little easier for the readers to get familiar about the project. &nbsp; it would be better if they add the problem statement or tasks they have to finish to understand the project objective better. &nbsp;,1.0,1.0,1,49
"i'm not sure i personally like the @topic.update_attributes being such a long line setting multiple things at once. the old way of having each thing on its own line was more intuitive and easy to read. perhaps if keeping it the new way, each param can be put on it's own line and lined up, even if it's actually all one executable line of code.",1.0,1.0,1,69
"the team did a good job with illustrations and diagrams for the exiting feature. however, there wasn't any diagrams or flow charts showing how the team was going to make improvements to the existing feature. i think a flow chart would do good to capture the thought process and flow of the future feature.",1.0,1.0,1,55
"the document did a great job at explaining the existing feature and how it operates. i believe the team should spend more time laying out their plan for improvement of the current feature as well as testing their changes. for instance, the wiki has a test plan section that states the team will run existing rspec tests. however, if the team adds new code to an existing model (i.e create a new method) or create a new model all togther, this would not have coverage in the existing rspec. the team could state that they will add/modify rspecs to have coverage of their new code.",1.0,1.0,1,107
"the team tried to implement few test cases. i didn't fully understand the implementation, i felt it would have been better if there's more explaination included regarding the test cases in the document",1.0,1.0,1,35
"i have checked the designs that are proposed by the authors. i don't think the authors did add any methods to the wrong class as per the documentation. the new design looks like it will change the previously implemented project to bring out a working functionality that passes all the edge test cases. the new design does not look complicated as the author tried to convey their understanding of the project in a simple defined structure. the new design may potentially increase the response time of the system as it depends if the internationalization is done predefined by the author or if a third party library is used to make the translation. once the team starts working on the implementation then the design page can be updated with screenshots, design flow, etc.",1.0,1.0,1,133
"the design document is simple and easy to understand. the only missing part is visual aids. the team can incorporate some diagrams to help the readers understand the problem and the solution in a better way. on the whole, it is good.",1.0,1.0,1,42
"i like the documentation on the whole. it was simple and to the point. as i mentioned in above question, one suggestion is to add the diagram about how the new system is gonna look like. apart from that everything is good. the authors are also advised to add the files where the changes are supposed to be made.",1.0,1.0,1,59
"the solution proposed is mentioned in ""too deep level"", where you have specified directly the files you would be interfacing(modifying). it would have been great if there were some explanation about functionality and solution in ""plain english"". unless the reader has detailed knowledge of the project, it would be hard for them to draw sense out of it.&nbsp;",1.0,1.0,1,60
there are no visual aids.&nbsp; a design flow or any other uml diagram would have been of great help understanding the proposed solution.&nbsp; &nbsp;,1.0,1.0,1,26
there are no visual aids provided. a few diagrams would have been helpful understanding the proposed flow/changes better.,1.0,1.0,1,19
the changes mentioned by the author seem valid but i found it a little difficult to understand but in no way inadequate. the reader has to read it a little carefully. the problem statement could have been explained in little more detail to give a good introduction to the entire problem. the remaining text becomes easy to understand once the problem description is clear. it would be better if the problem statement could have some previous context to it. a few more lines about audioparam and how it is useful for servo.,1.0,1.0,1,92
"&nbsp;the changes to be made is not explained, because the changes have already been completed - at least that is how it looks from their implementation. if they do have something left to implement, they should create a paragraph to add those details.&nbsp; ",1.0,1.0,1,44
the authors have not yet figured out/mentioned which all views and controllers they are willing to change. they have only figured the flow of ui which looks correct. they have not mentioned any design/refactoring plans to remove smelly code or anythig that will potentially add smelly code ()&nbsp; more feedback can be given once they come up with the final plan.,1.0,1.0,1,63
"the team should start with the existing code base in the merge request and see why it was not merged. eg. there are existing gems present to perform the tasks acquired by gems. some insights can be drawn from the previous implementation. there are a lot of things that are already completed in the previous implementation and the project does not need to start from the beginning.&nbsp; the team should rather concentrate on improving, refactoring and removing the merge issues.",1.0,1.0,1,81
"scope of improvement: the reason i chose to review this project was to understand&nbsp;reviewing something that you are not much in. as a novice reader, i find the use of too many technical terms in the project description/problem statement. team could just improve upon explaining&nbsp;things in much simpler way. overall the explanations are thorough and all sections are covered.&nbsp;",1.0,1.0,1,65
"i do not agree with the team's opinion that ""visual aids not applicable"". as per my understanding of the project, the project touches the workflow. so the team could add any uml diagram to represent existing workflow or any use-case diagram if applicable. i believe&nbsp;that adding a diagram will help the reader to understand the project quickly.&nbsp;",1.0,1.0,1,62
"scope of improvement: i couldn't see any improvement regarding the suggestion given during the&nbsp;previous review : ""the reason i chose to review this project was to understand&nbsp;reviewing something that you are not much in. as a novice reader, i find the use of too many technical terms in the project description/problem statement. team could just improve upon explaining&nbsp;things in a much simpler way. overall the explanations are thorough and all sections are covered."" this thing could have been improved by the team.",1.0,1.0,1,89
"scope of improvement: i do not much agree with the concept of ""public"" and ""private"" review. i believe providing this option to the user will only restrict the scope towards the public review. there me some review which are private, but instructors will not be able to share them. i think the instructors should be given the full authority to share a review (at the end, they better know what to share or not). this is something the team could discuss with the mentor or professor. &nbsp;",1.0,1.0,1,87
"scope of improvement: i couldn't find any diagram&nbsp;or flow in the document. though the description is good and understandable, it would be better if you could add some flows which will provide better understanding to the reader.",1.0,1.0,1,40
"scope of improvement: there is definitely some improvement&nbsp;after the first round review as i could see some screenshots added. but still, the team could have just improved it by adding some diagrams and flows. i would suggest the team could add some uml diagrams like ""use-case"" or ""sequence"" which will help the reader to understand the feature and proposed changes effectively and quickly.",1.0,1.0,1,66
"suggestion: team could have mentioned the exact test cases which need to be modified. it's good to see that team has figured out some of the good edges cases and have correctly mentioned in the document. my suggestion will be to add a test case to ""check between minor edit and major edit correctly"" as this functionality will decide the correctness of the implementation.",1.0,1.0,1,65
explanation are hard to follow. no preface about the issue proposed. i have no idea about&nbsp;bluetoothdiscoverysession&nbsp;either. so please spend some preface to explain and give the need for the project or an intro would be nice.,1.0,1.0,1,40
"the proposed changes only mention files that are being changed. a much better approach would be to add some textual context to the changes for each file and how they possibly could lead to a solution as well as how they affect the performance of the application as a whole. moreover, the doc lacks visual aids. visual aids provide a nice touch and intuitive explanation to the proposed changes.",1.0,1.0,1,69
"the design doc lacks any visual aids, moreover the test plan does not incorporate any form of automated testing. the team should add rspec testing as one of the automated tests. in terms of visual aids there are many visual aids that can be used such as activity diagram, er diagram, use case diagram, data flow diagram, etc.",1.0,1.0,1,58
"the design looks neat and descriptive. all the sections are well described and look perfect. as a reviewer, i am making some suggestions, which i think would make this overall document absolutely perfect. first problem i see is that the introduction section is too long and reviewers do not like to read a lot of text right in the beginning of the document. i would suggest you to have sub sections within introduction like motivation and others. second problem is that i feel that the section proposed changes shouldsbe under roject design section. third problem is that the table of contents should be before introduction. i suggest having it before the introduction section.",1.0,1.0,1,113
"the test plan has been well explained. i have some concerns though. there are no actual test scenarios for rspec and capybara. at least an overview of those would have helped. although the explanation is good and conveys to the reader what will be done, a little insight on actual cases could help provide more information. the manual tests are mentioned but more could be mentioned like testing what happens when tester unchecks all check boxes.",1.0,1.0,1,76
"i'm really happy that the team considered my suggestion in this perspective and have now included visualizations for the how the graphs would actually look. good job. i do have to mention a few things though. the class performance graph is unclear on what it means or is a little conficonf. please have axis labels for that. you can have axis labels for the class performance graph too even though it's already explicit. the design flow diagrams could have small descriptions on the arrows to make it easier to interpret the diagram. also, if possible, the team could put in examples of graphs for each or some of the frameworks mentioned in the document.",1.0,1.0,1,116
"from what i can understand, the team has done good work on the design. it looks good. however, one suggestion is to explain it better in the db design section as it was not very clear for me as a reviewer. the writers should know that the reviewers lack context in some cases. the writers should provide the context first.",1.0,1.0,1,60
"the design looks good. however, some changes can be made to make it better. first, the document should have an introduction to expertiza. this will help a new reviewer unfamiliar with expertiza to understand the document better. secondly, the problem statement and ""what this project will add"" section seem redundant. they both have same information. i would suggest that it can be removed.",1.0,1.0,1,63
"apart from the good work, the team missed adding the test plan and usage of diagrams. since you are making changes in the model, you should have a test plan in place to make sure nothing breaks. there may be testcases in place already and you might just have to add onto them.",1.0,1.0,1,53
&nbsp;the application flow and use case diagram convey the same message. remove one. provide more details/explanation for the same.,1.0,1.0,1,21
"the authors seem to understand their problem statement well and have explained it beautifully. the implementation part is also described but looks the authors are yet to figure out how to make the changes as mentioned in the document. one suggestion would be to have a quick look at the code and give an overview of what changes the authors may be needed. after all, this is a design document. this is the only thing i felt was missing and rest of the things are well done by the team.",1.0,1.0,1,90
"the test plan is included as expected. good job. however, the content of test plan section looks vague and incomplete. there is some content in the test plan that really should be in an implementation section. the only relevant point mentioned is that the team will write cucumber and rspec tests. this looks a little vague to a reader. the team could have created some scenarios that they plan to test and described it here. even though it's too early, the team could have atleat put in manual test scenarios.",1.0,1.0,1,91
"although the team is able to identify the flaws they have not mentioned how they plan to implement it. since there is no coding done it is not possible to identify the smelly code of the team. there should have given more information on which controllers, models, and views they plan to modify or add. in this way, it would have been easy for me to give any suggestions if needed.",1.0,1.0,1,71
i could not find any visual aid for the design doc.&nbsp; this was the only part missing i feel. i suggest them to add some uml for their final submission which&nbsp;gives clear idea. or they could have pictured&nbsp;scenarios instead of writing them.,1.0,1.0,1,47
yes. i was able to understand their proposed changes. they mentioned everything with proper sections. they have&nbsp;used easy language which makes stuff clear to understand. just issue i felt was it was way too big. the size of documentation if possible should have reduced.,1.0,1.0,1,46
"the design documents and the explanations are too big, but other than that it is good. the only problem is most of the explanations were too big. they could have written it in short and provided external links to read more about them.",1.0,1.0,1,43
"&nbsp;all the current design , its flaws and their design to rectify this issue. all the functionalities required was mentioned. the solution was not that detailed to the point of mentioning function names or classes to be included. they just wrote&nbsp;their solution and the files that may be affected by their implementation. nothing regarding the classes or methods to be implemented was mentioned. they should expand more on what they intend to do.",1.0,1.0,1,75
"the document is clearly in much better state. the document clearly explains things the team wants to achieve, how is team trying to achieve among others. one suggestion would be inclusion of a section that tells us how differently the team is implementing the algorithm. the team has tried to explain some here ""some discrepancies need additional attention."", it would be great if the team explains how exactly are they planning to implement these discrepancies. &nbsp; additionally, i guess that a project offered may not have any bidding and in turn no team will work on that problem statement, but in case of review, we need at least ""n"" number of reviews for each project (constructive reviews), how is this scenario being taken care of?",1.0,1.0,1,125
"at this moment, it is very hard to tell anything about the proposed design change. the major factor for this is, there is very limited information on how the team is making changes to the existing code base. for example move javascript code problem: there are some javascript codes in inappropriate positions. solution: we need to replace javascript codes to 'assets' fold. it is very hard for the reviewer to understand what changes the team is implementing. also, the major design change of adding a new controller ""github_metrics_controller"" is discussed in the document without much details on its implementation. also, validating the reasons to add new model and how these models are attached to the existed ""grades_controller""&nbsp; would be a great addition",1.0,1.0,1,123
"authors have used the use case diagram to explain their design. in both the use case diagrams added instructor is the actor who is viewing the teammate review. however the caption to the diagram shows us a different story. caption says ""&nbsp;use case diagram of two approaches to append 'github contribution metric' in teammate review"", but the use case diagram corresponds to the viewing of github metrics. it would be great if the caption reflects the image being used to depict the use case.",1.0,1.0,1,85
the design explains the problem statement clearly. the scope of the solution is to send a mail when there is a major contrast in the review score. i liked how they plan on including the standard deviation in the review report to show if there is a major change.&nbsp; it would have been better if the design included how they plan on detecting the major change and the mailing if there is a major change. as a reader it would interest me more on how they wish to proceed with the solution the author merely mentions the files to be changed and the addition of the standard deviation in the report. proposed code changes and proposed solution could be worked upon.,1.0,1.0,1,122
"the design document incorporates most of the required sections. proposed code changes could have been included and a test plan on how they plan on testing ui and rspec could have been briefliy explained. other than that, a very good effort has been made on the docume",1.0,1.0,1,47
"the proposed design strategy is very well defined. it is sound and follows all the appropriate design principles. i appreciate how the author implements the usage of delegation strategy to show the proposed solution design. the author very elaborately explains the problem statement and gives a clear understanding about the ttc principle for bidding instead of first come first serve principle which was in place earler. some very good examples have been used to explain. it would be great if a section with proposed code changes is also included where the author shows which parts of the code they wish to address and how. that would have helped in getting a better view. but even so, the author clearly mentions the controllers, model and view that will be affected in the proposed solution for the problem.",1.0,1.0,1,136
the team has not added any visual aids. no uml diagrams or screenshots have been put on the design document.&nbsp; i suggest the team to add a flowchart for the design flow to give a better idea on how will the implementation take place.&nbsp;,1.0,1.0,1,46
"the team has several sections in the design document which include an introduction of the topic, the problem statement, changes proposed and a section of a test plan. although an implementation section is present, no information is provided. the team is yet to mention how they are going to carry out their task. the team has also not mentioned anything about the ""designs"" that will be followed. the team has done a good job by providing several scenarios for testing which will make the reviewer's job very easy.&nbsp; i suggest the team to mention how and why are they implementing the functionality in the design document.",1.0,1.0,1,108
"considering the given metrics for a complete document the project purpose and testing plan is added to the document but no project design has been added by the team. according to me, a design is the most important part which shows how implementation will take place. i suggest the team to add some techniques used to carry out the implementation along with a design pattern which will be used. &nbsp;",1.0,1.0,1,70
the team has used enough visual aids which include a mock-up of their implementation and a flow chart of the design flow.&nbsp; both the visualizations provide specific knowledge on what is to be carried out. the reasons for visual aids have also been provided. the flow chart of the design&nbsp;clearly gives an idea of what is to be carried out. i would suggest the team to include more information on how the implementation will be carried out and mention it on the design&nbsp;document.&nbsp; &nbsp;,1.0,1.0,1,91
"&nbsp;""separate view will be created to address this issue"" is mentioned: what will this view look like? would have benefited from mockups. the existing visual aids are still really helpful.",1.0,1.0,1,31
"the authors do not go into detail about which methods they plan to add or modify.&nbsp; also, i think their proposed solution for the 'inefficient calculation of conflicts' problem could be made more efficient.&nbsp; the proposed solution relies on iterating through all previous reviews anytime a new review is added. this can be expensive for larges classes with many reviews. one suggestion would be to keep a running value (or values) that gets updated once a new review is added to the system.&nbsp; this way, a new review's score can simply be compared to this value(s) and iterating through all previous reviews will not be required. (of course, this would require some logic to make sure the scores that are outside of the threshold are not included in the calculation of the stored value(s)).&nbsp;",1.0,1.0,1,141
"the document includes all of the right sections, but not in the right order.&nbsp; the introduction section is good, but the project task section should be renamed to project tasks.&nbsp; the text is a little disorganized as some of the text would fit better under a different section.&nbsp; as an example, the text under project task might fit better under a separate section called previous work.&nbsp; the plan of work section is a good start. however, it is missing many of the implementation&nbsp;details.&nbsp; the refactor and improvements section should be moved inside of the plan of work section.&nbsp; the test plan section needs more details on how the code will be tested.&nbsp; the references&nbsp;look good.",1.0,1.0,1,126
"please do not mix your proposed changes (current work) and previously proposed changes (previous work) into single section you named ""changes proposed"". right now it has both changes that were proposed previously and your currently proposed changes. overall quality of the explanations is ok, but can be improved a lot. the only explanation is provided, ""we are focusing only on the student views and propose changes in the following files..."" and there is a list of files.please elaborate a little more what do you mean by ""focusing only on the student views"". also, it would be good idea to add explanation to each listed file as follows: what this file is responsible for? why and how this file is going to be modified? what goal would be achieved by proposed change to this fild? try to give as many details as you can.",1.0,1.0,1,144
"again, the core design is not shown in the document since it was provided by different team in the last semester. the team is only going to complete unfinished work started last semester. based on the ""implementation"" section, the team is happy with the initial design that was given (i guess team's mentor also reviewed previous work, and is aware of the design). based on the given document i cannot determine whether the design is as simple as possible. use case diagrams show it to be simple, but these are too high-level diagrams that do not reveal implementation details and cannot be used to determine complexity of the design. since the team is convinced that previous changes are ""on the right track"", i assume that the design is in fact simple as it could be.",1.0,1.0,1,137
"yes, the design mostly incorporates all of the functionalities required for this project. the document clearly states what functionalities must be added in the ""problem statement"", ""what needs to be done"" and ""implementation"" (also adds high-level solution to the problem) sections. very good work is done by the team to integrate proposed solution that has been done previously by different team (last semester) and team's own proposal, also considering the flaws of the proposed model. however, the design itself can slightly be improved by providing uml or e/r diagrams, which would help to&nbsp;clarify&nbsp; implementation details for these functionalities. although, the document contains workflow diagram, i think it is not enough for detailed explanation of the design. moreover, please consider implementation flaws that were reported to you (pull request is dirty, code climate issues, and etc.) along with the flaws of the design you found. generally, all functionalities are discussed and properly addressed in the this design document.",1.0,1.0,1,163
"yes, the proposed design appear to be sound and well-thought. it follows appropriate principles, but does not use any patterns due to simplicity of the implementation. design describes the ""major change"" and ""minor change"" and what cases (for major changes) should be handled appropriately. although, it is kind hard to follow the data flow diagram, it clearly shows when regulation of rubrics while projects are in progress should take place. the ""proposed code changes"" sections does great job on explaining how such mechanism should work by providing code sample (or stubs). overall, yes the design appears to sound. i still believe uml diagram is necessary along with ""proposed code changes"" section that provides great low-level implementation details. moreover, the design is missing workflow diagram to show high-level project overview, where it can illustrate when the feature to be implemented is utilized (provide&nbsp;if/else&nbsp;conditions that appropriately handled).",1.0,1.0,1,153
"yes, the team did really good job explaining the changes to be made in the system. the team did really good job on separation of concerns to implement the feature by proposing phase design and implementation. also the team did great job on breaking down required feature into multiple easier and more manageable implementation tasks that can be implemented in the multiple stages. for example, identifying whether a change of the rubric of a questionnaire is minor change or major change (only due to major change the feature should reset reviews and send email notifications). also, as i stated in the first peer review, the team did great job on providing code samples and stubs. that really showed that the team spent time thinking through the design and implementation. overall, i do believe all the changes are explained adequately. the document is only missing additional diagrams and well explained test plan. for the diagrams, please include at least uml diagram with class, methods, variable names and their relationship.",1.0,1.0,1,168
"some important information is missing and needs to be added into the design document. although all the key parts of the design are present in the document.the ""design diagrams"" section is missing uml diagram and data flow diagram is a little unclear to me (consider reworking it or adding interpretation of the diagram as a text below). also consider adding workflow diagram to indicate possible&nbsp;if/else&nbsp;conditions for regulating rubric changes instead of describing it within a text in the ""proposed code changes"" section.the rest of the project design section is clear and complete. project purpose stated at the beginning of the document is very clear, concise, and complete. no issues found there. ""test plan"" section is incomplete (not because information was not added, but because it does not cover required testing strategies). please consider adding at least two sections within ""test plan"": ""rspec testing"" and ""ui testing"". also reflect on code inspection and how (if) it was done. include missing sections, such as ""conclusion"", ""team members"", ""references"" and etc. overall design&nbsp;this is very good design document! great job!",1.0,1.0,1,186
"yes, the design does include the test plan. however, the test plan is very vague and incomplete. it mentions only new test cases related to editing a rubric and thus testing the feature. are these enough for&nbsp;thorough testing of the feature? i do not think that test cases can cover all possible case scenarios and test them.&nbsp; i understand that these tests would be done&nbsp;via rspec testing, however, would there be any ui testing or manual testing done to test email notifications? there should be such tests as well. in the test plan i would create two separate sections, for example, rspec testing and manual (ui) testing, where your team can elaborate on testing strategies, steps, and document the outcome on it. in rspec testing strategy do not limit your testing to only test case scenarios. test as many as possible test case scenarios (even unexpected). document everything so expertiza software engineers can accept your code changes without questioning whether implemented feature works or not.",1.0,1.0,1,170
"there are only diagrams, use case and data flow diagram. as i mentioned in the first peer review, the use case diagram is a high-level diagram that explain roles of the users, initiation of the rubric changes and corresponding regulated actions to handle such changes. data flow diagram is slightly confusing and requires some word interpretation to interpret the diagram. the diagram that clearly describes the changes to be made in the system is uml or similar type of the diagram, where names of the classes, methods and variables can be shown and documented. also, there is a change in the db, the team should include entity relationship diagram. unfortunately, at least uml diagram is still missing (as i stated in the first peer review and it was not addressed). moreover, mock screenshots are also missing to illustrate under what conditions does the feature works and possible email notification content. please include these once the project is completed.&nbsp;",1.0,1.0,1,160
"the problem statement is good.&nbsp; the design portion should include a diagram of what the ui will actually look like, not one with additional data that will not be included.&nbsp; it should also describe how enabling the new ""debug"" option will be done. the testing plan should include more details, for instance ensuring that the data retrieved from the api actually corresponds to the question answer text.&nbsp; if the comment text is not included in the analysis view, there's no way to ensure that the question answer text is what was actually sent to the api.",1.0,1.0,1,100
"the design is well written and seems to have all of the required details.&nbsp; the screen captures of the proposed changes are very helpful, especially the highlighting of the new widgets.&nbsp; the document provides a lot of detail, possibly more than is necessary.&nbsp; the entity relationship diagram is a bit large and has a lot of information in it that isn't relevant to this project; the contrast between the black and blue is a bit subtle.&nbsp; the diagram could be left out altogether, i think, without losing any relevant information.&nbsp; there are some grammatical errors in the writing, for instance ""by adding new such table we create many-to-many relationship between sign_up_topics and questionnaires tables..."" should be ""by adding this new table, we create a many-to-many relationship between the sign_up_topics and questionnaires tables...""&nbsp; in any case, the document exceeded my expectations.&nbsp; nice job!",1.0,1.0,1,154
"the explanations of the design elements that are present are good and the screen-shot mock-ups provide useful information, although they are a bit too large.&nbsp; the design is missing minor details, like the specific views that will be modified to include the new widgets and how the fact that review bidding is enabled for an assignment will be stored in the database.&nbsp; the design should also include the navigation to the bidding interface, as mentioned above.",1.0,1.0,1,80
"the project purpose is clearly stated and easy to understand.&nbsp; the design is thorough although as mentioned above, some things are unclear.&nbsp; the testing plan could be fleshed out a bit more in terms of specific things the tests should be checking (e.g. model fields) rather than just checking whether given methods are called when a specified action is performed by the user.&nbsp; the testing needs to verify that the correct information was indeed recorded.",1.0,1.0,1,79
"great job explaining test running process. however, test plan is not explained well and i suggest explaining what files you intend to change and what new tests need to be added for refactoring.",1.0,1.0,1,33
i think they might use the document in the last project. i think it will be better to write a document about the current project separately. there are many details about last project.,1.0,1.0,1,33
the design is written great. it will be better to explain more about the pattern used.,1.0,1.0,1,16
"yes, i appreciate that the team has added a few flow-charts. but, what is not clear to me is that, the heading 'process of solving the issues' is very vague and i do not exactly understand what issues the heading is denoting. they could have added what the issue is specifically.",1.0,1.0,1,52
they have included a test plan section in their design document and have mentioned that they will use cucumber and rspec for testing.they have mentioned about the functionalities which is what i think they will be testing and it seems appropriate. some test examples for eg. for invalid inputs or self_review score not given by the student or some test cases could have been explained to show how they will be testing their methods would have been better.,1.0,1.0,1,79
"the wiki is very informative with the use of diagrams. the team has leveraged the diagrams from the project proposals to a large extent. the entity diagram's objective seemed like they wanted to show the database relationships, which could have very well been established without the column names of the tables. the presence of the column names makes the diagram seem overly complex and has a lot of unnecessary information which do not help the reader.",1.0,1.0,1,77
"the document has a good flow to it. the document explains the project purpose, work flow, current scenario, required implementation and design very well. that being said, the document is missing the test plan. i suggest the team add the test plan section with references to the rspec files from the assignment allotment rspec files. this would help understand the complexities better.",1.0,1.0,1,62
they made use of visualizations here and there but i think they can add more figures to make their point more clear to understand instead of giving really lengthy writeup.,1.0,1.0,1,30
they did&nbsp;add two screenshots of how the expected output is going to look like but i don't think that showcases all the objectives they are supposed to achieve. they can definitely add more visualizations.,1.0,1.0,1,37
the overall quality is adequate. my one suggestion would be to reduce the number of links added in the description. it would be easier and more convenient for the readers to read a brief description explaining the concept instead. the frequency of the links can be reduced if possible.,1.0,1.0,1,49
"yes they have explained everything well. as i suggested before, if they could remove the number of external links in their document and a brief explanation of the same instead, it would be even better.&nbsp;",1.0,1.0,1,36
they have visualization which are some tables that screenshot from somewhere. the quality of the picture is not good which is not easy to read the context of the table. they should create the table by excel or word will help fix this problem.,1.0,1.0,1,44
"i think their explanations were very thorough. they even went above and beyond by answering common peer review questions on their wiki. however, i don't think keeping that section (answering common peer review questions) on the wiki past the peer review phase is a good idea. the purpose of the wiki is to explain your project, not ensure you get a good peer review grade. also, i suggest fixing&nbsp;the&nbsp;typos/grammatical errors on the wiki so that it looks more professional.&nbsp;",1.0,1.0,1,86
"they do a good job of explaining the project purpose, project design, and testing plan. my only suggestion would be to make the link submitted to expertiza the link for the entire wiki page (without the #... at the end). the reason for this is that the project purpose, design, etc. are explained at the beginning of the wiki, so if i were just looking at the ""final project"" section of the wiki, i would have no context and would not understand the purpose or design of the project.",1.0,1.0,1,88
"they have a great diagram that helps to explain their project. my only complaint is that their screenshots (in the ""implementation"" section) have not been scaled and are way too big for the document (i have to scroll a lot in order to view the images). i suggest that they use an image resizer to shrink the images and then re-upload and re-insert them.",1.0,1.0,1,66
"once logged in as an admin, there was an edit profile with all the required fields for updating the profile details. it also had an option of canceling the account. i'd strongly suggest to remove this feature for the admin account as you should not be able to change admin details or delete the admin account.",1.0,1.0,1,57
book is not deleted in case is it checkout or on hold. but should be handled with proper error message. student delete option is not available for admin.&nbsp; &nbsp; &nbsp;,1.0,1.0,1,31
"they have implemented basic functionalities very well. just the minor navigation issue is still there whenever i click on sign up button on home page it takes me to page to select user role in which i need to sign up, in that page there should be one ""back"" navigation link to get to the home page for two reasons:- firstly, for smooth navigation if user change the mind in middle then back button should be there in ui to take back to home page. secondly, as they have not swapped the positions of ""login"" and ""sign up"" button on home page, by default when user enters login information and hit ""enter"" button, it triggers ""sign up"" button instead of ""login"" and takes user to page where it is required to select user role for sign up and thus there should be back button on that page as user did not intend to sign up also, the notice messages are coming twice at some places like when i update librarian through admin login it appears twice.",1.0,1.0,1,176
"overall relationships among entities are well defined and resultant db design is pretty good. just one note that they could have added has_many ""students"" relationship in ""history"" as history table consists of many student ids who checked the book. to avoid automatic deletion of records from ""history"" table consisting of the student id for which particular student is deleted, they could have set dependent option as ""delete"" instead of by default destroy.&nbsp;",1.0,1.0,1,73
"yes its easy to follow. just one minor point in the login page, the location of sign up and sign in button needs to be reversed or handled in code so that by default user hits ""enter"" in keyboard after entering credentials they gets logged in and not redirect to sign up page. also there needs to be navigation button on sign up page to go back to home page if we don't want to proceed with sing up.",1.0,1.0,1,80
it follows usual good practices overall. just add more comments in the code and refactor some code from books controller to model which is related to business logic. also make sure that all the links/buttons included in ui have some responding action attached as show button in books list of librarian login home page redirect to error page.,1.0,1.0,1,59
"&nbsp; the ui can be modified to include only the functionalities that can be implemented by the current user. the functions in ui are well organised edit functionality should be implemented such that, the fields are auto-populated. and the user is able to edit the book fields.&nbsp; ideally in controller, the edit page in the view gets called, with the record fetched from the database. editing books can be redirected to from the books show view page. &nbsp; &nbsp;",1.0,1.0,1,81
"the corner cases are mostly like against null values. the users when signs in, they should be able to sign&nbsp; up as student or librarian. that way the next time, the user signs in, the type of user is stored in table the admin should be auto configured. one should not be able to sign up as admin, this leads to data privacy issues and malicious attacks &nbsp;",1.0,1.0,1,69
"the admin cannot edit his profile. all the users must be able to edit their profiles, some functionalities like -view student checkout list-view librarian approval list are failing while the student/ librarian logs in. these functionalities can be hidden from the home page if it cannot be implemented by for certain users.",1.0,1.0,1,53
the user interface is very friendly and the placement of attributes are goos. the sign up links could have been displayed in contrast. the readme file has&nbsp; details needed. the admin should be able to edit his profile. this can be done where all users are shown or as drop down as for other users.,1.0,1.0,1,56
"there are quite a few commits and the commit messages also signify what feature/bug fix is being pushed. however, peer review and pull requests were not used in the team. there are no pull requests created in the github project, which can be improved moving along.&nbsp;one good thing that i found was the use of github project in the repository, however, not extensively used but still is a positive aspect.",1.0,1.0,1,73
"the ui is pretty easy to use. i couldn't view the repository though, the link returned a . you should check that your repository isn't private.",1.0,1.0,1,27
"there're many long method in book controller, such as borrow method. my suggestion is that we can split it into many small methods to integrate a big method. &nbsp;",1.0,1.0,1,30
"( )the indentation of their code is other than !!!! &nbsp;( ) there are two different style for naming a method. in models, student.rb has a method named&nbsp;self.remove_from_wish_list? however, book_hold_tracker.rb has a method named&nbsp;self.handlespecialcollectionrequest? the traditional way for naming a method in ruby is the previous one. the latter one is the way java used.",1.0,1.0,1,60
"could not locate the readme file since the repo is not public.&nbsp;since this is just the first round, i understand that some of the pieces need re-work. hopefully, my suggestions would help :- please provide `back` button on all pages. little counter-intuitive to use the browser's back page- there were errors when i hit a back button from student edit page see screenshots https://snipboard.io/ha hrl.jpg",1.0,1.0,1,73
" the ui looks clean and intuitive. sign out button is shown even when the user has not sign in. some options which should not accessed by other than admins are visible to normal users. though they do work for students and profiles, it would be good to not show the features that they cannot perform. ",1.0,1.0,1,55
" . no, the student model has all functionalities to be yet developed. no checkout, return, hold functionality added. the link only shows the list of books. the student can permanently destroy a book from the libratry(this needs to be fixed). no functionality for calculating overdue fines. . librarian model is almost complete but as end to end flow from student to a database update is not complete. we cannot fully test if a book is actually added in the hold list. the databases are populated in different views, but that is not sufficient to guarantee a particular function works as no end to end implementation. no functionality to view overdue fines of a particular student.",1.0,1.0,1,114
"although the user interface is intuitive, it is difficult to navigate and view as there is no border or margin spacing and it sticks to the left o f the screen. i suggest to add some css and improve the ui by adding margins and padding appropriately.&nbsp;",1.0,1.0,1,48
"- the ui starts with asking user to either sign up or login as a student/librarian. in terms of ui perspective, it can be improved a lot to give the user a look and feel and also allowing users to understand the functionality well.you can create two buttons and displaying appropriate forms based on selection. -also, since the log in/sign up is divided into two forms, entering the admin credentials is not accepted by both the forms thereby failure of admin login. -once we sign into the ui, all the options are jumbled and there is a text overlap confusing the user. overall, the functionalities work and can be understood.but can be better.",1.0,1.0,1,116
-code comments can be added. -code can follow solid principles assigning only single responsibility to each method. -white listing can be specified in the respective controllers instead to other controllers like student controller can contain the student parameter white listing. -can try helper methods instead of rewriting&nbsp; the functionalities.,1.0,1.0,1,50
"i think there are a lot of controllers defined, they can be cut short by enforcing policies or restrictions in the same controller or view itself. and not very dry",1.0,1.0,1,30
 ) the code doesn't appear to be dry. and the naming of methods should be better. (camecase etc),1.0,1.0,1,18
"the codebase doesn't appear dry. instead of creating separate controllers for different users, gems could have been used to enforce restrictions.",1.0,1.0,1,22
"a lot of controllers defined and are highly decoupled. i think those controllers, models which can be merged should be merged and the functionality can be given through using policy gems, etc.&nbsp;",1.0,1.0,1,33
overall ui is good. you have made it simple and concise but not reaching to proper location after pressing back button. work flows are can be improved. for student it is showing status of book as checked out but when i look for checked out books it is not displaying any book there. over all at some placed it becomes confusing to understand the behavior of application but minor fixed will definitely make everything perfect.&nbsp;,1.0,1.0,1,76
"no. for the bookmarks model, it has 'belongs_to' relationships with student and book, but there are no corresponding 'has_many' relationships in book and student. hold_record, librarian_approval_list and student_checkout_list should 'belongs_to' student and/or book instead of 'has_one'. the links to bookmark a book/approve librarian don't&nbsp;work. i wonder if that has anything to do with it.",1.0,1.0,1,59
"i&nbsp;do not know what happened, but i couldn't find my first round review for this project now. so i just checked every function in this system again. and i find failing functionality as follow: . admin could only edit user's name, email and password. .&nbsp;sometimes, student couldn't checkout a book and it said something went wrong. . i created a book with a not-jpg/png file as image and it succeeded.&nbsp; and there are things not working/remaining: . unit test a model and a controller . dynamic overdue fine calculation (only calculated when book returned) and displaying the list for admin/librarian . sending email when book on hold is available for check out. . sending email when special collection book on pending is approved by a librarian . sign up with google (login in with google works! i.e. if a user has signed up normally, he'll be able to login with google in future)",1.0,1.0,1,159
"most of part is good, but part like borrow which contains many functions have many verifications may contains many&nbsp;repeat parts. it would be a better choice to write same verification in one method, also seems&nbsp;much work are done by someone&nbsp;individually and there isn't much definition for code.",1.0,1.0,1,54
"the testing has been done. however, all the functions have not been tested. most of the functionalities of the librarian are not a part of the test case written. like the admin can destroy the books etc. also, attaching few of the links which are showing error, once the test cases are written, these links should work properly or else easily identifiable.",1.0,1.0,1,62
"the code is well maintained and the business logic is kept separate from the views and models. this brings the good practice implementation in the code. the code has been well intended. however, more comments could have been put in place to make the code more easily readable to other users.",1.0,1.0,1,51
"github changes were regularly made. &nbsp; however, i do not see many ui functionalities for the librarian. like creation of books is not visible in the options shown on the ui.",1.0,1.0,1,31
relationships between tables have been taken care of. they have given the feature of linking a book to one single library only which takes care of to n relationship.&nbsp; however for cases when same title books needs to be added to multiple libraries then multiple copies of it will be needed to create.,1.0,1.0,1,54
"- in places such as the search function, and operators could have been used instead of using nested 'ifs'. moreover, i think that the search function looks too complicated due those nested conditional statements. it would have even done the job if a sql like query would have been written to check the incoming parameters against the required attribute field. - i would suggest that you could have avoided nested if in many other places too and used the and operator for the same. &nbsp;",1.0,1.0,1,83
"- the admin, while changing the status of a librarian, from unverified to verified is made to type the password of the librarian. however, as per the requirements, the admin is not expected to know the password of the users but just the basic editable details like name, university, library etc. in other words, there is no need to re-enter password of the librarian for just updating some fields. - also i don't think there is a double authentication required just for editing the user profile. if a user has signed in, he is the correct user in the first place. or for that matter, even if an impersonator would have signed in with the correct user details, authenticating again would&nbsp; not prevent him/her to change the user credentials. hence, i feel that putting in the password again for changing credentials would not serve any purpose.",1.0,1.0,1,148
the changes made to git have been thoroughly pushed on git however i would recommend that the commit names be specific and not general. for instance replace 'bug fixx' with something that was actually fixed. this would not only help to keep track but also make it easier to refer the log files.,1.0,1.0,1,53
"-the user interface has made sure that the elements are placed correctly on the web page however i would suggest to make use of some better color templates to make it look much more professional as well as enhance the user experience (something like blue and white or black and whilte) - you can also display the name of the user in the top right of the navigation bar when logged in. - ""hello user_name"" is unnecessarily big in size and is occupying more pixels even when not needed. -also the login and signup could be improved by scaling it down since both username and password would not exceed characters in most cases.&nbsp;",1.0,1.0,1,112
"the code seems to be very well written for the most&nbsp;part. however, there is some scope for improvement in the sense that there is some additional logic in controllers that can be moved to the appropriate models.",1.0,1.0,1,39
"yes the team has committed changes on github even in round . but i still feel that commits have not been used properly. for e.g. some commits have large&nbsp;number of line changes. (i saw about k line changes in one commit). also, they have not used any branches in their git repo. using different branches for different features might have been more helpful to get the commits done on regular basis.",1.0,1.0,1,73
"it would have been a better approach if branching had been used to develop different functionalities. such as new barnches for admin, student, librarian etc. every small change should have been committed rather than commiting big chunks of code.",1.0,1.0,1,39
" -to-n or n-to-n relationships have not been managed properly. they have added foreign keys to required fields but they have not mentioned ""belongs_to"" or ""has_one"" or ""has_many"" anywhere in the model files. this might lead to dangerous effects on data after some operations like delete which are included as a foreign key to other objects.",1.0,1.0,1,58
"yes the team has regularly used github and continuously committed code. but they have not used branching. they could have used different branches for different features such as admin functionalities, student functionalities, book hold/return etc.",1.0,1.0,1,36
test cases have been written for the librarian controller and librarian model. i liked that the rspec testing framework is used over rails' default one. but i feel that tests don't cover a lot of things. they have written just cases for model and cases for controllers. this is not sufficient to thoroughly test functionalities. a lot of functionalities are missed. for e.g. aa scenario in which librarian is created without the library should be tested and it should not create librarian object as library should be compulsory.,1.0,1.0,1,90
"the team used github very nicely. they used frequent commits even during round .&nbsp;but as i said in round review, it would have been&nbsp;more helpful to them if the team had created multiple branches for multiple features. for e.g. they could have created different branches for bookmarks, hold_requests, email notifications etc. also, some of the commit messages could have been more descriptive. ""final debug"" this type of commit messages are bad choice. messages should explain what does the change in the commit actually does. they should have mentioned which problem they were debugging.",1.0,1.0,1,97
"-""published"" field for books does not mention the format for date, just mentions that it cannot be blank. image needs to be uploaded twice, for some reason, in case some of the other fields are also changed. -admin -&gt; profile is still leading to users, probably this should lead to the admin's profile.&nbsp;-creating a new user (by admin as well as by sign up) also still logs admin out and logs into the new user , this was also mentioned in the previous review (although this has now been included in the readme ).",1.0,1.0,1,95
"for all the modules built so far, the interface is easy to understand. however for admin -&gt; profile is leading to users. it should probably be directed to show admin's profile. readme file is very informative, includes screenshots.",1.0,1.0,1,39
"sometimes, i am not able to create new books - ""we're sorry, but something went wrong."" is seen, instead of proper validation messages when i try to create a book. sometimes i am able to create them.i would suggest&nbsp;that number&nbsp;of books available needs to be included somewhere for students to view.",1.0,1.0,1,56
test cases are written for student controller and model. but the test cases are not proper. could have written more test cases to ensure the application works properly.,1.0,1.0,1,28
" ) just trim the space in email string when you take as input because if i write ""&nbsp;&nbsp;admin@lib.edu"" then it shows invalid credentials as compared to using ""admin@lib.edu"" &nbsp;",1.0,1.0,1,34
 ) functionality of view all books to student should be implemented and then provide option to checkout or add as bookmark. ) try to fix the issue of sign-up as librarian and it's functionality (http://enigmatic-badlands- .herokuapp.com/librarians/new&nbsp;),1.0,1.0,1,42
most of logic is written in controller instead it should be in model.,1.0,1.0,1,13
- most of the code follows good ruby practices with methods performing single action - few controllers like book_request.rb has few cluttered methods. most of the actions written in the controller methods can be moved to the individual models and directly called over controller as controllers must only handle functions linked to views - methods are named appropriately,1.0,1.0,1,56
"interface is easy to use. i like that you have implemented dynamic web pages to resize according to the browser window size. however, there are certain links (view all books &amp; libraries) which are broken or result in error.",1.0,1.0,1,39
"controllers and views are written nicely. function calls are not that much coupled and depend on other functions. gem devise is used appropriately. though the authors should consider adding logic into models rather than controllers, as stated by mvc architecture.",1.0,1.0,1,40
- the majority of the features handled. could have handled exceptions like if a book id doesn't exist show a default page instead of giving the error page.,1.0,1.0,1,28
" ) university should have a -to-n relationship with libraries, librarians and students. ) student should have an n-to- relationship with university. ) library should have a -to-n relationship with librarians and an n-to- relationship with university. ) librarian should have an n-to- relationship with library and university.",1.0,1.0,1,48
 . book should have a -to-n relationship with book_history. . book_history should have an n-to- relationship with library too. . librarian should have an n-to- relationship with university. . library should have a -to-n relationship with librarian and book_history. . student should have a -to-n relationship with book_history. . university should have a -to-n relationship with librarian too.,1.0,1.0,1,58
all contributors have committed frequently throughout the&nbsp;duration developed the project in. it could be better if the following suggestions are incorporated into the project. suggestions: ) the commit messages should have a meaningful description of the added code/functionality in that commit.,1.0,1.0,1,43
"( ) what will happen if the admin tries to delete a book that is issued? it gets deleted from the all books table (which is incomplete) but not from the checked out books table. ( ) what will happen if a student is deleted who had books issued and there are other students waiting for the same book? the other students on the waiting list do no get the book. (nothing happens) ( ) can admin account be deleted? no, it cannot. ( ) what will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted? no reservations are not deleted the readme.md should also cover how the system handles edge cases. the readme does not cover how the system handles edge cases.",1.0,1.0,1,126
the ui is fairly easy to use &amp; intuitive for easy navigation through the web app.&nbsp;suggestions: . add a back button on all pages to make navigation even better. . some screenshots can be added to the readme to make it better.,1.0,1.0,1,42
"good ruby coding practices have been followed. &nbsp; suggestions: better relations among classes (models) can be set up, such as:&nbsp; library has many books so if the library is deleted all is books are also deleted. &nbsp;",1.0,1.0,1,38
"all contributors have committed frequently throughout the&nbsp;duration of development of the project. it could be better if the following suggestions are incorporated into the project. suggestions: ) the commit messages should have a meaningful description of the added code/functionality in that commit. instead of using one or two words, use a couple more words describing the exact change made.",1.0,1.0,1,61
the university model and controller have been tested thoroughly. suggestions: consider adding more thorough testing to the university model. &nbsp;,1.0,1.0,1,20
code quality is dry as possible but most functionality is in controller which is opposite of functionality of thin controllrs and fat models.,1.0,1.0,1,23
the code is structured as expected from the standards of ruby and rails. code in views can be moved to helper files for reuse.,1.0,1.0,1,24
"i failed to log in as an admin using the admin account given in github. but an entry to signing up as a new admin works. i was able to to take actions like editing the admin's profile. but, it is better that the admin account is already preconfigured according to requirements of the project.",1.0,1.0,1,56
"i believe you guys did a good job, so please provide the link to github next time.&nbsp;",1.0,1.0,1,18
they'd better add come comments in their code to make it more readable.,1.0,1.0,1,14
"first i got confused by the model names borrow and history, which of them refers to the borrow histories? these can cause ambiguity. in the controller of borrow, i saw `checkout.each do |bo|`, where i quite wonder why they use ""bo"" to map, does it stand for borrow, or book? the thing is that, if this code block is long enough, the implicit ""bo"" will definitely cause confusion. besides, they appear that they don't like to use ""word_word"" format of their method names, while the names of other methods that are automatically generated remains the original ones. for instance, in the controller of borrow, both ""has_book_and_student?"" and ""holdrequest"" appear to be the name of methods, which are not accordance to an integrated discipline. it looks like that the team&nbsp;members did not form an integrated habits on how to properly name their models, methods and variables manually.",1.0,1.0,1,150
the code is mostly in controllers and views.&nbsp; whatever methods are written are mostly handling single tasks but there are some methods that have a lot of logic and refactoring might help.,1.0,1.0,1,33
"the university can be made a new table, as the id can be used as fk for user, library tables. the book table should use library id mapping instead of saving the library as string directly.",1.0,1.0,1,36
"few of the edge cases pass and few do not.for example,there is no option for the admin to delete an existing student so ca't really see what happens.but,admin can only be edited not deleted.",1.0,1.0,1,39
"user interface is interactive,however the ui can be made more clearer look wise and adding labels",1.0,1.0,1,17
"most part is good there are some suggestions:&nbsp; . add the ""back"" button on the all page. . some buttons and information are duplicated. for example, there are a lot of ""new_user"" button on the user management page.",1.0,1.0,1,37
"i don't think the code is ready to be deployed to production server. i think i have already mentioned the issue in last round where the array was hardcoded. moreover, it seems the tabs numbering are stored in session, the code could utilize something like localstorage instead of sessions.",1.0,1.0,1,50
i was't able to see any test plan or automated test. test should be written for&nbsp;app/controllers/tree_display_controller.rb&nbsp;and modified for other ruby files,1.0,1.0,1,29
i wasn't able to find the comments on the method. moreover comments can also be included in conditions like 'if&nbsp;!exist_assignment and&nbsp;!exist_directory' in create method,1.0,1.0,1,29
"write up is good. but i feel that there are lot of unnecessary screenshots in the write up. instead of it, if it would have have change flow graph, it could be better. like wise, author'c could paste the code and explain in the wiki. moreover i cannot see author's name in the wiki",1.0,1.0,1,56
"yes, the team had added the test cases. however, team could have written the cases thoroughly. i can see test cases like ""can create an empty csv with just headers"". but test cases with more edge cases need to be added like 'large csv files', 'csv with characres', etc. overall the coverage decreased in the ci build.",1.0,1.0,1,57
test plan is shown as testing step for users. i think test plan should include rspec or any functional or integration test.,1.0,1.0,1,22
i found over all code is well written but as mentioned above two&nbsp;methods are a bit longer and&nbsp;can be reduced into smaller method calls.,1.0,1.0,1,28
"yes, they comment each method for&nbsp;late_policies_controller.rb, and every comments seems practical. but method&nbsp;late_policy_params,&nbsp;instructor_id and&nbsp;late_policy&nbsp;have no comments.",1.0,1.0,1,27
"yes, they add correspond rspec test for their function. but i think they should add some valid test cases. besides, if they can have a picture of their test cases on wiki, i think that would be much better. last, i think they should add some ui testing steps for the&nbsp;policy function.",1.0,1.0,1,54
it would be better if they could add more comments in their wiki. even though the code they wrote is easy to read.,1.0,1.0,1,23
"overall, they have included all the necessary steps in the test plan to test the changes easily. there is one scenario which could be included in ""test ui for student login"" section which shows reviews which are given by the student to particular team :- click ""other's work"" click ""view"" then they could compare that view with the view they changed for review report. &nbsp;",1.0,1.0,1,65
they have included much of business logic in assignments_controller out of which some code could be shifted in model and also for the successful save message return in create method they have used it two times which could be dry out further by adding simple flag.,1.0,1.0,1,46
yes they did try to improve the code and resolved issues related to code climate. but still the indentation is not uniform and also they could have added more comments in the ui part and in assignments_controller,1.0,1.0,1,37
"overall, it works fine but on one edge case when i try to save two assignments with same name under same course, the application throws exception which should be handled with error message at the user end.",1.0,1.0,1,37
"comments are mostly descriptive &nbsp; selected_participants.each {|index| reviewresponsemap.where(reviewee_id: team.id, reviewer_id: index, reviewed_object_id: assignment_id).first_or_create } &nbsp; &nbsp; &nbsp; however the above line may require comment to completely comprehend",1.0,1.0,1,31
"some variable_names are too descriptive to a extent that is not necessary , participants_with_min_assigned_reviews the above variable can comfortably skip words like with.",1.0,1.0,1,22
the application hasn't been deployed heroku | welcome to your new app! refer to the&nbsp;documentation&nbsp;if you need help deploying. ,1.0,1.0,1,23
"the code is well organised and contexts and it are covered appropriately &nbsp;but in topic name class &nbsp; describe "".topic_name"" do &nbsp; &nbsp; context 'when topic name empty' do &nbsp; &nbsp; it ""return -"" do &nbsp; &nbsp; expect(student_task.topic_name).to eq(""-"") &nbsp; &nbsp; end &nbsp; &nbsp; end &nbsp; &nbsp; context 'when topic name empty' do &nbsp; &nbsp; it ""return topic name"" do &nbsp; &nbsp; &nbsp; two different scenarios are provided for the same context",1.0,1.0,1,75
"the method names are specified however the function and implementation details can be more broadly specified since.&nbsp; the method names can follow to the ruby naming practices, by inserting&nbsp; '_'&nbsp; between any words within the method name. for example, the method&nbsp; &nbsp; complete? can be changed to task_complete? or&nbsp; stage_deadline_complete?&nbsp; get_due_date_data can be changed to get_due_date_timeline since it returns the time_line specifically &nbsp;",1.0,1.0,1,69
"the method names are specified however the function and implementation details can be more broadly specified since. the method names can follow to the ruby naming practices, by inserting '_' between any words within the method name. for example, the method complete? can be changed to task_complete? or stage_deadline_complete? get_due_date_data can be changed to get_due_date_timeline since it returns the time_line specifically",1.0,1.0,1,61
"though no test cases were added, the explanation was given in wiki although for views, if test cases can be added. the existing tests&nbsp; for calculation of deadline duedate, for the following cases can be included -if no deadline date is set on topic' -if date prior to the topic submission deadline is set as drop topic deadline -if date after the topic submission deadline is set as drop topic deadline &nbsp; ",1.0,1.0,1,73
"i think the writeup is great. there are issues in this project and all of the issues are well defined. also, for each issue the solution is provided to explain the plan or idea how the team will fix the issue which is helpful for reviewers. the code change shows in which file and how the code is modified, which is very clear. if the team could add more details about how to check the work will be better.overall i think the quality of the writeup is great.",1.0,1.0,1,89
"given that this is a project to add test cases, the measurable output should be an increase in test coverage, but it has surprisingly dropped. i however dont think it is because of their code, but rather some issues with coverall (as some other teams too have reported issues with a drop in coverage despite adding new cases). so my only concern would to verify if the code coverage has increased for real. if yes, i think the code is ready to be released to prod.",1.0,1.0,1,86
there are some comments that are added but not to all the refactored method. should be added for the remaining methods as well.,1.0,1.0,1,23
"the repository definitely needs more comments as i had trouble following the code. however, the function naming convention and size are good as they are.",1.0,1.0,1,25
"the wiki seems good and explains the background and motivation of the task. however, the implementation is left for the user to figure out by providing the screenshots. it should rather have been explained about what approach was used and the reasoning behind it.",1.0,1.0,1,44
"no comments were added for the methods that were updated. you should add a comment where you check the review mappings size and compare it to the number of reviews allowed for the assignment explaining what it is doing. fortunately, it isn't too hard to understand what this code is doing. it would be good to add similar&nbsp;comments explaining the&nbsp;changes to it.",1.0,1.0,1,67
"the document contains a ""testing from ui"" section, not a test plan. rather than being focused on pre-conditions and edge cases, it gives a list of steps for a happy path through the new flow. alternate paths should be added.",1.0,1.0,1,41
"the build passes, but there are error notifications from code climate. specifically, there are issues to fix for code climate. code coverage decreased by about - %. no methods were updated, but they were extended to have new functionality for checking the review number. similarly, no variables were added. however, the field of assignment 'num_reviews_allowed' is named well. therefore, naming seems good. i would just look into the errors with code climate.",1.0,1.0,1,70
the tests added to review_mapping_controller_spec.rb are not dry because they share the same first or so lines. this could be reduced with a helper method.,1.0,1.0,1,26
"when i go to edit some assignments, i see the error message:&nbsp;undefined method `id' for nil:nilclass. this is followed by the code snippet: function populateduedates(topic_id, review_rounds) { elementsarray = ; $('[id^=""due_date_&lt;%= @assignment.sign_up_topics .id %&gt;""]').each( function(i, e) { /* you can use e.id instead of $(e).attr('id') */ elementsarray.push($(e).attr('value')); }); it looks like there isn't a null check in this function before looking at the due date. it's unclear if this error is related to new functionality. apart from this, the functionality seems to work. i could modify the deadlines of assignments.",1.0,1.0,1,101
"in&nbsp;_submitted_files.html.erb file, there's a if-else closure, and the name of method is not much easy to understand. in my opinion you can add some comments for these if-else closure.",1.0,1.0,1,36
they&nbsp;modify the existing test to fix current features. here's a small suggestion. maybe they can write more test for the new features they implemented.,1.0,1.0,1,27
none of the functions is long and&nbsp;there is no need to separate code into methods. it is modular enough. more comments are definitely needed because the&nbsp;code change in core expertiza file is easy to follow but the new js function&nbsp;if had comments would be easy for anyone to follow. the code definitely follows ruby style guides. there is no code that is not dry.,1.0,1.0,1,70
"the writeup is great. the team has really explained the core problem that they&nbsp;have tried&nbsp;to solve and how they approached it. however, the writeup would have been much better if the team would have explained the code in a brief manner as it would have enhanced the understanding&nbsp;of the project. the writeup did not lack an explanation of any functionality of any sort. however, the team could have specified steps on how to check the feature from ui because as an expertiza newbie, i had great difficulty navigating to the desired page.",1.0,1.0,1,98
"overall, the code looks good.&nbsp;the js function is a bit long but the functionality that they are trying to achieve is a singular one so one function&nbsp;suffices. the code has fewer comments so it is hard to understand why the statements were written as they were. the variable names&nbsp;could have been better specifically in the js function since other than that, the team has used the class objects and sql queries to accomplish st feature which&nbsp;will&nbsp;follow proper naming convention. unfortunately, the authors haven't improved the code accordingly.&nbsp;",1.0,1.0,1,99
comments are needed which explain what the code does. other things follow the style guidelines. the methods are short and should be doing what they do.,1.0,1.0,1,26
"the&nbsp;authors have properly attached screenshots of the exact changes made in the files along with a brief description of how they added the code. since the moz projects don't include writing a brand new file, the aspect of design pattern cannot be commented upon. it would be good if the authors explained the parameters and stuff.",1.0,1.0,1,59
"the writeup is good overall however it would have been much more helpful if the team had included what exactly is webassembly and how it is useful in browser engines. due to this,&nbsp;it was a bit difficult to understand exactly what they were trying to do. also, the team could have worked more on explaining the code they wrote. it is not possible to understand the code by just looking at it. other than that, it's proper.",1.0,1.0,1,80
"the page is well-written explaining what their project is and how it integrates with the whole of servo browser engine. they could have simplified the terms so anyone could understand what&nbsp;is web assembly compilation in browsers and why exactly asynchronous compilation is needed.&nbsp;other than that, i feel they have included necessary details and linked to their project page for more details.",1.0,1.0,1,66
no they have no created any test plan. team can test the existing test cases and make new test cases to test the methods which they have creates.&nbsp;,1.0,1.0,1,29
"i really liked the write up by team in how they have showed how to reproduce the issue and explained in greater detail, gave many other project details too. just team should write test cases.&nbsp;",1.0,1.0,1,36
"yes, team has explained well about what test cases they are going to write, and why they decided to write those test cases. though they have not used design pattern. and it would be nice if team can explain about test cases. because some test cases are hard to follow and in order to understand it you will have to understand the background of it.&nbsp; example hyperlinks? what does current stage means?",1.0,1.0,1,73
i agree that the variable names used are quite intuitive but the comments are not included. maybe because they just tried to fix the bugs. it would have been even better if you could describe the logic or action in one line as a comment.,1.0,1.0,1,45
the write-up is good. it is written in good easy to understand language with relevant sections required. it would have been better if they could also highlight the part of code which was earlier and part of the corrected code to easily comprehend the work they have done.,1.0,1.0,1,49
there's a change in the file&nbsp;db/schema.rb&nbsp;where as there's no description about it in the wiki. change in schema should have been explained as schema is&nbsp;the heart of the application always.&nbsp; &nbsp; &nbsp;,1.0,1.0,1,43
they didnt have any writeup but most things are specified in the video . everything that they have implemented has been demonstrated in the video. so just a wiki page explaining the process would be great and helpful.,1.0,1.0,1,37
"if&nbsp;variable copytopics is a boolean then naming it ""copy_topics?"" is more rubistic.",1.0,1.0,1,14
variable copytopics is a string that seems to have 'y' as the only possible value.&nbsp;it might be helpful to&nbsp;keep boolean it instead. copytopics use copy_topic (snake case for variables),1.0,1.0,1,33
usage of bookmark.create!&nbsp;using banged create should be thought of again as banged methods are dangerous.&nbsp;,1.0,1.0,1,19
"the modified code doesn't have comments in some files, which is pretty difficult for the readers to understand. may be a two liner about why a particular method is added or why some of the lines are removes would be useful. also, if the comment includes a hint for the user about the flow of code like before this which file we can look at, might be useful to understand the flow. big chunk of code has been removed and the same has been added and modified. not sure what happened may be github issue. &nbsp; &nbsp; &nbsp;",1.0,1.0,1,99
the write up is very clear and easy to follow. the team has stated what the previous problem was and what did they resolve and what is pending too. the steps for checking the bug is very clear. but there is no explanation about the how did they do it or which parts of the files were modified. may be including the screen shot of situation before the fix and after the fix would be great because it would be easy for the readers to follow and identify the work doe by the team. the team tried to include a video but i guess the link is not embedded properly. it is still a text.,1.0,1.0,1,115
"whatever is mentioned in the write up is clear but as mentioned in the above comments it can be more clear. some screenshots of work or a quick video would be good. also, the process to guide the user to check the functionality can be more clear and in points so that it is easy to follow. mentioning the code files&nbsp; modified in the wiki page and showing a giving a quick glance of code snippets. wiki page isn't sufficient to get the complete understanding of the project so the user had to go to the projects description in the oss document to get more understanding on it. to avoid this, the team can make their wiki page more informative.",1.0,1.0,1,122
the write up could have been better. the team needs to add actual code snippets and screenshots as well as the test plan for the test cases. a video for the test cases can also be added.,1.0,1.0,1,37
there should be examples to test the upload file limits as well. they only added the tests for ta changing grades.,1.0,1.0,1,21
they clearly&nbsp;explain how and why&nbsp;their job were done. but they didn't mention anything about design pribnciples or patterns in their wiki page. maybe they should add some descript sentences about it. &nbsp;,1.0,1.0,1,37
 ) the writeup does tell the work they did and how they did it ) the reason for doing this(user story) are too short and really hard to understand why should they do this ) they used screenshots to help explain the code and there should be more comment to explain also,1.0,1.0,1,50
" ) the writeup overall is good, they explained in detail about their project. like file they modified, the work-paln of the framework ) the size of the screenshots varis, some are too big while some are small. need to be improved ) the reason/user story for this project is not well explained",1.0,1.0,1,51
"code added is very well maintained and written with all principles in mind, but it doesn't include any comments. i would suggest them to add comments even though the code is intuitive&nbsp;",1.0,1.0,1,34
commenting has not been done. adding commenting before the changes would help understand the code better.,1.0,1.0,1,16
"the test plan could have been written in wiki page. currently, the wiki page only explains the ui testing manually.",1.0,1.0,1,20
"the write up does explain explaining everything very well and in brief. however, test plan could have been explained in write up",1.0,1.0,1,22
"&gt; team has updated the tests for the new controller, however i don't see any specific ""test plan"" section about all the changes done. &gt; it would be nice if the team could run the tests all over again after the updates and add some results for the same in the wiki. a screencast or even pictures depicting the test run would be nice. &gt; could not test or consider all the edge cases as there isn't much talk about the test plan. please add more and the results as mentioned above so that more rigorous testing scenarios can be considered. &nbsp;",1.0,1.0,1,104
"&gt; most of the variable/class/method names are fine. however, there are a few that could be improved. &gt; for example:&nbsp;per_page in users_controller, ""foreign"" method in account_request_controller. it does not suggest functionality. ",1.0,1.0,1,35
"&gt; there are a few comments but more can be added. instead of putting a lot of inline comments, team can add comments for specific functions. &gt; besides, there are some commented code lines that should be removed to make the code clean.",1.0,1.0,1,43
" ) the writeup looks good enough for understanding the issue and the modifications done. the issue reproduction steps however, have not been detailed out. ) team could have added a video for the test that they have done or something which could show the fix. ) the second issue fix hasn't been described with enough details. could add few more lines for the description. ) nothing has been added to the testing section of the wiki. also, a ""references"" section could be added.",1.0,1.0,1,80
"&gt; most of the variable names makes sense, however some of them could be improved. for example: ""sfilename"" isn't very clear. &gt; there are some unnecessary comments left out in the code. this should be removed.",1.0,1.0,1,37
"&gt; the cases seem to be working however since the details were not clearly mentioned in the wiki, it was tough to get it working. &gt; please add more details or maybe some sort of flowchart to your wiki so that anyone can easily login to the system and follow the instructions to test the features. &nbsp;",1.0,1.0,1,57
&gt; the writeup looks decent enough however there were a few things i would have liked to be added for more understanding. &gt;&nbsp;testing from ui section only describes what credentials needs to be used. i don't see any flow talking about how exactly the application needs to be tested &gt;&nbsp;a video demonstration could be added which can show the fix that has been done. &gt; fix for the second issue has not been described properly. would have appreciated more information about what and why the change was made.,1.0,1.0,1,93
"&gt; overall the code quality is fine. &gt; however, some of the variable names could be improved. i had mentioned ""sfilename"" but i dont see it getting fixed. &gt; some of the comments are redundant and could be removed.",1.0,1.0,1,39
" ) the writeup looks decent but a lot of modification needs to be done. some of the things have been mentioned without any structure. for example: testing from ui section only describes what credentials needs to be used. i don't see any flow talking about how exactly the application needs to be tested. ) some of the sections like ""references"", ""testing using rspecs"" are missing. ) a video demonstration could be added which can show the fix that has been done. ) the issue has been discussed but any pictorial representation for the same would be great. i can understand the project and what it does but more details or visuals would make life much easier. ) the code fixes for issue # needs more description.&nbsp;",1.0,1.0,1,122
more comments are needed. though for some methods the method name itself is self-explanatory adding comments could've made things easier to understand and more clear.,1.0,1.0,1,27
the methods are not well commented. could've been more descriptive to explain the method's functionality.,1.0,1.0,1,17
more comments are needed to understand the functionality of the method. comments could've been more descriptive,1.0,1.0,1,17
the build didn't pass. the team needs to look into travis ci log,1.0,1.0,1,14
while the static code changes seem to be appropriate. the travis build fails. please look into it,1.0,1.0,1,17
i can see a lot of changes being made and would suggest that the reviewer would gain more insights if you would have mentioned the purpose of adding or altering the code in the form of comments at places where the code has been altered. would suggest that you do the same in the next round of submission.,1.0,1.0,1,58
"the document is systematic to some extent however the test plan is not mentioned anywhere inside it. i would suggest that you jot down the test plan including all the corner and test cases for which the tests have been run correctly. this would not only save the reviewer's time to test already tested edge cases, but also allow him/her to suggest or test some new corner cases.",1.0,1.0,1,70
"i found the comment description to be concise and easy to understand. however, i would suggest that you make use of more comments for the upload file section that you changes the code for. this would make the changes easily&nbsp;understandable&nbsp;to most reviewers and thus save us some time. :)",1.0,1.0,1,52
"the number of lines of code changed is pretty much considerable and i would recommend that you make it much more modular next time. for instance, the java script function written seems to lengthy for a single pass and would be better understood if it were broken down into sub functions instead of having those big block of if statements. the comments would have been more, intimating the changes being implemented which would make the code intuitive to any user.",1.0,1.0,1,80
the edge cases and corner cases have not been mentioned in the document. i would recommend that you mention atleast a few and validate these during the next submission round.&nbsp;,1.0,1.0,1,31
"the instructions to test the working from the user interface only consists of login credentials and the details of student . however, what was expected are the steps needed to navigate to the correct page and test the default functionalities and compare it with how the changes being made affected the current working.&nbsp; moreover, the files modified section contains the entire code which is fine however, i would recommend that you highlight the newly added code or the modified code either with green or some other color (as on github) and paste it on wiki so that it would become convenient for the review to view the changes and not move back and forth between github, expertiza and the wiki page just to view some few altered code.",1.0,1.0,1,128
there are no testing instructions mentioned in the wiki document which is why i couldn't test for any cases. i recommend you to please mention a list of instructions in the testing from ui section during the next submission round,1.0,1.0,1,41
"the write-up looks all well organized except for a few areas that i would like to mention below: . the test plan is not explained illustratively with edge cases. . moreover, the test plan does not elaborate the steps to test the implementation from the user interface (adding screenshots there would have made the testing even more intuitive) and just includes the credentials. . code coverage should have been added which would have helped to gauge the importance of changes being implemented after round .",1.0,1.0,1,82
i think that the task are implemented correctly and the functionalities seem to be working fine. my only concern would be that the test plan should be much more understandable with the help of illustrative images and steps.,1.0,1.0,1,38
"as such, the team did not have to change or add a lot of code.&nbsp;code which is added is fine and readable. variable names are also good and understandable. but, i would like to give a small suggestion. in file ""app/models/assignment_participant.rb"" on line no , the variable name is ""attributes"" which should have been more descriptive name (like ""student_attributes""). maybe ""student_attributes"" can be wrong, but i couldn't understand what attributes they are by looking at the code.",1.0,1.0,1,82
"definitely more comments are needed to make the code more understandable and readable. otherwise, the code is written using proper functions that are small and task-specific. the language is rust and not ruby. so, can't judge based on&nbsp;ruby style guide.",1.0,1.0,1,44
"one pr is already merged and the other pr is having some issues. but since the team is having constant interaction with ""jdm"",&nbsp;i hope they will be resolved and it will be merged soon. if they are not able to do it, i suggest team to take these issues to the final project and complete those steps along with the&nbsp;subsequent steps of the project.",1.0,1.0,1,68
"the newly added code is written by following standard practices. the authors did not have to create a lot of new methods or variables. but&nbsp;i suggest changing names of variables ""maybeurl"" and ""maybesourcemapurl"" on line of file ""components/script/script_runtime.rs"". this names are not good as per as what i feel. why a ""maybe"" in variable names?",1.0,1.0,1,60
"most of the variable names and method names are readable but i suggested the team to change a few variable names like ""maybe_url"" which they have not changed. i feel this must have been their code's requirement to have such variable names. other than that, variable names and methods are pretty straight-forward.",1.0,1.0,1,54
"the system operation cannot be tested from ui because this is&nbsp;a mozilla project. their project was to fix/modify/add code such that&nbsp;webassembly programs can be compiled asynchronously. one of their prs is merged there are positive comments on the pr which is not yet merged. this shows that the features are working as expected. however, the pr maintainer ""jdm"" made some changes&nbsp;in their code and it caused test cases to behave unexpected. i suggest the team to review it asap and find the reason why those tests are not passing.",1.0,1.0,1,97
&nbsp;same comment as last time. providing navigation to test the changes shall help understand better.,1.0,1.0,1,16
"i would suggest to use clear names for the review file being generated, as is the case with the rest of the application (try export in assignments / assignmentparticipants) . the file is named review_scores which is not very indicative (or which scores or what assignment or which student).",1.0,1.0,1,47
some of the methods like 'create_approved_user' and 'create_requested_user_record' are still too long. since this is a refactoring project i fell these methods should also me broken-down/modularized and comments should be added for those methods.,1.0,1.0,1,36
the names are very descriptive are the code looks user-friendly. i feel requesteduser should be renamed to useraccountrequest instead of accountrequest.,1.0,1.0,1,22
some methods like&nbsp;assign_quiz_dynamically&nbsp;are a bit too long and could be refactored by pushing the if-else conditions into a separate function.,1.0,1.0,1,25
"in my opinion, get_team_color and obtain_team_color mean almost the same thing, so maybe obtain_team_color could be better named to reflect its functionality, or maybe rename both. other than this issue, the code seems good.",1.0,1.0,1,34
"the team has done a good job when it comes to naming/renaming methods and variables. the justification for each such action is also clearly stated in the writeup. in my opinion, no_particular_topic still doesn't capture the meaning well enough, it could maybe be renamed to no_topic_preference or something along those lines.&nbsp;&nbsp;",1.0,1.0,1,55
"the code follows ruby writing styles for naming . the business logic is well supported by comments which make it easier to understand the code . this commenting feature was absent in the last submission . however, some code in&nbsp;app/controllers/review_mapping_controller.rb (line onwards) can be split into multiple methods as the method name is doing more than what it is supposed to do .&nbsp;",1.0,1.0,1,65
"comments have been provided in student_task_controller.rb for the tag count feature - however, a similar comment could have been given for the tag counter modifications in grades_controller.rb to make the changes more easy to understand.",1.0,1.0,1,36
"currently, the team hasn't specified any test scenarios or edge cases covered in the project. they can highlight it in the next iteration of the project.",1.0,1.0,1,27
"test plan isn't specified in the wiki page, this can be implemented in the next iteration of the project.",1.0,1.0,1,20
"travis ci: / builds passed. failed due to changes made in app/models/tag_prompt.rb -&nbsp; round_number = assignmentquestionnaire.find_by(assignment_id: assignment.id, questionnaire_id: questionnaire.id).used_in_round one case might have failed since the tag returned the slider instead of id(?).&nbsp; there were no conflicts but there might be other surrounding ui/functionality checks to be completed before merging the code.",1.0,1.0,1,60
code works when tested and changes in count values are reflected upon refreshing the page. the team can probably add some js to make the code not dependent on page reload to show all changes.,1.0,1.0,1,35
"there are original comments for the functionality already present in the files. however, there are no comments to explain the changes made in the code. the team can add comments, especially in the tree_display.jsx file for the one-liner changes and block code added in the file. comments can also be added to the tree_display_controller.rb file in the ""action_allowed?"" and ""confirm"" functions to explain the minor changes made throughout.&nbsp;",1.0,1.0,1,72
the team has not added any test cases to the expertiza project. the code coverage has decreased marginally.&nbsp; the team could have added simple capybara test cases to check for the redirection (test plan ) and to check for ui elements (as a simple test case) in instructor's editing others' rubric (test plan ).,1.0,1.0,1,54
the workflow is documented properly and though there are a few missing sections the overall flow is understandable. the purpose has been explained clearly and there are a good amount of graphs to explain the project use cases. the major and minor fixes done for the project are explained well with the help of&nbsp;code snippets. there's also a screencast of one of the fixed bugs. the team can improve upon the wiki documentation by adding the test plan explicitly and adding the screen recording for the second bugfix (task : instructors can make changes to each others&rsquo; rubrics ).&nbsp;,1.0,1.0,1,102
"though there are flow chart diagrams to explain the expected workflow in the project, there ain't any explicitly mentioned test plan and there are no spec files modified to run the tests. however, this can be modified in the next iteration of the project.&nbsp;",1.0,1.0,1,46
"the write up has been carefully written and it is structured well enough to get a good grasp of the project. the flow chart diagrams definitely make it easier to understand how the code is expected to work and the accompanying code snippets help in understanding the changes made to the code base. lack of a test plan section is one thing that can definitely be fixed by the team in the next iteration. overall, from the introduction to the major/minor bug fixes description has been neatly laid down.",1.0,1.0,1,90
each and every function doesn't have a comment. it is tough for a reader to understand why this method was added. i would suggest writing comments for those functions which are tough to understand.,1.0,1.0,1,35
"it was clear to understand what they were trying to accomplish. they haven't used any design patterns, because they were writing test cases. there was no explanation of what student_task.rb does, so it is tough for a reader to understand. i would suggest writing a short write-up on what student_task.rb does.",1.0,1.0,1,55
"they have created variable named ""participant "", ""response "", but i can't find use of it in the code, so i would suggest removing the unused variables.",1.0,1.0,1,26
"write up was good, i think there should be short description of what student_task.rb does and how it works on the project.",1.0,1.0,1,23
no long methods. more comments are needed to explain the functionality. &nbsp;,1.0,1.0,1,12
"the writeup well explained issue, solution and how one can check/verify the solution with steps. but it does not include the screenshot and test section. also, discuss the way you come up to the&nbsp; solution.&nbsp;",1.0,1.0,1,38
"in the form for adding bookmarks, when user enters invalid url then it flashes notice then it is invalid. functionality is fine but instead after invalid form message user should be provided original form to edit the url which is not shown here. it will me much more intutive. &nbsp;",1.0,1.0,1,50
they did not mention anything about the test plan. i cannot see any test cases. they should have written test cases testing whether the policy has been created or not. they should also write the test case for the backlink. by using the capybara they could have tested whether the link redirects correctly or not.,1.0,1.0,1,55
the create policy feature works as intended but the backlink does not work. on clicking the back link an error occurs that is the recordnot found error. please check whether the assignment id is stored properly or not. i think the assignment id is null.,1.0,1.0,1,45
"the authors did not explain any reason for doing what they did. they did not describe any design pattern or principles if they have used it. as their implementation includes modifying the existing methods it may not involve implementing a new design pattern. for their feature, they could have used a composite design pattern, if possible.",1.0,1.0,1,56
"the writeup explains the problem clearly but they could have explained a little bit about the present implementation and they could have explained their intentions more clearly. yes, i can understand what the project does.",1.0,1.0,1,35
&nbsp;the implementation section shows details of the steps as to why it was implemented. they could have provided more description for each step and what the step was doing.,1.0,1.0,1,30
no tests are added and the existing tests fail. i think for your case if the existing test cases pass that should be good enough.,1.0,1.0,1,25
make the writeup more descriptive and add each step and explanation for the step. i could understand what the project was doing but not completely. add the existing system which improves the understanding.,1.0,1.0,1,33
" ) 'def list' &amp; 'def save_topic_deadlines' quite long. 'def get_status' is also long and has quite many nested if-else conditions. ) according to me, in 'def get_status', 'return' should be a common statement instead of passing it in every if-else block. ) there are several if-else blocks in the code. please add more comments specifying what condition each if-else block covers.&nbsp; ) the code follows the ruby style guide. the team has made commendable efforts in this area. ) there is a lot of code duplication in 'signup_sheet_controller.rb' which could be refactored.&nbsp;",1.0,1.0,1,94
"the write-up is very poorly written. it just highlights the solutions to the issues in one line which is not sufficient. no mention of any design principles or patterns is included. it is very hard to follow the changes you have made if the pull request was not shared. please include more details about the changes you've made in every file (which method, which line, etc). also mention the reason for doing the changes that have been made. if any design principles/patterns have been used, mention the reason why you thought this would have been the best solution.",1.0,1.0,1,101
"comments have been provided in one line wherever possible, but in&nbsp;reports_controller.rb, the newly added code does not have any comments. i would like to make a suggestion, please give a multi-line comment before a method that explains what this particular method does, and a single line comment inside a method wherever required to give details about a specific line that might not be so straightforward to understand.",1.0,1.0,1,71
"the variables, method and class names are properly defined. by looking at the code i was able to get an intuition of what the code will probably do. however, i came across a variable name 'rname' in&nbsp;_review_report.html.erb&nbsp;and i am not sure what that does. please change it to something more human readable, if possible.",1.0,1.0,1,60
most of their code change seems to be in the view action of the studenttask controller. and the function is pretty long. they have included the logic for tag count inside the view function. which means that the function is doing more than what its name suggests. they could separate the tag count to a different helper function and call it in the view.&nbsp;,1.0,1.0,1,65
"some comments are unnecessary which are written for the understanding of the reviewer. changes in the schema.rb file also need not be pushed. more extensive tests need to be written. also, the tests failing the build need to be fixed. but otherwise, the code is dry and need not be done from scratch. i believe this is a good place for a future team to pick up.&nbsp;",1.0,1.0,1,69
they explained how they did it very well. documentation was clear and illustrative. but they haven't mentioned what other design choices they considered or why they did the work the way they did it.&nbsp;,1.0,1.0,1,36
they are checking if an assignment with the same name already exists in the create method of the controller. i think this action can be separated out and that would help keeping the code dry and reduce the size of the method. it would also make the function more transparent since the function will be doing what it's called and not other stuff too.&nbsp;,1.0,1.0,1,66
"i think the code they have written is good enough compared to the rest of the code. however, the add_reviews method is very long and if they can separate out some portions of it to make it more modular it would be better.&nbsp;",1.0,1.0,1,44
"- the write up is clear but not adequate enough - the doc explains issues and what the team did to fix each, but doesn't explan the need for each fix - the doc should indicate which principle was used for corresponding refactoring and what impact the change made",1.0,1.0,1,47
the scope can be explained more. what is done and why it is done can be elaborated.&nbsp;,1.0,1.0,1,18
"there is no mention of the design patterns in the documentation. the documentation was clear enough to understand. some more screenshots, especially regarding the testing scenario would have been more helpful.",1.0,1.0,1,31
the code refactoring of certain methods like get_review_team() does not include comments detailing the functionality. suggest commenting the code also suggest add a line of comment for new variables created and their functionality.,1.0,1.0,1,33
"the code refactoring of certain methods like get_review_team() does not include comments detailing the functionality. suggest commenting the code get_awarded_review_score: the new variable teamid is confusing with another variable team_id. i would suggest using some other variable name. in case the var name is localized, include a comment to differentiate.",1.0,1.0,1,50
"the team has done a good job of documenting the proposed changes along with the reasoning behind the proposed changes.the code embedded using pre tag in the expertiza wiki runs over the page and is not&nbsp; visible. i would also suggest setting the flowchart image to center of the page. i would suggest to combine the refactoring changes for same reason eg: abc complexity, into one group as this would simplify the reviewing process even more.",1.0,1.0,1,78
"get_awarded_review_score: the new variable teamid is confusing with another variable team_id. i would suggest using some other variable name. in case the var name is localized, include a comment to differentiate.",1.0,1.0,1,31
"while there is no link for testing from user interface, pulling their github repo and rebuilding the expertiza into vcl i was able to test the functionality. i would suggest the authors to setup a vcl instance.",1.0,1.0,1,37
"the write-up details all important aspects of the project. however, there are certain problems with structuring. the code and flowchart both are flowing out of screen. also i would suggest rearranging the refactoring changes into categories of similar problems:for instance abc complexity. the authors have also included certain unnecessary sections like the travis-ci build testing&nbsp;which is redundant. the screenshots for rubocop testing can be aligned in a better way to include side by side sections for code and results",1.0,1.0,1,84
"the team has done a good job of documenting the proposed changes along with the reasoning behind the proposed changes. however, they have not mentioned the design principles they have used. also, there are certain changes like the ""created a variable named &lsquo;allowed_actions&rsquo; in method choose_case(action_in_params)"" &nbsp;is proposing a new logic for implementing the code rather than refactoring. i would&nbsp;suggest to make the documentation detailing the issues and subsections as problems and proposed changes. this would make it much simple and easier to understand the wiki.&nbsp;&nbsp;",1.0,1.0,1,94
"the deployed version on heroku does not work. however, pulling their github repo and rebuilding the expertiza into vcl i was able to test the functionality. i would suggest the authors to update their heroku projet or setup a vcl instance.",1.0,1.0,1,41
the newly added code has been added to existing methods: consider creating new methods with detailed comments. this makes reviewing the code harder and is not suggestive of the functionality of new code. creating a new method by name : check_ta_access or something like that makes understanding much easier.,1.0,1.0,1,48
the modified code does not include comments. the newly added code has been added to existing methods and needs to be separated : consider creating new methods with detailed comments.&nbsp;,1.0,1.0,1,30
"the authors have implemented the test cases in rspec file, however, the documentation does not include a detailed analysis of the testing plan and would highly recommend updating the documentation",1.0,1.0,1,30
app/controllers/submitted_content_controller.rb&nbsp;: rename type to uploaded_file_type as it is more suggestive. the newly added code has been added to existing methods: consider creating new methods with detailed comments.,1.0,1.0,1,31
"in app/controllers/grades_controller.rb and app/controllers/student_task_controller.rb, huge pieces of code is added. it could have been better understandable with more comments. also, see if they can be shrunken in size.",1.0,1.0,1,34
" . documentation is fine and mentions everything they have done so far. . though everything is clear, they should've mentioned reasons for&nbsp;whatever they did. (for e.g. issue :refactor participants variable in load_add_signup_topic). they could mention refactoring is done because of so and so reason.",1.0,1.0,1,46
" . seems they've changed a name for a method, then the travis ci failed and they again reverted back to the old name. this long route could've been skipped if they would've run rspec locally before pushing the changes to git. . there are some more times where they've done the same thing. but that shows they've attempted to do some changes.",1.0,1.0,1,65
" . they could've mentioned how the methods work. but since their job was to just refactor, they've done the documentation part very clearly. . only thing i would like to suggest is that authors should think of adding some snapshots of the work, which helps the reader to better understand the changes made.",1.0,1.0,1,53
 . almost every change they made is reasonable and doesn't attract any ambiguity. . changes to the variable names followed by comments would help to understand their use. (for e.g. paginate_user&nbsp; doesn't&nbsp; give hint about what it does). &nbsp;,1.0,1.0,1,42
"&nbsp;the documentation is written well enough, also listing the missing/unimplemented parts. they however do not mention why they chose to perform the counting in the back-end(grades_controller.rb &amp;&nbsp;student_task_controller.rb), as doing it on front-end would have been faster and the user would not have had the need to refresh the page to see the updated result.",1.0,1.0,1,63
"- it needs more comments on what the line is doing. - added new column in the table which should have been the last resort for an app already running on production. there is a column dropdown that has a boolean value as well. they should've tried to use that field only and try to fix the issue of why it was not working. instead, they added on to the code. - if there was a reason which they faced while using the same column they can write that in the wiki for future reviews.",1.0,1.0,1,93
"-&nbsp;too&nbsp;many commented lines of code in the prs. this pr needs refactoring before being merged to avoid the future task of refactoring. - i am not too confident about adding another column like&nbsp;use_dropdown_instead i suggested in my previous review to get rid of db changes as another column dropdown is already available. they also didn't explain the need to have this redundant column. - the name with postfix instead is confusing as it suggests that there is another column like do_this for which they have do_this_instead - also, the column name should be a noun",1.0,1.0,1,98
- convention in `describe` not used in many&nbsp;places. they have used '.' in many places for instance method when they were supposed to use `#` with them.,1.0,1.0,1,26
- problems in naming convention in the `decribe` block. should us '#' instead of '.' for instance variables. - increase in code coverage in the screenshot attached but the pr shows otherwise may wanna understand how they defer.,1.0,1.0,1,34
- very well explained but i am already using and working on the app but a new user may not grasp it so quickly. adding more details about student tasks apart from their method name would really be helpful. example: xyz(): used to create a user&nbsp;,1.0,1.0,1,46
the write up does include a very well detailed test plan. test plan shows how automated testing&nbsp;passes all the existing test cases&nbsp;as well as how manual testing for the team's feature implementation can be done. no newly added test cases exist for the new code written by the team. new rspec test cases can be written to test the newly added functions.,1.0,1.0,1,67
"reasonable and meaningful names have been given to the newly added functions. not a lot of newly added&nbsp;the variable/method names can be improved by following some convention, like `camelcase` or `using_underscore`",1.0,1.0,1,34
"( ) long methods can be broken down. in some cases, methods could have been extracted from existing long methods. such as in case for&nbsp;peer_review_strategy function &amp; assign_reviewers_for_team ( ) code has not been extracted to separate methods appropriately (as in case of create method) ( ) comments have been added in some places but when new functions are created, more comments&nbsp;are required to make following the code easier ( ) the code does follow the ruby style guide. ( ) code is dry &amp; does not have any smells apart from long methods at some places and&nbsp; &nbsp;",1.0,1.0,1,94
"the authors did not had test plan but they had deployment example, so if instructors are expecting section test plan they should rename it.",1.0,1.0,1,24
yes the writeup is actually good and concise.also the diagrammatic explanation is good.but they do lack the screencast of there feature&nbsp;,1.0,1.0,1,24
overall writeup is good but while explaning the ui glitch/ui path error that authors have solved could be explained with more accuracy as there is ui path problem explaining problem with bullets like how to go to that specific page and what will happen would be more helpful. as current explanation in sentences which is more verbose and confusing. like the said if you are on assignment tab but how to go to the assignment tab.,1.0,1.0,1,77
the writeup is well written but there is no screencast for nd task. also as said earlier bullet point approach for explaining ui path would be more helpful.,1.0,1.0,1,28
"after reading through the code, a lot of the things did make sense, but when first reading the wiki, the same wasn't the case. adding a high-level understanding of what the code does, especially in the model/questionnaire.rb and also how refactoring was done on the create method would definitely give a better understanding of the code and problem statement.&nbsp;",1.0,1.0,1,64
&nbsp;there is one test in the test plan. it tests for creating assignment with an existing name. this may be tested by previously existing test (although i couldn't see it) but there should be a test for testing if a default name for assignment can complete successfully.,1.0,1.0,1,49
no test cases are created by the team. i think they should test some of the methods that they have implemented.&nbsp; they wrote in the wiki page that they have modified the already existing test cases but it is not visible in file_changed in the pull request.,1.0,1.0,1,48
"no comment here. eventhough the code is clearly, but i think it will be better if they write some comment here. well done !",1.0,1.0,1,23
"i think it is better if there are more comments in the code, which is more easy to follow. but it's also good to follow in the current file, good job !",1.0,1.0,1,32
i can understand the project clearly by their writeup. i recommend you put more details of modifications that you have made to the project. what did you do to fix the bug? why the changes?,1.0,1.0,1,35
"there is no test plan section. i recommend you have a section that tells how to get to the page you are working on expertiza system. for the hard code part, did you add all of these codes? or did you revise any of them? please state what did you do and why. &nbsp;",1.0,1.0,1,54
"not really.&nbsp; for issue , i am confused about what it means. i can understand issue for a little bit by reading the instruction.&nbsp; if you can post some screenshots about how to get to the page you worked on.",1.0,1.0,1,41
in the _add_topics.html.erb the expected_fields in the form contains a lot of &amp;nbsp which makes the code looks bad,1.0,1.0,1,22
"there are some commented redundant code, which could be deleted&nbsp;",1.0,1.0,1,11
overall it is good. it can be better with test explained.,1.0,1.0,1,11
they explains their work well with detailed codes step by step. it will be helpful to get included some screencast when running the program,1.0,1.0,1,24
"the naming of the variable and the methods is great, partily because the code uses a lot of variables which already have. and there is a glitch, if the&nbsp; validates_format_of&nbsp; &nbsp;is validates_url_format will be better i think. the code&nbsp; validates_format_of :url, :multiline =&gt; true, :with =&gt; /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z - ]+([\-\.]{ }[a-z - ]+)*\.[a-z]{ , }(:[ - ]{ , })?(\/.*)?$/ should have same comment.",1.0,1.0,1,66
"there are no comments anywhere in the code, and when adding a new file (view/checktopicscopy.html.erb), it is expected that comments are written to better help understand what exactly is being added.&nbsp;",1.0,1.0,1,35
" . the function methods don't seem to be too long . code is being refactored and divided into different methods and onto different files, which makes it clean.&nbsp; . as answered above, the comments are missing, and having to read code is becoming tedious. please do add comments to make code easier to read.&nbsp; . the code does follow ruby style guide, with right practices for views/models/controllers.&nbsp; . code is pretty dry and well written.&nbsp;",1.0,1.0,1,77
"it shows that files have been changed and i personally feel the following after going through the changes:&nbsp; . the gemfile.lock file ideally should not be changed, unless documented or requested upon doing so. this file basically contains the versions of each gem and changing it might alter behavior in production, on a running expertiza application, which might cause the application to behave differently.&nbsp; . the test cases (rspec) when writing it ""xxxxx"", you don't have to mention the method name again, as it becomes redundant. redundant because the method name ideally is used when writing the clause for describe. we usually say - describe '#getname"" (for example for an instance method), and it ""returns name"" or whatever, so writing it ""returns name from #getname"" is basically redundant.&nbsp; otherwise, the code seems fairly dry.&nbsp;",1.0,1.0,1,137
"comments are missing, and i believe would help in understanding what each method call is doing and why existing code has been changed.&nbsp;",1.0,1.0,1,24
"though a test plan section is not present, the manner in which the project has to be explained is clearly written with screenshots. pre conditions, such as the csv file and sample data is also being shown, which helps in testing. the only issue is the rspec file used for testing the application is missing in the document, which would've helped. also, mentions such as what happens when anything other than an email is passed, and what is the exception handling being used could've been mentioned as well.&nbsp;",1.0,1.0,1,91
"the author clearly shows screenshots of the code changes after pull, showing the code has from what it previously was. the problem is also explained briefly before digging into code changes. but a more descriptive explanation of why such changes had been done to those specific files would've helped in the reviewer understanding the code, and the approach taken to solve the issue. like for instance, why a line has been commented out in the mailer.rb and not removed completely? so, in the writeup instead of just mentioning file changed: &lt;&lt;file name&gt;&gt; , more description in regards to the same would've been nice.&nbsp;",1.0,1.0,1,110
"&nbsp; though what exactly has to be tested has been clearly shown with screenshots, the rspec file that is used to run the automated tests is not present in the document. maybe adding that will help in running these test cases to check for consistency in the code, and also coverage?&nbsp;",1.0,1.0,1,52
"the scope of the project is understood from the document, and how to test it on a high level is also clearly shown with screenshots. my only issue is the specifics. code changes and why code has been changed the way it has, can be more explicitly shown, which will help later down the line, when the code is merged into production. also, maybe explain on the line you have mentioned in the document below:&nbsp; ""issues were found in some parts of code as highlighted by the snippets shown below"" what issues were found and how were they fixed? that would definitely make the document more specific to the issue being solved.&nbsp;",1.0,1.0,1,114
codeclimate has listed out issues which are detailed enough and can be made with relative ease. this will make the code dryer. ruby style guide needs to followed more.,1.0,1.0,1,29
some edits are only adding indentation (for example: app/controllers/assignments_controller.rb). this should be fixed to make the commits better and merging easier.,1.0,1.0,1,24
"write up should have some code snippets explaining the functionalities added. without this, it becomes tough for the doc to remain coherent. the functionality and testing part is explained in good details. some screenshots would greatly improve the overall doc.",1.0,1.0,1,40
the writeup does not have an explicit test plan mentioned. it does have some commands for testing. the testcases that have been used are not explained. i would suggest that add custom testcases and write a bit about them in the test plan section.,1.0,1.0,1,44
"first of all, there uploaded no links for pull request, so i just checked most of their commit and their final merge to the base repository, for the purpose to look at their code quality. it looks like they handled most of the names in their codes perfectly, where everthing they created was just as natural thought. there&nbsp;seems to be one problem, that both ""email_all_reviewers"" and ""send_mail_to_reviewer"" exist, in which ""email"" and ""mail"" can cause a misunderstanding. however, this could be due to a historical reason, thus it wouldn't be changed.",1.0,1.0,1,94
"maybe implicity is one feature of the servo project, so they did not write down any comments inside the whole block of codes they added. but i still recommand to add some comments as a special reminder in some cases.",1.0,1.0,1,40
"most variables seem fine. can look into renaming variables like selmenuitem to selectmenuitem, selmenuitemind tp selectmenuitemindex, rubbuffer to rubricbuffer.",1.0,1.0,1,19
"no comments have been added. some variables are named in shorthand, like&nbsp;rubbuffer&nbsp;should be rubricbuffer.",1.0,1.0,1,18
"the documentation is fairly complete and explains what, why and how it's done. test plan can be added to make it complete.",1.0,1.0,1,23
"even though all the tests and bots have passed, this project might not get merged as this team has committed schema.rb. the changes in schema.rb don't seem relevant to the project. a commit was made with message 'original schema'. also, the code needs a bit of refactoring as mentioned in the next question.",1.0,1.0,1,56
"a lot of variables have been named in shorthand. like cur_due should be current_due, ques_array should be questions_array.",1.0,1.0,1,18
"the create method in assignments.controller is huge and could benefit from refactoring. in the previous review, i found some variables that needed renaming. these variables are still left as it is. &nbsp;""a lot of variables have been named in shorthand. like cur_due should be current_due, ques_array should be questions_array."" &nbsp;",1.0,1.0,1,52
"the methods look fine and have separated logic as expected. however, it is possible to refactor instructor_id method in user model.",1.0,1.0,1,21
the code displayed on the wiki has some functions that are huge and could benefit from refactoring.,1.0,1.0,1,17
the functions are pretty self explanatory. they could have added some comments for the javascript function.&nbsp;,1.0,1.0,1,17
the assignment create function is very large. it could be broken down into smaller modular parts. they could have truncated the lines after column length as per the style guide,1.0,1.0,1,30
no new test case have been written. could have aded a test case for csv upload and mocked mail behaviour or added mail check in existing test scenarios.,1.0,1.0,1,28
"project is short so documentation is short as well, however, more info/descriptions about the work done would help to review it better.",1.0,1.0,1,23
"though the code follows rub style,there could have been more comments added,separate methods could have seemed even better.",1.0,1.0,1,20
"the writeup explains the problem statement.so,it explains as to why they are working on this project.what and how they have worked on the project is explained.but,this could have been explained considering individual issue and how it is solved&nbsp;",1.0,1.0,1,44
"the code looks good in terms of the function complexity,names etc.but there could have been comments put for better understanding of the code",1.0,1.0,1,25
"no, there are no comments which make it difficult to understand the code properly. i think comments can be added that would make it more readable.",1.0,1.0,1,26
"more comments are needed, because you have trouble following the code. rest of the things works properly.",1.0,1.0,1,17
the write up doesn't include the name test plan but the content include the test plane and is well described. i think the code modification can also be mentioned so that we don't have to look for the code changed or added.,1.0,1.0,1,44
the name are suggestive of the functionality and&nbsp; defines the variable methods and class name clearly. there is some redundancy in the code that can be avoided. the gemfile is changed and it shouldn't be unless mentioned. it may affect the website.,1.0,1.0,1,44
"not really. i understand the way mailers work in ruby so it wasn't hard to follow, but if i wasn't experienced with them i would be lost looking at this code. comments are definitely needed.",1.0,1.0,1,37
some names could be completely spelled out to be more concise but are shortened for some reason. things like cur_date should be current_date or rev_res_map should be review_response_map.,1.0,1.0,1,28
" . they&nbsp;wrote a lot about what to do of the bookmark functionality, however, there is nothing about the solution and how they fix these issues.&nbsp; . i cannot watch the video in which there's a video link on the wiki page. . please add the code part to show what files you changed and the details about the code. . please add the test part like the rspec test.",1.0,1.0,1,69
there is no test plan on both the wiki page and github.&nbsp; please add the rspec test&nbsp;and&nbsp;convert them to automated tests. &nbsp; &nbsp;,1.0,1.0,1,28
"for the reviewers as me, i am not familiar with this project like the author, and i cannot clearly understand the detailed function of the bookmark from the information of the wiki page. also, as i mentioned above, there's no code and test parts which makes the reviewers feel harder to do the review.&nbsp; suggestion: please add more detailed content on the wiki page including test and the explanation of the code.",1.0,1.0,1,74
"the witeup indicates that the task is to refactor the usercontroller. the writeup includes the expertiza background, the abstract of what they should do in the project and the results of their work. i think the abstract section can be extended. they can write what they should do in the project in details. they can list all the task included in the project. they only included the refactoring task, but there are other tasks like invoking the paginate_list method in the right location. they should include all the task they need to do. also, a section that describe how to test the project in ui should be included in their writeup.",1.0,1.0,1,111
most of the things are covered in the document only a bit more effort in uml and scenario where a student submitted a public review and want to make it private should also be added with details.,1.0,1.0,1,37
"design document looks good, its easy to understand, although they have given alot of details which are not required for a design document. but good thing is they have mentioned about all issues in assignment , related all of them from expertiza github and gave solution/ approach to solve all of them, which makes it easy to understand and not get confused.",1.0,1.0,1,61
"yes, they include test plan. however, their test plan seems a little messy. i think they can split unit test and ui testing. and then adding some screen shot for the expecting output.",1.0,1.0,1,33
"they used a flow chart to show the process of their function. however, i think they should include more details and steps in their flow chart. they can also add a diagrams to describe the changes they want to make.",1.0,1.0,1,40
"i think their only use case diagram seems a little unnecessary. as the diagram provides not enough information.&nbsp; besides, they may need a uml diagram in their design document. for they change a lot of things in controller.",1.0,1.0,1,39
"yes, they include test plan, but a little shallow. first, they should improve their ui testing part, which will help reviewers to find whether their functions work. second, they can split their rspec test into view test and controllers. or they can classify rspec test with different functions, which will looks more clear. &nbsp;",1.0,1.0,1,54
"very detailed url diagram; but seems the use case diagram is unnecessary, since the data flow diagram already include all these steps.",1.0,1.0,1,22
need to add files which need to be modified and added; test plan should include more details.,1.0,1.0,1,17
the modified files not included; not show design pattern; new design may potentially increase the response time of the system (add additional questions) &nbsp;,1.0,1.0,1,24
"&nbsp;the use case url is too high-level description, need more details",1.0,1.0,1,13
"yes, they have clearly problem statement, implementation with design&nbsp;strategy but lack of design pattern; test plan is good, but need more description with the ui test.",1.0,1.0,1,28
should have a more precise problem statement; lack&nbsp;dexcription about ui test; should show the files need to be modified. &nbsp;,1.0,1.0,1,22
"they proposed only test related changes in the test plan section. also they did not explain in detail apart from adding two spec files about what will be the content of the test file or what cases they would test. for example, they could have added test case like that check whether correct edit assignment page renders on click of back button.&nbsp;",1.0,1.0,1,63
"overall, the design proposed is good and nicely structured. but, there are certain gaps that i would like to mention the design does not much say that what approach/metrics they will use to track time. they just told they will add new fields to track the time but did not disclose further about the number of fields or will they use any existing library functions to track time like ""time.now"" class or will implement their own class to track time with different helper methods. also, what if user clicks on new tab in middle of tagging activity. according to flow diagram this situation cannot be handled as it may happen that user spends less than minutes actually tagging but overall spend more time in viewing other tabs. you could track if user moves to other tab by tracking the focus of the window. refer link&nbsp;https://stackoverflow.com/questions/ /javascript-to-detect-if-user-changes-tab also there is nothing mentioned on the reason behind keeping the threshold for minutes.&nbsp; ",1.0,1.0,1,174
"in the section: &nbsp; why does the difference is the representation matter? &nbsp; since they have modeled the problem on the same lines, they have used the same version of the gale-shapley or top trading cycles algorithm used for one-to-many or one-to-one approach. famous problems dealt on these lines. &nbsp; the above lines could be explained, since everyone might not have a background of understanding the algorithm mentioned. it would be better if they can include a simple overview of the algorithm&nbsp;",1.0,1.0,1,88
 this web service must either be called from the lotterycontroller or a new controller can be created on the same (if lottery controller becomes too complex). this doesn't follow requirement s specified ,1.0,1.0,1,33
"the writer has included&nbsp; diagrams along with the below lines &nbsp; the mathematical formulation is itself wrong in e and e and they have used the below shown diagram to represent the relationship. though this serves as visual aid, it's misleading as the process the diagram describes is wrong",1.0,1.0,1,51
"in the topic, approach for matching students with topics the variables used both the variables are&nbsp;different but in the lines that follow ""calculate k, p|, and p|. the goal is for each topic to be assigned to either p| and p| students"" the variables appear similar.&nbsp; either the variable names&nbsp;can to be changed in picture or appropriate documentation should be present further these variables must be defined before use &nbsp;",1.0,1.0,1,75
"from a student's perspective: because he/she does not have to spend a lot of time understanding what is going on. the student would be more focused on giving the review and hence judgment made tend to be more objective than subjective. this would improve the quality of reviews and will also be helpful for the reviewer. also, bidding in fun&nbsp;!!!!!!! the bullet points in purpose can be improved",1.0,1.0,1,71
"the test plan can be elaborated to include how they plan to test in addition to what they plan to test.&nbsp; for example, testing that the color-coding feature is working and appropriate. testing the color-coding feature is understandable, but can include how they plan to conduct test to check if color-coding feature is working or not also the testing for ""appropriateness"" is abstract",1.0,1.0,1,67
the team listed the files in controller and models that might be modified during this project which is clear. more details or explanation may be helpful if how they are going to modify the code or what will be added/deleted about the code could be provided.,1.0,1.0,1,47
"yes, the design includes the 'test plan' section. the section basically provide the direction what the team is going to do on this project but may need more details or explanation. more details may need to be provided for rspec test and ui test respectively. &nbsp;",1.0,1.0,1,46
i dont remember seeing a mention of external flask service in the earlier draft. just not sure if this service needs to be an external application in itself deployed on an independent server. creating a new application can raise a lot of potential issues for maintenance. can this logic not be embedded into existing expertiza application? does the logic of matching qualify to be an independent service? i hope you have taken into consideration all these factors.&nbsp;https://webmasters.stackexchange.com/questions/ /what-qualifies-as-a-rest-web-service&nbsp;here is a link that might be helpful in deciding.,1.0,1.0,1,101
"the test plan is not detailed enough. it should mention the functions/files that will be tested. also, if a new service is being introduced, it needs to be tested independently, with its unit tests as well as integration tests for the entire application. the test plan doesnt cover this.",1.0,1.0,1,50
"the design pattern diagram was useful, but it didn't help me understand how this pattern fit in with the project. the wiki says that there are ""multiple handlers with responses"", but i'm not sure what exactly this means regarding the project. it would be helpful to connect the pattern more to an in depth description of the applicable functionality. the&nbsp;code modified section lists what files will be changed, but not which methods. it should give more details about what the changes will be. this would let the reader understand how the design works with the code. for instance, what method will be called when the team reaches %? since the new design is event driven, response time shouldn't be slow (polling isn't required to check the team's size constantly). similarly, it doesn't look like any class changes will make the code smelly, but is hard to tell without details about changes to the classes/methods. i think the project is&nbsp; supposed to focus only on assignments without topics. however, the project description states ""assignments with or without a topic could be assigned with mentors automatically"".&nbsp;",1.0,1.0,1,194
"the ui screenshots, flowchart, and chain of responsibility diagram were all helpful in understanding the design. i would add a uml to help the reader better understand the intended code changes better. since there are no ui changes, no new ui mockups are needed.",1.0,1.0,1,44
"the test section says that&nbsp;new rspec and ui tests will be added, but there are no tests provided. these should be added to the wiki. apart from this, the design, testing, and purpose sections all exist. i would just add a test plan that checks if mentors are assigned once a team has filled up halfway.",1.0,1.0,1,58
there is not a design proposed outside of the approach proposed in the given requirements. there should be a design section that talks about what classes and methods will be updated/added. this will need to be more than part of the requirements; the design should talk in detail about the plans for implementation.,1.0,1.0,1,54
"not very simple. in order to make it more clear to others, they provide much information about their issues, plans, tests, designs and so on. my suggestion is that maybe you can make it a little simpler though it is good enough.&nbsp;",1.0,1.0,1,43
yes. there's a test plan. but they don't show exactly what kind of test will they do. maybe unit test or ui test?,1.0,1.0,1,25
" . no, classes looks correct&nbsp; . what design they are going to follow is not written thoroughly, team has just mentioned about files to be modified and the issues in the file . design or issues does not look that complicated to be resolved.&nbsp; . new design wont effect the response time of the system.&nbsp; . yes, team should have spend some time and gave more details about design.",1.0,1.0,1,67
"not enough content to evaluate this question. there's no mention of code changes or the files changes anywhere. please include it all in the next review. the models you'd be touching, or the schema tables, just include a snapshot of the same.",1.0,1.0,1,44
"there is no uml diagram. they have included a vanilla diagram, stating really general things like analyze the code, make the corresponding changes, test it etc. milestones could have been more detailed as well.",1.0,1.0,1,34
"testing plan is fairly inadequate, it tells what files would be changed, wherein it should be telling of all the different edge cases, explaining the handling. the ui driven testing segment should be a stepwise traversal on the urls that'd tell the user how to test if the code is functioning as expecting.",1.0,1.0,1,54
some sections need more information to be added e.g test plan and proposed solutions should be more detailed.,1.0,1.0,1,19
no in-depth details of the design pattern have been included in the wiki page. i suggest the team to include more details.,1.0,1.0,1,23
the authors need to work more on explaining the design strategy in more depth and elaborate on the test plan section.,1.0,1.0,1,21
the test plan does not give a step by step plan of ui/manual testing. i would recommend the team to add this.,1.0,1.0,1,23
"there's no design as such explained in the project. rather the expected results are given in the proposed solution. please include how will you guys approach to solve these issues. also, why that would be the best way to do that.&nbsp;",1.0,1.0,1,43
"changes proposed are good but team should&nbsp;add few more details: . in the solutions, stars are proposed for the question type but i don't think that's the best way to do it, this will does not give the liberty to have any fraction for the question. a slider from to would be a better option or a number input.&nbsp; . will there be any info icon to for the reviewer to know that s/he has to consider the fraction based on the other team members, as if by mistake reviewer submit % for one team member then it will&nbsp;not be possible to provide any fraction to another team mate.&nbsp; . this change is not only for the reviewer but also for the instructor. none of the details are mentioned about the instructor flow&nbsp;",1.0,1.0,1,139
"uml and er diagrams are given but uml&nbsp;should include multiple reviews for team&nbsp;members as the fraction of the cake type question will be shared across multiple reviews. er is given for the tables but how the exactly the database will be used here is not explained in the doc? how the fraction will be calculated what all tables, fields will be used?&nbsp;",1.0,1.0,1,67
"the changes are explained properly. they have given the details of the approach&nbsp;in detail but the ui details are missing. team could add the ui details more specifically, like why the existing star component is efficient. though i think it can be replaced by a slider.&nbsp; also, the ui details for the instructor are missing, how these changes will impact the user experience for the instructor. kindly include it.&nbsp;",1.0,1.0,1,73
ui details are missing. it would be great to include&nbsp;the ui changes for the instructor and reviewers that how the cake question type will look like? i could see details about stars but i think this will does not give the liberty to have any fraction for the question. a slider from to would be a better option.&nbsp;,1.0,1.0,1,61
"design include manual the test plan in detail but short with the automated or rspec test cases. they should include where the test cases will be added and what test cases will be added in order to ensure that the functionality is working as expected. line ""we will be adding unit / integration tests to all the files we modify.""&nbsp;should be removed from the doc as it doesn't add any significance, instead test cases or meticulous test plan with rspec should be included.&nbsp;",1.0,1.0,1,86
"there's no proposed solution in the document, how the team will approach to fix all these issues with the current implementation. in test plan, team has mentioned that they'll create test files but what all test cases will be written in that is not mentioned anywhere.&nbsp;there are no details for the manual or ui testing.&nbsp; please include the proposed solution how these bugs will be fixed, also uml or er diagrams can be added to understand the design more appropriately.&nbsp;",1.0,1.0,1,86
test plan is too verbose. trivial areas can be trimmed off.,1.0,1.0,1,11
"the design documentation lacks the proper description of code changes and test plan as well as the uml diagrams. the team needs to work on the documentation and add diagrams, file names which will undergo changes and comments for the same.",1.0,1.0,1,41
"yes, the design appear to be sound, following appropriate principles and using appropriate patterns. but test plans can be more detailed and can point the files which are going to be changed.",1.0,1.0,1,32
"their introduction of requirement and the method to accomplish function is great. but their test plan is synoptic. i think they should add more detail. for example, they could list the test cases. &nbsp;",1.0,1.0,1,34
"yes. the design incorporates all of the functionality required. by the way, the link provided in the question is spring 's final project requirement. maybe ta should correct this error as soon as possible.",1.0,1.0,1,34
" ) overall is very good, each part has been explained in details ) it would be better to have a diagram for the whole solution ) anonymizing team names could have more explaination",1.0,1.0,1,30
" ) changes they proposed are mess ) for the front-end, the description is not elegant and hard to catch the point ) for the back-end, only few files mentioned that may need to be modified ) it would be better if they could describe changes generally then separate to front-end and back-end",1.0,1.0,1,52
"authors could have included a gist of formula proposed so that reader has the option to choose between reading the entire document, currently readers have to read the document to understand what's going on.",1.0,1.0,1,35
"i feel the design&nbsp;flawed&nbsp;for calculating the self score &nbsp; in the document following is mentioned ""the self score is an indicator of how much you know your work. basically, self score of means that the average ratings matches with the self review rating. it is worth noting that self score will be out of . the lowest self score can go is . this will happen when one of the score (either the average rating by peers or self review rating) is and other one is maximum."" &nbsp; the bold part is what concerns me, formula is self score = - (avg - self) / max rating. since it is mentioned that either avg or self ratings can be , let's consider the scenario where only avg is this means&nbsp; the self score actually increases. if only self is then self score is only when avg rating = max rating.&nbsp; &nbsp; hence i urge the team to look closely into the formula if what they want to achieve is mentioned properly&nbsp; &nbsp; moreover i feel diving by avg rating will be a better choice as it'll be a wider distribution",1.0,1.0,1,191
there is a link given in the document to another document which gives the details of&nbsp;gale-shapely (supposedly algorithm in question to implement). it would have been helpful if a gist of the document was mentioned in the wiki. team could have included a flow chart or a diagram explaining different domains and their responsibilities for all of the proposed changes. initially&nbsp;it was hard to comprehend what exactly their changes are going to be as the changes proposed are embedded in the problem statement and challenges,1.0,1.0,1,90
"there are diagrams included to explain why existing system is wrong, but the team could have also included diagrams to show the approach they are planning to use.",1.0,1.0,1,28
"for most part, the design does include all of the functionality required but, all of the details are listed under&nbsp; what needs to be done? &nbsp; though background is detailed the approach for implementation is not. the team has mostly focused on what is wrong with existing solution rather than striking a balance between what is wrong with existing solution and what is the approach.",1.0,1.0,1,66
"the test plans have not been discussed in the write-up. in each scenario that they have mentioned, they could have written the different test cases that they are proposing to write.&nbsp; example -&nbsp;scenario : author(s) get emailed when a reviewer has reviewed their work, they can mention the test cases and the plan of testing how is the author getting email.",1.0,1.0,1,64
"the design is simple however, it's still undergoing, more stuff would clearly explain the design that the team is trying to implement. for example in below steps: . add another file for a supplemental questionnaire and save them to the database. . add a method to get the corresponding supplemental questionnaire and to add questions into the existed questionnaire.they could mention what will the file contains and also what will the method name be and the input and output.",1.0,1.0,1,79
"the authors did explain the changes that they are proposing but it is a very high-level view, more details could have been added in the various sections.",1.0,1.0,1,28
the design document is almost complete but more diagrams could have been added here to better explain the stuff.,1.0,1.0,1,19
"i like the way the test plan has been mentioned. it's concise and clear. it wasn't clear on how will they test this line: there should be no link for the ""supplementary review questionnaire"" for team members or reviewers if the instructor disables this section in assignment creation page.",1.0,1.0,1,51
"the team has not used the visualization tool in a good sense, they have used only one use case diagram but that is a very high level. more efforts could be put in there to add more visual diagrams.",1.0,1.0,1,39
"&gt; although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed. &gt; the explanation is a bit vague and needs to be improved.&nbsp; &gt; also the proposed solution just has lines which does not contain an elaborate explanation for the changes and why they are being done.",1.0,1.0,1,56
"&gt; the ""files which are modified"" section is blank. please add the name of the files which you might be tweaking. &gt; new design seems to be fine however more description is needed to understand if it would make the code smelly or not. &gt; design seems to be straightforward. &gt; i don't see any claims for the performance improvement. &gt; i don't see the design needs more effort however definitely add more details.",1.0,1.0,1,76
&gt; just one use case diagram has been added which is very high-level. &gt; please add more diagrams or mockups of screens etc.,1.0,1.0,1,24
"&gt; the design does appear to be simple. &gt; the changes proposed seems minimal and enough to cover all the requirements. &gt; however, the exact number of changes and classes to be tweaked has not been mentioned, which doesn't help in verifying if there could be more optimal solutions.",1.0,1.0,1,50
&gt; the design appears to be vague and doesn't talk alot from technical perspective. &gt; would have appreciated if more details were added. &gt; nothing has been mentioned about the patterns that they are using.,1.0,1.0,1,36
"&gt; yes the design seems complete and includes all the requirements. &gt; however, the description could be more elaborate.&nbsp;",1.0,1.0,1,20
"&gt; although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed. &gt; the explanation is a bit vague and needs to be improved. &gt; also the proposed solution just has lines which does not contain an elaborate explanation for the changes and why they are being done.&gt; although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed. &gt; the explanation is a bit vague and needs to be improved. &gt; also the proposed solution just has lines which does not contain an elaborate explanation for the changes and why they are being done.",1.0,1.0,1,110
"&gt; the design has problem statements, proposed changes mentioned however a lot of things can be improved. &gt; more explanation should be added. &gt; please add more diagrams for easier understanding. &gt; please add classes that you might be tweaking.",1.0,1.0,1,40
"&gt; the design does include a test plan the basic functionalities testing have been mentioned covering most part. however, there could be more scenarios missing. &gt; however, the edge cases have not been mentioned enough. they had added ""to be continued"" in the first phase of documentation but haven't done any changes since then.",1.0,1.0,1,55
&gt; they have added a use case diagram which appears to be a little too simple and not explained enough. &gt; i would have appreciated if more diagrams could have been added supporting the proposed changes and how they would help.,1.0,1.0,1,41
"in the documentation they've mentioned adding in the cake type as a star rated question, could this be more intuitive? a -star rating doesn't let me distribute them evenly, say between two members. could i rather put in a percentage number directly? not sure how if this can be done, but try show the previous rated contributions as well with the member names? more details needed on how a warning would be displayed on the ui as well.",1.0,1.0,1,80
"the uml diagram is too high-level yes, for instance, the instructor adds a question and sets its type while designing the rubric, which would be 'cake' in this case. the uml doesn't include this flow, nor does it provide any detail as to if this can be done. trivial, but an arrow has been tagged incorrectly, team a (a specific team) should be connected to the student. also, uml don't include if-else blocks the way you've put, or do they? db snapshot helps.",1.0,1.0,1,88
"as mentioned previously, the changes proposed by the author is to the point and clear. however, there are some sections that need to be even more elaborate. include a brief summary of the tests for each of the features being changed/ implemented. make use of flow chart to explain how the bidding algorithm works or write down what's happening in an algorithmic form. avoid using links and include the content in your document as well.",1.0,1.0,1,76
nothing was explained about the alterations to be in the current code and the files that need to be modified without which not much could be commented on whether a wrong method was added or whether the code looks 'smelly'.&nbsp; the document just gives a brief idea of the project and does not focus much on the code implementation part.,1.0,1.0,1,61
"the mapping diagrams clearly explain the cardinality of the entities so great job on that! however, i would also recommend that you add some project specific use case uml diagrams as well as database design schema which would make the implementation even more elaborate. the test plan really looks highly abstract and i would recommend that you give a brief description of each of the tests which would also benefit other reviewing users. also adding some annotated screenshots is a must. &nbsp;",1.0,1.0,1,82
the document looks complete in all its aspects except that it should be a little verbose at places mentioned in the above comments as well as some images should be added for better visualizations and understanding. make a tentative list of the files that would be changed or altered during the process. if possible also give a gist of the changes made in each of those files. &nbsp;,1.0,1.0,1,68
"the test plan looks decent as of now however i would suggest that you also add the exact steps in testing from the ui. moreover, include edge cases encountered (during the implementation) and also make a note of how these cases are being handled by the altered code.",1.0,1.0,1,48
"the flow chart under 'expected results' gives a decent bigger picture of how things would look like when the implementation is all set and done. however, i feel that again there should have been a detailed explanation about the files and methods being changed and how this would affect the current implementation.&nbsp; as mentioned in the previous reviews, the section under project scope appears to be vague with not much details about the estimated code alterations.",1.0,1.0,1,77
the team has given a high level overview for most of the requirements. a few details explanations can help the reader understand the project better.,1.0,1.0,1,25
the changes proposed by the author are clear and the test plan looks to be nicely designed. just one problem is that they have not considered inter dependecing between those use cases. team can add some more tests covering multiple use cases in one to test them.&nbsp;,1.0,1.0,1,48
"visual aids could have been a little better. the textual explanation is great. converting it to some uml diagram, may be a sequence diagram would have been excellent.",1.0,1.0,1,28
"the design document has become very unorganized to follow through efficiently, post changes made by the team for round . request them to structure it in the way it was for round . i would suggest to include more details on the design strategy. the results seem to be incomplete. i am not able to understand what the team wanted to achieve by looking at the screenshots.",1.0,1.0,1,65
"more details could be included on how the team actually plans to implement the solutions. lots of step by step details are included for the manual testing part, which makes it clear for the reviewer to expect such kind of test cases. appreciate the flow diagrams as well, although in issue # , i believe that whether the ta has access or not must be checked before he/she is allowed to make changes to the assignment (the action should be a click on a button perhaps, instead of remove assignment from course, as that is what we want to restrict) . perhaps some rephrasing would help.",1.0,1.0,1,104
"the organization of current implementation, problem statement and improvement seems good. the goal of conveying what the problem is, what the approach would be and what the desired outcome should be is clearly conveyed. the methods to be added should&nbsp;be named better. more details on the anticipated code changes could be included.",1.0,1.0,1,54
the authors have explained the problem and the solution in great detail but i think they could have been more specific with regards to what steps they plan on undertaking.,1.0,1.0,1,30
"the test plan for ui testing is simple and clear as well. my issue is with how the team has described writing tests for code changes, as it is quite brief. for instance, they could elaborate on what their plan is when writing new rspec tests.",1.0,1.0,1,46
"the authors have incorporated all the functionality that have been mentioned as a part of design document . the descriptions in the problem statement are crisp, however, these descriptions can further be improved to include the importance of the functionality to the users and the potential effects or in conveniences faced.eg in anonymised team name section, the authors can mention about the reason why anonymizing is required and how it not implementing it can breach privacy.",1.0,1.0,1,76
" the authors have done an excellent work of using visual aids for describing the proposed system . it helps in getting a clearer view of the proposed system behaviour. the flow chart however, does not mention about the the changes that will be made to the system. this could have been done using uml diagramd &nbsp;",1.0,1.0,1,55
"code changes flow is a little hard to understand at first. i would suggest to put&nbsp;some explanation on how and what should be changed in the code file. also, how they propose to change the files is not mentioned.",1.0,1.0,1,41
there is no mention of how the test plan will be carried out. appropriate mention of patterns&nbsp;along with screenshots of the system could be more useful to understand.,1.0,1.0,1,30
yes they have incorporated&nbsp;most of&nbsp;the functionalities in their document. however they have not said anything about how are they going to test the running time of api. one suggestion from my side is to use postman to find out the average running time of api. there is an option in postman which is titled monitor. there you can find the average response time of your api.,1.0,1.0,1,70
 ) the flow of their approach to solve issue is clearly explained but&nbsp; the testing plan and how what are the final result that will be outcome of this changes should be explained in more detailed way.,1.0,1.0,1,37
 ) diagrams representing relationship (one to one and many to many ) is quite clear and good to understand the issue.&nbsp; ----------- ) check for spelling message like in why should a student bid for reviewing submissions? this would benefit both the reviewer and reviewer&nbsp; instead it should be reviewee.,1.0,1.0,1,48
 ) diagrams are good to understand what the issue is and how they gonna resolve it. ) the second diagram&nbsp; (mathematical formulation) should be more detailed as the difference is&nbsp; not clearly visible on first view.,1.0,1.0,1,36
the overall design looks good and follows all the appropriate principles but does not mention anything about the design patterns to be used for the implementation. please mention the design pattern which they are following already or you are planning to implement.,1.0,1.0,1,42
the test plan should include automated testing as well as manual testing. the test plan provided is not sufficient it just gives list of scenarios. include the test files which will be modified and also different scenarios for testing.,1.0,1.0,1,39
i was unable to follow the changes required to be made to the code. include the code which has to be changed and also the files which has to be changed. this gives a clear understanding. they have mentioned the algorithm to be implemented but do not give an overall view for the approach.,1.0,1.0,1,54
the design document does not involve any uml diagrams. they have used a diagrammatic approach for explaining the implementation of the mapping.&nbsp; please add uml diagrams explaining the design approach.,1.0,1.0,1,31
their design gives us the basic details about the problem and how the problem can be solved but does not explain about the internal implementation of the exact code changes required. the design requires improvement and it does not contain about the design patterns.,1.0,1.0,1,44
the design document requires the addition of the uml diagrams and database design to explain it in a better way. other details are included but elaborate on the testing plan to be done.,1.0,1.0,1,33
the testing does not cover all the functionality and include automated test plan for the implementation. explain in detail about the tests. the existing test section does not test the bidding part in all dimensions.,1.0,1.0,1,35
"no, they did not use any uml diagrams to explain the solution or the changes to be made. use a class diagram showing internal changes to be made to the system.&nbsp;",1.0,1.0,1,32
the changes proposed by the author are pretty much the changes recommended in the project document. nothing different was evident from it. i would recommend you to add more low level details regarding the changes you're proposing.,1.0,1.0,1,38
 ) looks like they've identified the class they need to make changes to. ) the design doesn't look smelly. ) they have incorporated gems that make the code simpler. ) i think the design could increase the response time of the system. ) sufficient effort has been put to identify the changes. more clarity will be achieved when they start implementing those changes.,1.0,1.0,1,60
"rest of the document is okay but i feel, the test plan section could be improved significantly. only lines have been written about the unit tests. you could include all the details regarding the test cases. for instance, when you say ""we will add a rspec test in each controller which tests our new methods, such as have_file_added and have_link_added."", add details regarding what these tests will plan to validate?",1.0,1.0,1,70
"just one paragraph has been written regarding implementation of all the functionalities. it would have been better it this was better organized. also there is no mention for how these functionalities will be implemented, just a vague description is given. please mention any design principles or some logic for it.",1.0,1.0,1,50
"the design document can be improved significantly. the project purpose has been copied from the project description document, the design can also be improved by including detailed plan behind the solution. a detailed plan can also be given regarding the test plan.",1.0,1.0,1,42
- the team has incorporated most of the functionality required - the writeup must explain whether all the ta could review all the assignments or particular assignments would be assigned to certain tas eg. tas focusing on mozzila projects may not reviewing expertiza projects.,1.0,1.0,1,42
"basic tests are mentioned. however, tests are shallow, could have included more edge cases and descriptive tests that are going to be written in rspec.&nbsp;",1.0,1.0,1,26
"the design appears to be sound. design&nbsp;description could probably have included more data about the design patterns and the flow controller in the controller because functions themselves are not descriptive. -the design doc is pretty well explained. the project purpose is listed in an easy to understand way, and changes proposed for views and controllers&nbsp;look comprehensive. -the spec test cases could have been defined in more depth.&nbsp; - not sure how summary of reviews is fetched, apparently it already exists. could have dwelled upon this a little more to give a glimpse of the design.",1.0,1.0,1,99
it appears so. most of the problems to be solved that are described in the problem statement &nbsp;have corresponding solutions in the proposed approach. the test plan could have been more descriptive and more test cases could have been included.,1.0,1.0,1,41
"all of the system design things are explained in the flowcharts and uml diagrams. but, more textual description to describe would be better for the reader.",1.0,1.0,1,26
"they have provided links for the previous implementation which is nice. also, diagrams describing one-one and many-many are also good to understand. there are certain mistakes of spelling like reviewer and reviewer, which should be reviewer and reviewee",1.0,1.0,1,40
"&nbsp;the plan is quite good but more explanation on how they are going to solve it is required to judge the pitfalls in the system, if any.",1.0,1.0,1,28
the second diagram (mathematical formulation) should be more detailed as the difference is not clearly visible on first view. some other diagrams can be included,1.0,1.0,1,25
"the activity flow diagram is given detailing the logical next step at each and every stage. however, save review is missing in the diagram and is abstracted using a first-time-review? which is not how expertiza works as the review which is submitted once can't be edited. there is a field 'is_submitted' in review map for each review[use that]",1.0,1.0,1,62
"test plan has been improved and now includes automated rspec testing along with the travisci. however, the rspec testing is abstract at this point and ""we will add a rspec test in each controller which tests our new methods, such as have_file_added and have_link_added."" is too vague. they have identified an edge case that assignmentid exists, but i think this is already being verified in the code base.",1.0,1.0,1,68
the issues in current implementation have been explained very well. although not much is written about their plan and what changes they are going to bring in. it would be great if the team identified parts of code related to the present implementation and at least build around what they plan to change and where&nbsp;,1.0,1.0,1,56
"diagrams have been added to explain the relation between reviewer and reviews, which is good. however, additionally, a flow diagram would have really helped to understand their thought and approach.",1.0,1.0,1,30
"overall, it is a good document. some details need to be added in all sections of the document to help the reader understand that the team has a clear plan of implementation. &nbsp;",1.0,1.0,1,33
"yes, the team has provided some diagrams which help to understand the system better. however, a flowchart would have been a good addition to consolidate all the ideas laid out",1.0,1.0,1,30
"the team has added details about ui testing.&nbsp; for automated testing, more information could have been provided on which parameters need to be tested in accordance to the changes they plan to implement.",1.0,1.0,1,34
the team has provided a usecase diagram which is laid out well. although a flowchart would have been great to understand the flow of the functionality,1.0,1.0,1,26
- no uml diagrams related to this particular change provided.&nbsp; - a diagram showing the probable state diagram of what should happen with the change. example: the problem is not able to get named getter so showing the flow of thing reaching to this step before and after the fix would help us understand the issue a bit more.,1.0,1.0,1,58
"- nothing related to the implementation was provided. they should at least mention the probable file changes. for this, they can refer previous implementations to get a basic idea of what and where changes need to be done.",1.0,1.0,1,37
- needs more uml diagrams. - i would love to see some basic details on the implementation -&nbsp;they can explain a bit more about the algorithm they are planning to use and why it is better.,1.0,1.0,1,35
"- i like the&nbsp;language they used to explain the changes but some of the stuff seems like they are making stuff up to add more lines to the documents. for example, they used check whether cors needs to be enabled for calling api. this doesn't make sense and doesn't need a separate set of tasks to be listed. simple concept: in the frontend, if you are calling anything other than what belongs to your domain you need cors in the backend you do not.&nbsp; suggestion: check the response time of the rd party api. if it is small write a wrapper in your rails code to avoid cors issue which you will surely face if you are doing it in the frontend.",1.0,1.0,1,126
"yes, the design appears to be sound. but the proposed implementation in issue . to make authorization helper file does sound fishy as it can be checked through if conditions or i suspect expertiza should have the implementation of checking whether the user is course staff member so i don't think it is necessary to create new helper file. also, they suggested adding field name hidden which i think is a very bad name for the variable. here hidden is used to indicate if the user is hidden or not which is not indicative in a variable name. so i suggest the name to change to is_hidden_participant or something like that.",1.0,1.0,1,111
"no, the flow chart is wrong well actually it is according to there previous solution where the instructor or ta is a participant. there current proposed solution suggests adding a ""hidden"" field (which again is bad variable name) check if it is on or not. so i suggest changing flow chart. &nbsp;",1.0,1.0,1,52
the images are too big and the ext between subsequent image is really small.so it makes hard to read the doc and if we are already making video about showing our implementation why show images?,1.0,1.0,1,36
there are some design decision which i think might make code smelly like the loop in the flowchart to check if is any tag tagged is done in javascript frontend or they check it using querying because that would put a load on the server and will make website slower. also in testing they said about gaming the timer like the opening website and doing other work in a different tab. this can be done by checking if the user is in the tab or in another tab. i found a nice stackoverflow link which might help you&nbsp;https://stackoverflow.com/questions/ /check-if-my-website-is-open-in-another-tab this data might ensure that the user is paying attention to tagging and not using other tab or spending time on other websites.,1.0,1.0,1,135
"no, the design does not appear sound. they first said there have to be metrics to decide if tags are reliable or not but how they will calculate what will be the metric what parameters they are at least considering. i suggest parameters like the time between successive reviews, time spent on the current tab. also there main emphasis to decide if the metric is reliable or not is ""time"" that still does not fully solved th problem whether the tagger is write or not which is the ultimate problem. i suggest to look at this article&nbsp;https://roamanalytics.com/ / / /on-the-viability-of-crowdsourcing-nlp-annotations-in-healthcare/&nbsp;here they used expectation maximization algorithm to decide whether the given tag is written or not.&nbsp;",1.0,1.0,1,128
design document does address all the aspect of the issue but still i think they should add more about the solution instead of just writing what files that they are going to change. if they add some description about files then it will be easy for anyone to review.,1.0,1.0,1,49
the test plan section is really impressive. they have complete test section including all cases with really details explanation.,1.0,1.0,1,19
"yes, they have test plan. more info of your each test plan is needed. the test plan is too short for each case. and bound case if you have any.",1.0,1.0,1,30
diagram of uml is good. but i want to see a user diagram which demonstrate your functions and relations in the flow.,1.0,1.0,1,22
"test plan are not complete. besides, it will be better if they can imply the files need to be changed.",1.0,1.0,1,20
the syntax can be arranged better to make it easier to read. there shouldn't be any introduction on expertiza. it is better to have ui test.,1.0,1.0,1,27
"yes, the wiki does cover all aspects of the design that is to be changed, and includes all the functionalities that are to be achieved. one of the requirements was also to avoid the use of global variables in the code, and i feel that the new instances or instance variables that will be introduced can also be mentioned in the document. this would definitely showcase how that specific requirement is also being fulfilled. maybe this could be incorporated in the ""code changes flow"", wherein, instead of just arrows pointing to the data flow, it can also show the variables being introduced.&nbsp;",1.0,1.0,1,103
"more details on the ui would've been nice. by this i mean, more insights as to how exactly would the design be achieved from a user's stand point? would the others work be disabled or not shown to the student, until the self review is completed? if so, then how is this going to be achieved on the ui? a wire frame for the same, with more technical implementation changes would've helped in understanding the end to end picture of what exactly is going through the authors mind, when designing the project.&nbsp; but otherwise, on a high level, the overall picture seems to be clear from my point of view.&nbsp;",1.0,1.0,1,115
"the tests are shallow, and hopefully the team will incorporate the rspec testing too, once development has begun. (or already done so, if development has begun)",1.0,1.0,1,26
"though a proposed solution is given for each issue, what exactly is being changed is not clear enough. by this i mean, what files around the existing files are being considered, what technically is being changed, and an understanding of what other files are dependent on the files being changed is not clear.",1.0,1.0,1,53
the use case diagram wasn't extraordinarily helpful. it basically just summarized what was said in the above section. it may be more helpful to have a diagram that walks through how to do these things from login from each user's perspective.,1.0,1.0,1,43
"there are no figures that would describe what the user interface should look like once it is done. that being said, its not strictly necessary because it is fairly easy to imagine without it.",1.0,1.0,1,34
"they have added two charts, used case diagram and data flow diagram, into the documentation. both are necessary for comprehending. however, there needs to be more charts showing ui of related funtionalities.",1.0,1.0,1,32
"all are helpful and useful to take a clear look at the correspondant content. one advice is that, because the main reason of showing the current view is to compare with their expected view after implementing, it would be better to place the figure of current view right next to the figure of view after improvement.",1.0,1.0,1,56
"for the approach , they could add more explanation with design diagram.",1.0,1.0,1,11
"though the authors talk about the designs,they donot specify as to which methods they plan to add,in what class etc.so, that can be explained better.",1.0,1.0,1,28
yes there exists uml and such diagrams in the documentation that explain the overview of the proposed changes.the naming could have been a little more relavent,1.0,1.0,1,27
"as i have mentioned above, the changes can be made in test plan and they can add the files they are planning to change or any file they will add.",1.0,1.0,1,30
"there could be more visual aids, honestly. they describe a lot of stuff thoroughly about the existing design but having visual indicators would be helpful to those less familiar with expertiza.",1.0,1.0,1,31
"the user diagram could be made easier to read, in my opinion. i believe leaving feedback on it in round , but i cannot specifically recall. the numbers can be quite confusing and the way it is structured (visually) makes it clunky to read - not to mention the graphics themselves could be done much better in a program like lucidcharts or draw.io.",1.0,1.0,1,62
"they did draw the diagrams for each issue, but there are some suggests. . for issue # , the diagram they draw is not so necessary. .&nbsp; issue # should not just have use cases diagram, but also need the data flow diagram.",1.0,1.0,1,39
it is simple and easy to read. but it looks like the doc is too simple to explain their whole design of this project. it would be better if there are more detailed solutions.,1.0,1.0,1,34
"yes, changes are explained adequately, however, i think it is too simple, they should mention more detailed solutions and test plans.",1.0,1.0,1,21
"most parts are pretty good, they have all the parts including problem statements, project design, code change, and test plan. the thing i think they could do better&nbsp;on test part, e.g. they should write more detailed steps about the manual test.",1.0,1.0,1,44
"they add a visual aid to their profile email preference problem to explain how it works. it is clear to understand. but i think a line between ""author"" and ""review"" should be added since author should see reviews. and they can add visual aids to their other problems to explain their plan more clearly.",1.0,1.0,1,54
"the figure show the flow of ""review update and notify reviewer"" clearly.&nbsp; but it seems that there should be a line between the ""author"" and ""review"" since the author can see reviews related to the work.",1.0,1.0,1,37
"the code changes flow diagram shows the files they plan to change. but they can add more details about how they plan to do the work.&nbsp; for example, ""display the composite score on the &ldquo;view scores&rdquo; page."" is the result. it would be better if they write specifically how they plan to display the composite score.",1.0,1.0,1,59
they have a code change flow diagram that shows what files they plan to change. but they didn't write how to change the files and what method they plan to change or add. it would be better if they write more details about how they plan to change the code.,1.0,1.0,1,51
they wrote the test plan in their design document. the test plan is a little bit abstract. it would be better if they list the test files they plan to add test to. and they can add more details about testing from ui.&nbsp;,1.0,1.0,1,44
"i only see name, phone number and address&nbsp;when i try to&nbsp;edit admin account as an admin.&nbsp;i would suggest you to add email and password fields (hidden).",1.0,1.0,1,32
"when i click on 'register for course', it asks me to 'create new catalog' by selecting a course from the course drop down. it would be better if you change 'create catalog' to 'register' as it is more relevant. also, it displays 'catalog was created successfully twice'. it would be better if it is displayed just once. &nbsp; since, i can't view registered courses, the teachers are not able to remove themselves from a class.",1.0,1.0,1,76
"yes, student is able to edit his/her own profile. however, the message ""teacher was successfully updated"" is displayed twice. it does not affect the functionality but it&nbsp;would be better if it&nbsp;appears just once.",1.0,1.0,1,38
"i want to sign us as a teacher but there is no option of 'signing up as' when i am signing up. when i sign up with a teacher email id, i get a 'welcome student message'. please put a 'signing up as' field in the sign up section.&nbsp;",1.0,1.0,1,50
yes&nbsp;the student has an option to select a teacher once he has registered for the course but there is no option presenting in the drop down if there is no teacher registered to that course. &nbsp; it would be better to have an option stating no teacher available or not to show the course if there is no teacher available.,1.0,1.0,1,62
only able to login with exact string comparison. a suggestion would be to set the email comparison non-case sensitive&nbsp;,1.0,1.0,1,21
tests for the following could be added as part of the plan initialize_chart_elements,1.0,1.0,1,13
"most of the writeup is good, but there is a distinct lack of testing information. please add a test plan section",1.0,1.0,1,21
writeup has plenty of images and code snippets but very little text. i would have appreciated more content around your rationale.,1.0,1.0,1,21
some more comments for the code changes would be helpful.,1.0,1.0,1,10
the code has small methods with appropriate comments before each function. i would suggest to make the comments a little more descriptive.,1.0,1.0,1,22
"good except can't go to deployment with that error, add a flash to catch it and ready to be put in production",1.0,1.0,1,23
"as you say in your wiki, if the assignment doesn't have any reviews, there is an error. why not throw a flash when that happens saying no reviews to view.",1.0,1.0,1,31
"the view report function works well for the assignment ""s final project (and design doc)"". the wiki page said if there is no report for an assignment it is expecting&nbsp;encounter&nbsp;a rails error. it is not a good idea to let error to handle this case. maybe the error could be checked and redirect.",1.0,1.0,1,57
no there are not much comments in the added code,1.0,1.0,1,10
i understood what the goal of the project was however there is not much explanation in the wiki page as to what function is doing what before the change and after the change which was a bit harder to follow.,1.0,1.0,1,40
i understood what the goal of the project was however there is not much explanation in the wiki page as to what function is doing what before the change and after the change which was a bit harder to follow. thus how the code does it is harder to understand.,1.0,1.0,1,50
i could not manually test because the link to the deployed app was not working. looks like you used vcl and i used nohup in order for my link to constantly be running on vcl.,1.0,1.0,1,35
"coding principles are followed well, but doesn't have comments explaining implementation.",1.0,1.0,1,12
no rspec tests written. only pull request does testing automatically.,1.0,1.0,1,10
"it would be better to write some comments about&nbsp;self.concatenate_all_review_comments(assignment_id, reviewer_id) in response.rb, as well as&nbsp;self.get_volume_of_review_comments(assignment_id, reviewer_id)",1.0,1.0,1,25
code is concise and appears to be focused on functionality which is good. the code is easy to follow even without having every part explained (it would be good to add some more comment anyway). the code is well split into blocks as well.,1.0,1.0,1,44
the group clearly stated the what the issue is and what tasks need to be accomplished in their wiki. based on the wiki and commits i am not clearly sure what functionality has been added so far without actually looking at the code directly. it would be good to add a test plan section with proposed tests for coverage.,1.0,1.0,1,59
the tests written go beyond those stated in the tasks which is good (just need to update the wiki). there are conditionals to test based on implemented code as well as several test cases. a good chunk of these have been written in the rspec so far.,1.0,1.0,1,47
there is no explanation for the code committed or the approach taken. the clearest explanation given is for what problems need to be addressed. these variables could be longer to better explain what they are: rev_res_mapbody body &nbsp; &nbsp;,1.0,1.0,1,39
"no test plan as of yet. there are many conditionals in the code you implemented, make sure to test all possibilities to gain positive coverage.",1.0,1.0,1,25
some variables in tree_display.jsx are written in camelcase and some in snake_case. i think it should be consistent.,1.0,1.0,1,19
"there is a lack of detail, i feel like i am still missing some information. for example, the project introduction and goal is kind of vague. also, the code examples provide no explanation, i do not know what i am looking at. i recommend adding some description and explanation to each modification you made. same thing for tests. i like how you all provided screenshots for your result section, provides a better understanding of what you fixed.",1.0,1.0,1,77
"overall, code is written well. a lot of the comments describe the change made rather than explain the code, that might be confusing for the next developer who picks this up. some new methods are missing comments. not sure if ""preference_home_flag"" is a good variable name.",1.0,1.0,1,46
"documentation is good. it would be nice to get a little more explanation of the before/after code snippets. for example, why is the after an improve to this functionality.",1.0,1.0,1,30
the test plan on the writeup only contains a screenshot of the reputation_web_controller_spec.rb file; i would think more testing would be needed/wanted to be displayed here.&nbsp;,1.0,1.0,1,29
coding style is good. meets and follows ruby style guide and expertiza format. maybe add some detail to shorter comments ( -line comments). dry code that is concise.&nbsp;,1.0,1.0,1,28
"there are a few functions that are fairly long that could be split up to make the code clearer. calculate_peer_review_grades ( lines) send_post_request ( lines) - you mention that you split this up into encrypt_request and decrypt _request, and while lines is better than , it is still too long but most of the code looks good!",1.0,1.0,1,53
"i don't think it is ready to be deployed since the manual ui testing was unsuccessful and resulted an error. another concern would be that the code coverage for&nbsp;reputation_web_service_controller.rb is only at . %, this would be alright if manual testing was successful but as is it makes me concerned about the robustness of their code. i do think that they made good progress and it appears they had it working at one point so i would say this would be a good starting point for a future team.&nbsp;",1.0,1.0,1,92
their documenation is very thorough in what they did and how they did it but doesn't have a lot of high level information on their project and what the files they edited actually do for expertiza. adding that information on the functionality of review mapping helper will give the remaining understanding of their project.&nbsp;,1.0,1.0,1,56
"testing assignment:&nbsp; &nbsp;final project (and design doc) mar , - : am aug , - : pm aggregated comments by rubric question caused the following error: &nbsp;comment summary by reviewee (team) caused an error (shown in additional comments because i kept getting errors when trying to put it in this answer) based on their documentation i'm unsure if these errors are outside of the scope of their project or not. the rest of the reports work well!",1.0,1.0,1,75
"a lot of their information is very thorough. more high-level information would be good to help understand the scope of the project. the description of project section mainly talks about the goal to refactor and doesn&rsquo;t mention the functionality they are working on. files modified adds more information on what their project has to do with, but i was still unsure about the final scope of the project. is the project relating to all reports for an assignment or just certain types of reports?",1.0,1.0,1,87
"the test plan currently gives ui instructions to test the code; however, there are no new rspec tests documented or referenced.&nbsp;",1.0,1.0,1,22
"no ""test plan"" section and no tests added. some tests should have been added for the new methods, especially the ones broken into two. i will note that the travis ci build passes.",1.0,1.0,1,33
the code explains clearly the issues that were being addressed but is poorly formatted. this poor formatting takes away from any explanations of changes and clarity of code functionality. the attempt to clearly explain is present and with some formatting corrections i believe this page would receive full credit.&nbsp;,1.0,1.0,1,50
"there could be more comments, but the test descriptions do a lot of the heavy lifting in this area.&nbsp; it would be useful to be more consistent with the comments, especially in explaining the blocks of each test.&nbsp; some have multiple, while others have none.",1.0,1.0,1,47
"the writeup spends a lot of time on the code for the test cases, and less time on the explanation.&nbsp; additional detail would be useful, especially in explaining images / code snippets and the team's reasoning.",1.0,1.0,1,37
"test plan in documentation is vague. check more preconditions and edge cases, seems like the create test and update test only have a single case.",1.0,1.0,1,25
"great job, only suggestion&nbsp;would be to talk more about design principles and patterns in your documentation",1.0,1.0,1,18
"again, no comments, lots of committed code that was commented out. need to not commit lines that are commented out. overall just seems like it is still a work in progress.",1.0,1.0,1,31
definitely go into more detail on the documentation about how you plan to test the application . seems very high level and vague.,1.0,1.0,1,22
" user 'admin' has been added to seed.rb team has changed readme.md to include name of members, this should be reverted accordian.html.erb has been changed, i guess they tried to fix it, but fix has not been documented and doesn't look correct.&nbsp; (%w[super-administrator administrator].include? current_role_name) || %w looks to be a typo. ",1.0,1.0,1,59
the biggest concern would be whitespace issues and failing build. the code contains useful commits which remove unused code and make it easy to understand,1.0,1.0,1,25
coursenode.create_course_node doesn't look reasonable. i would have preferred if it were just coursenode.create,1.0,1.0,1,16
comments are missing for update_max_or_min. if this were private it would not have been an issue.,1.0,1.0,1,16
names are intuitive enough. i think&nbsp;update_max_or_min&nbsp;should be private method.,1.0,1.0,1,13
"expertiza background is required. it&nbsp;makes article lengthy&nbsp;and can be removed. description of project and assignment participant model, both of them have similar if not same content. motivation and&nbsp;functionality of model should be in different sections.&nbsp;",1.0,1.0,1,42
create_radio and create_checkbox are no longer being used yet they have not been removed from code base.,1.0,1.0,1,17
"the writeup mentions the problem, why it is a problem and how authors intend to solve it. however the problem statement should mention all of the issues in a list form and solutions should correspond to this list, this would make it easy to track. the solution doesn't show what code corresponds to it this can be done using screenshots. i don't see that this has been done in pull request,&nbsp;create user requested record. splitting up the views has confusing wording, by views do you mean html files? i don't see any new html file. is it that you are mentioning current and history? if yes this is something which is not present in pull request. limit self introduction should say that styling has been added instead of saying limiter. the comment above rd screenshot in result says files this should be users instead.",1.0,1.0,1,149
heading should include the word refactor else it doesn't make sense. does not mention team members. doesn't mention files modified. problems with readability of document.&nbsp;,1.0,1.0,1,28
"good coverage, but i'd have liked to see a test with a negative result expectation when params given were not right. another test could have tested the warning mentioned in the issues.",1.0,1.0,1,33
yes the team broke down the methods and the&nbsp;rspec tests used to test the models and controllers of interest. i would recommend adding more to the testing ui section.&nbsp;,1.0,1.0,1,32
the team provided a lot of detail in the write up. certain parts of the write-up did feel a little wordy. however this project did appear to be quite large in size. i was&nbsp;able to understand for the most part what the team was attempting to accomplish. i would&nbsp;recommend breaking up the&nbsp;sections within the wiki into smaller sections. the assignment participant model section is confusing because you start talking about a controller.,1.0,1.0,1,79
yes i can understand what the project can do for the most part. i would recommend including links to your repo&nbsp;and the deployed app within your wiki. the scope of this project appears to be larger than other projects.,1.0,1.0,1,41
"the company has followed most of the good ruby and rails coding practices. i noticed that you have hard-coded option values for gender, disability etc.. it would be better to use enums here instead of hard-coding values, as there would be lesser code change in the future if you decide to add more options.",,1.0,1,56
"the code follows good ruby on rails coding practices. the code implements most of the functionality. the code was maintained properly in git. however, there are some functionality issues that i have come across during my review process. they are points to improve ) the job seeker is associated with a company by default which needs to be changed. ) the recruiter&nbsp;was not able to see the applications that the job seekers have&nbsp;applied.&nbsp; &nbsp;",,1.0,1,77
"the team did a nice job recording a step-by-step video, and adding instructions on github. in general, the ui is pretty intuitive, and&nbsp;it is easy to navigate within the team's web application.&nbsp;&nbsp;however, i'd like to give some suggestions that would add some improvements to their ui: adding drop-down lists for&nbsp;employment type adding a neutral option choice for race,&nbsp;veteran status,&nbsp;disability status (""decline to state"", for instance) ",,1.0,1,81
 more functions need to be covered for this test case to cover % of the code. would have preferred if the team mentioned in the write up the difficulty they faced in testing these two methods.,,1.0,1,35
the project is based on testing and the team looks to have covered many test cases. you can include a section explicitly called test plan just so that reviewers can put a tick mark on that criteria,,1.0,1,37
"the team explains in great detail about the menu items, which is the focus point of the project. the sections table explains the database entries. instance methods and class methods are explained which makes it easier to review code. the team has clearly stated the issues that the project aims to solve and also explained them in sufficient detail. the screen captures to show the menu items gives context to the explanation provided. however, i feel that there is some extra information on the wiki as well. as this is a wiki page for the project,i would suggest putting the information about test driven development and unit testing as embedded links or maybe at the end of the document as it is does not serve as an introduction to the project but rather gives a background to the project. i have similar views about the section in the document - expertiza environment setup. setting up the environment again is not the main function of the project.however i do agree that it helps someone who is completely new to the expertiza platform",,1.0,1,182
the write-up is well documented and the issues are elaborately explained. the problem statement is clear enough to understand. they have clearly stated what is achieved and also proposed solutions to the unresolved issues. suggestion:write up could include code snippets of the chnges that are made making it easy for the reviewer to follow the changes.,,1.0,1,58
commit was made after the last round. but there are very few commits overall. the authors need to be more frequent with the commits to&nbsp;prevent loss of work.,,1.0,1,30
"the authors have given a very detailed introduction to their project. they describe the testing process, problem statement and plan of work in great detail. the authors are required to add rspec for&nbsp;menu_items.rb model.&nbsp;the explanation of the tdd process can be shortened and a wikipedia link can be provided instead.&nbsp;the page can focus more on the project details.",,1.0,1,65
"the readme file has mentioned some of the work that the project seems to perform. the team has also uploaded a youtube link of their work which is more helpful. i feel some description that they have mentioned in the youtube video could have been added to the readme as well so that the reviewer dooes not have to go through the whole video to understand a part of the project. this could also be done by adding annonations to the video or by mentioning timestamps in the youtube video description for the features the project has. for example you could mention @ : part two of the project (screenshot) feature, or something similar.&nbsp;",,1.0,1,113
the features work as intended. the edge cases is not mentioned in the wiki but can be implemented in the round . the cases mentioned in the wiki are well tested by the code.,,1.0,1,33
"the code is well written but i feel that the code could have been dried up a lot more. the assignments such as&nbsp; the ones @test , @test , @tes have been used multiple times and can be moved in a before each clause, this would significantly dry up the code.",,1.0,1,50
i would suggest adding more code snippets/detail to this section.,,1.0,1,11
the wiki is pretty bare. if more details from the video were added it would be very useful. added screenshots accompanied with explanations would do wonders.,,1.0,1,26
the project is an expertiza&nbsp;testing project. the test covers a wide range of scenarios. there could be additional&nbsp;scenarios that could be tested to increase the test cover range of the project. the team made a good effort in testing with various test cases.,,1.0,1,47
the team did not include the test cases. this could be one of the reason the pull request might not been accepted. the team could make test cases to increase coverage and range of the project.,,1.0,1,36
"since the pull request has not been accepted. we could not test the project. but as mentioned in the write up and taking a look at the code, the code could be deployed with good testing. the team must include a wide range of test cases to make it more credible to deploy in the production server.&nbsp;",,1.0,1,58
"based on some of their new commits listing where their code coverage was currently at, it shows that when they added in new tests, they also increased their coverage.&nbsp; adding in tests like computing the average and ranges hash increased their coverage to approximately %.&nbsp; later on, new tests such as computing the total score of an assignment given all questionnaires and when a current assignment varies rubrics by round and number of assessments by non-zero raises it up even more to approximately %.&nbsp; while i don't know the exact code coverage for each new test added, these examples show that from the first review, they have continued to increase their code coverage up to the achievement mark of %.&nbsp; maybe in the future, as a suggestion, either tell in your commit message where your code coverage is currently at or mention it in your commit header as what you did for a few.",,1.0,1,157
"code for menu_item_spec.rb looks good and it follows ruby syntax rules.&nbsp; there is one suggestion i would recommend however.&nbsp; for instance, while it's fine creating your objects the way you have them, i would recommend using stubs for testing and build your objects from the factories given to you in the factories folder in the spec folder.&nbsp; regardless, good job on coding!",,1.0,1,67
"it was explained underneath the solution heading of the method used but does not clearly state why they approached it by ""if a score is empty, it should not be counted while calculating average score. only not null review scores are to be counted while dividing by the total number of reviews, for the average score calculation.",,1.0,1,57
"they do explain how they did the work. in fact, they have a section well named 'explanation' which talks about the implementation, and what they changed to enable correct functionality. another note to point, it explains that the implementation directly corrects the problem they describe earlier on, meaning they talk about nil fields, and then they explain in the implementation how they fix this problem, which is good consistency. they don't explain why necessarily, but i think the explicit way they describe the problem and implementation implicitly answers the question. they did it this way because it leaves out those nil values recorded as an empty score field. they didnt use any design principles or patterns, but simply came up with a simple and quick fix to the issue.",,1.0,1,130
"yes they have converted all of their explained tests in the test plan into automated rspec tests. i can't test whether or not they fail, but i assume they do work due to the nature of them, though i believe they should explain on the website that they worked or not and show how they worked.",,1.0,1,57
"i think their writeup is sufficient. what i mean by this, is there is not too much explanation, but ultimately due to the scope of their project, there doesn't need to be much explanation. they explain the problem, the implemented solution, and then have a concise but well crafted explanation of the tests they added. so when i say sufficient, i don't mean it as a bad thing, but as they kept it concise but satisfying all of the important conditions. they haven't added anything, but it seems in general they didn't fix anything between submissions, which i am a bit disappointed about.",,1.0,1,107
"i think the write-up very clearly and accurately describes the problem and issues to fix. i can easily understand the project is focused around the subject of fixing peer review scores, as fields that are left blank are included in the math to calculate average review score. i understand that their project and goal is to fix this issue, to enable a more accurate calculation of average peer review score. they also describe very coherently how the project fixes the issue. they explain in the '/app/models/vm_question_response_row.rb' model file, they alter code to exclude nil values from the calculation of peer review score, which are the values of those blank review score entries. overall, i appreciate the thorough method in which they explain the project.",,1.0,1,128
"yes the functionality does work correctly. essentially, when a score was blank or nil, it was taken into consideration when calculating average score, even though it contributed nothing to the score. this in essence divided the score incorrectly to create the average. however after adding their code to fix this, the score is then calculated correctly. i definitely like how they included a video that explained what their project was, what they did to fix the problems outlined, and then going through and showing on the ui that the solutions worked.",,1.0,1,91
"plan of work was present in the document. more details about each in a little bit more details , like what are the edge cases being tested if included would be helpful",,1.0,1,31
the code was good and well written. few modification to the names could have been done while naming the dummy objects,,1.0,1,21
good explanation of how the use of ajax and jsgrid provided the desired functionality. could add some detail as to how the code was implemented to solve the problem.,,1.0,1,29
"the ""how"" of this project is very well covered in the videos. however, there is room for additional explanation on why it was done the way that it was.",,1.0,1,29
"between the writeup and the video, i have a pretty good idea of what the project is doing. the video does a great job of showing how to run the program and explaining how the code operates. for someone like myself who has little/no understanding of servo or rust, i did not completely understand what problem was being solved with this program and why it was necessary.",,1.0,1,68
"the writeup explains the problem statement and then goes on to explain how the team went about solving it. it mentions the name of the file that was modified and test scenarios are also explained clearly. screenshots of code snippet were added, which was very helpful in understanding the implementation of the project. the writeup talks about the issues faced by the current system and then explains why the team used number of columns to calculate average score. i am reducing one point because the write up does not mention any design patterns.",,1.0,1,93
"the writeup was well written. it clearly explains the problem statement, the solution, the files added/changed and the test cases included. some screenshots were also provided which helped me in understanding the problem statement properly. from the writeup, i could easily understand that the aim of the project was to ensure that empty fields should not be included while calculating metrics such as average score. overall, it was written in simple, easy to understand manner and hence i am giving a .",,1.0,1,82
"they use factory design patterns, break up the long original codes and make it much more succinct. it would be better if they can add some diagrams to illustrate their work.",,1.0,1,31
"overall, the writeup was good. the one area the team could've done better is the implementation section. as of the time this review was written, the implementation section has two things: the process of building the project the process of running the python script &nbsp;i would've like to have read more about the structure of the python script. this is mainly because looking through code can be a strenuous process.",,1.0,1,73
"overall, the code seemed to have been well written. from the comments made on the pull request, it seems like the team has some logic errors that must be sorted out. other than that, the code is relatively dry. however, in some places, some duplication can be removed. a comment on the pull request was made for this by josh. furthermore, there are many comments in their commits. this allowed me to easily go through their code.",,1.0,1,77
"the functions all look short and concise.&nbsp; one suggestion i have though is to extract some of the redundant code out of the functions.&nbsp; for example, in a few of your tests, you create and save the objects ""test , test , test "".&nbsp; these could easily be put in a before(:each) block to reduce redundant code. other then that the code looks great.&nbsp; you did a good job following the ruby style guide.&nbsp; all in all good job.",,1.0,1,82
"the code looks very solid. the pull request was successfully put in to expertiza master.&nbsp; this pr was properly named with an easy to understand and descriptive title, as well as a short and to the point comment message.&nbsp; one thing that might be a nice addition here would be to attach the expertiza write up you did to the pull request.&nbsp; that way, reviewers can get a better idea of what exactly you are testing and why.&nbsp; with regards to the code, it all looks good and is well written.&nbsp; i would suggest renaming some of the variables though.&nbsp; for example, you created some ""menuitem"" objects in your before(:each) method.&nbsp; you named these objects ""test , test , test , etc.""&nbsp; this isn't very intuitive and descriptive considering these are items.&nbsp; maybe consider renaming these, or adding some inline comments explaining what they are used for.&nbsp; other then that, great job!",,1.0,1,161
the wiki page is very informative. the authors have checked last round reviews and brought necessary changes to the wiki. i still feel they can add more images to make it more informative.,,1.0,1,33
"the code surely works but the before hook is too long, it defines @test - , @controller_action - and @content_page - but just or of them are used in each following ""describe"" block. i'd recommend instead of just using one before hook in the top, you may separate it for specific describe blocks.&nbsp;",,1.0,1,51
"the write up is well organized and almost covered everything needed. however, as i mentioned in the first round, i think it&rsquo;s not necessary to introduce expertiza, tdd and unit testing. it&rsquo;s better to explain more about their project in the introduction section. also, i&rsquo;d recommend to include a screenshot about the coverage result they got which will be more intuitive to readers.",,1.0,1,69
"yes, the diagrams clearly describe the system. it would have been clear if the second proposed solution had a diagram or a screen capture to view the changes.",,1.0,1,28
the team has done a good job with the uml diagram that have provided. only suggestion that i could give is to provide a small explanation for the uml diagram so that it is bit easier to understand.,,1.0,1,38
the design doc contains a uml diagram to explain the functionality. but i suggest they add a small explanation of the diagram in order to make it more easy to follow.,,1.0,1,31
they have included screenshots of the current views. they could have included a uml diagram or a flowchart to explain the design so as to have an overall view of the design.&nbsp;,,1.0,1,33
they have included screenshot of the views before and after. they can include a design flowchart/uml diagram to show the overall changes that need to be made to attain the desired result.&nbsp;,,1.0,1,34
"the design doc submitted by this team is almost complete. however certain elements are missing. firstly, the test plan section has not been added. i suggest to include a test plan with detailed,thought out scenarios which are exhaustive.&nbsp; the project design and implementation proposed by the authors is good. however it is a little brief and mostly only includes hand drawn pictures of the potential results and thus is difficult to follow at some places. i would suggest to explain how the proposed changes are to be implemented in a little detail. this increases the ability of the reviewers to understand the ideas proposed by this team.\ also i suggest to explain the problem statement in detail and not just state it. it makes it easier to understand.",,1.0,1,130
"this team has provided a good enough explanation to support the proposed changed. however, at some places the explanation is too brief and is almost just stating which is given in the problem statement. i would suggest , that they can explain the solution of each problem in a some detail so that it is easier to understand. maybe a few examples can be added to aid understanding.&nbsp; also one thing i would like to point out that the first flowchart is not clear. the flow is quite distorted as it connects the instructor views with the student . i don't think thats quite accurate. instead a separate flowchart for the instructor side and the student side can be created. this would make the flowchart easier to follow and also track the data flow. in the first flowchart, there is a design box with only one path without any indication for yes and no. i would suggest to fix this before the next submission. &nbsp;",,1.0,1,165
"yes, the diagrams added are very helpful. the flowcharts added make their implementation ideas quite clear. they have added mock links in their views and added screenshots of that. i believe this is amazing as it gives the reviewers an idea of how the implementation would look.&nbsp; just one suggestion would be to include the uml diagram , to explain the data flow from the controllers and models to the view files. this would make the implementation idea extremely clear and easier for the reviewer to gauge the implementation.",,1.0,1,89
"the team has given only information on the changes that are made to the system and the files that are going to be modified. they haven't provided any information on the design pattern or design principles they have followed. looks like they are changing the controllers part also, so they could have included the design pattern involved on that.",,1.0,1,60
the author has clearly explained on what the problem statement is and then the solution he has proposed. the author has shown how the current scenario works and then has explained step by step on what all changes he is making for the desired output. it is easily understandable by the reader to know the changes the team has made. the team could have included a class diagram for better understanding.,,1.0,1,71
yes. the authors have captured all the functionality mentioned in the project requirements. they have also done a good job explaining the same in their documentation. they could improve this by separating their documentation into mode logical sections than it is now.,,1.0,1,42
the explanations given are good and have good explanation for each of the features that are going to be implemented. the explanations however could be more detailed. the authors could mention the alternatives that the authors decided upon or the different design decisions that the authors are going to take.&nbsp;,,1.0,1,51
"they have done a good job at trying to explain the process of what is needed, what they plan to do where and how they plan on doing it. they have also done a really great work at picturing the final outcome, how it would look once implemented. however, as i suggested earlier, i would try to add more words/visuals to help reviewers understand the ""background info"" section. i personally felt it was a little hard to follow. apart from that, you might want to fix the link in wiki page.&nbsp;",,1.0,1,93
"the diagrams have the details which help users understand how they should expect the output to look like. however, i would still suggest to add more visuals in the background info section. it seems that the team has a clear understanding of what they have written but i personally feel they could do a better job at conveying what they have in mind. apart from that, great job!",,1.0,1,68
"the edited screenshots provide useful visuals of the proposed changes.&nbsp; as mentioned before, please consider reviewing and updating the use case diagram arrows.",,1.0,1,24
the uml diagram is a really nice touch that allows a lot of information to be shown quickly and concisely. it is suggested that similar mockups be added to the test plan and proposed implementation to serve the same purpose.,,1.0,1,40
"the explanation is good, but it could be enhanced by condensing the explanations and adding visuals that portray what the removed text said.",,1.0,1,23
"the authors explain most of the changes that will be made to the system.&nbsp;it would be good to see how the new changes will determine if the author has or has not resubmitted their work for the reviewer to review. also, adding a mockup for ""updating review summary view"" section would be helpful.",,1.0,1,55
"the presence of screenshots for the current functionality and the proposed redesign provides good information to the reader. i would suggest adding more test cases to the test plan, outside of just the ""happy path"", and not going into the steps that each test case involves.",,1.0,1,46
"the project purpose and some information on the issues present in the old design was given. however, the implementation plan is extremely vague and very short, and no information on the test plan is given.",,1.0,1,35
"visualizations look great!&nbsp; as i mentioned before in the first round, i like your use of a bar chart for the first issue and the different color distinction for the third issue.&nbsp; however i think a visual aid could be useful for the second issue to show that changes you plan to make to the review summary page.&nbsp; refer to my&nbsp;suggestion in the first round if it is of any use.",,1.0,1,76
"i think the plan laid out could work out, but they will have to be very cautious because this is a fairly destructive project. also i think they will have to make sure to be on the same page and double check each other before they decide to make changes. i definitely think more effort should be expended on the design as there doesnt seem to be much design as of yet. if they perhaps make it a modular design where they effectively peruse each db table, maybe they can come to a more coherent and logical design they can then document.",,1.0,1,102
"the changes the author has suggested seem to be straight forward addressing the issues . and the changes were intutive and have been explained in lines along with a diagram .&nbsp; adding a diagram after change for issue would have been better. &nbsp; also , if possible, where in the code the changes are to be made could be added&nbsp;",,1.0,1,59
"overall the visual aids provided give a good idea of where the changes would be and what the changes would be. the user case diagram is bit confusing. it would have been much better to compare the current expected functionality view and the use case diagram with the previous implementation, and write about why this change is needed&nbsp; &nbsp;",,1.0,1,60
"the design looks simple, but more explanations about the design could have been provided",,1.0,1,14
"the design document was well written. it included all the major details such as project purpose, design(with uml diagram and list of files to be added/modified) and a tentative test plan. the proposed implementation was also explained clearly and the team seems to have a clear idea about how to go about with the project. i liked how they had posed implementation questions in the end of the document and these are probably to be answered as they proceed with the project. i am reducing a point only because a couple of mock-ups would've been perfect additions to this document.",,1.0,1,104
"the class diagram is detailed and explains the class level changes to be made to the system clearly. however, i felt more screenshots could have been provided of the different views and hence i am deducting a point.",,1.0,1,38
"the design looks good. but it could've been supported with uml diagrams and design patterns to highlight the oodd principles used. also, a list of files to be modified could be added.",,1.0,1,33
"adequate explanation was provided on the features that are to be added. everything from the problem statement to the proposed solution to the test plan was explained. also, the changes were explained in a simple manner and i had no trouble following what they had written. however, it would have been better if the explanation was complemented by uml diagrams and list of file changes. hence giving a .",,1.0,1,68
they have covered the requirement of the problem description. it would be better if they explain the functionalities in detail.,,1.0,1,20
"i might include a bit more information in your proposed implementation block. currently as a dense list of steps its a bit hard to grasp what goal each step has, if you expand for a sentence or two on each one i think it would be perfect. overall, great job on this, the write up flows well and is intuitive.&nbsp;",,1.0,1,61
"the problem description section explains the general idea of the changes to be made, but really lacks some more information. i think the best way to improve on this is to update the bottom section (the list of db) with the changes to be made to each db as you progress through the project. then the readers would easily be able to see the dbs that have changed and the changes made to them.",,1.0,1,74
"while the team has described the problem statement in their design document, the rest of their document seems to be a bit shallow. in my original review i had suggesting writing a uml or wireframe to describe the technical layout of the teams project. this does not appear to be implemented as of yet, but is something i would highly suggest focusing on before you all begin the coding portion of your project.&nbsp; having a wireframe and uml written up really helps all members of a team to stay on the same page as everyone can just reference the wireframe or uml when coding different portions of the project.&nbsp; this way, when everyone is working on different tasks, each member understands the big picture, and can implement a more moduler and appropriate solution.",,1.0,1,135
the wiki is explained very well and the work the authors wants to do is very clear. it would been better to check the existing work done to check the validity of that work and see how the changes would affect the system.&nbsp;,,1.0,1,44
"for the most part, the design looks good. the only thing that is missing is the uml diagrams or some model of the code that will be modified. i cannot check if the authors plan to add methods to the wrong class because i do not know anything about the code. however, aside from that issue, everything looks great! you tell us what files you are modifying on the front-end, but not on the back end with the database, which i imagine would be the more challenging portion. please include that in the next iteration.",,1.0,1,96
"everything is well documented. use case diagram is very useful in this situation especially since there are multiple contexts that are used such as the difference between a student and instructor and the operations they are allowed to perform. i think this has all the necessary sections to achieve full points. i would recommend better formatting for the test plan section instead of a numbered list, but i do not think that this alone should cost you any points. you could achieve this by making a table or using the wiki formatting syntax to make it appear cleaner.",,1.0,1,98
pros: project purpose is stated clearly. project design is stated in depth with multiple flowcharts and screenshots. test plan is given and what all should be tested is mentioned. &nbsp; suggestion: some detail on how each of these will be tested in the test plan would have been good.,,1.0,1,49
the updates should make the database more clear and concise but there could be more work done in identifying what needs to be removed/modified and how to test to make sure it doesn't break anything.,,1.0,1,37
there are no visual aids present in the wiki. the authors should add some for the reviewers to better understand the project.&nbsp;,,1.0,1,23
"the changes proposed are mostly to be implemented on the view side and hence i don't think there is anything too complicated or something that could increase the response time of the system. the team has mostly figured out as to where the changes need to be made. however, knowing what controller changes would be made would be helpful to know as to whether it would be efficient. also, make sure the icons used are open source and do not have any copyright infringement associated.",,1.0,1,86
the uml diagram is appropriate and helps a lot in making understanding things easier. the team could have added a screen mock up but that can be overlooked considering the amount of detailing in the document.,,1.0,1,36
the design appears to be sound and very intuitive. the authors have added screen mock ups to help aid visualization. i would have loved if there were a bit more visualizations.,,1.0,1,31
"yes. they have explained well the changes to be made to the view, model, database, and controllers. they also included how the view would look like after the implementation. it is well documented. good job. however,&nbsp;the part where it mentions ""approval of badges by instructor"" is not so clear me. it introduces a concept ""student-suggested badges"". i don't know where and how a student could suggest a badge for certain submission for a assignment. is it about the badges assigned to the teammates?",,1.0,1,87
"the diagrams are helpful. but if they could do it digitally, it would be better.",,1.0,1,15
"test plan is not included in the design doc. however this project is related to modify view files. another thing is, maybe they could include what the view looks like now before changes and what the view would look like after changes.",,1.0,1,42
"they list the project problems, and the scope of the project and introduce the steps to navigate to expertiza_development schema, which is pretty good. however, i still don't know about their design purpose and plan. i think they still need to tell us what kind of achievement they'd like to get at the end of this project and details of how they will do the project step by step. moreover, i think they only write a little contents in this wiki pages. the former half are just the project description provided by instructors. they just added lines to the old wiki page and lines of them are copied from project description.",,1.0,1,113
"i got almost everything i need&nbsp;to know about this project from their wiki. they got background and motivation, problem statement, implementation plan and test plan, etc. nice write up! but there's a tiny problem: they introduced expertiza in background and motivation which i'd recommend to remove because it's unnecessary and i remember the professor said so in class.",,1.0,1,63
"their goal is to regularize expertiza database schema so they won't add methods/classes. from wiki it seems they just started their project and there's no code written yet, so i'd say more effort should be expended on the design.",,1.0,1,43
"yes, in their design description i can see all the required functionalities are covered which is good. however it's better if they can include a design plan/project plan to illustrate how they'd plan to meet the requirements&nbsp;in steps. they did write ""the scope of our project is to rectify these problems by performing the below steps"" but&nbsp;i think these &ldquo;steps&rdquo; are just the copy of the requirements and it's too abstract to figure out what they&nbsp;thought&nbsp;around these requirements.",,1.0,1,92
"they added a few changes, could've listed more on readme.",,1.0,1,11
"the relationships have been set up properly in the model files as well as the schema. however, a destroy dependency in the model file would be a great addition;&nbsp;&nbsp;has_many&nbsp;:enquiries,&nbsp;dependent::destroy",,1.0,1,37
"while the functionality is present, there are several debug statements in the code that need to be removed and tests need to be added.",,1.0,1,24
 ) the write-up is comprehensive and clearly explained. ) should explain the test cases in more detail.,,1.0,1,16
"could not see any commits after the last submission as functionalities were working fine, but team could have worked upon improving test coverage.",,1.0,1,23
"team has added capybara test. but team could have worked upon improving test coverage. team can explain test description in test plan in wiki, step by step so as to understand what all test scenarios were covered.",,1.0,1,37
"yes, test plan is complete enough also team has explained the test plan technology to used to achieve it. good knowledge of capybara testing. team could have added test scenarios for each issue step by step rather than single lines.",,1.0,1,40
"writeup is written well and explained properly with good indentation, content and screenshots. team could have explained test plan in more brief so as to understand number of test scenarios covered.&nbsp;",,1.0,1,32
team could have added test plan in wiki along with test covered and test description. also could have worked upon increasing test coverage.,,1.0,1,23
test plan is given a appreciable thought and team has also implemented test scenarios mainly in&nbsp;student_task_controller_spec.rb would&nbsp;suggest team to try and increase test coverage.,,1.0,1,29
new code added is written well with dry and no long or complicated functions. i could see file updated has changes on line such as tab and space. team could work upon indentation.&nbsp;,,1.0,1,34
writeup is readable and written properly. team could have added code snippet and pictures of changed or improved functionality. also team could work upon formatting and could also add links and references.,,1.0,1,32
"the authors do a great job of explaining how they did their work, and but the why is sometimes not explained. that could be because it's largely self-explanatory.",,1.0,1,30
well explained. add screenshot of the changes which can help understand the change visually.,,1.0,1,14
in due_date_color switch case would have been a better approach&nbsp;then if else if block. lots of code that is done in view&nbsp;can be moved to the controller. follow mvc architecture.&nbsp;,,1.0,1,35
"yes, they have explained why they did that way and it was clear. they have compared and contrasted in each of their feature of ""current implementation"" and ""solution"" which is a better way of showing what they implemented one more suggestion would be, it would have been good if they showed the difference in their code snippets too for the current implementation vs solution proposed.",,1.0,1,65
"the code can be readily merged into production. ) i felt code climate failing not an issue, because their similar blocks of code were on spec files and deleting different roles is the same functionality in the end. few places has indentation errors which can be fixed before merging. as suggested earlier, removing the error for sql and replacing with some form of alert box could be helpful for a future work.",,1.0,1,71
"the writeup includes their thinking methodology and why they arrived at that solution. 'changes'&nbsp;under 'user deletion' clearly explains what went wrong in the existing code and what should be added. one suggestion would be, instead of showing 'before' and 'after', they could have leveraged git s ui version of + , - in red and green to have shown the differences. but 'before after ' way worked too !",,1.0,1,66
"the writeup is short and precise - has everything that is needed for testing and understanding and kept the writeup small for better understanding. they have mentioned about their dry principle within ""changes"" itself. mentioning it as a separate sub topic will give more visibility is what i felt. other than that everything is self explanatory.",,1.0,1,55
"def create function in assignments controller seems to be long and could have been refactored. considering that they used most of the legacy code and most of their work was on ui, their part on ruby changes werent much&nbsp;",,1.0,1,40
"yes, it works as intended. it would be better if you could add a video recording of the flow/screenshots of the flow in the test plan.&nbsp;",,1.0,1,28
the write-up is very well written and documented. it is aided well with the the help of screenshots and proper labelling. the only small thing that i would like to suggest is the steps to reproduce or something similar so that the person not familiar with the expertiza&nbsp;can also reach to the desired place.,,1.0,1,57
"overall, the code is very well-written and follows all the best coding practices. but what i feel is a few more comments could help in improving the readability of the code. also, there were few console debug statements which were causing the code-climate checks to fails. these could be removed or logged into rails log.",,1.0,1,57
"i would only suggest you to add more comments to your code. i know that no comments were previously added for you to feed off of, but i guess a major aspect of these oss projects is to add as many comments as possible to the existing code.",,1.0,1,48
"no new code was committed in the second round. i would have really appreciated it if the team could have taken the time to add comments, and fix some ""codeclimate"" issues.",,1.0,1,31
the test cases added by the team pass. but overall coverage has decreased. i would suggest the team to have added more test cases for the new lines added in the controllers.,,1.0,1,32
"the authors concisely explain the work they did. as a suggestion, i would ask them to include the tests written in the wikipedia page as well. the idea is for any reader to understand % what all happened in the project, without looking at the code.",,1.0,1,45
"the build does not pass, but only because of codeclimate issues. the code written by the team, in terms of logic is absolutely perfect. but certain conventions were not followed, such as ""proper indentation was not followed"", ""dry principle violated"". although these have no impact on the functionality, these coding practices are industry convention and maybe the team would want to consider giving them equal importance for the next projects.",,1.0,1,70
"the writeup is well written. it covers almost all the work done. however, one suggestion would be to include more details about hoe the tests were done. i just one small portion dedicated to explanation of rspec and not the work implemented.",,1.0,1,42
"it is given in wiki that most of your test cases depend on checking the output. however, like i mentioned in my last review, several test cases like the ones mentioned below can be automated. this is especially true as tdd is explicitly mentioned in your problem statement: ""write the required tests before implementing/refactoring the methods in the above-mentioned classes"". add past due assignments to the student&rsquo;s task list (on student view). check for correction in due dates of assignments (when an assignment&rsquo;s due date is edited, it should be appropriately moved from the &ldquo;past assignments&rdquo; list to the &ldquo;current assignments&rdquo; list if needed) on student task page, separate the list of 'teamed with' students from the current tasks box. ",,1.0,1,130
the writeup is clear. it is easy to understand what the project does. it would be better if you can put in more code details and major pieces that do the important logic.,,1.0,1,33
"functions are of appropriate length and code is in proper methods. however, no comments are provided what so ever. &nbsp;",,1.0,1,20
"was unable to test the work from ui , but the implementation looks okay. i would have liked some screen hots of mails and videos to be uploaded as references so that reviewers could look at them as well.&nbsp; &nbsp;",,1.0,1,40
the write-up is well organized but it would have been better if some screenshots were uploaded along with the steps. that would have made the document easier to understand.,,1.0,1,30
the writeup was written well enough to how and what the project does. the only suggestion is to include screenshots. that would make the write up even more easy to understand.,,1.0,1,31
&nbsp;the functions seem to be implemented in a good manner and the code seems to be dry.. in some cases though the authors could have improved as in the i app/helpers/student_task_helper.rb&nbsp; file. in side the due_date_color method they could have used case expressions in ruby instead of the if else logic implemented as that would be a more ruby on rails way of doing it. as it will reduce the lines of code as well as being a more elegant way of handling it.,,1.0,1,89
the team has implemented there testing plan and have been very thorough with there test cases. they seem to have considered a lot of cases and have implemented them in rspec. the only thing that they should do is use different commits for adding test cases.,,1.0,1,46
"the variables, methods, and class names do seem to follow proper convention and are suggestive of the functionality they are being used for. in some cases they could have used a liitle more desciptive names for variables for example inside app/helpers/student_task_helper.rb&nbsp; they could have used background_colour instead of rtn as a variable name in the due_date_color() method. it will become more readable for the reviewers to understand the functionalities.",,1.0,1,73
"as mentioned earlier, they have not considered testing at all at this point and hence, we are assuming that they are to implement testing at a further point in the project. of course, mentioning an approach to the testing framework and how they would be going about it would have helped.&nbsp;",,1.0,1,52
"the document straight away starts with the explanation of the project specifics without any background as to what was the whole purpose of doing this. problem statement is very general, it could have been more specific as to what was the drawbacks of the existing implementation and how that can be resolved with the new changes. the doc also lacks a test plan.&nbsp; it is preferable for the doc to be written in expertiza wiki rather than the normal wiki.&nbsp;",,1.0,1,82
i feel some comments can be added before every function for the code to be understood better.,,1.0,1,17
fairly easy to use; would recommend having a home button available across all views so you don't need to press back all the time. pressing back can cause problems especially if resources you were accessing get deleted and no longer map to anything.,,1.0,1,44
" ) success. ) success. ) success, but edit admin profile missing. ) fail. successful in creating the tour. ) success. readme mentions a lot of gotchas but nothing about edge cases.",,1.0,1,26
"there have been a good number of commits closer to the end of the project, i feel that is an appreciable thing. the ability to complete the project in time is something to be proud of. i'd suggest keeping this motivation from the beginning of the project&nbsp;from the next time and it would be a great thing.",,1.0,1,60
the db design for this system is done properly and as far as i could see the relationships have been mapped properly. but one problem i found is that i can edit the customer account and in that i can select both agent and customer which shouldnt happen.,,1.0,1,48
"in the code pushed on github, only the user model is created. therefore, the relationship of the user is maintained as a whole. this,&nbsp;in some cases, will not follow the relationships properly. it would have been a better option to create three separate models for a customer, agent and an admin. this is because it becomes easy and specific to define the relationships for various users. it is very important because sometimes, all the users in a system will not have the same rights towards the application. in other cases, like tours and reviews, these functionalities have been correctly implemented.&nbsp;",,1.0,1,103
"none of the models have been tested thoroughly. the test files in the model are the same that have been auto-generated. the controllers have been tested but with very basic tests and not quite meaningful. the tests written are printing ""success"" messages in case of a correct page redirect. i would suggest the team to write better validation test cases, which would, in turn, help the team to work better on an application. but basic test cases like system handling the case of a customer to use the same email twice has been validated correctly. the team could have worked better in testing the models too.&nbsp;",,1.0,1,108
"the code was found to be easy to read. various format like email regex, password&nbsp;validation have been implemented properly. i found that one of the controller ""bookings controller"" has a long method with several nested blocks in the create function. this could have been avoided. also, some other conditions in the controller could have been avoided using the helper method. other than this, the rest of the code seems to be good.&nbsp; i also didn't find any bad naming convention used in any of the files or folders all throughout the repository.",,1.0,1,96
the testing models were all auto-generated. and no models/controllers carried out any of the testing functionalities. the lines of code are all generated by scaffold and nothing is added by developers. no testing is carried out by anyone. i would suggest the team to work on the testing of the models and controllers since that would give them a better idea on the implementation that needs to be carried out along with proper testing of the entire application.&nbsp;,,1.0,1,81
"the specs for the user model look complete. the tests for the searches_controller look decent. rather than have reviewing run the tests, you should state the results of the testing in the readme.",,1.0,1,33
could move some of the code in the controller and views to the model classes.,,1.0,1,15
"no, i did not see any controller being thoroughly tested, except default tests created by scaffold in the test/controllers. all of the test files are auto-generated by scaffold. neither any of the models were thoroughly tested. all of the test files are auto-generated by scaffold. give points for auto-generated files. please write additional test-cases where you test edge-case scenarios.",,1.0,1,65
"the controllers looked good in terms of sticking mainly to the interaction between the views and the models.&nbsp; at least some of the business logic that determines whether to book or waitlist a customer could have been put into the model.&nbsp; the method name ""user_view?"" in the bookmark model is a bit unclear in terms of meaning and is a little redundant, because ""user"" is a parameter.&nbsp; a better name might have been ""can_be_viewed_by?(user)"".&nbsp; the structure of the code in the search model was elegant--one line per search parameter.&nbsp; the ""bookmark(user)"" method name in the tour model could be made a bit clearer, although the purpose of the method is unclear even after looking at the code--it returns the bookmark associated with the user or false if there is no bookmark for that user.&nbsp; maybe call it ""bookmark_for(user)""?",,1.0,1,149
"there are tests for the controllers, but they do not thoroughly test functionality.&nbsp; for instance, no test verifies whether a user session must exist.&nbsp; on a side note, the controller code does not block unauthorized actions, but things like an unauthenticated call to create a tour do fail, presumably because of an attempt to call a method on a nil user object.&nbsp; this is not optimal.&nbsp; the model tests are just what was generated by rails--there is nothing to fail.",,1.0,1,85
the code is straightforward. most of the functionalities seem to have been implemented. it would be great if most of the logic is put in the models.,,1.0,1,27
"the ui has a number of problems.but as written in readme file,they haven't done the whole setup.so i really can't comment on this. even some of the links given in the readme file are not working. the readme file needs to explain what is exactly implemented and what so that reviewer can check accordingly. &nbsp;",,1.0,1,60
"yes the team has followed good rails coding practices. however few of the business logics can be moved to the models instead of the controllers, conforming to the mvc design pattern..",,1.0,1,31
"looks like there maybe some residual todo statements left in the code. for example in the ""def list"" method. there also seems to be quite of bit of unnecessary comments throughout the code.",,1.0,1,33
"the document did mention about the problems and the need for the project. it would have been more understandable if document focussed on ""why"" more than ""how"".",,1.0,1,27
"although the writeup provides a lot of detail and goes in depth about the topic, it does it through hyperlinks. i would recommend taking a few of the information from those linked websites and directly quoting it in the writeup itself, this way the writeup itself will have more relevant content in itself.",,1.0,1,53
"the writeup was very well done, and it had detailed information about the entire project. i really enjoyed the fact that this team provided links to the rust webpage, and even a stack overflow link which showed how rust is the most loved language. &nbsp; two things i would like to point out are: . the rust can be found ""here"" link is broken, it gives a error. the hyperlink takes you to ""https://www.rust-lang.org/en-us/"", removing the en-us makes the link work. try changing it to ""https://www.rust-lang.org/"" . there is a small grammatical mistake in the line ""this would work aims to implement&nbsp;setvaluecurveattime()"".",,1.0,1,113
able to view account request form and it reflects described changes. perhaps for the final review you could create an instructor account with lots of users signed up so we can view the pagination?,,1.0,1,34
the long functions could have been broken down to parts and called. the functions are moved around but not refactored. comments have been added. and the code quality does seem decent.,,1.0,1,31
the writeup is very descriptive and well written. the only suggestion i have is to explain more about the manual test since the code was not deployed. also explain more on the strategy pattern in your scenario instead of a generic definition.,,1.0,1,42
the code was not deployed to test the ui but the manual testing shows a working screenshot of the ui. i would suggest&nbsp;deploying or making a video.,,1.0,1,29
"the write-up is good. the team has clearly stated the problem statement and they've mentioned how every problem was solved and what changes were made in the code. the only problem that i found was that, nothing was mentioned about building and testing the code. this made it difficult for me to follow the instructions from elsewhere in order to test their code. so, instructions on that could have been added. also, nothing was mentioned about some of the design principles they've followed.",,1.0,1,86
they have made the code modular like the update_assignment_form and made a number of small methods that this method is using which is as per the ruby standards.they have put the code in helper which is good for a controller. some more comments could be added in the code to explain what they are really doing like the methods they have modified.,,1.0,1,63
the writeup is very descriptive in terms of what are they trying to do and helps the reader understand every terminology used in the project which can be appreciated. i personally think that they could have explained the normal build section in more detail. that was the only part that was hard to follow.,,1.0,1,54
"there are lots of screenshots from the team's github that shows what was changed, but i would like to see an explanation in each case as to why it was changed, or how it was changed.",,1.0,1,37
"the write up is good in terms of readability and clarity of information in the contents. my small suggestions would be to add more about how the tests work. and they could have mentioned what design pattern they followed, why they chose to solve the problems they way they did. &nbsp;",,1.0,1,51
i think the design document is fairly complete at this point. they will need to come back at a later time and add in more details about what they changed once the feature is up and running. the only addition they could make at this point would be to address how they plan on covering verification of their code/changes. a test plan section could be added so the team can describe how they are going to add automated testing such as rspec to increase coverage of the expertiza project and to ensure their code is working as expected.,,1.0,1,99
"the team is going to use existing rspec testing to determine if any of their code has broken anything as well as developing new rspecs for their code. the team is not looking for code smell issues. they may want to run the code climate to ensure they have not added any new smells. in addition, they could also use travis ci to further ensure their changes did not break the existing application.",,1.0,1,73
i think the team did a great job overall with creating the design document. i think they would need to add a section for test plan. the team should create/modify rspec automation testing to increase coverage of the expertiza project as well as ensuring their code changes/additions did not break another feature.,,1.0,1,54
"there are some changes mentioned that can be explained more clearly. for example -&nbsp;there are some javascript codes in inappropriate positions. it will be better to understand if the team also give example as which place is inappropriate for the javascript code in the existing code base. another example -&nbsp;they missed some testing for their newly added functions. in the above line, it is not clear as who is referred to as 'they'. it is better to give brief info as who 'they' refer to and for which function they missed test cases.",,1.0,1,95
"the diagrams or figures that are used in the design are ) representation of the previous implementation of functionality i.e. visualization to the instructor and ) design flow in expertiza&nbsp;showing how the instructor will reach visualization page. the previous implementation diagram helped to understand how bad the system is in representing a bar graph.&nbsp;none of the diagrams are unnecessary, they are used to explain the flow. i think that the team could add a few diagrams&nbsp;about how the new functionality looks like though it is still not implemented, this would give the user a better understanding.",,1.0,1,101
there has been an honest attempt to include visual tools usign the current understandof the team. but it won't suffice for the final documentation.&nbsp; as i mentioned before a flow of mvc components can be more helpful. the flow of ui can be shown using a screencast instead.&nbsp; the code changes can be explained using screenshots &nbsp;,,1.0,1,60
the design doc has a done a justice to understanding the basic implementation they need to perform.&nbsp; they can still improve on it and as they go along the implementation they can add the code modifications and explain them in the documentation.&nbsp;,,1.0,1,44
"suggestion: team has added ""test plan section"" properly and with details. this was completely&nbsp;missing in the first round review. really appreciable work done by the team on this part.&nbsp; i would suggest if the team could add the exact files going to be affected for test case modification, it would&nbsp;be more elaborative. i would suggest to add them as well in the final document.",,1.0,1,69
"the use of use-case diagrams is a good choice. only suggestions, reduce the size of the mock screens.",,1.0,1,19
the implementation seems fine for the required task but a little more technical can help in understanding it overall.,,1.0,1,19
"the manual testing part of the test plan is very well described and in good detail with some screenshots to show how a specific page would look in a different language. moreover, the scenarios provided by the team explain the tests well. they could have added how they would perform rspec testing or which tools they would use to do these tests, but the current description is more than enough to account for that shortcoming.",,1.0,1,75
the images at the top from the oss topic could be optional or smaller. the timeline for each of the issues for the final project part are very nice and helpful in understanding what needs to&nbsp; be done from start to end.,,1.0,1,43
looks amazing with good formatting. well done team. add more to this section as you find changes required during implementation as the section is a little short.,,1.0,1,27
"the team has made good use of visualizations. would recommend using a visualization for db design section as even with the example, it is unclear what the writers are trying to explain. the use case diagram looks good. one suggestion is to have this for other mentioned roles too.",,1.0,1,49
"the team has stated the problem statement, a design section which has the inclusion of previous work, addressed the issues but i personally felt that it has less content. the team could have given more information on as to how they plan to overcome the challenges and what else can be achieved.",,1.0,1,52
the team has listed the files they plan to change.&nbsp; i feel the changes look good. but more information could have made things clear as to what needs to be done in what model and controller even they could add they database schema plan.,,1.0,1,45
" ) by seeing their wiki page design document i can say that they have properly designed the function such as the bluetoothdiscoversession and moreover this is a mozilla project. ) i don't think their new design which has some functions will try to create more problem or bugs. they have designed it properly in a good way. ) this is a mozilla project, so there are no gems in this one. ) this is a project for creating a new functioality and i dont think this involves optimizing response time ) they could have spent some more time on writing some detailed explanation. but other than that i think this is good.",,1.0,1,108
i think that the doc could be fleshed out more in terms of what changes you made and if there were any that you didn't expect. but as of now the doc looks good.,,1.0,1,35
there could be more uml diagrams like use case and class diagrams.,,1.0,1,12
"please include visual aids like use case diagrams, application flow, class diagrams, etc.",,1.0,1,13
"design document is in great shape. explanations are added at appropriate places and the document explains exactly what the team is trying to do. at the same time, few of the things mentioned in first phase could have been implemented.&nbsp; one suggestion would be inclusion of a section that tells us how differently the team is implementing the algorithm. the team has tried to explain some here ""some discrepancies need additional attention."", it would be great if the team explains how exactly are they planning to implement these discrepancies this section still needs some work to explain what the team is doing for better understanding. this section is directly copied from the fall project, changing/adding few explanation would really help",,1.0,1,122
"test plan is clearly explained by the team. there is an extensive list of cases that the team will need to test for the changes to be made. however, most of the cases added by the team already exists in ""expertiza/spec/controllers/grades_controller_spec.rb"" file. mentioning again the same things things might not be helpful. rather explaining the tests the team wants to add would make more sense. this also goes with the mock roles code snippet. it is the direct copy from the old file. the best option i would suggest is to come up&nbsp; with a test design and explain how the team is trying to test them. &nbsp; with respect to ui test, team has discussed a test case for github. explaining a bit more might be helpful",,1.0,1,133
the author has explained the changes to be made to the system in an overview. more clear explanation is required on how they plan on implementing their solution for the problem statement.,,1.0,1,32
i see good visuals such as a work flow diagram which depicts the idea in a clear manner. screenshots of the current review score pattern have been included which helps in understanding the problem statement.&nbsp; an uml diagram could help in getting a better understanding of the lower level workings of the proposed changes.&nbsp; &nbsp;author can also include an use case diagram,,1.0,1,65
"the design iplements the same strategy used in the bidding of assignments. it seems less complex and the best strategy to follow. the author could maybe discuss another implementation of bidding and compare it with the one implemented in the assignment bidding but i think this is the best approach since the problem statement itself asks to implement the same strategy. i liked how the author explains with the line ""the delegation pattern will help us reduce the coupling of methods to their original class as we have components that seem to behave identically, but we realize that this situation can change in the future."" since they plans on reusing the same code as in assignment bidding.",,1.0,1,117
tests plan has not been completely implemented at this point since the coding is not complete. the author mentions they plan on doing automated tests on the controllers that are affected. &nbsp;the author also mentions they will be performing manual testing of the ui where in they will check the features that have been proposed. they could maybe attach a screencast video showing the smooth working of the new bidding strategy. also screenshots could help.,,1.0,1,76
"the team has clearly mentioned the changes that are to be carried out in the report.&nbsp; the team has provided the details of all the files where changes will be implemented, directory wise. this clearly explains what the team is planning to do.&nbsp; i suggest the team to give some more information on the ""bugs"" and ""errors"" that are present in some of the files.&nbsp;",,1.0,1,68
the authors employ a diagram showing how this feature is currently implemented in the system.&nbsp; a diagram outlining their design would be helpful.,,1.0,1,24
"the team makes great use of visuals by providing screenshots of the current views in expertiza&nbsp;and how the view should appear after their changes are complete.&nbsp; the placement of elements on the page appear very clean and are easy to read.&nbsp; also, the team included a diagram that shows how the models, controllers, and views are connected.&nbsp; the only criticism&nbsp;to mention is that the graphics are a little large for the page.&nbsp; as a suggestion, the team should consider trimming&nbsp;(cropping) the images so they can easily be seen by the reader without the need to horizontally scroll.&nbsp; also, it would be nice to see highlights of the areas being changed.",,1.0,1,121
"the team included several visuals of their project.&nbsp; however, it is not clear if the visuals are completely correct nor do they appear to address every part of the problem.&nbsp; it would have also been great if the team included images of how their proposed solution would appear to the end user.",,1.0,1,54
"most of the functionalities required for this project are incorporated in the wiki. although, design and some helpful explanations are missing. for example, ""internationalize every static string in the rails framework in a way that it does not remove english strings from the code."" please explain how it can be achieved? also, per project requirement ""focus on student views only"" statement is a little unclear and this functionality must be elaborated (please ask your mentor if you it is also unclear to your team). all functionalities that i stated, could be discussed with more details and even examples can be provided.",,1.0,1,101
"yes, the proposed design is the simplest way to implement required feature. as i stated above, i'm unable to determine whether this design was proposed by the previous team or by the current team, but it does appear is the simplest solution to record the grading history by creating new&nbsp;grading_history&nbsp;table in the db with the following elements: instructor_id, assignment_id, grade_type, student_id, grade, comment, and timestamp. assuming that there is no such or similar table record in the db (i have not really looked), this would be the simplest and most adequate solution for the problem. it would not be the simplest solution if there was already such table existing in the db record (or similar table) and creating additional table with similar fields would introduce inconsistency in the db management, which is incorrect solution. hence, assuming that there are no such tables or similar tables in the db, this is correct solution and in fact is the simplest solution. please improve the document stating that there is no such similar table as&nbsp;grading_history exists in the db.",,1.0,1,183
the upper portion of the document is very well explained. i would work on adding to the test plan and the design principles.&nbsp;,,1.0,1,24
only thing lagging in this wiki page is a flow diagram. since this is a new feature i don't expect any screenshots of already existing problems and so on but they can give a basic flow diagram of their approach and a rough diagram of what the feature would look like when it is completely implemented.,,1.0,1,57
they seem to be improvising the previous pull request and not writing an entirely different functionality from scratch. so as such i don't see any mention of a design pattern but whatever they have suggested in the wiki page is quite understandable and they are trying to remove the code smells and adhere to the mvc architecture and dry out the redundant code.,,1.0,1,64
the author provided flow diagrams about the method. it will be better to provide uml diagrams about the controller and mockups about the test.,,1.0,1,24
they have included the flow chart and use case diagrams which explains their logic very clearly. although screenshots can be added about the existing functionality as it will be better what they are going to change it to. flow of their formula could also have explained through some diagram for better explanation.,,1.0,1,52
"they have included almost all the information like the current process,proposed process with the design and the test plan.the test plan has some generic information.this could be improved and relevant tests related to the projects could be explained.",,1.0,1,41
"their wiki does include a ""test plan"" section, in which they explain how they are going to improve the existing tests and add new ones. however, they don't list which specific files should be modified or added. i suggest they list the relevant testing files they plan to modify and/or add for each change they plan to make.",,1.0,1,60
it follows good coding practices to a great extent. business logic is well separated from controllers. just i feel that code from borrowscontroller could have reduced in controller part and the applied business logic could have been shifted to corresponding model class and call model class methods by passing required params in controller.,,1.0,1,53
"yes, they do have pushed code time to time. it would be better if they had used issues functionality of github project.",,1.0,1,22
"apart from default test cases, few additional test cases need to be added to test functioanlities added like borrow book , return book etc.",,1.0,1,23
"the addition of books , libraries should need some validation this cannot be done before logging in. the modules can be modified to add new important functionalities",,1.0,1,26
"user interface is neat and clean but can be little more engaging. for e.g. fine per day doesn't have any currency. it could be changed to $ or something, like currency can be added along with the unit. i couldn't not see all the books, it says you don't have enough permission.&nbsp;",,1.0,1,56
"comments can be included for the user to understand the code while testing also, business logic in the views can be reduced and shifted to the controller as in mvc format.",,1.0,1,31
"the codebase doesn't appear to be dry. instead of declaring three separate user types, a policy gem could be used to enforce restrictions.",,1.0,1,24
"boomark-book should have an n- relationship.&nbsp; although there isn't a university model, the library should belong to a university. the librarian should have a one-to-one correspondence with the library.",,1.0,1,34
 ) ui looks pretty decent and intuitive enough.&nbsp; ) all the major functionalities are put at the top for easy access directly to them which is a good thing. ) readme file could have a little more description of the usage.,,1.0,1,39
"yes even in the round , the team has regularly used for code management and commits. but as i said earlier, they&nbsp;should have&nbsp;used branching.&nbsp;all of their work has been done on single branch. using different branch for different functionalities might have been more helpful to them for debugging and version management.",,1.0,1,56
some of the file names were not as standard conventions that ruby follows. it was difficult to locate the code of some functionalities. for e.g. most of the admin controller functions are in a file admin/registrations_controller.rb,,1.0,1,39
nice work is done on ui. it is easily navigable. just some of the colors (like gray color in buttons background) need to be changed to make the content easily visible.,,1.0,1,31
"in the modules implemented so far, good coding practices are followed. however, most of the code is generated by scaffold.&nbsp;please get started with custom methods in addition to changes to&nbsp;the default scaffold methods.",,1.0,1,37
"the ui could be&nbsp;better. some o the actions&nbsp;are missing like 'requesting a book', checking the list of libraries for student. instead of showing 'unauthorized' message it might be better to not show button in the first place.",,1.0,1,41
use scaffold to create models views and controllers. this will automatically build basic form views and connect the mvc architecture.,,1.0,1,20
"the user interface is intuitive, however i feel you can use navbar to make your page look more cleaner.",,1.0,1,19
the code can be read but a few more comments would be useful,,1.0,1,13
"yes, they have considered the rails coding principals in implementation. try to add more business logic to model than a controller.",,1.0,1,21
"actions in terms of students, books, etc. works quite well. but i didn't find where to edit the admin's profile. maybe it existed some where else. but it would be better to add a link on the home page for reviewing purposes. that's my personal view, however.",,1.0,1,50
"should use ""unless"" statements where you can. for example in app/controllers/book_controller.rb, line .",,1.0,1,15
"mostly,all the relationships are handled.but,dependent ::destroy would be something that could have been used.",,1.0,1,17
"the landing page is a one stop for any functionality that is to be performed,but it would have been better if they were redirected properly",,1.0,1,26
"the code is clean. but some functions such as the one deals with request, it handles the whole progress. it would be better that it is divided to some small functionsl",,1.0,1,31
"yes, they handle associations well. a book belongs to library and a library has many books. and a university has many libraries.&nbsp; and it would be better that a library has many users(students or librarians), and a user belongs to a library.&nbsp;",,1.0,1,45
"their code is somehow clean. but there are some functions such as the fuction which deals with borrowing, it handles the whole progress. it would be better that it is divided to some small functions.",,1.0,1,35
they followed the mvc structure of ruby on rails to write their code.,,1.0,1,13
"write up is good. the writeup explains about the problem statement, also explains the code on create using snapshot. the ui testing part is also self explanatory.&nbsp; the thing missing would be flow chart or process if create rather than using multiple screenshot. the wiki&nbsp;can also include references of original expertiza project",,1.0,1,55
"i am not sure if the code is ready to be deployed to production server. overall the team did a good work on code but i think the export functionality needs to be improved&nbsp;or optimized using inbuilt function like range. the current code will take a lot of time if the data is huge. moreover, the test cases must be written for all the cases before deploying to production.",,1.0,1,71
"if the code snippets were taken from git diff, we could have a better idea about what was already present and what was chacnged",,1.0,1,24
"the writeup decently explains what they have done in the project. however, could have improved by comparing what was the existing implementation to their proposed changes.",,1.0,1,26
writeup is decent but should be improved by mentioning the distinguishing features from the existing to the proposed functionality of the controller and the refactoring tasks they took.,,1.0,1,28
they only make ui test for the codes they changed. maybe you could add some unit tests for new feature added.,,1.0,1,21
good wiki page. they have also attached a video that explains the working of work they did on this project. they could have added the explanation for why did they choose this approach to solve the issue. more explanation for the solution section could be added.,,1.0,1,46
cur_date could be current_date which is more specific and gives better understanding of why the variable has been used.&nbsp; rev_res_map: this variable doesn't imply anything by the name. can be improved by changing rev to reviewer&nbsp; there is a comment in the mailer_helper.rb inside method submission_mail_to_reviewr: if the first name is not required why to keep the comment in the code?&nbsp; unnecessary space at the end tag of the method inside file mailers/mailer.rb,,1.0,1,80
good thing is that all the implemented features are working properly. there are few spelling errors&nbsp;in the template of the email. just correct it.&nbsp; templates can be improved with the content and can be more professional.&nbsp;,,1.0,1,40
"good code practices, they've used constants for string literals everywhere. the labelling is consistent, comments are written everywhere. methods are&nbsp;introduced&nbsp;at the write files. two methods have names get_drop_topic_deadline and&nbsp;get_deadline_to_drop_topic, which could be written better",,1.0,1,41
the code is readable the flash error messages were also written. review bookmarks using rubric functionality. comments are written in html files also. testcases are also well written. usage of bookmark.create! using banged create should be thought of again as banged methods are dangerous. &nbsp;,,1.0,1,46
the wiki page lacks the guidance for user to test which is crucial part for the review. may be that can be included next time so that the reviewers can get to test the changes properly. otherwise whatever is on the page clear.,,1.0,1,43
" ) the code is dry enough, there is no bad names for variables and methods ) no complicated function which should be separate in the code ) i think there could be more comments since modification with the framework usually associate with a lot of things, sometimes it is really hard to follow with little comments",,1.0,1,53
the write up contains a brief explanation of what has been done. there could have been screenshots with regards to travelling in the ui as it took me some time to figure out where to go and what to click.,,1.0,1,40
"&gt; i can see some comments for&nbsp;submitted_content_controller.rb. however other than this, i dont see any comments. &gt; also, please delete the commented lines of codes which are no longer used.",,1.0,1,33
&gt; there is no test plan. please add this.&nbsp; &gt; neither can i see any testing screenshots or anything like that which would show the fix.&nbsp; &gt; consider&nbsp;making a screencast of the testing and add it to wiki.,,1.0,1,42
 ) write up is very brief and does not include all the details. ) one liners have been added for each issue. please give more details to them or add some pictorial representations to help understand better. ) fixes to the issues have not been described. please describe what exactly you have fixed and how. &nbsp;,,1.0,1,53
"the code is well written. it has meaningful method names, following the dry principle. but could've added more comments.",,1.0,1,20
"as per the commits in the pull request link, i see that most of the commits have been made during the second round of submission which implies that most of the changes were added then. i also think that the commit labels should have been more verbose which would not only make it easier to understand but also help in back tracking the changes being done.",,1.0,1,66
"the project is documented systematically, however, i would suggest that you first mention the problem statement, then write down the&nbsp; bugs involved in the current implementation and finally list down the changes made to the project and how these changes are implemented. you can also include the new code and highlight the newly added code either by green color or make it bold so that the reviewer does not have to switch back to github just for checking the altered code. this would not only save time while reviewing but also make the purpose of the document to be whole! &nbsp;",,1.0,1,102
"i think most of the methods, variables and class names added newly are all intuitive. just focus a bit on modularity next time!",,1.0,1,23
"yes the team has added test cases. but, there is a small improvement which can be done in the test cases. the test cases written in the file ""assignment_participant_spec.rb"" are too long. instead the team could have divided the test cases into smaller parts and to test each small functionality individually.",,1.0,1,52
"the writeup is very good and explains almost everything which is required to understand the project and the work done. the ""how to test"" section was very helpful for testing at my end. but i have found one problem and i would like to make a suggestion for that. in the ""solution and code changes"" section, rather then quickly going to explain the code changes, it would have been better if the team had explained a bit more about their approach. it might have helped in understanding the code easily too.",,1.0,1,91
"yes, the current code is ready to be deployed, however i would suggest to add more tests for and around this module .",,1.0,1,22
"the authors have done a good work in writing clean and concise code which adheres to the community guidelines.the code is well commented. however, there are a few areas where the variable naming could be improved can be improved. in submitted_content_controller.rb, the variable names cur_date can be refactored to current_date which is more meaningful max_due_date is not suggestive of the function it performs. instead, replacing it by final_due_date would be more sensible options. rev_res_map can be better written as review_response_map implementing these changes will make the code better as it will indicate presence of self-explanatory variables and eliminate the need for using comments.",,1.0,1,106
"the overall code is written well adhering to the ruby community guidelines and programming practises. however, there are&nbsp; minor&nbsp;areas which can be improved like max_due_date would be better framed as final_due_date, method naming can be&nbsp; improved eg&nbsp;email_submission_reviewers, submission_mail_to_reviewr . also there is one instance where the function are long ie method email_reminder sends email as well as&nbsp;composes&nbsp;one, this can be split up into two different methods each one catering to a functionality defined by method name &nbsp; &nbsp;",,1.0,1,87
"&nbsp; the writeup is well written. the writeup starts with feature that they are talking about, followed by the problem statement that mentions about the issues they they are trying to resolve and what is their proposed plan. the proposed changes are attested with code snippets that make it easier to comprehend the work that has been done in this direction. along with this, the language is really lucid and easy to comprehend which makes it easier to understand and think about their vision in&nbsp; the project. however, there is a scope for improvement where the authors can elaborate more about the test plan they they have envisioned for the project,&nbsp; the design principles that they would use. also, adding an video showing before -after changes of the system will make the document look complete as well as visual understanding of the project will be improved. there should be a section where the reader should be able to replicate the issue and&nbsp; ",,1.0,1,165
"good work is done in&nbsp;efficiently and concise&nbsp;writing the code. also, there are no methods that are defined in the author's work.however, all the code that has been newly is self explanatory which eliminates the need for comments. it would have been better had the author mentioned about alternative way to implement the solution and why did they opt for this way of fixing the&nbsp;bug.",,1.0,1,72
"the variables, methods and the class names are declared properly. i would like to suggest that in line of&nbsp;app/controllers/review_mapping_controller.rb variable review_mappings could have been written in singular form as reviews_mapping as it maps the reviews given by the author. &nbsp;",,1.0,1,45
"&nbsp; the writeup is well written. the writeup starts with feature that they are talking about, followed by the problem statement that mentions about the issues they they are trying to resolve and what is their proposed plan. the proposed changes are attested with code snippets that make it easier to comprehend the work that has been done in this direction. along with this, the language is really lucid and easy to comprehend which makes it easier to understand and think about their vision in&nbsp; the project. however, there is a scope for improvement where the authors can elaborate more about the test plan they they have envisioned for the project,&nbsp; the design principles that they would use. also, adding an video showing before -after changes of the system will make the document look complete as well as visual understanding of the project will be improved.",,1.0,1,148
"code is dry and follows ruby convention. the functions are neither long nor too complex and are appropriately written. comments can, however, be added to ensure the changes and added functionality to help in the further iterations of expertiza project.&nbsp;",,1.0,1,41
"though the test plan section is absent, the documentation provides a complete flowchart as to how the correct code should work and what is expected of it. it would be better if the team were to explicitly state that in a new test and test plan section. this can be implemented in the next iteration of the project.&nbsp;",,1.0,1,59
the test plan section is succinctly yet accurately written. the test plan can be improved by adding a screencast / screen grab of the actual test to make it more impressive.,,1.0,1,30
the wiki page is very well written and detailed. it is coherent and easy to follow the flow of logic. the setup of the project environment could be expressed eloquently.&nbsp;,,1.0,1,31
explained with tons of details and well explained but can improve by adding screengrab/recording of their implementation.,,1.0,1,18
methods like change in drop down model are self descriptive. but still giving description would be better.,,1.0,1,17
 ) maybe some ui based testing is required for issue realeted to missing header ) and some more rigorous test related to dropdown menu &nbsp; otherwise it is ready to be deployed,,1.0,1,30
"add comments in method&nbsp;average_based_on_rubric. though it is self explanatory(the process), but still adding comments is good practise",,1.0,1,20
write steps on how to reach the page where we can create the policy. it is difficult without the proper steps to test the feature. i have tested by changing the url looking at the screenshot. the screenshots do not explain the steps properly so add a description for each screenshot.,,1.0,1,51
"the write-up has been well written with almost all details. it gives good description of the problem statement, solutions, output, etc. it also contains the way to reproduce the displayed output. however, the team could have written more briefly in the test plan section. please add more edge cases, conditions, etc in the test plan section.",,1.0,1,57
"the writeup is good, but it can have less number of screenshots. i don't find significant changes done from the first review.",,1.0,1,23
"the screenshot, current implementation and the improvements made were nicely described. the documentation could include more test cases, screenshots.",,1.0,1,19
i would suggest the authors to add comments detailing the reasons for renaming a variable or moving the method. you could add a comment next to new variable //previously oldvarname. this would make it easier for someone who just pulled your source code and would not find the old variabe.,,1.0,1,50
"the authors are first detailing all of their proposed changes without mentioning any reasoning. the reasoning is mentioned in the next section ""changes implemented"". i would suggest to reverse the order and also rename the sections to motivation - detailing reasoning and then giving a description about all changes. also the reasoning is mentioned in a paragraph format for each change. i would suggest using sub-bullets for each change detailing the function, the problem and solution(change). this would make it easier to read the wiki.",,1.0,1,86
descriptive comments are needed&nbsp; general design principles and naming conventions look fine &nbsp;,,1.0,1,14
"few screenshots are missing, like the location of the ""veiw report"" buton. also, the design section needs to be moved up in the wiki, probably after the motivation section.",,1.0,1,29
"- can add more details on what particular scenarios they are testing. - under the heading description of the current project, they can add little details about the scenario in front of their method name. just a small description will do.",,1.0,1,39
- good writeup but i would love to see a description according to a user. what was i not able to do and what can i do now after this change. it would make it easier to test as well for reviewers.,,1.0,1,41
 )in the student_task&nbsp; controller they added two methods where the get all the comments in one array and then did another loop for the array vm list to find total number of tags.so they added two methods in the same controller maybe they can decouple it in private methods then call that method to view team controller. )sugested above )comments needed for explaining the logic and they justput one comment which says the title about there project which is very general.,,1.0,1,83
&nbsp;the variable names look good. one minor suggestion for the variable exist_assignment and exist_directory is to call them directory_exists and assignment_exists as this reads more like the english language. the if statement becomes (if !assignment_exists) which is almost like a complete english sentence. ,,1.0,1,44
functions are not long. no code needs to be saparated to two methods. &nbsp; more comments would be better.,,1.0,1,19
"the test plan mentions that there is no need for unit tests as most changes have been made in the views. however, it is possible that some functional/integration tests would be required.&nbsp;",,1.0,1,34
the method are pretty descriptive themselves. being modular they are easy to understand. i think that they could have added a comment or two for assignment_participant import functions,,1.0,1,28
"testing could be more specific, for example having steps of ""creating assignment, adding mentors to pool, insert team member, check if mentor is assigned."" doesn't have to be complete, something that could point out the direction would be sufficient at this stage",,1.0,1,43
 . i think addition of use case and sequence/flowchart will help understand the design. . no requirement of uml here . none,,1.0,1,20
the diagram are pretty good. one improvement would be dividing the given use case diagram into scenarios.,,1.0,1,17
"though the design document covers all the important content that should be in a design document, the way it is structured does not follow appropriate principles and appropriate patterns. i think the team should have a goal and scope of the project section at the very beginning ( before the problem statement section) which has the goal of the project stated clearly. it would also be a good design practice if the design document is not sectioned into issues themselves. i would suggest sections like current implementation, requirement, proposed changes and expected outcome, all of which will have information related to all the issues.",,1.0,1,103
"the design appears to follow appropriate principles and use appropriate patterns. it does so by having a 'goal to the project' section and a project description section, wherein the authors explain what the current implementation of the topic at hand is and how they plan to change it. the wiki also has figures which represent use case and the data flow diagrams. the design also includes a test plan section which gives an insight into the planned testing for the issue.",,1.0,1,81
"yes. the team has 'proposed approach' section to show the plan what will be done and how they are going to do in this project. however, if the team could add more specific examples or modification of code, will make the description clearer, more convictive and helpful to people who is not working on this project. overall the quality of explanation is good.",,1.0,1,63
"the proposed changes are nicely listed in the document. one suggestion would be to put in the technical changes as well, meaning the classes or functions that you plan to change/introduce.",,1.0,1,32
the diagrams present are helpful in understanding the current design. i would recommend the team to have mapping diagram as is the case in current implementation for the proposed solution as well. this will be helpful in understanding the incoming changes/impacts.,,1.0,1,42
"the test plan is a bit vague, i would suggest the team to add files/method names that would be created/updated as part of this feature.",,1.0,1,27
"the document seems almost complete. however, if the team adds more elaborate implementation, would be better.",,1.0,1,16
"the design appears to generally be sound. the team is using the chain of command pattern, as there are multiple handlers of trigger events. i find it a little confusing how this pattern fits in. are the handlers the classes for the mentors and students? or is it the flow through requirements and assignments, as in the flowchart? they do list what files they plan to change, and state what needs to be changed. i think the design is good, but more detail on the design pattern would be helpful.",,1.0,1,90
"the use case diagram looks helpful, but the sides of it feature some redundancies. it may be possible to combine them into one use case diagram. it would also be helpful to add a uml&nbsp;of the relevant classes.",,1.0,1,40
i liked the high level flow chart because it helped me understand the flow of the system with tracking the time students clicked through tags. i think it would be useful to add a uml diagram. this would help readers better understand the class level design.,,1.0,1,46
i think the authors should include a separate design section in the wiki page.,,1.0,1,14
"the team has identified the design pattern to use but no details have been given. they say multiple handlers are involved, but it would be great if they can be more precise on which handlers/entities are involved.",,1.0,1,38
flow diagrams are clear and one can understand it easily. class diagram can be added to the design as that will help what are the classes that'll be extended to achieve the desired functionality.&nbsp;,,1.0,1,36
a flowchart is given demonstrating the flow of events and where and how they will be handling external api calls. all of this is color-coded which makes it super easy to follow. it would have been a good idea to show the output of peerlogic api in a table for some sample text.,,1.0,1,54
the wiki page is clear and conveys the intent of the team. the team can include the code snippets if possible so that people who might have already worked on that feature can clearly guide them whether the point at which they are thinking to make change is appropriate or not according to their knowledge. &nbsp;,,1.0,1,56
"the team mentioned the issues and also test plan for each issue they are going to fix. also, the files needed for the issue is also mentioned. the test plan consisted of the test steps to reproduce and test the issue. since, it is the bug fixing and the it is not the enhancement that the team is going to do, the steps mentioned in the test plan seems reasonable and will really test the functionalities in my opinion. some of the other tests can be -whether the meta review option is available if we login as a ta. -what happens if the student has requested for a review and begin link is appearing on the screen or not etc.",,1.0,1,120
"they could have added more test cases. eg - the composite score should be displayed on view scores page, alternate view sis displaying heat map of scores &nbsp;",,1.0,1,27
they have attached screenshots of what needs to be done but having mockups of tables would have been great way to make their changes more understandable.,,1.0,1,26
"no principles or patterns are specified. and the design strategy does not appear to be completely sound for the following reason: . for issue # , not letting two assignments of the same name being created is correct. but another check should be added whether this same-named assignment is being created in the same/different course. if created in different, the same name has to be allowed since each course will have almost similar assignment/assignment names. this was something i was told to consider during my project, and hence i feel that it would be applied here too. &nbsp;",,1.0,1,98
"they have embedded two use case diagrams. but both these diagrams are exactly the same. the description says that one is for teammate review and the other one is for view submission, but the diagram does not reflect it. it may have been by mistake. both the diagrams are the same, one would have also been sufficient, the other is unnecessary.",,1.0,1,61
"i think they could add more&nbsp;detail about their test plan. for example, they could list the test case. &nbsp;",,1.0,1,21
"after seeing the requirement of in google doc. i find there are a lot version of this function, and it seems that those version both have some drawback. i understand those version is provided for reference, but i think the instruction of this project should mention whether or not they will refer those code and the reason. &nbsp;",,1.0,1,58
"there are no visual aids which are used, the team could have used dependency graph to help the reader understand a bit more. but i would like to give the benefit of doubt to the team as it is hard to come up with some visuals for any testing projects in general",,1.0,1,52
"yes the design is simple, one thing to add here is that&nbsp; add a feature for students to toggle the visibility of their reviews. when reviews are marked 'public', instructors will have the option of adding them as a 'sample review' to any assignment. when reviews are marked 'private' they will not be shown to other students as a sample. in the above feature, the toggle button should have a default value so that if student do not want to change it then it can the default one.",,1.0,1,89
"the design document is almost complete, just adding a few more diagrams could have been better. the steps are clearly mentioned.",,1.0,1,21
"yes, the design for&nbsp;creating a supplementary review questionnaire raises seems pretty clear. more stuff could be added in the wiki documentation to make it more elaborate.",,1.0,1,28
the two use case diagrams provided for two approaches are almost similar. more explanation needed for the use-case diagrams.,,1.0,1,20
"the design document incorporates most of the functionalities required and also clearly explains their proposed solutions. however, i would suggest that you also give a gist of what was done previously rather than just including links like 'e ' and 'e ' respectively. make sure that you summarize what was implemented in the same document itself, since this would prevent unnecessary navigation to other site as well as let the document serve its full purpose.",,1.0,1,73
"i think the tests mentioned in the test plan give just a bigger picture of how things would look if the implementation is done correctly. the team has however, not made a note about the edge case that are possible and how they would be handled while making changes to the current implementation. i am not insisting on providing an pictorial representation however at least some brief explanation could have been provided.",,1.0,1,72
"the design appears to be sound and complete. however, no specific design patterns have been used as such.",,1.0,1,18
"the design is explained in simple terms. however, the team could have done a better job at providing more details.",,1.0,1,20
the test plan is pretty solid but i feel it could add some additional information like how are they going to test it and how are going to ensure that their code would have % coverage.,,1.0,1,35
the comments are well written for the oss project section but the final project section could be more descriptive.&nbsp;,,1.0,1,20
"other than lack of explanation of the plan to be followed, my concerns are that the authors should include more details in the problem statement and add a test plan section which is currently missing. the high-level explanation seems to be fine.",,1.0,1,43
the team's test plan seems adequate and they are thoroughly informed as to what to test and what to expect. this specific approach is neatly explained as well. probably can add a few more edge cases for the dom test scenario.,,1.0,1,42
"&nbsp;they have placed the test plan, but there is nothing like rspec test. manual testing is good but it has its own disadvantages. they have not mentioned anything about rspec tests. i think addition of rspec test will make it more robust and less prone to errors for future usage.",,1.0,1,51
the writeup design doc seems to&nbsp;include&nbsp;everything. but adding any activity diagram helps more to understand the flow.&nbsp;,,1.0,1,22
the design doc requires addition of proper uml diagrams and elaborate more about the test plan.,,1.0,1,16
"great explanation has been given regarding the project purpose which helped me to understand the purpose. the description about design principles could be expanded. also, regarding the tests, more description could have been given regarding the tests, for eg. one line description regarding each test case.",,1.0,1,46
"the team has made just one use case diagram, no class diagrams were used. they could have helped in understanding the database design's connection to the classes and stuff like that. two diagrams of the output result are shown which are quite impressive.",,1.0,1,44
- yes the doc includes a test plan - the test seems to be already in place and the team must make sure the their changes must not break existing changes - must try to add new tests if required,,1.0,1,37
"diagram depicts the approach very well observing the current scenario. one thing missing as per the current approach is ""checking if the user is a ta/instructor"" before ""is ta/instructor a participant"".",,1.0,1,33
"yes, however i think the anticipated code changes are too broad and should have been further narrowed down.",,1.0,1,18
"in scenarios, they've written the name of controllers related to some functionality. to make it more informative they can provide the name of methods and different routes used to call them.",,1.0,1,32
"yes, the design appears to be reasonable and very detailed. some more emphasis should be given on how to work on the given test&nbsp;plan.",,1.0,1,26
- overall almost complete but i would love to see some more uml diagrams of the flow of the states before and after the changes.,,1.0,1,24
- they did mention that they will refactor the code as the code is already implemented. they do not provide details related to the changes they will be making and have just explained what is already done.,,1.0,1,36
- they can create a uml diagram for functional design instead of listing it which will make it easy to understand the entire flow of things.,,1.0,1,25
"- the design doc looks good. need a better uml chart. suggestions are given above. - i would love to see some details on the api which will be used i.e. probable contract, dummy request etc.",,1.0,1,35
the visual aids ie. the diagrams used to introduce what dom features are is great. it helps the reader understand what dom features are. there are no diagrams or visual aids to explain the flow of what the team plans to implement in the final project or their test plan or design plan.&nbsp; suggestion: - adding visual aids for design plan/project flow/test plan would help the reader understand the project much faster and much better.&nbsp; &nbsp;,,1.0,1,79
the diagrams are pretty good.but in the activity diagram they should ask a mentor if the instructor can do a review after the deadline if ye then they would have to change the diagram.,,1.0,1,35
"the flow charts explain the solution pretty well, however, there is no uml or class diagrams that describe how the classes work together",,1.0,1,23
i like the inclusion of a use case diagram but i don't think it adds a lot. i think a uml/other class diagram would be more useful for illustrating how the additions affect existing code.,,1.0,1,37
"yes, they use figures well. it is better if they can put the workflow diagram in the middle of the page",,1.0,1,21
"the design document does incorporate all the functionalities to be implemented. although, the project has already been done but there were a few challenges and comments written in the google doc. maybe mentioning how this design would override the projects already done, and how this code would be cleaner compared to the code already submitted, would help in understanding the difference in approach in a much better way.&nbsp;",,1.0,1,69
pros: they have made use of sufficient visual aids to explain what they have implemented so far. cons: maybe one diagram regarding the flow of data would be good to have and some figures regarding how this phase of the project would be achieved.,,1.0,1,44
"as tests are already made for their final project, some details regarding possible ui testing would have been good.",,1.0,1,19
"as mentioned above, the flow chart of the design strategy of the last issue did not clarified what exactly to be done in response of different values of `ismetaenabled`. besides, there should have been another figure on&nbsp;the second issue - showing the wrong number of meta-reviews left.",,1.0,1,49
i can follow the flow charts of the design strategies of first three issues to catch their design logics of related functionalities. all include necessary steps and show simplicity. and they have listed all test steps of the last three issues as well. &nbsp; one problem is that there lacks the flow chart of issue# . it looks like they have successfully implemented this issue. but they should have made clearly statement on this issue.,,1.0,1,74
the write is pretty good. my only suggestion is to remove the code and add more description in its place.,,1.0,1,20
"&nbsp;yes the team has added test cases with different edge cases. just one thing, the team could also explore the automated testing using any of the web browser testing tools like selenium.",,1.0,1,33
the team has propeosed to change the&nbsp;already added method. the approach add a new framework which might indirectly increase the time of the system.,,1.0,1,26
"yes the design is simple and easy to understand. they have clearly defined the details and requirements. just one thing, it would be great if the team could add mock screen to show the final ui. it would help to visualise the functionality even more clearly.",,1.0,1,46
"yes they have added the manual test cases. the needs to add test cases to test multiple search conditions.&nbsp;just one thing, apart from manual testing, the team could also explore automated testing using some web browser testing tools like selenium.&nbsp;",,1.0,1,43
"they have added the db diagrams which helps to give the details of the models like user, but does not add much to explain the functionality. as stated earlier, if the team would have added mock ui screen, e.g. the user screen with search boxes, it would make easier to understand. overall the design is good.",,1.0,1,57
they have explained the approach using the a flow chart which explains the flow clearly. they could have added more details about the timer and other things.,,1.0,1,27
the authors approach is mentioned but the can also add the scenario that what will they do if the&nbsp; testing fails. how will improve the functionality in that case,,1.0,1,30
"i think some more detail could have gone into the proposed solution, elaborating on each of the bullet points.",,1.0,1,19
"i feel that the test plan could be a bit more in depth than just a brief overview, but it at least covers the general of what needs to be done.",,1.0,1,31
"yes, they explained it in detail, but it could be better to add some diagrams.",,1.0,1,15
"they write what should be changed in the 'project scope' part, however, it's not very detailed. you can specify which method or model should be changed.",,1.0,1,27
"commit messages are a bit shorter than i would like. not a big issue, but they could use a little more detail. example: ""bug fix"" is seen often. what bug is being fixed?",,1.0,1,33
"most commits are appropriate, but a few like #f ed have + files changed with a nondescript commit message. these should be broken up into multiple commits or at least have a more descriptive commit message.",,1.0,1,35
"yes, the student is able to view&nbsp;his/her course history. however, i don't understand what student field depicts in the course history table.&nbsp;also, it would be better if you could display all the course details in the course history.",,1.0,1,44
"yes, admin can delete a class. however, it would be better if 'course was deleted successfully' message appeared once instead of appearing twice.",,1.0,1,23
"none of the attributes are missing. however, it would be better if you keep the name of the attributes same for every student, teacher and admin. the discipline attribute name is 'course major' for student&nbsp;and teacher and 'major discipline' for admin.&nbsp; it would be better if you'd keep it same for all.",,1.0,1,56
"yes, student is able to edit his/her own profile. however, the message ""student was successfully updated"" is displayed twice. it does not affect the functionality but it&nbsp;would be better if it&nbsp;appears just once.",,1.0,1,38
navigation bar could be added by editing the layout/application.html.erb view!,,1.0,1,13
it was hard to find the link to see all courses.&nbsp; consider making it clearer / adding another link on the home page.,,1.0,1,23
more comments are needed for action_allowed?variable names specified above can be changed to add clarity in their meaning.,,1.0,1,19
 @assign_id = assignment.find_by(id: @participant.parent_id).course_id &nbsp; the @assign_id suggests that the variable stores an assignment_id whereas it looks like its storing course_id. it can be made a little more clear by writing a name conveying proper meaning.,,1.0,1,39
most of the writeup is about what tests have been written and how&nbsp; errors were handled. but there could be a general statement explaining the rationale on which they created the tests.,,1.0,1,33
"i would like to see the test plan documentation expanded to include more insight beyond ""we added test for validation"", such as why the tests were needed, what thought went into them, etc.",,1.0,1,33
"writeup is good, a good balance of screenshots and expounding text. however, the ""rspec tests"" section should be renamed to ""test plan"".",,1.0,1,22
more details and screen shot could be added into the wiki page.,,1.0,1,12
the writeup is easy to follow. it have lots of screenshot about code chucks. it will be better to add some ui screenshot about before and after implementation to show what new feature is being implemented.,,1.0,1,36
"tests are implemented, but some description about tests should be written in wiki",,1.0,1,13
"the writeup does a fairly good job of explaining why they did the work they did, and the screenshot diffs help alot. maybe try resizing some of the pictures so the page is easier to read. however, overall throughout the writeup this group does a good job of explaining the changes they made.&nbsp;",,1.0,1,54
"code is ruby-esk. follows ruby style guide and meets the original format of the expertiza project. the code is fairly dry and concise. if anything, maybe add a few more descriptive comments. overall, nicely done.&nbsp;",,1.0,1,37
"the test plan could include a little more on why they are testing ""should calculate peer review grades"" and ""should calculate quiz scores"". but overall it has enough information to understand what they did to test.&nbsp;",,1.0,1,37
code looks well written. there is a section of commented out code in review_mapping_helper.rb that could be deleted if it's not in use (lines - ). the code in each of the if statments in initialize_chart_elements (line - ) in review_mapping_helper.rb is very similar so they might be able to sperate the code into a separate function or a loop.&nbsp;,,1.0,1,60
"the naming looks good in general. one thing i noticed is that based on the name alone i wouldn't be able to tell how get_team_color and obtain_team_color methods are different (in review_mapping_helper.rb).&nbsp; also get_certain_review_and_feedback_response_map could maybe be changed to get_responses_by_author or something similar to make it more clear what ""certain"" information is (in review_mapping_helper.rb).&nbsp;",,1.0,1,59
"explained very well.&nbsp; easy to follow.&nbsp; the explanation of why the problems are problems was especially useful.&nbsp; while there is not explicitly a ""test plan"" section, each issue has a subsection reviewing the appropriate rspec tests.",,1.0,1,39
"fully.&nbsp; my only suggestion would be to add information about how best to manually test your implementation.&nbsp; for example, do you have classes and assignments created that can be used?&nbsp; if not, how is a class or assignment created?&nbsp; what classes is student enrolled in / ta for? etc.",,1.0,1,52
"all code looks to be similar lengths and each test is specific, i see no areas that need to be separated out.&nbsp; the only comment i have, as above, is that additional comments could be useful for consistency.",,1.0,1,39
"the write up is excellent and very detailed.&nbsp; if i had to make a suggestion, i would suggest adding more context / explanation for each image / code snippet.&nbsp; it could help the write up flow a bit better.",,1.0,1,39
"create_checkbox, create_radio and create_multichoice seem to be do exactly same.&nbsp;two of them could be removed.",,1.0,1,17
"the writeup mentions the issues with current implementation, why it is an issue and how it was solved. it would be nice to mention that you used dry principle for issue . i would have preferred if you had mentioned what had been change in the code w.r.t. to issue instead of a separate section, but it is not something that prevent me from understanding the changes.",,1.0,1,68
many test cases have a lot of common behavior before the different functionality is tested. it is possible to code the common lines into one base and inherit test cases based on that. &nbsp; example: the obtain_color tests have common code for each test.,,1.0,1,44
"limited_types in check_content_type_integrity method maybe too long,could move to another file or method.",,1.0,1,14
"yes group&nbsp;did cover all possible cases, however, i would include a link to a video or screenshots of the results of rspec results of the modified methods within wiki.",,1.0,1,31
there are enough number of commits to justify that the team has constantly pushed their changes onto github,-1.0,-1.0,-1,18
the user interface is very easy to use and attractive. the interface displays all the required information and links so that the user can easily access the application.,-1.0,-1.0,-1,28
the code follows good ruby and rails coding practices and has also maintained the required mvc structure.,-1.0,-1.0,-1,17
"yes, there were enough commits to justify that the team has constantly pushed their changes to github.",-1.0,-1.0,-1,17
"the code follows ruby and rails best practices to the best extent possible. most of the code is generated by scaffold so follows the systematic hierarchy of the scaffold. the authors have also put comments wherever necessary, which is helpful. the code is also properly indented as per ruby standards.",-1.0,-1.0,-1,50
yes the team has pushed changes throughout the project period.,-1.0,-1.0,-1,10
the team kept on pushing their changes throughout the project period. the number of commits is also good that is which is clear indication that the team is working on the project throughout the project period.,-1.0,-1.0,-1,36
code followed mvc architecture . code followed the basic steps / conditions for rails application&nbsp;,-1.0,-1.0,-1,14
" commits by a person team, very thorough in commits and updates. good work",-1.0,-1.0,-1,13
"the team seems to have started on the project early enough. the first commit was about days ago, and the most recent commit was days ago. throughout this period, most of the commits seemed to have enough change to the app to be notable.",-1.0,-1.0,-1,44
&nbsp;the application controller and model was tested well with rspec.,-1.0,-1.0,-1,11
"&nbsp;yes, they have made test modules for every controller and view",-1.0,-1.0,-1,12
"yes, the code is very properly maintained with using suitable dependencies in database and proper test modules for every task in models, views and controllers&nbsp;",-1.0,-1.0,-1,26
"yes, the commits have been fairly regular throughout the term of the project. all three members have been active throughout the project.",-1.0,-1.0,-1,22
the team has tested the companies and applications model thoroughly.,-1.0,-1.0,-1,10
"the ui is very user friendly and intuitive. navigation through the pages is effortless and very much sticks to the norms of what is considered an intuitive ui. there is hardly any need to go through the readme to understand what the system does as it is very obvious. also, the readme, although not required to understand how to go about interacting with the system, is very descriptive and covers all the aspects of the system.",-1.0,-1.0,-1,76
the code is easy to understand and follows the good rails coding practices.,-1.0,-1.0,-1,13
the team has been consistently pushing changes throughout the term of the project.&nbsp;,-1.0,-1.0,-1,14
looks like the team did a great job using&nbsp;github throughout the project time. they&nbsp;made total&nbsp;commits.,-1.0,-1.0,-1,21
almost commits done by three people. they did a good job.,-1.0,-1.0,-1,11
they did the rspec test. and seems did lots of works.,-1.0,-1.0,-1,11
they write rspec test for almost all the files. a pretty good work.,-1.0,-1.0,-1,13
there were lots of commits! the commits seemed to only fix one thing and one thing alone.&nbsp; it is very easy to read through them and see what exactly changed (from the description).&nbsp; good job committing small changes rather than lumping them together like most group have done.&nbsp;&nbsp;,-1.0,-1.0,-1,52
"the team completed all test cases and increased the coverage to %. based on the coverage being brought up to %, documentation, and youtube video, it seems that you have covered everything you were supposed to.&nbsp;&nbsp;",-1.0,-1.0,-1,36
yes! it is a unit test that has % coverage and has been proven to work.&nbsp; it definitely belongs in production.&nbsp;&nbsp;,-1.0,-1.0,-1,23
passed the travis cl.&nbsp; also thanks for linking the pull request.&nbsp; i sometimes have had to search for it.&nbsp;&nbsp;,-1.0,-1.0,-1,23
"the youtube video clearly explains the test cases and shows that they all pass.&nbsp; additionally, it shows that the coverage is at % (clear proof).&nbsp; i really liked how you explained your test cases in the youtube video.&nbsp; it made it much easier to understand.&nbsp;&nbsp;",-1.0,-1.0,-1,49
everything seems to be working with the pull request.&nbsp; the build seems pass in travis cl.&nbsp;&nbsp;,-1.0,-1.0,-1,19
yes. the team added comments to their tests cases which made it easier to follow the code.,-1.0,-1.0,-1,17
"yes, the code is well written. the code was written well originally so no new significant changes made.",-1.0,-1.0,-1,18
"yes, the test cases seem to cover all the scenarios and corner cases.",-1.0,-1.0,-1,13
"yes, the authors have explained how they tested the functions in the model.",-1.0,-1.0,-1,13
no new tests added. % coverage achieved in the first round itself.,-1.0,-1.0,-1,11
yes. there seems to be no issue with the code and i think it should be good to be deployed onto the production server.,-1.0,-1.0,-1,24
well written wiki page. covers all the topics i would expect to be in the wiki page.&nbsp;,-1.0,-1.0,-1,18
code seems to increase code coverage for the entire product and can't cause any side effects.&nbsp;,-1.0,-1.0,-1,18
wiki page is well documented and the write up is explanatory. diagrams have been used to enhance the understanding of reviewers,-1.0,-1.0,-1,21
the team did add additional test cases to increase the coverage to %..,-1.0,-1.0,-1,12
write up was explanatory and made it easy to understand the test cases. extensively written and a lot of extra background information was also there indicating effort and supplying context for the reviewer.,-1.0,-1.0,-1,33
"it works perfectly. good job. rating bookmarks is loads of fun, of course.",-1.0,-1.0,-1,13
the tests are short and looks like it follows ruby style guide,-1.0,-1.0,-1,12
the spec file has been written well and overall seems to follow good coding practices. all the tests are short and the name of the test indicates its functionality,-1.0,-1.0,-1,29
"as mentioned above, the tests were already written. all the tests pass after the refactoring. so, the team has maintained that.",-1.0,-1.0,-1,21
"yes, the new code was commited during the nd round.",-1.0,-1.0,-1,10
the changes made by the authors make the existing code to be concise.&nbsp;,-1.0,-1.0,-1,14
"yes, the new code was committed during the nd round as well.",-1.0,-1.0,-1,12
"the coverage has increased. in the last review, due to lack of test cases, one of the controller was not achieving full coverage but it is now. the newly added code has taken the total coverage to . %. the response_report and review_mapping controllers have all the tests pass.",-1.0,-1.0,-1,47
"yes, the code is ready to be deployed as it works as expected. the refactoring, which was the goal of the project has been done very well and is achieving good coverage.",-1.0,-1.0,-1,32
the writeup explains the reasons for the aspects the authors changed or introduced in their project. they have used the factory design pattern and the implementation is correct and adheres the principle of this design pattern.,-1.0,-1.0,-1,36
"the variables, methods and class names which the authors have used are self-explanatory. the authors have defined helpers which reduces the length of individual methods. this is a good refactoring practice.",-1.0,-1.0,-1,32
the write-up is concise. the project has been explained in details with comparison between the existing and the new code. the ui has been explained so as to see the functionality.,-1.0,-1.0,-1,32
the code is well written and comments have been added for understanding the code. the refactoring has significantly reduced the length of the existing code.,-1.0,-1.0,-1,25
"yes, the writeup adequately and clearly explains the functionality of the project.&nbsp;",-1.0,-1.0,-1,13
"as this is a refactoring project, the features are working as expected.&nbsp;",-1.0,-1.0,-1,13
yes the team has added new code during the second round.,-1.0,-1.0,-1,11
the application was deployed on the heroku server and it works correctly.,-1.0,-1.0,-1,12
yes there has been a significant number of additions to the code for the second round.,-1.0,-1.0,-1,16
yes the team has added new test cases and the pull request shows that there has been a . % increase in the coverage. the newly added tests seem to cover&nbsp;almost every aspect&nbsp;of the project.,-1.0,-1.0,-1,37
yes the writeup clearly explains how and why the authors have did the work they did. the team was supposed to use factory design pattern to refactor response_report method and the implementations for the same seems to be correct to the best of my knowledge for the same.,-1.0,-1.0,-1,48
yes the build passed and there appears to be no conflicting files present.,-1.0,-1.0,-1,13
there were not many problems with the writeup in the first round of the review and the team has added some content to the writeup which describes the newly made changes to the project. overall the writeup is well written.,-1.0,-1.0,-1,40
"the emphasis of the project was refactoring two methods and looking at the work done by the team it is clearly visible that the size of the methods which were to be refactored has significantly reduced, thereby proving that the team has done a good job. as far as a naming problem regarding a variable ""count "" that was suggested in the first round of the review has been successfully fixed by the team.",-1.0,-1.0,-1,73
the deployed version works as intended.the tests that are written seem to cover all the scenarios i can think of.&nbsp;,-1.0,-1.0,-1,22
the code has not been deployed but the team has included a screencast and screenshots of the test passing which is evident that the intended functionality works.,-1.0,-1.0,-1,27
the writeup is quite descriptive and contains clear explanation of the issues. it also contains proposed solutions for the problems that are unsolved. it conatins instructions for ui testing making it easier for manual testing.&nbsp;,-1.0,-1.0,-1,36
changes a lot. it satisfies the requirements right now.&nbsp;,-1.0,-1.0,-1,10
the team added many test cases and the coverage increased.,-1.0,-1.0,-1,10
the team has added extensive test cases for the scenarios required in the project. the code coverage has increased by . % as seen in the pull request (coveralls). this is a good indicator that the tests are actually helpful in these cases.,-1.0,-1.0,-1,41
"the test plan in explained in great detail. the authors have mentioned all the tests they are performing on the model. multiple cases are written for each function. they have also used diagrams to explain the various use cases, which is a plus point.",-1.0,-1.0,-1,44
the authors have done a great job explaining the tests they need to do and the test cases corresponding to the same. they have mentioned the test plan with detailed diagrams. they have written test cases for the various functions in the model.,-1.0,-1.0,-1,43
the authors have provided a screencast of their project. they describe the various aspects of the tests in the screencast. the tests seem to pass in the screencast. the tests are extensively written and seem to cover all scenarios.,-1.0,-1.0,-1,39
the test plan in explained in great detail. the authors have mentioned all the tests they are performing on the model. multiple cases are written for each function.,-1.0,-1.0,-1,28
the authors have done a good job with the write-up in expertiza wiki. all the relevant sections are present in the writeup. also the sections are detailed in explaining the tests.,-1.0,-1.0,-1,32
yes there code has been updated after the st round,-1.0,-1.0,-1,10
yes the team has added test cases and the coverage has reached % which is the maximum that can be achieved.,-1.0,-1.0,-1,20
i feel that the code is ready to be deployed as the test cases seem complete and the team has approached the problem correctly.&nbsp;,-1.0,-1.0,-1,25
yes the build passes in travis ci and looks ready to be merged with the main project.,-1.0,-1.0,-1,17
the writeup has also improved a lot and they have explained cases with diagrams and have done a really good job of explaining the functionality of their project.,-1.0,-1.0,-1,28
"the code seems to cover a lot of cases, cases such as when reviews are null have also been included and scenarios where node count varies is also taken under consideration.",-1.0,-1.0,-1,31
"it seems like the code does the work it is intended to perform, the project was split into two parts and they seem to work well.",-1.0,-1.0,-1,26
yes they have pushed changes after the round of the project.,-1.0,-1.0,-1,11
the code seems to work fine and test cases seem to be passing,-1.0,-1.0,-1,13
the authors have done well with the writeup. they have done a good job of explaining the test scenarios and also have uploaded a screen cast which makes it easy for a reviewer to review their work.,-1.0,-1.0,-1,37
"yes, the team has committed changes after round . they have significantly increased the number of test cases from round &nbsp;",-1.0,-1.0,-1,20
the write up explains everything that the projects needs to work on. they have mentioned the design pattern they used and why. i don't think anything is missing from the wiki. section,-1.0,-1.0,-1,33
all tests are passed as per the screenshot provided in the wiki page. they have used rpec for testing which is good. i do not see any areas for suggestion here.,-1.0,-1.0,-1,31
"as far as this project is concerned, since this was a refactoring project, i can see that they have refactored it properly and tested the code using rspec which shows that all tests have been passed which is good. i did not work on expertiza and i have not myself performed a test to see if this works.&nbsp;",-1.0,-1.0,-1,59
the wiki page is pretty clear as to what the project aims to achieve. what i really liked about the wiki page is that they have snapshots of what the previous worked looked like and how it looks after they improved it. this is really impressive as this gives a very clear and fast understanding of what you have worked on. they have also listed out the files that they edited which is really good. they have also explained what review mapping controller is which helped me get an idea of basic functionalities of the code.,-1.0,-1.0,-1,96
"the factory pattern is used correctly.&nbsp; also, what needed to be done and how it was done is also outlined.",-1.0,-1.0,-1,21
the write-up is great.&nbsp; complete with examples and screenshots.,-1.0,-1.0,-1,11
"the write-up shows what needed to be done, what was done, and the results of doing it.&nbsp; this is a clear and concise approach to the project.",-1.0,-1.0,-1,29
the video was very helpful. the operation of this is very well explained and ui does exactly what it should(since you know what to expect because you watched the video),-1.0,-1.0,-1,31
"couldn't really&nbsp;come up with a corner case so when i performed the same process as the video, everything worked ok",-1.0,-1.0,-1,23
this affected the functionality none and increased the readability a lot. this should be deployed immediately,-1.0,-1.0,-1,16
only needed to show that your changes didn't break anything which you did perfectly,-1.0,-1.0,-1,15
used factory design pattern to simplify the refactor. good job,-1.0,-1.0,-1,10
couldn't think of any edge cases. test pass for normal situations,-1.0,-1.0,-1,12
very well written and very obvious how much of an impact the refactoring had.,-1.0,-1.0,-1,14
names are very well defined. refactoring really impacted the look of this code. good job!,-1.0,-1.0,-1,15
couldn't think of any edge case so it seems that the tests do a good job covering the functionality of this project,-1.0,-1.0,-1,23
code makes good use of 'before' and similar statements to follow dry.,-1.0,-1.0,-1,12
"code is extensive, easy to follow, and increases test coverage.",-1.0,-1.0,-1,10
"code is very extensive, covers a wide array of testing scenarios, and is dry.",-1.0,-1.0,-1,14
"write-up is thorough, describing the code under test, describe the limitations and successes of the project, and is clear and easy to read.",-1.0,-1.0,-1,24
"the tests added slightly increase the overall project coverage, dramatically improve the coverage of the class under test, and all pass.",-1.0,-1.0,-1,21
"tests pass, improve coverage, and seem ready to be merged if deemed extensive enough.",-1.0,-1.0,-1,14
"the documentation is well-written, having a clear, logical path and detailed explanations.",-1.0,-1.0,-1,13
"all tests are automated, as the project&nbsp;is a test.",-1.0,-1.0,-1,11
the team has made good commits for the nd round which indicates the team has been actively working on improving the project. there were commits for the second submission.&nbsp;&nbsp;,-1.0,-1.0,-1,31
the team added the test cases. this increased the coverage of the project. and also the test cases added cover the range of the project.,-1.0,-1.0,-1,25
the team has made good efforts to test nearly % test cases and some additional test cases can make this code ready to be deployed onto the production server. the code was well written and tested hence some additional testing could make the project deployable.,-1.0,-1.0,-1,44
"the write-up was well written and described the intent of the project. the write-up was detailed enough to easily understand and test the project. the team made a good effort in write-up. the write-up clearly explained the type of tests written and their purpose. the authors explained all tests like four node cycle, three node cycle etc.",-1.0,-1.0,-1,61
"the team made good number of commits for the second round. the commit count was and the code added, improved the previous code.&nbsp;",-1.0,-1.0,-1,24
the team has made good effort in making the write up easy to understand. the primary purpose of the project is clearly displayed in the write-up. the write-up also included screenshots of the project which made it more easy to understand the project. the write up was detailed enough to understand the functionality implemented in the project.,-1.0,-1.0,-1,59
"yes, they do explain why they do it that way. also, they apply the dry rule to refactor the code.",-1.0,-1.0,-1,20
"yes, the writeup&nbsp;includes both problems and how they are gonna solve the problems. what's more? they include the files changed by them which is easy for a reader to look into it if they only got the codes instead of github&nbsp;pull request content.",-1.0,-1.0,-1,48
"since march th, there are a significant number of commits made on the day of the due date.&nbsp; good job having each member contribute to these new commits rather than one person committing all the changes!&nbsp; new code was added, mainly new tests and stubs in order to increase their code coverage.",-1.0,-1.0,-1,54
.no conflicts need to be resolved for this project.&nbsp; build passes travis ci based on last commit.,-1.0,-1.0,-1,18
"the write up seems well written.&nbsp; it's easy to follow, it provides all the necessary details from what the problem is for this project, what menu items are like between an instructor and student, and&nbsp;what the testing conditions are for each test in the menu_item_spec.rb file.&nbsp; while i did not review this for the first round, i think improvements have been made accordingly.&nbsp; great job!",-1.0,-1.0,-1,72
tests cover all the scenarios based on the methods in menu_item.rb.&nbsp; great job ya'll!,-1.0,-1.0,-1,17
"the project should be deployed since there were no testing done before, and some of the scenarios are pretty important which the team has covered. all the tests seem to work as they should, as well as all of them pass. it has a coverage of %.",-1.0,-1.0,-1,46
the build did pass in travis ci. there is no problem with it.,-1.0,-1.0,-1,13
"&nbsp; participant , , , were good variable names when you were later comparing them with response , ,etc you used good names for the context using the names of the method which are going to be tested.",-1.0,-1.0,-1,34
the writing is very well detailed as well as i liked that they have snipits of their code added in it as well as pictures to describe the process. it was helpful that they explained what each method did.,-1.0,-1.0,-1,39
its is not dry used let to reuse code as well as before(:each) statements.&nbsp; the code improved as well as new code has been added to test more scenarios.,-1.0,-1.0,-1,31
"the write up is pretty well documented. the write up explained what each method in collusion cycle is responsible for. the example located underneath model purpose,""&nbsp;for example, if participant a was reviewed by participant b, participant b was reviewed by participant c, participant c was reviewed by participant a and all the reviews were indeed finished, then a three nodes cycle exists.&nbsp;"" was a good example what the class is made for.",-1.0,-1.0,-1,75
the project is a testing project and it covers the important all the scenarios and i can see when dealing with nodes and node cycles and similarity and deviation scores. they cover all the public methods.,-1.0,-1.0,-1,36
it passed the travis ci there is no conflicts which need to be resolved.,-1.0,-1.0,-1,14
"&nbsp;they did add test cases, as that seems to be the crux of this project. they were able to increase the test coverage to % which is pretty impressive and good, such that the expertiza team will have a good level of assurance that the code that was tested does what it should do and doesn't break other areas of expertiza. they cover the whole range of what on_the_fly_calc does, especially to receive such a high amount of coverage as a result.",-1.0,-1.0,-1,83
"i think the writeup is very thorough and explains their thought process well. this type of design, where they explain the problems, proposed solutions, and the reasoning as to what led them to the solution is very easy to follow. i like how the were essentially having a conversation with the reviewer and instructors and whoever else may be reading the document.&nbsp;",-1.0,-1.0,-1,63
a good number of coomits were seen to be done for the nd round,-1.0,-1.0,-1,14
the coverage is seen to increase and it is shown that % coverage was reached by the team . the team did a very good job&nbsp;,-1.0,-1.0,-1,25
the code is seen to be complete and could be deployed&nbsp;,-1.0,-1.0,-1,12
the write up was pretty much in detail of what was being tested . the team wrote about finctionality of different functions in the model file and then wrote the corresponding tests,-1.0,-1.0,-1,31
the code is observed to be dry and well written / complete . they had issues with model in the first phase which seem to be corrected now&nbsp;&nbsp;,-1.0,-1.0,-1,28
the document was clear on what the problem statement was and how it was to be done . it was a unit test to be written for on the fly calc model . it was clearly conveyed&nbsp;,-1.0,-1.0,-1,36
the test cases cover all the functions to be tested in the model file .&nbsp;,-1.0,-1.0,-1,15
 cases were seen to be written and all of them passed based on the understanding of the tests .&nbsp;,-1.0,-1.0,-1,19
the code / work seems to be done complete and could be deployed onto the production server.&nbsp;,-1.0,-1.0,-1,17
the authors were able to explain what they did in a clear way . they talked about using factories bot in the code .&nbsp;,-1.0,-1.0,-1,23
rspec was run on the code and tested . all the cases seem to be passing&nbsp;,-1.0,-1.0,-1,16
the write up is pretty impressive . the team has done a good job in describing all the functions and the tests,-1.0,-1.0,-1,21
the write up was clear in explaining what was the task at hand and what was to be done . it clearly wrote in the motivation section on what is expected from&nbsp;collusion_cycle.rb&nbsp; testing&nbsp;,-1.0,-1.0,-1,37
this is a testing project and all the test cases seem to have passed now .&nbsp;,-1.0,-1.0,-1,16
yes the travis c! test was seen to have paassed,-1.0,-1.0,-1,10
very thorough explanations as to what problems are solved and how they are solved. i have a very solid understand of what the project is designed for and how it operates.,-1.0,-1.0,-1,31
"the python files use code that is very intuitive, i do not have any suggestions here.",-1.0,-1.0,-1,16
"code was very clear, diagram in the comments was helpful.",-1.0,-1.0,-1,10
clearly states what the project does and how it does it.,-1.0,-1.0,-1,11
yes there are a number of commits after the last review,-1.0,-1.0,-1,11
"the developers are dealing with test cases and thus their plan of action necessarily includes test cases, based on the code i came across, i would say they have considered almost all the cases.",-1.0,-1.0,-1,34
"the work they have done is completely related to testing, so there was no check needed for features, but in case of testing they seem to have done a good job",-1.0,-1.0,-1,31
"the write up is good, and provides ample explanation, the video is amazing and explains everything very well. they have understood the problem defination well and they have given proper justification for what each test is doing.",-1.0,-1.0,-1,37
the testing video does a amazing job in telling what the test cases were and it explained it well what the test cases do and very well explained video was provided.,-1.0,-1.0,-1,31
"yes, the team added test cases that were required. the test coverage also increased. the test written covered each of the methods. &nbsp;#compute_total_score,#compute_review_hash,'scores varying rubrics and returns review scores', 'when current assignment does not vary rubrics by round', 'scores varying rubrics and returns review scores', '#compute_avg_and_ranges_hash','#scores' &nbsp;",-1.0,-1.0,-1,51
"the write up is pretty extensive. its is intuitive and it easy for a new reviewer to find out exactly what to review and give the review. so, it saves valuable time.",-1.0,-1.0,-1,32
"yes, the team wrote test cases that were very extensive and it handled each of the scenarios in the&nbsp;collusion_cycle_spec.rb file.the test coverage also increased.",-1.0,-1.0,-1,28
"yes, the code can be deployed to production as-is. the project can be taken forward by any team and they can implement their future functionality seamlessly.",-1.0,-1.0,-1,27
"the writeup is extremely good. this is one of the better writeups , i have seen. each of the headings and future work to test description is extremely intuitive and helpful for any reviewer to review.&nbsp;",-1.0,-1.0,-1,36
"the code has checked the edge cases, the functionality works as expected. &nbsp;",-1.0,-1.0,-1,13
"i feel the only areas where the team has to improve are in fixing the code climate issues and in adding more comments. otherwise, code and test cases are well written and everything is documented properly, so it need not be done from scratch.",-1.0,-1.0,-1,44
quite a few commits were made in the second round and the travis build status has also passed for these changes.,-1.0,-1.0,-1,21
travis build has passed and also there are no merge conflicts.,-1.0,-1.0,-1,11
"&nbsp; for all the code changes, the team have used proper naming conventions to name variables, methods and class names. they have ensured that the newly created variables and methods use the same style as the code that is already present in the model file. i felt that every named item in the code was self explanatory and the purpose of each variable/method was understood from the name. hence i am giving a .",-1.0,-1.0,-1,74
"&nbsp; the writeup was well written. it clearly explains the problem statement, the subproblems, the proposed enhancements to each subproblem, the files added/changed and how to proceed with ui testing. some screenshots were also provided which helped me in understanding the problem statement properly. from the writeup, i could easily understand what the team was trying to achieve. overall, it was written in simple, easy to understand manner and hence i am giving a .",-1.0,-1.0,-1,75
the refactoring works as expected and all the features mentioned in the document work have been implemented.,-1.0,-1.0,-1,17
yes. they describe pre-conditions in details and show how they complete the unit test.,-1.0,-1.0,-1,15
the functions of those two methods work as the original codes. they refactor the code without losing features.,-1.0,-1.0,-1,18
"the author has done a fine job with their project write up.&nbsp; they have done an excellent job indicating their projects functionality and purpose.&nbsp; since the teams project involved writing unit tests, i really appreciated them defining and explaining the purpose of unit tests in general before going into detail about what they were testing.&nbsp; this really helped me as a reader to understand the purpose of unit testing as a whole, and how it related more specifically to what they were doing.&nbsp;&nbsp;",-1.0,-1.0,-1,88
i was unable to test the authors code due to being out of time.,-1.0,-1.0,-1,14
"coverage has increased which is a good thing. also, the build has passed but code climate check says fixes required. there was no conflict present.&nbsp;",-1.0,-1.0,-1,26
since last round many changes has been done. the authors have made all efforts to finish the project in time.,-1.0,-1.0,-1,20
since round review majority of the work is done and the authros have considered all the test cases as mentioned in their wiki. the coverage has increased and there are no conflicts in the pull request.,-1.0,-1.0,-1,36
the authors have considered all the tests as they have mentioned in their wiki. i cannot find test cases where the authors missed.&nbsp;,-1.0,-1.0,-1,24
"yes, there were a significant amount of commits for the second round. &nbsp; again, good work!",-1.0,-1.0,-1,16
"yes, the authors provided a youtube video showing the code running and that the coverage increased to %. the newly added tests are not toy tests and do cover the range of the project.",-1.0,-1.0,-1,33
"the write-up has improved significantly. if i remember correctly the wiki in the last review was missing a test plan section entirely. however, it is been written well, and i understand the code much better after reading the code.&nbsp;",-1.0,-1.0,-1,41
"yes, based on the test plan in the wiki, there are tests that cover all of the scenarios, and all of the code in the tests is well explained in the wiki.",-1.0,-1.0,-1,32
"screenshots, code snippets have been added in the writeup now based on given suggestion.",-1.0,-1.0,-1,14
"the project works as intended. project has been deployed on heroku, which made testing much easier.",-1.0,-1.0,-1,16
the code contributed does not have any of the mentioned problems.,-1.0,-1.0,-1,11
- travis ci build passed. - no conflicts. - number of code climate issues has decreased now.,-1.0,-1.0,-1,14
yes their task was to implement tests on an existing controller.&nbsp; it increased coverage by . %.,-1.0,-1.0,-1,16
it is a low risk deployment because it only adds test cases.&nbsp; the tests couldn't break the system and did a good job adding test coverage that wasn't there before.,-1.0,-1.0,-1,33
yes they explained tdd and unit testing well. they also explained everything about the model they were testing very thoroughly.,-1.0,-1.0,-1,20
it correctly added the bookmark ratings to the menu and passed the tests so i think it is ready to be deployed.,-1.0,-1.0,-1,22
they explained each problem and what they needed to do in order to fix them.,-1.0,-1.0,-1,15
the main changes were fixing the misspelling of bookmark ratings.,-1.0,-1.0,-1,10
the bookmark ratings link works and the rest of the logic was in the already created questionnaire.,-1.0,-1.0,-1,17
"they mostly had to update the existing code by adding spaces, capital letters, or underscores where it had been written incorrectly before.",-1.0,-1.0,-1,22
"very clearly defined what the issue is, what the problems are, and how they could be fixed",-1.0,-1.0,-1,17
commits were made according to the review given in the first round and changes were made accordingly.,-1.0,-1.0,-1,17
"yes, the code is well written and follows the conventions of ruby design principles.",-1.0,-1.0,-1,14
"there was just one commit since the last round which mostly just included adding comments to the code. since most of the work was done in the first iteration itself, there wasn't any need for more commits. good work!",-1.0,-1.0,-1,40
"based on the wiki, the team has identified most of the test cases they need to deal with for each module that they are working on. they have converted the same into code and this seems to be working well since the test coverage has increased as well by . . they cover most cases that i can think of.",-1.0,-1.0,-1,58
the code definitely looks like it can be merged with the production server. my only concern would be to fix the codeclimate issues as much as possible since it's a good practice to follow conventions so that future implementations will do the same and keep the code clean.,-1.0,-1.0,-1,49
"the test plan looks to be complete, considering this is a test case development project. based on the wiki, the team has identified most of the test cases they need to deal with for each module that they are working on. this seems to be worked on well.",-1.0,-1.0,-1,48
"the writeup explains well what the tasks were through the 'project details' and 'test plans' sections. they provide a good description of what is required and what they have done and have included a testing plan to execute on the requirements. since this is a test case building project, there is no requirement of any design pattern here.",-1.0,-1.0,-1,58
"all test cases have been converted as explained in the writeup. there is no way of testing them to know if they are failing, but looking at the code it seems that they will work just fine.",-1.0,-1.0,-1,37
i really like the way they have written out their writeup. it is detailed and has relevant headings/sections providing a good flow and readability to the user. the use of images for explanations is really helpful. they provided a video as well since the first iteration which explained about the collusion cycle which was really helpful. overall very well done.,-1.0,-1.0,-1,61
"all test cases have been converted as explained in the writeup&nbsp; and the team has implemented this in code as well leading to an increase in test coverage. there is no way of testing them to know if they are failing, but they have provided a screencast of the code which was useful.",-1.0,-1.0,-1,54
"yes, majority commits were done during the second round. the team has made sure that they include every possible test case in their automated tests.",-1.0,-1.0,-1,25
the team has added new test cases to their code and the coverage has increased. i think the added tests cover the range of the project. the team has included every test case they have mentioned in their wiki.,-1.0,-1.0,-1,39
"they have improved their writeup a lot since i last reviewed their work. they have made sure that they addressed every problem mentioned in the last review. every aspect of the project is well described. also, the team has made things easier by adding a screen cast.",-1.0,-1.0,-1,47
"the authors have included tests which, i think, cover all the scenarios. they have meticulously considered every possible test case and everything works as intended.",-1.0,-1.0,-1,25
"yes, new code has been committed during the second round. they have been pushing their changes throughout the course of the project.",-1.0,-1.0,-1,22
the coverage has increased after adding their code. the test cases are well thought of and exhaustively cover the range of this project.&nbsp;,-1.0,-1.0,-1,24
the code seems to work just fine. all the requirements seem to have been covered.,-1.0,-1.0,-1,15
"they have done a great job with the writeup this time around. the writeup is very descriptive, and it's very easy to follow what all changes the team has made, how they have done it and where the changes are from the writeup. they have also added a screen cast of what all changes they have made which makes things easier.",-1.0,-1.0,-1,62
the code works fine and the tests are as intended. they have done a great job of following good coding practices. the tests do cover all the scenarios.,-1.0,-1.0,-1,28
"yes, they included new test cases, and they also suggested further testing required. the coverage increased. i think the newly added tests cover well for this project.",-1.0,-1.0,-1,27
the writeup is very detailed and easy to understand. good job.,-1.0,-1.0,-1,11
the team added test cases for&nbsp;topic_suggestion_spec.rb. the file covers all possible test scenarios.,-1.0,-1.0,-1,16
i think their improved functionalities are ready to be deployed onto the production server.&nbsp;,-1.0,-1.0,-1,15
"they did an excellent job. they gave clear details and explaining what the problems were, they stated their work plan, listed all the files that they had to edit to enhance the functionalities for the project. great job on instructions for&nbsp;'functionality walkthroughs'.&nbsp;",-1.0,-1.0,-1,45
"the team's work looks good. they added all modified files in their write-up , which helps in checking the actual code.",-1.0,-1.0,-1,22
"they had implemented all the tests with the first submission, and the coverage had reached % also with the first submission. they added comments with the second one.&nbsp;",-1.0,-1.0,-1,28
"the team's rspec tests are well-written to check all of the functionality of the collusion_cycle model. since all tests pass, the model code is ready to be deployed.&nbsp;",-1.0,-1.0,-1,31
continuous-integration/travis-ci/pr&nbsp;&mdash; the travis ci build passed,-1.0,-1.0,-1,12
"the write-up doesn't look changed since the st submission. the team gave clear details explaining what the model collusion_cycle is responsible for, what functions it holds,&nbsp;consequently giving the description of corresponding tests on every condition of each method.&nbsp;",-1.0,-1.0,-1,43
"the team did a&nbsp;great job covering all of the model's functions. there are no dry problems in the code, all the objects and behaviors that are common within the tests are created in the right positions. the code is easy to follow and read, with no long lines.",-1.0,-1.0,-1,51
all of the test scenarios are implemented. the team did an excellent job.,-1.0,-1.0,-1,13
yes. commits in total in their master branch and the latest is made about one day ago.,-1.0,-1.0,-1,17
their project is writing unit test and the coverage did increase . % to . % after pulling.,-1.0,-1.0,-1,14
"yes,&nbsp;their unit test covered&nbsp;all methods in menu items model by testing conditions.",-1.0,-1.0,-1,16
"yes, their&nbsp;newly-added test menu_item_spec.rb runs correctly with examples passed and failure. also in index.html, the coverage reached % for menu_item.rb which means their test have covered all cases in menu_item.rb.",-1.0,-1.0,-1,36
"very good explanation. while the topics aren't super simple and the explanation alone may have been tough to understand, the uml diagrams plus screenshots really make it quite easy to understand.&nbsp;&nbsp;",-1.0,-1.0,-1,34
"not a ton details (like classes) were added to the design document.&nbsp; however, of all the details that were added, none of them are ""smelly"" or seem to have any problems.&nbsp;",-1.0,-1.0,-1,33
uml diagrams and screenshots were both included in this document.&nbsp; as stated above they really help in relaying the information to the reader.&nbsp;&nbsp;,-1.0,-1.0,-1,26
yes! each bullet point in the project specs page gets talked/explained about in the document.&nbsp;&nbsp;,-1.0,-1.0,-1,18
"very complete project!! all necessary parts are included.&nbsp; intro/purpose, overview of solution, actual solution/design, test plan, and files that will change. i also like how easy the flow of the document is. very easy to read and understand",-1.0,-1.0,-1,41
yes. the design is easy to follow and understand what the team is trying to do.,-1.0,-1.0,-1,16
seems like the design doc covers all the major sections and explains them pretty well.,-1.0,-1.0,-1,15
very detailed test plan. seems like team has given the test plan section a lot of thought.,-1.0,-1.0,-1,17
lots of pictures and diagram aid the understanding of the reader.,-1.0,-1.0,-1,11
"yes, the doc is simple, clear and easy to follow.",-1.0,-1.0,-1,10
well explained using screenshots and detailed sections in the doc.,-1.0,-1.0,-1,10
included what the test plan should look like. seems like they covered all the cases.,-1.0,-1.0,-1,15
lots of screenshots of the existing expertiza to make their point. also included picture of proposed implementation which was great.,-1.0,-1.0,-1,20
the explanations are well done and indicate what files will be modified.,-1.0,-1.0,-1,12
all changes are described in adequate detail and are easy to follow.,-1.0,-1.0,-1,12
"the screenshots depict the proposed solutions quite nicely. some more screenshots can be added for the features described - like the review results page. also, the first flowchart for creating srq seems quite unintuitive, as it connects the instructor enabling srq and student creating a srq.",-1.0,-1.0,-1,45
all the required functionality is described in the design and the authors have proposed design changes to incorporate them.,-1.0,-1.0,-1,19
the document is well done and complete. it explains all the changes involved in adequate detail.,-1.0,-1.0,-1,16
the design proposal looks quite detailed and contains a lot of information including flowcharts and screenshots to help understand how the solution will be implemented. the test plan is well laid out.,-1.0,-1.0,-1,32
the authors have taken into consideration feedback from the st round and improved the flowcharts. it makes much more sense now and is easier to comprehend. additional screenshots were added which also helps.,-1.0,-1.0,-1,33
yes. seems like all the sections are present and explained.,-1.0,-1.0,-1,10
yes. seems like the team has a clear understanding of what changes are to be made and relayed it in a concise manner.,-1.0,-1.0,-1,23
very thorough test plan. seems like the team has given it a lot of thought.,-1.0,-1.0,-1,15
"yes, seems to include all the required sections in the design doc.",-1.0,-1.0,-1,12
good explanation and demonstration of the work they want to do. easy to understand.,-1.0,-1.0,-1,14
yes. includes a test plan which i think covers all the scenarios.,-1.0,-1.0,-1,12
the design doc has many pictures and diagrams to help the reader visualize and better understand the objective of the project.,-1.0,-1.0,-1,21
"compared to the first version, this has massively stepped up. my initial complaints have been dealt with, so i'm not really sure what to add here.",-1.0,-1.0,-1,27
massive improvements on this one from the first round. good job.,-1.0,-1.0,-1,11
"massive step up from the first round. the flow diagrams are actually valid flow diagrams now! the screenshots are a bit excessive, but the improvements are clear.",-1.0,-1.0,-1,27
the explanations are taken from mozilla. i can't imagine what they would do to improve upon them.,-1.0,-1.0,-1,18
" they're not so much adding stuff to existing classes as doing their own thing (as ordered by mozilla), so that doesn't really apply. servo is some of the smelliest code i've ever worked with. they couldn't possibly make it smellier on their own. ... gems? this is in python... moreover, they are just doing what mozilla told them to, so that's not really applicable. n/a. this is for testing, not for use in production. they aren't really allowed to expend effort on the design. it's not their design. it's mozilla's. ",-1.0,-1.0,-1,99
"it wasn't really designed by the team as much as mozilla, so, yeah, it does just fine.",-1.0,-1.0,-1,18
the team has covered all aspects of the project mentioned in the problem statement.,-1.0,-1.0,-1,14
the team has adequately stated the changes to be made in the project.,-1.0,-1.0,-1,13
the team has proposed some solution for the respective issue. the solution for each issue appears to be simple.,-1.0,-1.0,-1,19
"yes, the design appears to be sound. the proposed solutions do make sense which can be understood with the help of diagrams.",-1.0,-1.0,-1,22
the authors have clearly stated the changes which are to be made.,-1.0,-1.0,-1,12
all the basic parts have been incorporated in the project document.,-1.0,-1.0,-1,11
"after checking the specification provided for the project, it can be observed that the authors' proposed design has incorporated all of the required functionality and does not appear to have missed any part.",-1.0,-1.0,-1,33
the authors have provided adequate explanation by exactly specifying what needs to be done and how they are going to this at code level.,-1.0,-1.0,-1,24
"as indicated in the proposed implementation, all the changes and additions that the team intends to do sound quite reasonable. they have also mentioned the files that will be modified/added. so, overall they have done a good job with the proposed design.&nbsp;",-1.0,-1.0,-1,44
"yes, as stated earlier i cannot find any complexities in the methods that the team has suggested.",-1.0,-1.0,-1,17
i cannot find any significant flaws with the proposed design. the approach mentioned by the team sounds quite reasonable.,-1.0,-1.0,-1,19
"well after checking the specification provided for the project, it can be clearly observed that the team has covered all the required functionality in the documentation.",-1.0,-1.0,-1,26
"yes the authors have done a good job with the explanation provided for the proposed changes. the proposed implementation section of the document includes the changes that the team intends to incorporate and it also includes details about how the team is going to achieve those changes. so, overall a good job.",-1.0,-1.0,-1,52
the documentation is quite thorough and provides all the required information for the reader to understand what the project is about and how the team will approach the problem statement. overall the team has a done a good job.,-1.0,-1.0,-1,39
yes the document includes a test plan and it mentions what kind of functionalities that are going to be tested.,-1.0,-1.0,-1,20
yes the team has worked on the suggestion provided in the first round and have included a brief explanation for the uml diagram. the team has done a good job with their choice of visualization.,-1.0,-1.0,-1,35
as far as the design is considered the authors have mentioned for each proposed change the files that need modification. cannot comment on the points mentioned in the question as the details in those aspects have not been mentioned.,-1.0,-1.0,-1,39
yes the proposed design looks good. the authors have mentioned the files that will be changed and have also described what kind of changes will be made to these files. the team has done a good job with the design.,-1.0,-1.0,-1,40
"after comparing with the specification provided for the project, i can conclude that the the authors have mentioned about all the functionality that was required.",-1.0,-1.0,-1,25
the document is very well written and includes everything that first time reader needs to understand the work the project aims to accomplish. the team has done a good job.,-1.0,-1.0,-1,30
the test plan included describes all the functionality that will be tested and looks very complete.,-1.0,-1.0,-1,16
as mentioned in the first round the team had done a great job with the visualizations&nbsp;so&nbsp;i cannot find&nbsp;any further improvement that is needed in this area.,-1.0,-1.0,-1,32
the explanation is quite easy to follow and the proposed changes seem to be correct to be implement the intended functionality.&nbsp;,-1.0,-1.0,-1,22
the design documented is well written. it has an elaborate explanation of the changes that will be made or the implementation. they have included the screenshots of the view that are modified making it easier to follow.&nbsp;,-1.0,-1.0,-1,38
they have included testcases and seem to have considered enough test cases to check the functionality of the design.,-1.0,-1.0,-1,19
the proposed solution is very well put. it is easy to understand as they have included screenshots of the current scenario and how they wish to change it highlighting the current problems.,-1.0,-1.0,-1,32
"yes, the changes that are proposed to be made are simple to understand and the screenshots attached make it easier to follow.&nbsp;",-1.0,-1.0,-1,23
all the issues are clearly explained and all the functionality seems to be incorporated.&nbsp;,-1.0,-1.0,-1,15
the design document is well written. it contains all the major topics such as overview of the project. a complete and detailed explanation of the project. proposed implementation and the test plan.,-1.0,-1.0,-1,32
they have included a test plan and considered a good amount of test cases that should test the overall functionality of the project.,-1.0,-1.0,-1,23
the proposed solution appears to be simple and easy to follow.,-1.0,-1.0,-1,11
the design has all the functionality incorporated in the documentation.,-1.0,-1.0,-1,10
test plan is included in the design doc and the test cases considered seem to cover the functionality implemented.,-1.0,-1.0,-1,19
"the explanations provided for each of the proposed features are well written. the authors have also provided screenshots of the functionality that they intend to implement, which is an added plus point.",-1.0,-1.0,-1,32
the design document clearly mentions the purpose of the project. they also mention the proposed next step. the authors have added the test plan in the document. they have also given the application flow which makes the design document clearer than before. the document is clear enough.,-1.0,-1.0,-1,47
the authors have given a flow chart of the application process. they have clearly described the application flow and their strategy to solve the problem. they have also added screenshot of sample html that they want to test.,-1.0,-1.0,-1,38
"this project only involves&nbsp;writing tests, and the team has identified an exhaustive list of test cases.",-1.0,-1.0,-1,18
the authors have clearly explained what they have planned to do. they identified the controller and associated views that need to be tested and have come up with an exhaustive test plan. good work!,-1.0,-1.0,-1,34
"the design is complex - however, this project requires a design of that level of complexity. it is easy to follow as the team has explained their plan very well.&nbsp;",-1.0,-1.0,-1,30
the authors have very clearly mentioned what the changes to be made are. they have structured the document very well starting with the rationale behind their choice of design and went onto explain their implementation plan and test plan. good work!,-1.0,-1.0,-1,41
the team has come up with a few tests and have done a good job with grouping them into categories.,-1.0,-1.0,-1,20
"the team has presented a uml diagram that clearly explains what the interactions between the new classes would be like. additionally, they have also included a screenshot of a view that will require changes.&nbsp;",-1.0,-1.0,-1,35
the design appears to be simple based on their visual illustrations.&nbsp;,-1.0,-1.0,-1,12
the team has made very good use of visualization to show what they intend on doing. good work!,-1.0,-1.0,-1,18
yes the design seems to be as simple as possible and seems to have enough detail about what needs to be changed in the project.&nbsp;,-1.0,-1.0,-1,26
yes the design discusses about the functionality which is required from this project and have uploaded images of how the view will look like when the functionalities will be implemented.,-1.0,-1.0,-1,30
yes the team has explained what changes are to be made for the project and have explained them adequately using diagrams and visuals.,-1.0,-1.0,-1,23
yes the authors have used visuals and figures well to explain the project. they have shown what the views will look like and they also have included the use case diagrams which shows the different ways in which a user will interact with the changes made in the system.,-1.0,-1.0,-1,49
"yes, the design seems to be simple. they have given a flow chart view of how control is gonna flow when going through the use cases and have done a good job of explaining what needs to be done.",-1.0,-1.0,-1,39
yes the team has done a good job in explaining the changes that are supposed to be made to the system. they have drawn uml diagrams and have explained the test plan well.,-1.0,-1.0,-1,33
yes the design includes a very vivid test plan with each test enumerated with different scenarios. it seems to me that the team has considered all the cases that the system can go through and have devised a good looking test plan for their project.,-1.0,-1.0,-1,45
"yes, the team has done a good job in explaining changes that are supposed to be done using diagrams. they have a flowchart using wire frames&nbsp;&nbsp;showing the flow of the user control to each of the updated views. they have also drawn a uml diagram showing how they are going to use the api calls.&nbsp;",-1.0,-1.0,-1,59
the changes that the authors seem to have proposed are explained well and are well aligned with the requirements of the problem. the authors have posted pictures describing the views and the flow of control expected in their solution.,-1.0,-1.0,-1,39
the authors have posted a lot of pictures and flow diagrams explaining the solution. this makes the solution clear for a reviewer. they have described the design strategy with flow charts which is nice.,-1.0,-1.0,-1,34
the design document seems to have covered all the functionality mentioned in the problem statement,-1.0,-1.0,-1,15
yes the team has used a flow diagram and have uploaded screenshots of the changes that are supposed to be made. this makes it very clear to the reviewer where the changes are going to be made.,-1.0,-1.0,-1,37
they have worked to address all the comments made in first round of review and improved a lot on the design and visuals. they have added detailed screens to it is clear and easy to follow/understand. i cannot come up with possible suggestions in this area. a possible suggestion would be to link this image to where it was originally created so it isn't this pixelated and users can directly view the original image.,-1.0,-1.0,-1,76
"yes, they seem to have improved heavily from the previous round.&nbsp; . they have mentioned clear steps as to what method they are following . they have clearly mentioned how the views will be different for different types of users . i don't think i can come up with possible suggestions in this area.",-1.0,-1.0,-1,53
they have clearly stated different scenarios: .&nbsp;populatetoneanalysiscomments .&nbsp;viewpositiveheatmapmatrixchart .&nbsp;viewnegativeheatmapmatrixchart .&nbsp;viewneutralheatmapmatrixchart .&nbsp;viewblankreviewscorespopuppage .&nbsp;viewblankheatmapmatrixchart &nbsp; i think this pretty much sums up on how much detail one can expect from this. they have followed the naming convention which is pretty apparent on what that does. i again cannot come up with any suggestions to possibly improve this.,-1.0,-1.0,-1,61
the major improvement they made after the first round of review is visualization. they had tried to sketch the frames on whiteboard which had minimalistic design focused on their part of the project but they went ahead and added details to the screen clearly showing the screens which is the best possible thing they could have done. i do not have any suggestions in this area.,-1.0,-1.0,-1,66
the proposed file modifications for each change seem to be kept to a minimum.,-1.0,-1.0,-1,14
the group has the right approach in stating the tables and methods that deal with the users controller and defining the test plan to test the methods.,-1.0,-1.0,-1,27
the requirements set forth by the description are adequately satisfied.,-1.0,-1.0,-1,10
"a class diagram is not needed for this document since these are only ui changes. the mockups provide good visual detail of what the final product will look like. the ""visualization of metrics in review reports"" bar graph is a exceptionally descriptive and needed graphic that shows that the authors have thought about how exactly the information will be displayed",-1.0,-1.0,-1,60
"design, again, is simple since only tests will be written&nbsp;",-1.0,-1.0,-1,11
there isn't much design involved here since the project is just writing tests for controller methods &nbsp;,-1.0,-1.0,-1,18
"laid out all the methods that need to be tested and provided a ""it"" statement for each test they plan to implement",-1.0,-1.0,-1,22
"pretty self-explanatory, but they do break down the controller very well.",-1.0,-1.0,-1,12
very detailed description of what exactly they plan to do.,-1.0,-1.0,-1,10
explanation with pictures did a great job getting your point across,-1.0,-1.0,-1,11
changed files look appropriate and the proposed changes sound solid.&nbsp;,-1.0,-1.0,-1,11
very easy to follow any your design makes sense. i think the only tricky thing will be ensuring that you are displaying the correct questionnaire for each team. assuming that a questionnaire for each team would be unique then this should be pretty straightforward.,-1.0,-1.0,-1,44
this is a good design for the task at hand,-1.0,-1.0,-1,10
the documentation talks about everything listed in the requirements doument,-1.0,-1.0,-1,10
very clear on what exactly the problem is and what your implementation is going to be. the visual aids really helped.,-1.0,-1.0,-1,21
very clear about what they proposed solution is. having the suggested files changed shows that the team did their research in what exactly needs to be done.,-1.0,-1.0,-1,27
"like mentioned before, the visuals were great at pointing to what exactly you are planning to do.",-1.0,-1.0,-1,17
the design seems simple. extending the generation capabilities and adding image comparison seem pretty straightforward.,-1.0,-1.0,-1,15
the one flowchart was great at explaining the progression of what you project does.,-1.0,-1.0,-1,14
"the one chart is used properly, and aids in understanding the content.",-1.0,-1.0,-1,12
"design seems to incorporate all of the required functionality, including testing all methods and many edge cases.",-1.0,-1.0,-1,17
"explanations are clear and easy to understand, and cover each page on which changes would need to be made.",-1.0,-1.0,-1,19
design choices appear to be reasonable to implement and clear to end users.,-1.0,-1.0,-1,13
visual aids (primarily mockups) are easy to understand and greatly improve the ability to follow the document.,-1.0,-1.0,-1,17
design clearly covers all aspects of the task in detail.,-1.0,-1.0,-1,10
they have shown&nbsp;that how they are going to test each method that needs to be tested and it's easy to understand.,-1.0,-1.0,-1,24
they've separated&nbsp;methods to be tested out and explain how each of them is going to be tested.,-1.0,-1.0,-1,20
"yes, since this is only a test project, all they need to do is to test the controller and it has been described in the document.",-1.0,-1.0,-1,26
they have included project purpose and listed out the problems and how they are going to solve them.,-1.0,-1.0,-1,18
"though the diagram is not about the changes they are going to make since it's a test topic, it still shows how the object being tested works so that their test would make sense.",-1.0,-1.0,-1,35
"since their design is about ui mostly, so the screenshots they provided are enough for this topic.",-1.0,-1.0,-1,17
the diagrams they gave are pretty good. it's enough for readers to understand their design just by looking into the diagrams without reading other explanation.,-1.0,-1.0,-1,26
"your proposed solutions are great and the quality of each one is understandable to me.&nbsp; overall, you all have a good understanding of your project and&nbsp;have great proposed ideas in mind.",-1.0,-1.0,-1,34
design seems to simple as possible.&nbsp; all that is being done is fixing existing code and adding in new features to pretty up the review summary page and review reports page.,-1.0,-1.0,-1,32
the changes are well explained and easy to follow.&nbsp;&nbsp;each issue in the proposed solutions section is straightforward and addresses a simple solution to fixing each problem.,-1.0,-1.0,-1,29
your design document looks great so far!&nbsp; the task and problem statement is fairly straightforward and you highlight all the necessary issues that need fixing.&nbsp; your proposed solutions and test plans also look promising as well.,-1.0,-1.0,-1,38
"i like the user case block diagram, it was very descriptive on what users access what objects on expertiza, as well as how the ui will look like when its implemented.",-1.0,-1.0,-1,31
yes they did incorporate all functionality that was required of them as per the assignment criteria.,-1.0,-1.0,-1,16
"they have a good explanation as to the problem statement and then go into showing a nice uml diagram which represents the usecases of their solution. i think this is good because uml diagrams are great to model systems and flow of information or data. after they describe the problem statement, they then go into an explanation of each problem and show their planned implementation, or potential mock-ups of what the views could look like to implement the features outlined. they also have the test plan section with several good possible tests they could write to ensure a functional design.",-1.0,-1.0,-1,101
"seeing as everything they are adding is new, i can't see much problem with this. i like how they have already included the context descriptions each test will look into.",-1.0,-1.0,-1,31
"functionality is defined as simply creating the integration tests, which i can see is heavily documented already. i really like the incredible detail you all go into to explain your plan for each method rspec test.",-1.0,-1.0,-1,36
the design document does incorporate all of the functionality they are supposed to implement as per the requirements.,-1.0,-1.0,-1,18
the desin did what exactly was needed . no extra stray changes were being made,-1.0,-1.0,-1,14
the design appears to be sound and following the patterns as per the general flow of the text&nbsp;,-1.0,-1.0,-1,19
yes the design document in cooperates the requirements document specifications completly,-1.0,-1.0,-1,11
a good explaination about the changes to be made for the project was given&nbsp;,-1.0,-1.0,-1,15
a very good use of visualizations was made in conveying the click by view changes using arrows in the text,-1.0,-1.0,-1,20
the design of introducing new components was pretty much clear&nbsp;,-1.0,-1.0,-1,11
yes the design talks about all the functionality that were addressed according to the requirements document&nbsp;,-1.0,-1.0,-1,17
"yes , the authors have clearly explained the changes made to the system . changes are being proposed in this project and each was explained, visualized and had a text mentioned",-1.0,-1.0,-1,29
visualizations was pretty clear in explaining what change was being proposed&nbsp;,-1.0,-1.0,-1,12
"the project is about modifying the present data base and it was clear ,the question may not be very relevant in this case&nbsp;",-1.0,-1.0,-1,24
the design from the explaination in the wiki shows steps very clearly and they are minor changes in different views and it was in the flow of the general expertiza style&nbsp;,-1.0,-1.0,-1,32
"the design was clear and was seen to go on well with the appropriate patterns . they wernt major changes being proposed from code point of view, but everythign was in place",-1.0,-1.0,-1,31
the team had made a very good attempt in explaining the changes . they were in a very clear format&nbsp;,-1.0,-1.0,-1,20
"the team did a very good work , it is one of the best reports i have reviewed, this project session . all aspects that i was looking at were well written and complete&nbsp;",-1.0,-1.0,-1,33
"a very good work was done with viscualizations , every click was explained with a view that made is easy to follow",-1.0,-1.0,-1,21
"the design document has mention of all the methods and classes associated one would test its good to see all the components present, they have done a good job in designing the document&nbsp;",-1.0,-1.0,-1,34
&nbsp;reference kept blank. &nbsp;the design document appears to complete with all the files associated mentioned&nbsp; i liked that they have considered each method and what functionality they would test in that,-1.0,-1.0,-1,34
"the diagrams which have been provided give a deep insight of what and where the changes could be seen, the diagrams are a tad bit big, uml cannot be expected from this project as its completed related to view and controller. the diagrams&nbsp;are just enough to give proper visual aid and are very helpful in understanding the project. &nbsp;",-1.0,-1.0,-1,61
the design does incorporate all the changes required. they have done a good job in identifying what the issues are and what the related tasks are for each issue and what test cases would be there. the design does incorporate all the functionality&nbsp; &nbsp;,-1.0,-1.0,-1,45
"yes, this is one of the better design docs. it follows all the principles and design patterns",-1.0,-1.0,-1,17
the designed document is extremely well written and all the changes have been explained,-1.0,-1.0,-1,14
their explanations are extremely lucid an intuitive. each of the sub modules are well explained and it is very intuitive for even a new person who does not know the application to understand.,-1.0,-1.0,-1,33
the changes that have been proposed by the authors are very lucid and intuitive to understand.,-1.0,-1.0,-1,16
"yes, the design appears to be simple but includes all the necessary&nbsp; requirements",-1.0,-1.0,-1,14
"yes, the design appear to be sound and follows the appropriate design patterns",-1.0,-1.0,-1,13
the details are very well explained including the flow charts. they are visually very appealing,-1.0,-1.0,-1,15
the design diagram is visually very appealing. the authors have done a very nice job with the use of flowcharts,-1.0,-1.0,-1,20
"adequate explanation was provided on the features that are to be added. everything from the problem statement to the uml diagrams to the file changes to the test plan was explained. also, the changes were explained in a simple manner and i had no trouble following what they had written. hence giving a .",-1.0,-1.0,-1,53
" ) i didn't find any improper method additions in the design ) the document explains how different constraints are to be handled and i don't see any potential code smells. ) the design is simple enough and as most of the changes are in views, i don't think additional gems will be required. ) since the duties functionality will be added to existing views, i think there won't be a major change in the response times. ) the design looks good and the team should start implementing it for the above reasons, i am giving a .",-1.0,-1.0,-1,95
the design appears to be simple and i don't think any functionality is added without purpose. it looks like dry principles will be followed in the implementation as well. hence i am giving a .,-1.0,-1.0,-1,35
"from what i can see, the design seems to have taken into account all of the required functionalities. the document had an explanation on how each functionality was going to be implemented and also mentioned the names of the files to be modified and the new table to be created. the level of detail was such that even the primary key and foreign key of the table was mentioned.",-1.0,-1.0,-1,69
the design appears to be simple and i don't think any functionality is added without purpose. it looks like dry principles will be followed in the implementation as well. hence i am giving a . &nbsp;,-1.0,-1.0,-1,36
"from what i can see, the design seems to have taken into account all of the required functionalities. the document had an explanation on how each functionality was going to be implemented and also mentioned the names of the files to be modified and the level of detail was such that the screenshots showed multiple cases!",-1.0,-1.0,-1,56
"they have proposed their detailed plan very early, which shows they have a clear idea about the code.",-1.0,-1.0,-1,18
"in fact, it is too early to check. although they have a detailed test plan, they have not covered any code information yet. so do other groups.",-1.0,-1.0,-1,27
"they use a diagram to illustrate the new method, which is really helpful.",-1.0,-1.0,-1,13
"yes, they have included required changes and explained their solutions.",-1.0,-1.0,-1,10
i didn't see any potential problem areas. i am also not familiar with the mozilla codebase though.&nbsp;,-1.0,-1.0,-1,19
"the teams document shows the completion of all the required functionality. it seems they completed it all during the oss project time line. the subsequent steps portion of the mozilla project description is included in the future work section, so they have plans to implement all the functionality required.",-1.0,-1.0,-1,49
the design seems simple and&nbsp;clear to understand. the fact the the authors included a flowchart made me understand the approach very quickly.,-1.0,-1.0,-1,24
"i understood the design plan, and i think it is straightforward enough that others will think the same too.",-1.0,-1.0,-1,19
"the authors of the design doc adequately explained the changes that needed to be made. most of the explanation was similar to the first iteration of the design doc, but even the first iteration of the design doc did a good job of explaining what needed to be done.",-1.0,-1.0,-1,49
"the design appears to be very sound.&nbsp; since the team is just testing one file, they only need to edit/create one test file and their design document reflects this.&nbsp; great job.",-1.0,-1.0,-1,34
the visual aids that are included in the write up are very helpful in understanding the project scope and design.,-1.0,-1.0,-1,20
"since the last review, the authors have made a lot of changes in their wiki project. they have explained each and every bit of the project.&nbsp;",-1.0,-1.0,-1,27
 . testing plan is the best part in the wiki. it is the highly informative.&nbsp; . they have explained each and every use case and how they wish to test it.,-1.0,-1.0,-1,30
mockups helps us understand different scenarios and use cases that they need to implement it. the images helps us to understand the project very clearly.&nbsp;,-1.0,-1.0,-1,26
 the changes proposed are easy to understand . the plan of execution is clearly elaborated in modules,-1.0,-1.0,-1,16
 . the job described is appropriate and easy to understand&nbsp; . they have done a good job in using images to help in visualizing things better,-1.0,-1.0,-1,25
 . there is a detailed explanation of all modules of the project . images added to the project helps making a clear overview of the project and understanding it in a great&nbsp; detail,-1.0,-1.0,-1,32
yes the authors have explained the changes very neatly. since round the authors have made the wiki page is very informative. the use pf images helps in understanding the project.&nbsp;,-1.0,-1.0,-1,31
"the authors have mentioned the tests they wish to do before deploying their project. according to my understanding the authors have covered all the tests they should. however, after implementation of the project the authors may realise that there may be more testing that they need to do.",-1.0,-1.0,-1,48
"the images and mockups are the best source of information in the wiki. the mockups show how the changes will work which makes it easier to visualise what the authors want to do. although the authors have made mockups, the final product may not be the same&nbsp;",-1.0,-1.0,-1,48
"addresses the problem statement directly, and&nbsp;provides their solutions from a design perspective. i think that if the design is implemented it will achieve full points. each section has an associated visualization and explanation.&nbsp;",-1.0,-1.0,-1,36
"methods are added to the appropriate classes, and i think that most of the other points for this section can be disregarded for a test class. (i.e. runtime does not matter too much for tests unless they are significantly&nbsp;longer, but this does not appear to be the case for this team).",-1.0,-1.0,-1,54
"again the tests provided are great, and there is not really a design pattern necessary for test plans so this deserves full credit.",-1.0,-1.0,-1,23
the test plan is fantastic. all tests are well organized and test a clear piece of functionality. great work!,-1.0,-1.0,-1,19
"no visual necessary, but the authors provided one anyway. i appreciate that you went over and above, and i wish i could give you more than points for this because the visuals are great!",-1.0,-1.0,-1,34
"the above listed problems do not exist with the design. the design seems clean, as seen from the multiple screenshots posted. i don't think the design can be simplified further. i think all the changes they have proposed are necessary.",-1.0,-1.0,-1,41
"yes, the design seems to have all the required functionality.",-1.0,-1.0,-1,10
each method is explained clearly. it is very easy to follow.,-1.0,-1.0,-1,11
strengths: - project purpose - problem statement is clear. - project design -&nbsp; - test plan is very details for every method.,-1.0,-1.0,-1,18
"the changes proposed are very easy to follow and are adequate because of the flowcharts and screenshots provided along with explanations for each. even the column details that will be modified are mentioned, which is very helpful.",-1.0,-1.0,-1,37
the design plan completely covers all of the functionality required in the problem description.,-1.0,-1.0,-1,14
"since the last review, the authors have stepped up their game. the wiki is very good with images and explanations. i really like the wiki and the efforts they have put in after round reviews.&nbsp;",-1.0,-1.0,-1,36
 . very good test plan explaing in details all the possible scenarios . good amount of effort taken in explaing the details for every type of user&nbsp;,-1.0,-1.0,-1,26
mockups are very good and they have been explained in great detail for all types of users,-1.0,-1.0,-1,17
the wiki has everything which was required. the authors have added images making it easy to understand. according to me the wiki is perfect and needs no additional work. good job!,-1.0,-1.0,-1,31
 . good amount of images are used to explain the before after changes.&nbsp;,-1.0,-1.0,-1,13
"yes. the authors have taken a very simple approach to their task. since the project involves only making an automation script in python, the work is not much complicated. so the approach towards this problem will be a simple solution which the authors have taken.&nbsp;",-1.0,-1.0,-1,46
"while the feature is tricky and complicated, the team seems to have figured out a way to design it in the most efficient manner and keep it as simple as possible. if executed correctly, it can be a good feature.",-1.0,-1.0,-1,40
"the document covers the changes that the team will be making and seems to know how they'll be tackling them. it's not hard to follow and i can understand it clearly. they have included good visualization to help with the understanding. it seems like it is a good functionality to add, well done.",-1.0,-1.0,-1,55
"since this is a testing project, the document seems to cover the changes what the team will be implementing and what test cases would be written out. it's not hard to follow and i can understand it clearly.",-1.0,-1.0,-1,39
"since this is not a design requirement, there seems to be no reason to include any design proposition. but the test proposition seems to be adequate and should improve the system rather than decreasing any response time. everything good here.",-1.0,-1.0,-1,40
"the design doc covers the testing details and it seems to include all details on the methods they would test. i couldn't find anything that is missing based on the requirement spec. so, well done!",-1.0,-1.0,-1,36
the changes are just to add a test script called users_controller_spec.rb and they have included all details about what tests they would make and include in the final file. looks good!,-1.0,-1.0,-1,32
the team have captured quite a few tests about how they would test the various methods of the users controller. the tests seem to be well thought of and have covered most of the potential cases where the system could fail. good work.,-1.0,-1.0,-1,43
no visualization is necessary but they have a diagram depicting the current flow for the creation of the users which is helpful although slightly redundant.,-1.0,-1.0,-1,25
"as far the functionality goes, the design doc covers it and it seems to include all details no matter how small. i couldn't find anything that is missing based on the requirement spec. so, well done!",-1.0,-1.0,-1,37
"the uml diagrams are helpful and they have explained it with the use of mockups pretty well and hence i don't feel the need for further details regarding the flow they would take. the images convey what the current system is like. they also have some images depicting how it would look after the changes.they also fixed the previous contradicting uml diagram. so, good work.",-1.0,-1.0,-1,67
the changes that the authors have proposed are easy to understand. the explanation provided is in- depth and well written.,-1.0,-1.0,-1,20
"the team has already identified the files that need to be changed and are planning to add a couple of new files. the team seems to have figured out a lot of stuff already, which is excellent. the explanation is easy to follow and is adequate.",-1.0,-1.0,-1,46
the design proposed by the authors seems good. they have thought of every aspect as of now. i don't think there are any potential flaws that need addressing to.,-1.0,-1.0,-1,30
the design does appear to be simple and intuitive. the design has been well though of.,-1.0,-1.0,-1,16
"yes, the authors have adequately explained the changes that are to be made in the system. the doc is very descriptive of every little detail of the project.",-1.0,-1.0,-1,28
"yes, the design does include a test plan which seems to cover all the functionalities as of now.&nbsp;",-1.0,-1.0,-1,19
the uml diagram seems apt and helps make things easier to understand. there are screen mock ups too to help with visualization. this has made the doc very easy to follow.,-1.0,-1.0,-1,31
"the design appears to be simple and clear. the team's use of numbered lists really added to this, as it was very easy to see what the problem was, and how the proposed changes addressed them while maintaining simplicity.",-1.0,-1.0,-1,40
"the design incorporates all of the funcitionality required and described in the problem statement. the specifics of each functionality is addressed, and the proposed solutions designed to implement them are well described and illustrated in the&nbsp;proposed solutions&nbsp;section. it is apparent that this team has a very clear understanding of the scope of the project and have put a good amount of thought into the design of the solutions.&nbsp;",-1.0,-1.0,-1,73
the team did a great job in explaining the changes they will make. a combination of clear and concise descriptions and detailed visuals communicated the team's changes excellently.,-1.0,-1.0,-1,29
"the design document is very well written. the problem statement and suggested solutions were described in detail. in addition, screenshots were used effectively to illustrate the problem statements and the proposed changes. the test plan is also very thorough as well, listing each problem, solution, and how to test it. overall, this is a great wiki.",-1.0,-1.0,-1,56
"even though the team's work is mainly ui changes, they did a good job of detaling what exactly the are going to be doing to test their changes. this transparency and clarity contributed to the team's good test plan.",-1.0,-1.0,-1,41
"the team was very clear in explaining what they would do. they also did a good job of simplifying the changes they will make to the db schema, and how they will update the wikis. overall, the team's design was quite clear, straighforward, and simple to follow.",-1.0,-1.0,-1,48
"based on the doc, the authors are properly expanding the previous work done to meet the criteria set out by the project requirements.",-1.0,-1.0,-1,23
"it is apparent that the functionality required is known by the team and that they have a plan of action to accomplish the changes needed. specifically, the work to be done section does a great job of this, by listing the objectives of the project, and explicitly detaling how the team will tackle each of the tasks.",-1.0,-1.0,-1,57
"the authors clearly outlined the work to be done on the system in their aptly named section, and provided explanantions of their implementations and outcomes.",-1.0,-1.0,-1,25
yes. the usecase diagram and the after-change view diagram helps a lot in making me understanding the changes to be made.,-1.0,-1.0,-1,22
i don't think the proposed design would cause any of the problems mentioned above.,-1.0,-1.0,-1,15
yes. they explained very well the changes that need to be made.,-1.0,-1.0,-1,12
i don't think the proposed designs would cause the problems mentioned above.,-1.0,-1.0,-1,13
"the changes need to be made to each file are well explained. great work. the database changes, instructor view changes, and student view changes are so well explained. good job.",-1.0,-1.0,-1,30
yes. the&nbsp;uml diagram helps me in understanding the changes.,-1.0,-1.0,-1,11
"yes, the content of the design is well-organized and well-written, everything is its place.",-1.0,-1.0,-1,16
"this team input a great effort to create good visualization to support their design doc. they added usecase diagram, ui mockups, great explanations alongside with the visualization aid.&nbsp;",-1.0,-1.0,-1,29
the descriptions&nbsp;of their proposed changes are well-explained.&nbsp;,-1.0,-1.0,-1,11
they have included which files they are going to modify. it seems reasonable to change them to improve the expertiza application for an instructor user.,-1.0,-1.0,-1,25
"the team's design document&nbsp;is very clear, no clutter to be seen, the flow is intuitive and very easy to follow.&nbsp;",-1.0,-1.0,-1,24
"great work! everything is well-organized, all sections are descriptive to the point. they have added the testing plan and more visual aids since the previous submission.&nbsp;",-1.0,-1.0,-1,28
as per requirements ad descriptions of their topic their design incorporate all the functionality that they need to implement.,-1.0,-1.0,-1,19
"yes, the team did an&nbsp;great job&nbsp;adequately&nbsp;stating what the problem is and what they need to&nbsp;add and modify to&nbsp;make the grading process easier&nbsp;for instructors.",-1.0,-1.0,-1,35
the team added cucumber scenarios for tests they are going to implement utilizing capybara. nice job on that!,-1.0,-1.0,-1,18
"with&nbsp;the second submission the team did&nbsp;some upgrade of what they had for visualization before. uml diagram, more explanations, wireframes, all were added to enhance the design document.&nbsp;",-1.0,-1.0,-1,32
yes. they just included the necessary information and it's concise and easy to follow.,-1.0,-1.0,-1,15
"from what i can tell, code quality in this application is good. functions generally&nbsp;look small and there is good use of rails utilities.",-1.0,-1.0,-1,25
the code on github shows the to n relationship between real estate company and realtor. the realtor is also able to create real estate companies of his own.,-1.0,-1.0,-1,28
"code is written properly. one method is covering only one functionality. also for more features, team has created new controllers. hence i can conclude code is neat and readable.&nbsp; &nbsp;",-1.0,-1.0,-1,31
"team has mapped house, realtor, company also house hunter, inquiries well in the model. &nbsp;",-1.0,-1.0,-1,15
yes user interface is easy to use on the first page.,-1.0,-1.0,-1,11
yes. it is well written and they managed to follow dry principle.,-1.0,-1.0,-1,12
code is written properly with all dry principles. methods are simple and clean. every method&nbsp;contains functions specific functionalities. mvc are created where they are needed. &nbsp;,-1.0,-1.0,-1,28
code is clean and readable. . yes . no . no readme file is well written and descriptive.&nbsp;,-1.0,-1.0,-1,16
the code looks clean and neat. couldn't&nbsp;find any bad naming in the project.,-1.0,-1.0,-1,16
edge cases are handled good and the readme is effective enough to understand the entire code flow.,-1.0,-1.0,-1,17
"the readme document clearly mentions the edge cases when a company is deleted, what happens to the houses and realtors.",-1.0,-1.0,-1,20
the code is clean and well written. the controllers and models are named accurately and each filename describes the desired functionality. good work on that!,-1.0,-1.0,-1,25
"code quality is good, linked features are working fine like the one asked in question.",-1.0,-1.0,-1,15
most common cases are tested in controllers. they are using fixtures for testing&nbsp;,-1.0,-1.0,-1,14
"code follows 'good ruby and rails coding practices'. naming&nbsp;conventions are correct, methods in controllers are short and concise and there are no instances of 'spaghetti code'.",-1.0,-1.0,-1,28
the team has done a great job in testing. admin controller is tested extensively with relevant concise comments&nbsp;and rspec is used to test admin model with its validators.,-1.0,-1.0,-1,30
good coding practices have been followed. methods are crisp and single responsibility paradigm has been implemented.,-1.0,-1.0,-1,16
"yes, the team kept committing changes throughout the duration of the project.",-1.0,-1.0,-1,12
"edge cases are covered. when a company is deleted, the realtors and houses are also deleted along with it. the readme.md file also details how the edge cases are handled.",-1.0,-1.0,-1,31
most files seem to be following good ruby and rails practices.,-1.0,-1.0,-1,11
the team has handled all the associations between multiple entities quite well.,-1.0,-1.0,-1,12
"naming convention followed, code is neat. formatting is done. function calls are included.",-1.0,-1.0,-1,13
code in the files are auto generated. every function is implemented in a clean and readable manner and performs only one task. code on whole follows ruby on rails practices.&nbsp; &nbsp;,-1.0,-1.0,-1,32
"yes,&nbsp; -to-n and n-to-n relationships are handled correctly. tables are mapped correctly.",-1.0,-1.0,-1,16
the schema is very well defined. most of the suggestions provide as part of initial review are incorporated. the relationships are defined correctly and use of dependent destroy ensures that child records are deleted before parent record. this ensures there is consistency.,-1.0,-1.0,-1,42
code follows the basic crud structure given by rails and neatly explains what is being performed. the notices nicely explains the user what is happening. the db schema is designed to incorporate most of the requirements.,-1.0,-1.0,-1,36
yes the code quality seems good. team has taken care of keeping a good design.,-1.0,-1.0,-1,15
"yes, model and relationships are well designed and cover most of them.&nbsp;",-1.0,-1.0,-1,13
"yes, st cut did not have heroku link, this time apart from additional code + link is present and may of non functional flows seems to be in place",-1.0,-1.0,-1,28
the team committed their changes throughout the project period consistently.,-1.0,-1.0,-1,10
"yes, the team has shown proper team collaboration, two members of the team kept submitting&nbsp;the changes throughout the projects. and there are sufficient commits for round . &nbsp;",-1.0,-1.0,-1,29
basic functional test cases are written for four controllers.&nbsp;,-1.0,-1.0,-1,10
i did not find any problems in the first phase testing. all basic functionalities work as expected. bonus points for the ui. one of the best i have seen. the web application is intuitive and guides the user in performing any function. great job!,-1.0,-1.0,-1,44
the team was regular in committing changes. the team continued to work in round and made regular progress. all members contributed significantly. great job! could have started the project a bit earlier.,-1.0,-1.0,-1,32
"all dependencies are well modeled and designed. every model has correctly associated relationships and validations. your team is a pro! realtor to house and house to company , other relationships are implemented.",-1.0,-1.0,-1,31
models and controllers are well tested. all edge cases are covered and tests are comprehensive. the inquiries controller is especially well tested. all assert statements are well thought of. ,-1.0,-1.0,-1,29
"the application is deployed on heroku, and the user interface is easy to use.",-1.0,-1.0,-1,14
"reviewed the git code for all controller , models and views .&nbsp;standard ruby coding practices have been followed and code is easily readable&nbsp;",-1.0,-1.0,-1,24
the code is quite clearly written with all the good coding practices being followed.,-1.0,-1.0,-1,14
"the last commits were days earlier, hence no new commits were made during the second round.",-1.0,-1.0,-1,16
"yes. the test plan is present in the writeup. also, the links to youtube videos for the demonstration was particularly helpful too.",-1.0,-1.0,-1,22
"yes. the variables have been very keenly named. especially in the file, _rubric.html.erb, the variables are very accurately and effectively named, as there could have been much confusion otherwise. kudos for that.",-1.0,-1.0,-1,34
all of the features mentioned by the author works successfully in the demonstration as well as in the manual tests performed by me.,-1.0,-1.0,-1,23
"the write-up is very clear and directs user to the main issue very well. the flow is very structured, in the sense that first it gives a high level view of what expertiza is, it then tells about the book-mark functionality, and then tells the problem and how they came up with the solution. one of the most professional wiki i've reviewed.",-1.0,-1.0,-1,65
"yes, the project did work as intended. the video demonstration and manual testing were enough to prove this fact.",-1.0,-1.0,-1,19
"no, no new committed were added during the second round. the last commit was around days back, and no new code has been pushed since then.",-1.0,-1.0,-1,26
"yes, the team has indeed added test case and made a test plan for both the issues that they have resolved.&nbsp;",-1.0,-1.0,-1,22
the documentation is well done and gives a comprehensive overview of the project,-1.0,-1.0,-1,13
the documentation is well written and indicated clearly what was the problem tackled and how it was approached and solved,-1.0,-1.0,-1,20
doesn't seem to have new commits in round . last commit was on nd november,-1.0,-1.0,-1,15
they have included a test model video in which all the test are passing. it looks complete,-1.0,-1.0,-1,17
"yes, it looks they have converted all the cases into the test plan.",-1.0,-1.0,-1,13
"well explained, all the test cases have been explained and are self explanatory as well.",-1.0,-1.0,-1,15
"naming looks good, they had already added comment to the code in the first review.",-1.0,-1.0,-1,15
"yes, % coverage has been achieved as shown in the video.",-1.0,-1.0,-1,10
"yes, there are&nbsp;new codes committed during the nd round.",-1.0,-1.0,-1,11
there were a good number if commits in nd round.,-1.0,-1.0,-1,10
the features do work as expected. the authors have implemented all that they claimed that they would do.,-1.0,-1.0,-1,18
the feature implementation was good. the ta can't edit the rubric of the instructor. but the test cases are very limited.,-1.0,-1.0,-1,22
the coverall showed that the overall coverage increased (+ . %) to&nbsp; . % the coverage of the participant.rb file is %. so great job team! no suggestions.,-1.0,-1.0,-1,24
the writeup is really well written and has covered all the desired aspects along with the test plan. no suggestions.,-1.0,-1.0,-1,20
the tests specified in the participant.rb file run perfectly well . the same has been demonstrated in the video mentioned above. no suggestions.,-1.0,-1.0,-1,23
"yes, the cases discussed have been converted into appropriate tests.&nbsp;",-1.0,-1.0,-1,11
the team has added test cases. the test coverage has increased.,-1.0,-1.0,-1,11
"the code was well-written in the first round itself. the method names, variabble names and class names are intuitive and suggestive of the functionality.",-1.0,-1.0,-1,25
the tests look fine. it's easy to follow what the tests do.,-1.0,-1.0,-1,13
"all tests pass, all descriptions in the test plan are just the test cases in the rspec file, sooooooo yeah i guess they all exist.",-1.0,-1.0,-1,25
if it works just like in the video then definitely yes.,-1.0,-1.0,-1,11
the team did not make any commits from their first round. they had successfully fixed the issues in the first round stage itself.,-1.0,-1.0,-1,23
the team did not add any test cases and the coverage remained the same.,-1.0,-1.0,-1,14
the build is passing the test coverage and the bullet points mentioned in the issues section have been properly implemented to achieve the desired result. all the issues have been implemented as discussed.&nbsp;,-1.0,-1.0,-1,34
"the code for the export_file controller and models for question_advice are tested adequately with the questionnaires_controller sepc model file. the variables, methods and class names follow the general standard ruby practices.&nbsp;",-1.0,-1.0,-1,32
the test cases written work as specified. the features are working as intended and the functionality is getting implemented with minimal errors.&nbsp;,-1.0,-1.0,-1,23
"the wiki document provides the necessary details about the project and the tasks performed by the team. it gives a general overview of the project implementations, the functionality carried out by the team.&nbsp;",-1.0,-1.0,-1,34
"yes, a lot of commits were made mostly to fix the issues pointed out by the ci tools",-1.0,-1.0,-1,18
the team seems to have thoroughly tested the use case and the coverage has increased.,-1.0,-1.0,-1,15
pretty nicely written wiki. test plan also describes how various tests were performed.,-1.0,-1.0,-1,13
my testing shows things seem to be working as expected and documented.,-1.0,-1.0,-1,12
"yes, after testing the work manually, i could see that their features are working as intended.",-1.0,-1.0,-1,16
"yes, there were many parts of the code committed during round .",-1.0,-1.0,-1,11
i think the code looks good and very much follows the ruby style guide. the code also is dry. it looks well written and does not any changes.,-1.0,-1.0,-1,28
the deployment link hasn't been provided. though they have put videos for the same,-1.0,-1.0,-1,15
the test plan along with the existing issues and its solution is given.,-1.0,-1.0,-1,13
"yes, the admin has included the test plan cases in the automated tests.&nbsp;they have solved all the issues they were tasked with.",-1.0,-1.0,-1,24
pull request build passes well and there are no issues.,-1.0,-1.0,-1,10
"i think it is well written, quite understandable. it clearly and adequately indicates the working functionality. i can understand what the project is about.",-1.0,-1.0,-1,24
"the team has done few commits. one was on few sort fixes, while they other was on refactoring.",-1.0,-1.0,-1,18
the build has passed in travis ci and no conflicts have occured.,-1.0,-1.0,-1,12
"yes, the team has clearly stated the problem statement and the changes they have done to provide solutions to the problem. they have been given problems to which they have clearly provided the names of the files and the part of the code which is changed. the video explains the problem and the implemented solution perfectly without any ambiguity.",-1.0,-1.0,-1,59
"the working is perfect, everything works as intended. the team has explained this in a brief manner in their youtube video.",-1.0,-1.0,-1,21
yes the project was about testing and coverage has increased.,-1.0,-1.0,-1,10
the tests are good and it can be merged to the main line.,-1.0,-1.0,-1,13
"it is crisp and to the point, there are no clarity issues either.",-1.0,-1.0,-1,13
yes a lot of cases concerning a participant has been added.,-1.0,-1.0,-1,11
"yes, just fix the few issues present and that should be fine for it to be merged into main line as the feature seems to work and there isn't any major code issue.",-1.0,-1.0,-1,34
several commits were made to decrease the code climate warnings.,-1.0,-1.0,-1,10
easily one of the most clearly documented projects i have reviewed in this class so far. i liked their organization of the test plan within the write-up.,-1.0,-1.0,-1,28
"the code seems to be dry, and i had no issues with it in the st round.",-1.0,-1.0,-1,17
&nbsp;they added all the test cases! there is so much coverage now!,-1.0,-1.0,-1,13
"i think it covers all of the scenarios, but don't quote me. i don't have a great understanding of review response map.",-1.0,-1.0,-1,24
the code is well written. no issues with naming conventions or coding style.,-1.0,-1.0,-1,13
the code is well written. no issues with naming conventions/coding style.,-1.0,-1.0,-1,12
"the number of commits since the st round is impressive.&nbsp; significant improvements have been done pertaining to naming, indentation and overall code climate issues.",-1.0,-1.0,-1,25
the&nbsp;writeup clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory. the authors complement the descriptions of each test case with associated block of code and elaborate on the details of their inner workings.,-1.0,-1.0,-1,47
test cases were added. overall increase in the coverage range observed.,-1.0,-1.0,-1,11
the code is well organized and written &amp; ready to be merged into the production server.,-1.0,-1.0,-1,16
the writeup was significantly well written. almost all the changes were covered.,-1.0,-1.0,-1,12
the project works as intended. test cases are showing a positive impact on the results.,-1.0,-1.0,-1,15
"the write up covers all the issues and is well organized, including the code blocks and the screenshots.",-1.0,-1.0,-1,18
the team has a really good job of committing their code on a regular basis. there has been some code commits even in the nd round.&nbsp;,-1.0,-1.0,-1,27
"yes, the team has included the relevant test cases to test their changes and the overall coverage has increased by . % which i think covers the scope of this project.",-1.0,-1.0,-1,29
"in my opinion, this team has done pretty good work and the code looks like ready to be deployed on the production server.",-1.0,-1.0,-1,23
"from the video links that have been shared, it is very clear that the features are working as they were supposed to. even the test cases are passing. i see no issues with this part.",-1.0,-1.0,-1,35
there has been commits made in second round. one for adding comments and another one for fixing&nbsp;issue # the sorting of topics by topic number in assignments.,-1.0,-1.0,-1,28
the team has explained the issue and the solution they chose with enough details to understand to way of implementation.,-1.0,-1.0,-1,20
all the variables and function names used are appropriate.&nbsp;,-1.0,-1.0,-1,10
the write up is impressive and very detailed. it has been documented well which helps to understand about the project and the code implementation. it also provides detailed test plan which makes it easier for end user to do ui testing.,-1.0,-1.0,-1,41
the write up addresses details of all the three problem statements along with the code changes done in every file and the files added. the team has also added screenshots of the manual testing and the video demonstrating the functionality they added.,-1.0,-1.0,-1,42
"the team has made minimal changes in the code to fix the issues. no new class, function or variable has been added.",-1.0,-1.0,-1,22
"the code was already delivered in the first round. hence, no commits this round. the author has regularly pushed commits.&nbsp;",-1.0,-1.0,-1,21
"team has added many tests. coverage has increased from to %, which is impressive.&nbsp;",-1.0,-1.0,-1,14
"yes, i followed the youtube link to check the tests and they have tested the controllers.&nbsp;",-1.0,-1.0,-1,17
"yes, the problem statement was explained thoroughly. also, the team very aptly described why the issue needs to be fixed. great work !",-1.0,-1.0,-1,22
"tested in the links given, the changes are working correct. the server is up and i was able to reflect the steps mentioned.&nbsp;",-1.0,-1.0,-1,24
"yes, as mentioned in the problem statement, the solution is delivered. it works fine.&nbsp;",-1.0,-1.0,-1,15
commits were done long ago and commits are regular. no new commits as changes were fixed in earlier round. commit titles are well written and not ambiguous.,-1.0,-1.0,-1,27
"since, the changes are reflecting, it looks good to be merged.",-1.0,-1.0,-1,11
travis tests have passed. there were some initial failures but the team has fixed it. there are no lingering failures.,-1.0,-1.0,-1,20
code looks good. well formatted and naming conventions are followed.&nbsp;,-1.0,-1.0,-1,11
no new commits as fix was delivered in first round.,-1.0,-1.0,-1,10
"impressed by the coding and the way the solution was implemented. they implemented a complex feature in simple lines of code. coding standard has been followed, naming conventions are followed and code is formatted.&nbsp;",-1.0,-1.0,-1,35
"no, its not as the coverage is increases by small amount.",-1.0,-1.0,-1,11
"they have added the test cases with context as ""when participant is added to the assignment using csv"" and the test case covers the required functionality that was intended to be&nbsp; implemented",-1.0,-1.0,-1,33
"great work. clearly understandable. functions are of appropriate length, codes are in appropriate&nbsp;methods,&nbsp;code is very well commented, code follows ruby style guide. good naming. &nbsp;",-1.0,-1.0,-1,29
"the authors considered different pre-conditions, edge cases, invalid input values, and other possibilities and i clearly well written. test plan looks complete",-1.0,-1.0,-1,23
good work on including test cases. the app works fine after testing.,-1.0,-1.0,-1,12
"the variables, methods and class names are aptly named. i could not find names which are not suggestive of functionality.",-1.0,-1.0,-1,20
could not detect any flaws. works exactly as it has been been in the wiki. good guidance.&nbsp;,-1.0,-1.0,-1,18
the code is well written and well commented and follows ruby style guide.,-1.0,-1.0,-1,13
the writeup is clear. it is easy to understand what the project does.&nbsp; &nbsp;,-1.0,-1.0,-1,15
"the team added new commits in the second round as well to improve their code style, improve codeclimate issues and changes other reviewer's suggested. very few teams have done this. great work.",-1.0,-1.0,-1,33
"yes, the team added relevant test cases which increased the overall coverage.",-1.0,-1.0,-1,12
the team has written their wiki page in a very detailed manner. they even added the video links which were missing in the first round as suggested. thank you and good job :),-1.0,-1.0,-1,32
the code changes are well organized and nothing is out of place.,-1.0,-1.0,-1,12
"the test plan section is present, and it is covering all the scenarios.",-1.0,-1.0,-1,13
the features work as intended. edge cases are properly executed.&nbsp;&nbsp;,-1.0,-1.0,-1,12
the write up clearly explains about the modifications made in expertiza.&nbsp; it indicates the functionality of their work which is topic management and the problem statement is clearly elaborated. it provides the files changed and also the code snippets in which the changes are made. the write up also provides visual&nbsp;representations of the changes made.&nbsp;,-1.0,-1.0,-1,59
yes no conflicts at all which needs to be resolved,-1.0,-1.0,-1,10
"yes, team has added the test cases and they cover the portion tp check whether the email has been sent to or not.",-1.0,-1.0,-1,23
no there were no conflicts and do not need to be resolved.,-1.0,-1.0,-1,12
"yes, i feel the code is written in a good format. i checked the changes made by the authors and didn't find any bad naming or anything else.",-1.0,-1.0,-1,29
" . functions are of appropriate length . codes are in approriate&nbsp;methods . code is very well commented. overall, great work.",-1.0,-1.0,-1,19
the code is very well written and comments are properly given. also the variables are descriptive and ruby guidelines are followed.,-1.0,-1.0,-1,21
a commit was done in second round addressing issues from reviews.,-1.0,-1.0,-1,11
"tests have been thoroughly and very well performed. also, well documented.&nbsp;",-1.0,-1.0,-1,12
"writeup&nbsp;is very well written, contains enough&nbsp;screenshots and explanations&nbsp;of the code.",-1.0,-1.0,-1,16
system works as expected and this is evidenced by tests and videos.,-1.0,-1.0,-1,12
the write-up is well written explaining all the steps undertaken to make desired changes and displaying how the system works after&nbsp;the changes have been made (with screenshots). they have also added test plans in the wiki page,-1.0,-1.0,-1,40
"wiki has been well written, with enough clarity and description",-1.0,-1.0,-1,10
"yes, the code has been written aptly and to the point. the intention is clear.",-1.0,-1.0,-1,15
"the code is well written, the way the list function was split into multiple modular functions is appreciable. a great amount of effort has gone into fixing the issues.",-1.0,-1.0,-1,29
"yes, the team actively committed to the project during the second round.",-1.0,-1.0,-1,12
yes the team did add test cases that increased coverage. they are appropriate for the scope of the project.,-1.0,-1.0,-1,19
"the write up is well written, elaborate, and clearly elucidates both the manual test cases considered as well as the automated tests implemented. screenshots of both cases were also included as well. steps for manual testing were clearly written.",-1.0,-1.0,-1,39
"the code was written clearly, dry, and intuitive to follow the intended functionality.",-1.0,-1.0,-1,13
"yes since it was a unit test assignment, tests have been added and overall coverage has increased",-1.0,-1.0,-1,17
the code was well written even in the first round.,-1.0,-1.0,-1,10
"the tests cover all the scenarios. given that the problem statement is pretty open-ended, the changes fulfil the purpose.",-1.0,-1.0,-1,20
the write-up is informative and provides all necessary details of the changes made.,-1.0,-1.0,-1,14
the team add some comments and test cases during the nd round.,-1.0,-1.0,-1,12
the team added test cases for test_case.rb and the coverage has increased. which makes the overall coverage increases relatively a large extent.,-1.0,-1.0,-1,23
the plan gives enough roles for the first issue to test if the code works well.,-1.0,-1.0,-1,16
"their&nbsp;variables, methods, and class names are good&nbsp;",-1.0,-1.0,-1,10
"yes their code works, and some edge cases are also correct.",-1.0,-1.0,-1,11
"the writeup is great, in first round they did not have a test plan part. but they added it in the second part.",-1.0,-1.0,-1,23
they don't have code problem for the first round.,-1.0,-1.0,-1,10
yes. they are updating code to fix code climate issues. ,-1.0,-1.0,-1,10
"they achieve % during first round, so i don't think there are any new test need to be added. ",-1.0,-1.0,-1,19
"the wiki page provides clear details about the work, and very easy to understand. just like round . ",-1.0,-1.0,-1,17
"edge cases are tested, and all scenarios for each method are tested. ",-1.0,-1.0,-1,12
the team has considerably improved the write-up. the write-up was very inefficient and dint provide details of the code-base also the video was encoded and impossible to view in round . the team has rectified all these issues with round . they have documented their fixed more clearly with screen shots and code this time.&nbsp;,-1.0,-1.0,-1,57
yes the code works has expected. it accepts the utf- codes now and also parses html tags in reviews like expected,-1.0,-1.0,-1,21
they seem to have included a testing plan have mentioned it in their report. they seem to have considered edge cases and other possibilities.,-1.0,-1.0,-1,24
"many test cases were added, with overall test coverage increasing for the project.",-1.0,-1.0,-1,13
the work takes care of all the edge cases accurately.,-1.0,-1.0,-1,10
the wiki page has showed up what the expertiza is and some examples have show up what the task of the team is.,-1.0,-1.0,-1,23
don't see any dry issues. well written test code,-1.0,-1.0,-1,10
they have explained how they have implemented each task by adding/editing files.,-1.0,-1.0,-1,13
it is clear what the project does and why it does it.,-1.0,-1.0,-1,12
"during the first review, it appeared that photos or destinations could not be added. i was able to upload photo and destinations this time.",-1.0,-1.0,-1,24
"the location_spec tested that all fields where had valid values could be entered for the location model. the group did test one controller thoroughly, staticpagescontroller.",-1.0,-1.0,-1,25
the code appears to be in good ruby format and is easy to follow.,-1.0,-1.0,-1,14
the team was performing updates to their application up until march .,-1.0,-1.0,-1,11
the overall code is in good ruby format. the controllers are performing mainly crud operations while the models are handling the business logic.,-1.0,-1.0,-1,23
the team was making updates/changes to their application right up until march ,-1.0,-1.0,-1,13
i did not note any edges cases that did not work.,-1.0,-1.0,-1,11
"yes, they seem to have pushed new code about everyday according to the commit history.",-1.0,-1.0,-1,15
the members of the team were regular in pushing their updates to the git and updating them. they made sure to commit even the smallest changes. each of the team mates divided the task and worked on separate modules which shows they are very organized.,-1.0,-1.0,-1,45
commits are done for every change which shows good use of git to maintain their code.&nbsp; readme is also provided and mentions all the details that every actor is supposed to do.,-1.0,-1.0,-1,33
they are following mvc. the code is maintainable and readable.,-1.0,-1.0,-1,10
according to the commit graphs and contributions seems like all three members in the group have put in effort to make changes to the code in round .,-1.0,-1.0,-1,27
"yes the project code consists of relationships that are one to many, many to one, one to one and foreign key dependencies.&nbsp;",-1.0,-1.0,-1,23
"&nbsp; yes, the team has been active and kept pushing their updates regularly. since the code is separated into several controllers, it is easy for all the developers to work in parallel. i can see that the code is easily maintainable and the developers if they perform any updates or changes, they can easily push it.",-1.0,-1.0,-1,56
"the code follows ruby coding practices like do not repeat yourself, readability and maintainability. the code on git is very well separated into different modules. it is easy for any developer to navigate through the code and make any changes he would want to make.&nbsp;",-1.0,-1.0,-1,46
yes. most of the coding practices for ruby on rails seems to be followed in the code. their routes.rb is just so simple. just routes. they used all the predefined routes which is awesome!&nbsp;,-1.0,-1.0,-1,36
yes. it seems that the team kept up with the&nbsp;work fairly throughout the time of the project.,-1.0,-1.0,-1,19
there are a lot of commits from the team. there are branches as well with a lot of commits in them throughout the time. so the team did great work and used all the time they had!&nbsp;,-1.0,-1.0,-1,38
the code seems nicely written. follows good ruby practices. evenly distributed code between controllers and models.,-1.0,-1.0,-1,16
the team consistently kept adding to the codebase throughout the time of the project.,-1.0,-1.0,-1,14
the system works fine with the edge-cases i came up with.,-1.0,-1.0,-1,12
"from what i tested, the program worked with no problem.",-1.0,-1.0,-1,10
the program worked fine with the edge-cases&nbsp; i came up with.,-1.0,-1.0,-1,13
the interface looks straight forward. it is good to have all the related links listed.,-1.0,-1.0,-1,15
the code looks very neat. design seems all good to me.,-1.0,-1.0,-1,11
code quality is exellent. the members have shown innate knowledge of ruby practices and implementation basics. i don't find any bad namig schemes. the code is readable and understandable.,-1.0,-1.0,-1,30
the team member kept submitting changes after the second round. they have been consistent and also the fact that both members have contributed toward writing the readme.md is appreciated.&nbsp;,-1.0,-1.0,-1,31
they had implemented this correctly from the first round of review itself.,-1.0,-1.0,-1,12
"yes, all the team members have contributed and kept pushing code with intelligent commit messages.&nbsp;",-1.0,-1.0,-1,16
the readme.mdfile sets an example on how to document a working code and software. they have provided each and every detail required for an user of the web app.&nbsp; the validations are in place. the edge cases have been tested and give proper errors when and where required. the waitlist and booking manifesto works perfectly.&nbsp;,-1.0,-1.0,-1,58
"yes, and it also has a well written readme file.",-1.0,-1.0,-1,10
"yes, the code follows good ruby and rails coding practices. i also like how the helpers module is not underused.&nbsp;",-1.0,-1.0,-1,21
the team indeed handled most of the mappings in their respective models with correct -to-n and n-to-n relationship and as a result all destroy methods worked properly.,-1.0,-1.0,-1,30
the code is well written and follows the guidelines mentioned above.,-1.0,-1.0,-1,11
the models clearly indicate that cardinality constraints have been taken into account by the author.,-1.0,-1.0,-1,15
the code does follow good practices. functionality seems to be split between the model and controller. there are validations in place.,-1.0,-1.0,-1,21
there have been really strict and accurate implementations of the naming conventions.,-1.0,-1.0,-1,12
"there hasn't much been implemented, but as far as they have, there are proper practices implemented.",-1.0,-1.0,-1,17
the team focused on implementing the functionalities.&nbsp; i did not find any bad naming convention in any of the controllers or models. i also did not find any kind of&nbsp;heavy nested blocks or too long logic methods. the coding followed good&nbsp;dry for having only one model of users and not having different for every kind of user. &nbsp;,-1.0,-1.0,-1,63
"the team did keep committing their work on the github repository during the two rounds.&nbsp; they had followed a good habit of naming the commits well, which not only kept a track of how they proceeded but also made easy for others to understand how they are approaching. they also had a good readme file updated.",-1.0,-1.0,-1,57
"yes, the team kept pushing the code constantly. the commit messages are also pretty clear as to what has been implemented.&nbsp; they gave created sufficient branches to implement functionalities. they didn't&nbsp;push code on the last moment and that's a good thing. every contributor has carried out individually and constantly pushed it to github.",-1.0,-1.0,-1,58
the code follows good ruby and rails practices. the team not only focused on functionalities but also worked on the front end. the code shows readability and maintainability. they have made a good number of commits throughout the development cycle.&nbsp;,-1.0,-1.0,-1,41
i believe that all the relationships are handled properly and i did not find any evidence of a mapping done wrongly.,-1.0,-1.0,-1,21
the team has regularly submitted changes to their project throughout the round . they have also committed changes with proper summary details which describes the functionality that was done.overall all team mates have contributed properly.,-1.0,-1.0,-1,35
the code strictly follows good ruby and rails coding practices,-1.0,-1.0,-1,10
"yes, after looking at the code in github, it looks readable, elegant and follows the dry principle. it would be easy for any developer to understand and work on it. i see that each module handles only one task. function calls have been made to handle multiple tasks. also, separate method calls have been used for different requirements. also, all the names of the variables used were relevant and make sense when we go through the code. i didn't find any issues with coding. &nbsp;",-1.0,-1.0,-1,86
"all the relationships in the project are very well implemented following all the database principles. this, in turn, helped the team to develop their tour management application without any discrepancies. also,&nbsp;the team has very well implemented the user logging and tour listing. looking at the code, models and controllers were very well sorted and separated.",-1.0,-1.0,-1,57
"yes, the team has very well implemented the user logging and tour listing. looking at the code, models and controllers were very well sorted and separated. after signing up and using the application, i felt the team would have definitely tested the application.",-1.0,-1.0,-1,43
"after looking at the code on git, i felt the code was well written, it was readable, elegant and follows the dry&nbsp;principle. it would be easy for any developer to understand and work on it.",-1.0,-1.0,-1,37
all the relationships were very well designed and i found no discrepancies while executing insert and delete operations while using the applications. the outputs while implementing these operations were on par with what was expected.,-1.0,-1.0,-1,35
"the code was well written, it was neat, concise and follows the dry principle. variable names used were relevant to their purpose. models and controllers code were well indented. also, it is easy for a developer to understand the code and make further developments on the application. i felt all the basic practices of ruby and rails coding were followed. all the functionalities were modularised precisely. .",-1.0,-1.0,-1,66
the team managed to keep pushing their changes throughout the period of development. after the first submisson&nbsp;they continued pushing their changes to github.,-1.0,-1.0,-1,25
"they successfully included belongs_to and has_many to indicat e relationships in models and the&nbsp;&nbsp;tables made&nbsp;seem optimal to me, hence db&nbsp;design was very good.",-1.0,-1.0,-1,30
all the members consistently pushed changes and the commits were not made at last minute (throught day),-1.0,-1.0,-1,17
from the commit history the team had been pushing almost daily for the last days.&nbsp;,-1.0,-1.0,-1,16
the basic functionalities were implemented using the conventions followed while developing in rails. they adhered to the dry principle and used minimum code to cover the functionalities.,-1.0,-1.0,-1,27
"yes, changes were done quite regularly. based on my/our comments from review , i see changes in readme file during round .&nbsp;",-1.0,-1.0,-1,22
"all the models were implemented in a very good manner with all the required validations and relationships. relationships that were mentioned in the project description including tour-customer, customer-booking, tour-booking and other relationships between tour and customer with review,bookmarks and bookings were addressed.",-1.0,-1.0,-1,46
review has been thoroughly tested. testing is done to ensure that no blank review with blank subject or blank tourid is added by the user.,-1.0,-1.0,-1,25
"i see commits from february through february , on a near-daily basis.",-1.0,-1.0,-1,12
the basic functionality works perfectly fine. most of the features had been completed in the round . bugs were fixed in round .&nbsp;,-1.0,-1.0,-1,22
the&nbsp;team&nbsp;has been&nbsp;commiting changes in the round and throughout the project. commits were&nbsp;made from time to time and&nbsp;changes were being well commented and pushed to github properly.,-1.0,-1.0,-1,36
the&nbsp;db design is appropriate and handles the relationships properly. there was a mapping table for such -to-n relationships and the models handle the relationships correctly.,-1.0,-1.0,-1,28
the team has been pushing changes to thorughout the project periodically from time to time. the functionalities are well developed and working and the ui is simple.,-1.0,-1.0,-1,27
the team has thoroughly tested the locations controller and bookmark model using rspec.&nbsp;,-1.0,-1.0,-1,14
the readme file was extremely well explained and depicted everything implemented in a very informative manner. the application was user friendly and easy to navigate around.&nbsp;,-1.0,-1.0,-1,27
&nbsp;the information posted on git looks good.&nbsp; the file structure appears to be well organized and the code looks very clean.&nbsp; the project has several commits with comments and two branches. the comments were well structured.,-1.0,-1.0,-1,39
tests are thoroughly done using rspec for the locations controller and bookmarks model.,-1.0,-1.0,-1,13
"the team kept submitting changes throughout the project. along with the changes, the team also mentioned the commits made in a proper manner. the commits were made meaningfully, which would have made it easier for the team to track the changes made on the repository. the readme was also updated according to the changes made, which shows that the team used to regularly make updates. even after round , several commits and merges were made to the main branch of the repository. after round , the team has focused more on the testing functionality.&nbsp;",-1.0,-1.0,-1,93
"yes, a lot of controllers and a model has been tested.",-1.0,-1.0,-1,11
"yes, i didn't find any missing features in the first round and the functionalities still exist.",-1.0,-1.0,-1,17
code is very clean and readable.&nbsp; comments are very thorough.&nbsp; bookings and bookmarks are handled in separate controllers ensuring that those tasks are separated from one another.&nbsp; method and variable names are descriptive and appropriate.&nbsp; methods are of appropriate length and handle one task.,-1.0,-1.0,-1,48
"yes, the db design complies with normalization standards and there are appropriate associations defined in the models to handle -to-n and n-to-n relationships.&nbsp;",-1.0,-1.0,-1,27
"yes, at least one model and one controller are thoroughly tested (and then some).",-1.0,-1.0,-1,14
code is clearly dry. also appears that much of the code checking or updating object state is handled in the model classes.,-1.0,-1.0,-1,22
"yes, team (all members of the team) kept pushing their work throughout the entire period of time, including in the round period. the repo contains commits and branches. there are multiple commits starting from feb through feb , which happened during the round period. the team did very well in terms of maintaining the code, fixing bugs and pushing their code on regular basis.&nbsp;great amount of work has be done throughout these commits.",-1.0,-1.0,-1,74
"edit: yes, as in the first review period. there are already commits. great amount of work has be done throughout these commits. commits on the debugbranch. all three members of the team has done and pushed their work. as of february -th (first review): there are commits on the master branch and branches. all team members contributed&nbsp; to the project. mainly all commits are done by aurora and george. good job and it is easy to see involvement of the entire team (oppose to my team).",-1.0,-1.0,-1,87
"yes, the team (all members of the team) kept pushing their work throughout the entire period of time, including round time period (fixing bugs). the repo contains&nbsp;only branch - master. master branch has commits and more than commits are performed after peer review period one (feb - march ). this indicates that team has attempted to improve the app functionality and fix the bugs that were reported during the peer review period one. &nbsp; the team did&nbsp;very well in terms of maintaining the code, fixing bugs and pushing their code on regular basis. the very first push (initial commit) took place on feb and since then all team members worked on the code. all three members of the team (drupadhy, ajain , amody) performed relatively the same amount of work based on number of commits, which indicates contribution from all three members. great work by the team!",-1.0,-1.0,-1,147
yes! great work by all team!! all three students made&nbsp;equally the same&nbsp;&nbsp;contributions! there is only branch - master that has commits. drupadhy made commits. ajain made commits amody made commits starting weeks ago. great work by the team!,-1.0,-1.0,-1,42
"yes, the team has been pushing in changes since feb .",-1.0,-1.0,-1,10
they have handled all the edge cases perfectly. i wanted to test with the partial seats cancellation to test the waitlist and confirmation functionality thoroughly.,-1.0,-1.0,-1,25
yes they have tested the user model. they have made the username unique in place of the email id. so it works perfectly based on that.,-1.0,-1.0,-1,26
it pretty much works apart from admin functionalities.. if something does not the team has already mentioned in the read me file.,-1.0,-1.0,-1,22
yes the team has been pushing changes to the repository on a regular basis.,-1.0,-1.0,-1,14
yes. the team did a great job in this part. all members in this team are keeping on working all the time and fixing the bugs after the first round of review.,-1.0,-1.0,-1,32
"yes, the team kept pushing their commits throughout, which shows that they have been working on the project regularly.&nbsp;",-1.0,-1.0,-1,20
"yes, the team has tested a few models and controllers completely.",-1.0,-1.0,-1,11
the functionalities used seems to have followed good ruby and rails coding practices. the code is readable and the readme is good too.,-1.0,-1.0,-1,23
"the code follows good ruby and rails coding practices. all the models, controllers and views seem to have been created using scaffold,which is good. the code is understandable and the logic seems to be present correctly in the model.",-1.0,-1.0,-1,40
ui is pretty decent and straightforward for the functionalities that have been implemented so far.,-1.0,-1.0,-1,15
"the team seems to have used scaffolding, which is a good coding practice.&nbsp;",-1.0,-1.0,-1,14
the team has not tested a model or a controller thoroughly.,-1.0,-1.0,-1,11
the commit log reflects the teams efforts in pushing changes regularly and starting well before the deadline. the commit messages are clear in terms of representing the functionalities being built.,-1.0,-1.0,-1,30
the coding seem to adhere good practices in terms of moving the business logic into the models and the role based access related checks in the controller. the variable names and style of coding makes it easy to understand.&nbsp;,-1.0,-1.0,-1,40
"yes, the team members have frequently pushed their codes and have contributed equally.",-1.0,-1.0,-1,13
yes the readme was well written and the ui was intuitive.,-1.0,-1.0,-1,11
the code quality is good. models are described well and the controllers methods are understandable. the readme is very descriptive as well.,-1.0,-1.0,-1,22
regular commits can be seen based on the network graph.,-1.0,-1.0,-1,10
yes. based on the network graph shown in https://github.ncsu.edu/sbasnet /tourmanagement/network.,-1.0,-1.0,-1,15
"the code inside the controllers and views as well as models was readable when i looked at it.function names followed the standard format, class names were singular instead of plural, erb code in the views was indented.",-1.0,-1.0,-1,38
there seemed to be no issues with committing changes throughout the project period.,-1.0,-1.0,-1,13
there don't seem to be any issues with database mapping.,-1.0,-1.0,-1,11
it seems that pushes to the github are being made on a regular basis.,-1.0,-1.0,-1,14
there is not a single missing feature in the app!,-1.0,-1.0,-1,10
the code follows excellent ruby practice. the team has followed dry principle throughout. i found a lot of method calls and definition for all models. the code is very easy to understand and is efficiently implemented.&nbsp;,-1.0,-1.0,-1,37
the code handles all relationships perfectly. this allows for all dependents to be destroyed correctly.,-1.0,-1.0,-1,15
every member continuously pushed all changes to the git. the proportion of commits was lesser in round . but they managed to have all the features implemented.,-1.0,-1.0,-1,26
"all the models make use of the has_many, belongs_to relationships. hence all 'destroy' commands work properly",-1.0,-1.0,-1,16
yes! all the changes and add ons to the code seemed to be pushed to the git regularly with clear commit messages explaining these changes.,-1.0,-1.0,-1,25
"they have tested all features in models- bookings, bookmarks, waitlist, reviews,locations",-1.0,-1.0,-1,12
the team has committed and fixed a lot of bugs since round .&nbsp;,-1.0,-1.0,-1,13
the code is readable and methods contain only code that perform what the names describe.&nbsp;,-1.0,-1.0,-1,16
the code is clean and readable. there is no method is too long and no bad namings.,-1.0,-1.0,-1,17
they have proper -to-n and n-to-n relationships. i didn't find the clear problem on these relationships,-1.0,-1.0,-1,20
&nbsp;they keep pushing their changes throughout the project period.,-1.0,-1.0,-1,10
they have test on most controllers and the user model,-1.0,-1.0,-1,10
i did not find any major problems in the first round. i believe all the functionality is working for this project!,-1.0,-1.0,-1,21
"their project handles the edge cases well, and their readme explains how they tested their edge cases.",-1.0,-1.0,-1,17
it looks like you did a good amount of testing.,-1.0,-1.0,-1,10
the code appears to be in good order and of good structure of what the team had changed.,-1.0,-1.0,-1,18
i did not see any issues with the code the team as written. everything appears to be of good format and named appropriately.,-1.0,-1.0,-1,23
"from the code that is visible in the pull request, the code appears to be in good order and&nbsp;form.",-1.0,-1.0,-1,21
"from the code that is visible in the pull request, the code appears to be in good order and form.",-1.0,-1.0,-1,20
i don't see any code issues that are of concern. all the coded added/modified by the team appears to be of good form with variables appropriately named.,-1.0,-1.0,-1,29
"the functions followed dry principle. i have not found any inconsistencies through out the code. since,the code was modulated properly, it was easy to comprehend.",-1.0,-1.0,-1,26
there are new commits done by the team in the second round. most of the commits are done by a single person.&nbsp;,-1.0,-1.0,-1,23
"the code is well written and tested, so the code is ready to be deployed onto the production.",-1.0,-1.0,-1,18
this project does not require any test plan and hence nothing is expected out of them.,-1.0,-1.0,-1,16
"yes, the variables, methods and class names are very relevant to their respective functionalities. by looking at the code i could understand why each variable was defined.",-1.0,-1.0,-1,27
the writeup is well written. the team members&nbsp;have included everything including how to setup the environment. the problem statement is well defined.,-1.0,-1.0,-1,24
"the code follows all the dry principles, there are proper comments for all the code that is implemented.&nbsp;",-1.0,-1.0,-1,19
 . all the long functionalities were correctly broken up and refactored into smaller methods.&nbsp; . the create method has been optimised properly using switch case which is now easy to understand. . the code follows all the dry properties properly.,-1.0,-1.0,-1,38
"yes, there are commits during the nd round, the team have refactored the code to reduce occurrence of certain words. they have fixed some rspec issues. the code climate issue that was identified before has been fixed in this commits. the code climate and rspec has been modified.",-1.0,-1.0,-1,48
the team added test cases in rspec testing suite. they did well and tested their modules.&nbsp;,-1.0,-1.0,-1,17
"i felt the code is ready to be deployed onto production, i couldn't find any potential bugs or errors in the code. the team have given proper comments of what they have done, so it will be easier for any other team to pickup from where this team has stopped.",-1.0,-1.0,-1,51
"the writeup explains most of the work that is done, they have implemented all the design patterns correctly.",-1.0,-1.0,-1,18
there were no build errors or conflicts in the pull request.&nbsp;,-1.0,-1.0,-1,12
the writeup done by the team explained all the functionalities and clearly showed the problem statement. they have improved the writeup based on the previous feedback.,-1.0,-1.0,-1,26
"the project description is clear and understandable. the problem statements are given in simple words which made it easy to understand the work. they have clearly cited the code before and after the changes, so i could easily find the changes.",-1.0,-1.0,-1,41
they have created test cases for each newly added class,-1.0,-1.0,-1,10
i think it is a lot of code to review. the team has done its best to serve the purpose of the problem statement. they even did change a few of the views.&nbsp;,-1.0,-1.0,-1,34
"the wiki page gives the test plan, seems like the team has build some test cases or modified the older one. they have test cases to&nbsp;&nbsp;spec/controllers/account_requests_controller_spec.rb&nbsp;file. since this is not testing project, they haven't mentioned about test coverage in the wikipage. it looks like the team added additional test cases to check the account_requests controller.",-1.0,-1.0,-1,64
"the problem stated in the wiki page is that a single controller was responsible for all the action carried out. the team has split this controller into parts each addressing specific action. for these controllers, they have written test cases. apart from these, they have commented on the methods which did not have any comments.&nbsp; they have used partial views to follow dry principle.",-1.0,-1.0,-1,65
the main purpose of the project was to split the controller into two for the sake of better understanding two different actions. the variable names that are been used in the project are sensible.&nbsp;,-1.0,-1.0,-1,35
the features work as intended. at least&nbsp;i could see some change in the view such as paginating&nbsp;list of users.,-1.0,-1.0,-1,23
"the document is good. i thought the team should have included some code in order to explain in a better way, but the git says that they have modified files which is like many files. so it is too much work for the project. good work team.",-1.0,-1.0,-1,47
"the team did write the code well following the design book i.e. adding comments, dry principles, rendering partials in views, etc.&nbsp;",-1.0,-1.0,-1,23
"i did try to perform system operation from the ui. it seems to work fine. i have not given much input or tried testing edge cases but a simple work is working fine. this project is about refactoring users controller. the code was shifted from one controller to another, partial codes are written and are rendered in the views.",-1.0,-1.0,-1,59
"yes, the code can be deployed onto to the production server as the code works fine from front end.&nbsp;",-1.0,-1.0,-1,20
i have checked the pull request and build is passed in travis ci.&nbsp;,-1.0,-1.0,-1,14
"i am impressed with the write up. it included code, test plan and is well organized by capturing important details required to understand what are the changes been made. keep up the good work.",-1.0,-1.0,-1,34
the code was modified a bit as they had to shift part of code from one controller to another which was responsible for it. they have followed most principles. precise comments are added to know what is going on in the method.,-1.0,-1.0,-1,42
since the project is concerned about refactoring the code and not optimizing it or adding additional features. the project did work as intended. the features intend to work as they are supposed to in this refactor project.,-1.0,-1.0,-1,37
the code is looks fine to me and can be deployed to production.,-1.0,-1.0,-1,13
it looks fair enough. will be checking on completion after the final submission.,-1.0,-1.0,-1,13
the code was very well written. there has been significant improvement from first round.,-1.0,-1.0,-1,14
the code seems to be fine. but i can see only one commit made.,-1.0,-1.0,-1,14
"yes, they had a long conversation with an admin and their merge has been accepted as well.",-1.0,-1.0,-1,17
the writeup is pretty extensive. they have included most of the details with infographics as one would expect.,-1.0,-1.0,-1,18
they had some problems with code and the admin made them fix them. but it looks all good now!&nbsp;,-1.0,-1.0,-1,20
just commits were made as far as i can see.,-1.0,-1.0,-1,10
yes. although most of the comments are basic syntax changes! but good work guys!&nbsp;,-1.0,-1.0,-1,15
"they have made good changes, and they have used intuitive variable names throughout their commits. looks&nbsp;fine.",-1.0,-1.0,-1,18
the writeup is detailed and all information is provided along with snips of code which implement the writeup which made it easy to comprehend the changes done.,-1.0,-1.0,-1,27
"code quality is really good. yes, they have followed best practices in their code.",-1.0,-1.0,-1,14
yes. the writeup seems to be written perfectly with detailed problems found.,-1.0,-1.0,-1,12
"code changes look great. the dry principle has been followed and also the knowledge of past codes was properly used to merge the new code in a readable and understandable fashion, rather than using completely new files for implementation. the rust style guide has been followed.",-1.0,-1.0,-1,46
"the team did do very good manual testing and have added the following screencasts demoing the tests. the coverage cannot be figured as this is not an expertiza project.&nbsp; i am not sure if the maintainers require test cases to be added, but does not seem to be the case to me.",-1.0,-1.0,-1,53
"the code alreade got merged, which means it is ready to be deployed.&nbsp; i don't find anything of major concern to me.&nbsp;",-1.0,-1.0,-1,25
the project was not an expertiza project. the checks in the servo repo passed and they successfully for the changes merged which is awesome. cheers to the team. :)&nbsp; &nbsp;,-1.0,-1.0,-1,30
"i am not sure what ui was expected out of this project, but the implementation of the algorithm can be seen clearly in the sine_wave implementation function and tests.&nbsp;",-1.0,-1.0,-1,30
they have included and figured out strategy design pattern for their work and they are following it throughout their documentation. the work is described very neatly module-wise which is extremely helpful to understand. great work!,-1.0,-1.0,-1,36
the writeup is great. the idea of including flow chart is amazing and this is the first team i saw doing it. the documentation is well planned and well written.,-1.0,-1.0,-1,30
i think this code will be production ready once after thorough testing of the impacted areas.,-1.0,-1.0,-1,16
good job: pull request looks fine. the team has posted the travis&nbsp;ci build history and it seems like the build is successful and all the test cases passed.,-1.0,-1.0,-1,30
good work done by the team...!!! the code looks clean and following the ruby and rails guidelines. the method names are concise and methods are also not long. great job...!!!,-1.0,-1.0,-1,30
"though there were no commits, but it looks like the team has completed all the changes.&nbsp;",-1.0,-1.0,-1,17
the code works fine and general ui is good and flowing. it is necessary that the functionality should not change after refactoring and team have followed this fact. good job..!!!,-1.0,-1.0,-1,30
good work team !!!! the document is clear and concise. it properly shows what the problem is and how the team has solved it. i really like the idea of putting the code snippets in the documentation which gives a clear idea of what the code has been refactored. suggestions from round were implemented by the team,-1.0,-1.0,-1,56
good work team !!!! the document is clear and concise. it properly shows what the problem is and how the team has solved it. i really like the idea of putting the code snippets in the documentation which gives a clear idea of what the code has been refactored.,-1.0,-1.0,-1,48
good job..!!!! the code works fine and general ui is good and flowing. it is necessary that the functionality should not change after refactoring and team have followed this fact. good job..!!! &nbsp;,-1.0,-1.0,-1,33
"their write-up is very descriptive and to be honest, their project seems complex than the others.",-1.0,-1.0,-1,17
the code is well written and they are in constant communication with the developers to rectify their errors which is a good sign. great effort by the team!,-1.0,-1.0,-1,28
the ui works as intended and the features work as they are supposed to,-1.0,-1.0,-1,14
new test cases were added and the coverage increased from % to . %.,-1.0,-1.0,-1,11
all the builds have passed and i think it is ready to be deployed,-1.0,-1.0,-1,14
the system operation from the ui works as intended and the features are working as they are supposed to,-1.0,-1.0,-1,19
the code is nice. i think it covers all the instructions required to handle such issues.,-1.0,-1.0,-1,16
the writeup explains most of the changes and others were self-explanatory. it was easy to follow the changes.,-1.0,-1.0,-1,19
no test added but all the available&nbsp;tests passed. the video was very helpful guys!,-1.0,-1.0,-1,16
the changes are mostly around solving the code climate issues and are done very well.,-1.0,-1.0,-1,15
"the writeup is very well written. it explains all the changes, the reason to make those changes.",-1.0,-1.0,-1,17
"the code looks good and since it was handling code climate issues, it follows all good principle.&nbsp;",-1.0,-1.0,-1,18
the writeup is very well written. it has all the changes and description as well.&nbsp;,-1.0,-1.0,-1,16
the number of commits is the same as the first part.&nbsp;,-1.0,-1.0,-1,12
"the test has been added by the team, and the coverage increased by&nbsp; . %.&nbsp;",-1.0,-1.0,-1,15
the build passed for the changes performed by the team.&nbsp;,-1.0,-1.0,-1,11
"the changes are valid for the name of the functions, variables, and classes. it is easy to follow the names.",-1.0,-1.0,-1,20
the code works properly for the test cases i trie,-1.0,-1.0,-1,10
the writeup is very well written. it covers everything and explains everything in a good way.,-1.0,-1.0,-1,16
the code is good. the thing i liked the most is the change from the case statements to the dictionary implementation. it was a very good addition.,-1.0,-1.0,-1,27
some commits happened&nbsp;after the first submission and it was basically to improve the project based on the first review.,-1.0,-1.0,-1,21
the author did a good job in providing the detailed explanation of the changes and also the reason for making those changes.,-1.0,-1.0,-1,22
the test was copied from the previous file into the new to test the new controller.,-1.0,-1.0,-1,16
"the build passed. also, the pull request had no conflicts with the base branch.",-1.0,-1.0,-1,14
the newly added code looks good. it covers all the points needed.,-1.0,-1.0,-1,12
the project was working with my personal test cases in my vm.,-1.0,-1.0,-1,12
the writeup is very well written and it explains every change and it can be easily understood.,-1.0,-1.0,-1,17
"yes, the feature does work as expected. checkboxes are added on the ui which are appropriately placed.&nbsp; also, it is evident from the screencast that the data is been exported to csv files.",-1.0,-1.0,-1,34
"yes, i could see commits after round and all of which was done by a single individual.",-1.0,-1.0,-1,17
the team did not add any new test cases but i could see few existing test cases been modified. i am not sure whether the test coverage increased or decreased but the coverage&nbsp;of&nbsp;response_controller.rb&nbsp;is % and the coverage&nbsp;of&nbsp;survey_deployment_controller.rb&nbsp;is %. &nbsp;,-1.0,-1.0,-1,51
" ) renamed edit_allowed function to view_allowed in the response_controller.rb file: i found it to be quite reasonable as the function here&nbsp;checks if the response can be viewed by other person&nbsp;or not. )&nbsp;removed assign_instance_vars section as it was not needed and combined in edit and new sections: team can mention in the writeup that stratergy&nbsp;design pattern is being used over here to dry out the code. )&nbsp;removed was_submitted. changed to previously_submitted in the in create method: i found it to be reasonable as method nanme&nbsp;""previously_submitted"" more clearly explains what function is doing over here",-1.0,-1.0,-1,103
yes. i see multiple commits. this wont be as much as rails projects but i dont understand that the code is rust so takes lesser code bu ta lot of time to understand and test the.,-1.0,-1.0,-1,36
"rust by itself dry. the team have covered that test cant be done but refactoring is done as required at&nbsp;http://wiki.expertiza.ncsu.edu/index.php/csc/ece_ _spring_ _-_m _refactor_bluetooth_support_for_better_maintainability#running_the_tests &nbsp; but also adapter.rs calls several fn's, say,get_uuids(), which appears&nbsp;to be following good guidelines but i can't verify is that their thought process or they just reused/called an available function.&nbsp; &nbsp;",-1.0,-1.0,-1,74
not an expertiza project. so i can't comment about it,-1.0,-1.0,-1,11
the authors have a test plan that describe the tests passed in the form of a video which is more than sufficient for this type of a project.,-1.0,-1.0,-1,28
the writeup describes all the metrics mentioned above and is well written.,-1.0,-1.0,-1,12
"as the build and tests are passing, it is clear that the work is correct.",-1.0,-1.0,-1,15
they had to clean the code they were assigned so the code looks much better now.,-1.0,-1.0,-1,16
their work did not involve making new functionality so there is no need for design classes. they followed the dry principle to make the code cleaner and more legible.,-1.0,-1.0,-1,29
there were no tests discussed in the spec and no tests were failing except the one that was dismissed.,-1.0,-1.0,-1,19
no new variables or method names need to be added for this project. the code was cleaned up across many files and made more legible. there is no commented out old code so thats good.,-1.0,-1.0,-1,35
i don't know how to do that but based off of the video the tests seem to pass.,-1.0,-1.0,-1,19
they have given plenty of information and images related to what they have done and why.,-1.0,-1.0,-1,16
the code is cleaner now that they have gone through it and resolved some code climate issues.,-1.0,-1.0,-1,17
they did add test cases and coverage did increase across many files.,-1.0,-1.0,-1,12
they were fixing code climate issues so design principles does not apply here. thy explained everything they did in great detail and made it very clear what they did.,-1.0,-1.0,-1,29
they thoroughly tested their code to see if their changes broke anything but they did not add any new tests. there were no failures when they ran rspec.,-1.0,-1.0,-1,28
they did not add any new code and all test passed.,-1.0,-1.0,-1,11
"the code was written well, they improved the consistency and legibility of the code.",-1.0,-1.0,-1,14
they go into great detail explaining all the bad code and showing the correct way to code.,-1.0,-1.0,-1,17
the code seems to have been written to meet the expectations. comments are provided and naming convention is easy to follow. functions look short and readable. no instances of dry violations found.,-1.0,-1.0,-1,32
"yes, majority of the commits are after the first round.&nbsp;",-1.0,-1.0,-1,11
i am unsure of as to how tests would be done for the mozilla projects. but there appears to be a good description and a detailed section about tests in the write up.,-1.0,-1.0,-1,33
"i believe a test plan is not necessary for the mozilla projects? i may be wrong, though.",-1.0,-1.0,-1,17
"rust and mozilla being entirely new to me, the writeup was a good place to get a clear idea about what was happening. this was a well written writeup.",-1.0,-1.0,-1,29
"the names and methods definitely follow the ruby guidelines, such as renaming of is_leaf to leaf and so on.",-1.0,-1.0,-1,19
"yes, there have been commits during the nd round, but most of the work seems to be done before the first round itself.",-1.0,-1.0,-1,23
"yes, the team has neatly documented existing test cases as well as newly added test cases, and even provided a good amount of screenshots to the writeup. this is detailed and helpful.",-1.0,-1.0,-1,32
"the writeup is self explanatory, but the fact that they have also attached a video with one of the members narrating the changes and the things happening there is a very happy surprise. this video infact helped me catch up with the code climate issue fixing project as well.",-1.0,-1.0,-1,49
"&nbsp;the team has made a lot of changes over the course of the project until now, and looks like it is already reaching a near-completed state.",-1.0,-1.0,-1,28
"the project is really great, and i enjoyed the opportunities it gave me to interact with their implementation.",-1.0,-1.0,-1,18
the writeup was very detailed and was worded well. it explained most of the things they've done in a neat way and covered a broad range of details and events happening in their project.&nbsp;,-1.0,-1.0,-1,36
the writeup is thoroughly detailed and has a lot of information about the project. the team seems to have understood the core concepts of the project assigned to them.,-1.0,-1.0,-1,29
"the checkbox works very well, and seems to be a good idea to select what to export.&nbsp;",-1.0,-1.0,-1,18
writeup is fairly simple and to the point. i liked how they added a chart to show how their implementation would work theoretically.&nbsp;,-1.0,-1.0,-1,24
"the code was written well enough, they don't seem to be disobeying ruby guidelines.",-1.0,-1.0,-1,15
"they mainly moved existing tests to the right place according to their refactoring. apart from that, a few extra tests do seem to have been added and this has been neatly documented in the write-up as well, with good screenshots.",-1.0,-1.0,-1,41
"there has been a good amount of thought put into the test plans, and seeing how they have even implemented most of it already this is a good development. &nbsp;",-1.0,-1.0,-1,30
"the code is very well formatted. their code spans over multiple files, and all of them have a neat ruby-like feel and guidelines to them.",-1.0,-1.0,-1,26
"the efforts put into this project was really appreciable, as the test cases that i could think of all seem to be covered well.",-1.0,-1.0,-1,24
"this is very well written. the screenshots for the tests are informative. their manual about how to use their app and see the changes that they made is very clear and it makes the task of a reviewer very, very easy.",-1.0,-1.0,-1,41
this write-up was very clear with what was happening in the project. the clear description of what they have done as part of their solution was very helpful in understanding what the code is meant for as well.,-1.0,-1.0,-1,39
"it works, and they have also neatly documented how to reach those pages in the write-up so i did not have any problems finding it. i really like that, as otherwise it would take me a lot of time to figure out where their code was being used in the ui.",-1.0,-1.0,-1,52
the build passed and the pr does not appear to have conflicts.,-1.0,-1.0,-1,12
"all operations appear to work as intended. thank you for writeup in wiki, that was helpful for testing.",-1.0,-1.0,-1,18
"the team did add test cases which covered all the refactored methods names,&nbsp;a method which was moved to partials and a method which was refactored into a dictionary from switch&nbsp;cases.&nbsp; code coverage was increased.&nbsp;",-1.0,-1.0,-1,40
"yes, the code is ready to be deployed. it passed the travis ci&nbsp; and does not fail on the test cases. it built successfully, they have added the tests necessary for the refactored methods and it worked correctly.&nbsp; the screencast showed that the tests passed and the methods they have refactored.",-1.0,-1.0,-1,53
"yes, the build was passed in travis ci and there wasn't&nbsp;any conflict that could have resolved. the code seems well structured.&nbsp; they have done good refactoring and have removed some switch cases into dictionaries which is a good idea.",-1.0,-1.0,-1,43
the team has followed well ruby naming conventions.&nbsp;they refactored the code keeping in mind the dry principle.&nbsp; i could not find a bad coding style or naming convention. the long functions were replaced to&nbsp;dictonary from switch case was a good idea. overall nice job.,-1.0,-1.0,-1,49
the code followed good ruby methods. the previous naming conventions were in pretty bad shape and now they have done a good job in refactoring them. the previous code needed refactoring badly and now the refactored code works well.&nbsp; the methods after refactoring&nbsp;work correctly and perform the expected operation. i did a&nbsp;cloned their repository to test the changes and yes it worked as&nbsp;expected.&nbsp;,-1.0,-1.0,-1,71
the team has removed two methods namely assign_instance_vars and was_submitted. i found this to be reasonable because another method previously_submitted explains clearly what a function is doing. the team has also refactored a method name from edit_allowed to view_allowed which looks like a logical decision.&nbsp;,-1.0,-1.0,-1,46
the write up is clean and well structured. also there is a provision of how they approached the project is a good thinking.,-1.0,-1.0,-1,23
the writeup is well written and they have&nbsp;maintained good structure for how they have performed their task.,-1.0,-1.0,-1,19
"upon reviewing the document and the pull request: . there were no fixes that were asked by the team regarding long functions. . such code was not asked to fix by the team. . no such code was asked to fix from them. . there were several instances where the team was asked to fix bad ruby practices, such as ""avoid comma after the last item of an array"" and ""use the new ruby . hash syntax"" and many others, which have all been corrected. . the team&nbsp;was also asked to dry their code in the case&nbsp;""similar blocks of code found in locations. consider refactoring"" and they have handled this case very well. &nbsp;",-1.0,-1.0,-1,112
i think the authors mention all their design choices and those pointed out by code climate and have fixed them appropriately.,-1.0,-1.0,-1,21
"the writeup is very well written. i liked their approach of addressing the major issues of their code and they included illustrations of their changes which helped me better understand their changes. it includes all the necessary&nbsp;information like testing and nicely formatted problem statements. overall, this writeup is excellent. good job!",-1.0,-1.0,-1,53
"since this was a code climate project, it was their job to fix bad names, long complicated functions, lack of or no comments, bad ruby practices and dry problems and the team has implemented all these changes very well. i especially like their implementation of ""unprotected mass assignment"". their code follows the rails guidelines and i was not able to find any issues with their code.",-1.0,-1.0,-1,66
i believe that the documented is very nicely written in issue-solution format which makes it easier for a reader like me to understand what changes have been implemented by the team. clear illustrations along with descriptions help me to understand the functionality. a useful video clip including their test results has been included by the team.,-1.0,-1.0,-1,57
this is code climate project and the team has attached a video showing their test cases running. their code refactoring activity is very good and they have made use of good ruby and rails practices. some cases asking them to dry out their code have been successfully addressed.&nbsp;,-1.0,-1.0,-1,49
i think that they have a good implementation of their project and it is ready to be deployed to the production server. i did not find any major issues with their code and the quality of the documentation has also improved. the major issues with code climate have also been fixed.,-1.0,-1.0,-1,51
"after checking the pull request, i can confirm that the build passed in travis ci.&nbsp;their branch had no conflicts with the base branch.",-1.0,-1.0,-1,25
"their writeup is an improvement over their last writeup and they made several changes to their test plan documentation, explanations were made clearer and i believe that the overall quality of the writeup improved. great job!",-1.0,-1.0,-1,36
"the code is very well written. i liked how the naming scheme of the some of the variables. for example, they changed from&nbsp;was_submitted to previously_submitted.&nbsp;overall the code looks clean and follows good ruby and rails practices. good job!",-1.0,-1.0,-1,42
from their commit history i can see that they have written new code which is significant during the round .,-1.0,-1.0,-1,19
this is not a testing project and moreover it is a mozilla project and thus they need to implement a functionality and not to write test cases. thus there is not test case and no coverage for this project. but they do have some bluetooth automated tests to run which is specified in their writeup.,-1.0,-1.0,-1,55
as i said before from seeing their pull requests some changes have to be made to their code in order approve the pull requests. they have done some good work writing the functionalities and with some changes the project will be ready to be deployed on the production server.,-1.0,-1.0,-1,49
they have given the files that have to be modified and given the steps that need to be done to do the project. other than that i can also see proper steps to build and run the project.&nbsp; they have provided the details about the implementation under the implementation heading.,-1.0,-1.0,-1,51
from looking over the code they have written it style is good and function namings are mostly already given. so i couldn't find any bad namings or bad coding style.,-1.0,-1.0,-1,31
they have written their writeup very clearly and it has good description about servo and rust. they have also written the problem statement and from that i can&nbsp; properly understand the issue and the feature that has to be implemented has also been given.&nbsp;,-1.0,-1.0,-1,46
very little new code was added. but i have no complaints since they did most of their work in the first round.,-1.0,-1.0,-1,22
the team did not add any test cases. but i agree with their explanation in the documentation. they did not add new methods. just moved some methods into a new controller. so all the tests that had been written before are valid. just new paths needed to be configured in tests and and all tests relating to new controller should be moved to a new spec file. this has been done and can be seen in the video that they have uploaded.,-1.0,-1.0,-1,82
the build passes in travis ci. it merges in the base branch without any conflicts.&nbsp;,-1.0,-1.0,-1,16
the code was very well written in the first round. the changes that were made in the second round were great too.,-1.0,-1.0,-1,22
"their code was dry, and&nbsp; followed most of the protocol.",-1.0,-1.0,-1,11
"yes, there were many commits made after the st round submission. even to the last day commits were made.",-1.0,-1.0,-1,19
they expanded on what they did and the reason as to what&nbsp;they did it was clear.,-1.0,-1.0,-1,18
"the module seemed working fine, i didnt&nbsp;get any error messages.",-1.0,-1.0,-1,12
"code was well written, without any bad naming formats or complicated functions. the author has written the code in a dry format by following best coding practises.",-1.0,-1.0,-1,27
yes the problem statement and what they did was clear to me. the purpose of the project was also clear.,-1.0,-1.0,-1,20
none of the function names seemed excessively long. code was fine. their&nbsp;work seemed dry,-1.0,-1.0,-1,16
"yes, they put up sufficient&nbsp;details to indicate what they did and why they did it with screenshots.",-1.0,-1.0,-1,19
the writeup was made clear and transparent. we get a good idea about what they are doing. they included repo links and pics to further explain what they did in detail. they improved from their&nbsp;previous writeup.,-1.0,-1.0,-1,38
"well written, couldnt&nbsp;find any glaring issues. their code was minimal and dry. everything was sufficiently done(comments, code, explanations).",-1.0,-1.0,-1,21
"yes, there are multiple changes made by the team in the second round",-1.0,-1.0,-1,13
"yes, looks like the code is in great state and ready to be deployed",-1.0,-1.0,-1,14
"yes, all the travis ci tests have been passed by the pr",-1.0,-1.0,-1,12
reafactoring of methods is done in a much better way by removing reduncdany information from the method name. the methods are easier to understand and makes more sense while reading,-1.0,-1.0,-1,30
"team has followed standard practices when making any code change. team has added comments for many methods that can help the user to understand what each method does. also, many method names have been shortened for better experience",-1.0,-1.0,-1,38
"yes, there are commits after mar and before the deadline. looks like most of the work has been done after the first submission",-1.0,-1.0,-1,23
"as the travis ti has passed, we can say that the features are working as expected",-1.0,-1.0,-1,16
"yes, the authors have tried to explain most of the aspects clearly and is easy to understand. the problem statement is clearly mentioned and the steps taken is also mentioned. wiki is clear and easy to understand",-1.0,-1.0,-1,37
"&nbsp;yes, the test plan is taken from the originabranch and the same has been implemented ",-1.0,-1.0,-1,16
ui is seamless and looks great. the hint added in the text box gives the user a clear information on what needs to be done. this also seems to an optional field and can be used only when necessary.,-1.0,-1.0,-1,39
"test cases are added, looks like they cover the project pretty well at a high level.",-1.0,-1.0,-1,16
"based on the writeup, the strategy pattern was used.&nbsp; this seems reasonable.",-1.0,-1.0,-1,13
the build did pass in travis ci when i checked on github and there were no major conflicts that needed resolution. i als see that all the code climate issues were resolved as well.,-1.0,-1.0,-1,34
the build passed in travis ci and there were no major issues. the code climate issues were also resolved.,-1.0,-1.0,-1,19
"the team did add the test cases for the new feature which was added for the project. the test case is not only demonstrated through the code but also through a screencast which shows the implementation of the audio feature.&nbsp; this project has by far, the best test cases written and displayed.&nbsp;",-1.0,-1.0,-1,54
"according to me, this code can be deployed onto the production server. according to me, the project seems to be correct with the issues solved, features implemented and tests are written for the new code added.&nbsp; so according to me, there are no big concerns and this project can be considered as completed.",-1.0,-1.0,-1,54
"the writeup is very clear and easy to understand. even though a mozilla&nbsp;project was new to me, the writeup was written so properly that feature implementation could be understood correctly. the functions have been explained and also how and why it is implemented is mentioned in various sections of the report.&nbsp; the writeup is far better than how it was during the first review. a good job is done by the team.",-1.0,-1.0,-1,75
"there were several changes made to function names: the edit_allowed method is changed to view_allowed which is a good change since the function checks if the response can be viewed by other person or not. also, the team has removed was_submitted and assign_instance_vars method, which according to me is a good thought. since, there is a method previously_submitted which clearly explains what the function is doing.",-1.0,-1.0,-1,66
"the code committed has followed a good naming convention which is properly commented as well. there were no long methods added. the code added had only short methods.&nbsp; according to me, the code does not have any dry problems.&nbsp;",-1.0,-1.0,-1,41
the author has followed good ruby on rails programming practice and the code written was comprehendible and i did not fund any major issue with the same.&nbsp;,-1.0,-1.0,-1,28
yes the authors have made some changes during the second review and improved the code functionality. but i guess they completed a chunk of work before the st deadline itself.&nbsp;,-1.0,-1.0,-1,31
yes they have added new tests and as shown the teams_user.rb is now % covered for example. they have also done lot of rspec testing and explained it clearly in the documentation. overall test coverage increased to . %.,-1.0,-1.0,-1,37
the testing is also clearly done and documented on the work done by the authors. they have also fixed and run existing rspec tests and also made a video for the same which was also done well. ui testing was also done and two main problems were identified and fixed.&nbsp;,-1.0,-1.0,-1,51
ye the authors have clearly mentioned why they have made the specified changes and how they proceeded when there was a problem. they have also given a good and a bad instance to make us note the difference which i feel was done well.&nbsp;,-1.0,-1.0,-1,45
"yes, they have converted all the cases discussed into automated tests and the documentation on testing seems clean and understandable.&nbsp;",-1.0,-1.0,-1,21
all the added methods are comprehendible and i did not find any issues with the code.&nbsp;,-1.0,-1.0,-1,17
"yes, i was able to compile the code and run the required tests and author's code works as described.&nbsp;",-1.0,-1.0,-1,21
"i was impressed with the writeup as it was very detailed and gave us all the required information. they have elaborated the tests, explained the code climate issues, moved on to how to solve them and given a detailed explanation as to how to do the testing. i would have actually liked it if they had cut short a bit on explaining all the testing and just focussed on the most important ones, but that is not an issue.&nbsp;",-1.0,-1.0,-1,80
the code follows dry and authors have done a good job explaining all the code in their writeup and i didn't have any problem with the naming or the flow of the code. good job done!,-1.0,-1.0,-1,37
the team have clearly indicated all the functionality and work done. i was able to clearly understand the changes that were made by them and they have also provided good explanation for the changes made. they have also mentioned the remaining changes to be made and suggestions for future code that has to be written. the overall work looks neat and good and explanation provided makes it easy to understand why certain changes have been made.&nbsp;,-1.0,-1.0,-1,77
i tried to run the code and check the tests and all the results were as reported by the authors. the authors have also detailed very well as to how to check their work and all the results match. all the features also work as intended but as described they have shown how code climate works properly.&nbsp;,-1.0,-1.0,-1,58
"they have good explaination on their work. because it is a code climate issues work, they don't need any design principles.",-1.0,-1.0,-1,22
there are no new code added. but they have fixed code climate issues in code.,-1.0,-1.0,-1,15
amazing writeup. the team has a very good document for their efforts. the writeup is impressive.,-1.0,-1.0,-1,16
the writeup is very detailed and complete. they clearly describe their problems and what they did.,-1.0,-1.0,-1,16
"no test cases were added, but since this is a refactoring project, that wasn't necessary.&nbsp; the team has displayed that all existing test cases still pass after refactoring.",-1.0,-1.0,-1,30
"yes, there is a very nice video included on the team's wiki showing that the features work as expected.",-1.0,-1.0,-1,20
the write-up now includes instructions on how to set-up environments in windows and linux.,-1.0,-1.0,-1,16
i'm not sure how to run your code from my windows box.,-1.0,-1.0,-1,13
"yes, there is a section titled ""implementation"" with a subsection titled ""steps"" with bulleted descriptions of how the refactor was carried out.",-1.0,-1.0,-1,22
all additional code is well-formed with names suggestive of functionality.,-1.0,-1.0,-1,11
the writeup is well written and clearly describes what has been done.,-1.0,-1.0,-1,12
"again, i would say the same thing here.&nbsp; this question does not really apply.",-1.0,-1.0,-1,15
"i would say that the question does not apply to this project, because no new logic was really introduced.&nbsp; things were just changed to fix issues reported by codeclimate.",-1.0,-1.0,-1,30
"as stated in the original review, the project didn't involve the types of changes that involve code style.&nbsp; everything i saw indicates that the changes improved the code quality.",-1.0,-1.0,-1,31
the build has passed in travis ci without any conflicts .,-1.0,-1.0,-1,10
all the features are working as they are supposed to work and the code has passed through all the test without any issues or failures.&nbsp;,-1.0,-1.0,-1,26
"all that i have seen seems fine, the code looks optimized, and the code also follows dry principle.",-1.0,-1.0,-1,18
they seem to have made a lot of commits after round and seem to have got almost every issue fixed.,-1.0,-1.0,-1,20
they seem to have added test cases and were able to cover most part of the project.,-1.0,-1.0,-1,17
"their code seems to be showing no errors in travis ci&nbsp; and they seem to have fixed every issue they were assigned in this project. so, this code can be deployed onto the production server. their project could be a good starting point for a future team to pick up.",-1.0,-1.0,-1,51
the build does pass travis ci. they were able to fix all the conflicts.,-1.0,-1.0,-1,14
their writeup seems to be pretty elaborative and explains their problem statements and their solutions pretty clearly and to point. they have added code screenshots of the original and the refactored code which makes it really helpful to understand what and why they did what they did.,-1.0,-1.0,-1,47
their code seems to be efficiently written and i did not see any bad code style or dry problems.,-1.0,-1.0,-1,19
"the writeup is very detailed and very easy to understand , they team has done good work with explaining everything",-1.0,-1.0,-1,19
all the functionalities seem to be working as intended and the testing was able to cover most part of their project.,-1.0,-1.0,-1,21
the codeclimate bot and travis ci both passes and a lot of files are refactored. i think that this is a good starting place for future teams to pick up because the refactoring done is pretty minor but it is comprehensive.,-1.0,-1.0,-1,41
the build passes in travis ci and the team did a great job at documenting issues. the branch has no conflict and checks have passed as well.,-1.0,-1.0,-1,27
i did not find any obvious issues with the code. they have fixed whatever code climate has reported.,-1.0,-1.0,-1,18
yes they have made many commits even after their project being complete in the first submission itself.,-1.0,-1.0,-1,17
although this project was not meant to add test cases since this was not introducing new code but they have worked on adding new test cases in the spec folder for the model files that they have touched. they have worked on the testing rigorously in the second submission round and shown the passing results through a video. commendable job with testing i believe.,-1.0,-1.0,-1,64
i believe that this code base is ready for deployment. with all the improvements and testing that these guys have performed i believe this is ready to be merged.&nbsp;,-1.0,-1.0,-1,30
they have mentioned a list of issues they have fixed and i liked that they did not mention the trivial ones. they have explained the important ones in detail. they have worked on fixing the issues complained by code climate analyzer and incorporated the latest ruby code semantics and snake case variables etc. they have gone out of their project scope and attempted to fix the class variable names and also implement dry principle which is commendable. &nbsp; &nbsp;,-1.0,-1.0,-1,79
i do not think this is in their scope but whatever they could test using rspec for their files they did that. i think that was more than enough.,-1.0,-1.0,-1,29
"they have not only fixed the issues reported by code climate with proper variable naming, method naming and class naming but also fixed other naming conventions and improved the modularity of the code by incorporating dry principle.",-1.0,-1.0,-1,37
i had added their repository to code climate and saw that they have fixed all issues.,-1.0,-1.0,-1,16
"as mentioned in the last review, they have outdone in every aspect. their wiki page is one of the most detailed ones which explains everything they have done since the very beginning. they have included the testing section where they have mentioned how they have improved the already existing spec files. also they have included new test files to test the model files that they have changed. they have also improved variable names, followed dry principle wherever possible and added meaningful comments.",-1.0,-1.0,-1,82
"extremely well written code following the best ruby coding practices. they have added meaningful comments, improved the variable names and followed dry principle throughout and all these are apart from the code climate issues that they have fixed.",-1.0,-1.0,-1,38
this is one of the most detailed and crystal clear write up i have seen so far. it exemplifies every issue that they have fixed in their project. i believe they have worked on the wiki page in parallel to the every commit that they made or every step they took in their project. i can get a clear picture of what they have done in their project from day till the submission date. they have also given description about expertiza and code climate which is a good thing along with explanation about every issue that they resolved. it helps the reviewer get an idea of what's going on.,-1.0,-1.0,-1,110
"yes, everything works as expected on the deployed server link that they have provided. nothing unusual there.",-1.0,-1.0,-1,17
yes. there were many commits to resolve the code climate issues that were generated by the previous build. much efforts were taken to fix the code climate issues.,-1.0,-1.0,-1,28
yes they have added test cases in the spec/helper folder and the test coverage has also increased.,-1.0,-1.0,-1,18
the pull request suggests that the travis ci build passes.&nbsp;,-1.0,-1.0,-1,11
they have improved a lot from the previous time in the sense that they included the test plan section this time and showed the output of their manual testing and rspec testing they carried out. they have added a new rspec file to verify their end-to-end testing. they have also given examples of how they have refactored the code which summarizes almost everything.,-1.0,-1.0,-1,65
they have stuck to best ruby coding practices and added comments wherever necessary.,-1.0,-1.0,-1,13
yes. they have focused on fixing the code climate and rspec related issues in the second round.,-1.0,-1.0,-1,17
yes they have done rigorous testing which can be seen in their video. also they have added test cases.,-1.0,-1.0,-1,19
the wiki page is quite informative as to how they have approached the refactoring of the code.,-1.0,-1.0,-1,17
they have explained their problem statement very well. and given pictures to describe what changes they have made.&nbsp;,-1.0,-1.0,-1,19
" . no too long functions . no need to be separated . most of code is used to improve the current code, no more comments are needed. . it follows .no, all the code follows dry principles.",-1.0,-1.0,-1,33
"yes, the team keeps on working after the first submission. they made their code cleaner and add some&nbsp;rspec tests",-1.0,-1.0,-1,21
"yes, the team added new test case and the total coverage increased.",-1.0,-1.0,-1,12
"yes, it explains well what issue they solved.&nbsp; yes, all the changed code follows design principles.&nbsp;",-1.0,-1.0,-1,18
the writeup is good enough and covers enough details.&nbsp; the team did fully explain everything in both writeup and video. i don't think the team need to give other options in this project.,-1.0,-1.0,-1,35
the write was properly written. it covers enough explanation&nbsp;and details about the project. they improved their writeup by adding more tests than the first submission.,-1.0,-1.0,-1,27
the code was well written. there are no bad names and it follows the ruby principles and didn't have dry problem.,-1.0,-1.0,-1,22
"yes, the writeup document is clear enough that i can understand the project and the problem in the current code. i can understand what is code climate and what kind of code is good.&nbsp; in writeup, it shows what issues they solved and what issues are remained so far.",-1.0,-1.0,-1,50
"yes, all features work well from ui test. the team itself did rspec&nbsp;test and ui test in the project.",-1.0,-1.0,-1,21
"since this was a refactoring project, the objective of the changes was to do - .&nbsp; they did a great job of improving the code in every way.&nbsp; for instance, problem was nicely resolved by moving duplicate code into the helper function can_delete_topic?&nbsp; very good job refactoring.",-1.0,-1.0,-1,48
"yes, the team talked about each change they made and why.&nbsp; they talk about the reason the change was necessary and what the impact was.&nbsp;for example, in problem one of their issues and fixes section, they clearly explained that the issue was that update was being called in the wrong place, and that the solution was to remove it and flash an error message. well done!",-1.0,-1.0,-1,69
"each variable name, function name, and class name was clear and concise. for instance, delete_signup and delete_signup_as_instructor are two function names that are easy to understand but not too long.",-1.0,-1.0,-1,30
each feature works as intended and functionality has improved with these changes.&nbsp; no edge cases were discovered.,-1.0,-1.0,-1,18
the team did an expert job of describing what functionality was affected and impact it had.&nbsp; i could clearly understand what their project object is and how they executed it.&nbsp; each issue talks about the functionality and what it is related to.,-1.0,-1.0,-1,44
the code is easy to follow. it follows ruby style and dry principle.&nbsp;,-1.0,-1.0,-1,14
"the team has followed good naming conventions for variables, methods and class names.",-1.0,-1.0,-1,13
"yes, the team has made many commits during the second round.",-1.0,-1.0,-1,11
"yes, the team has added a test case and the code passed the test case.",-1.0,-1.0,-1,15
yes. the code can be deployed onto the production server as it looks like they are using the correct approach and are almost done with the first part.&nbsp;,-1.0,-1.0,-1,29
"some parts of the code have been extracted into separate methods wherever necessary. it was not difficult to follow the code. also, the code follows ruby principles and dry principle.",-1.0,-1.0,-1,30
"yes, the team added test cases and test cases have been passed.",-1.0,-1.0,-1,12
"yes, the code has no issues and is merged already.",-1.0,-1.0,-1,10
the team has done a good job in explaining all the problems and the solutions for each problem. they have also clearly mentioned the design choices that they took and why they did so.,-1.0,-1.0,-1,34
there's nothing in particular to mention. the team has done&nbsp;well.,-1.0,-1.0,-1,13
"project works as intended, the tests work as well as the ui.",-1.0,-1.0,-1,12
"they have listed the problems and how they will handle them. also, it is a refactoring project so they have talked about how they do the refactoring.",-1.0,-1.0,-1,27
they have a great job refactoring the previous hardcoded method.,-1.0,-1.0,-1,10
the code is explained thoroughly and could be understood&nbsp;easily.,-1.0,-1.0,-1,11
yes. the team has added new commits in the second round.,-1.0,-1.0,-1,11
"yes. since they've not implemented any new features, since all the existing tests passed, the code is ready to be deployed on to the production server.",-1.0,-1.0,-1,27
"since they've not implemented any new code, there is no hard requirement for them to come up with new test plans. however the team has documented the rspec testing to ensure that the changes they made didn't break the system",-1.0,-1.0,-1,42
the assignment was to fix the code climate issues and the write up covers it.&nbsp; this project does not have any requirement to use design patterns or principles as this project just involved code refactoring.,-1.0,-1.0,-1,36
the team has worked in reducing the number of code climate issues and have succeeded in doing so,-1.0,-1.0,-1,18
"the changes created by the team did not break the system. as far as fixing code climate issues goes, the features work as intended.",-1.0,-1.0,-1,24
"the write up is well written. the team has put utmost effort to document their entire work in the wiki page. in addition, the team has also documented the common code climate issues they found and provided the ways to avoid them. this would be helpful for the future contributors as they can easily find the best solution from this wiki.&nbsp;",-1.0,-1.0,-1,62
yes the ui works as intended. the team has fixed all the code climate issues.,-1.0,-1.0,-1,15
"yes in the ""design choices"" subheading. they had the key word ""dry"" in their explanation.",-1.0,-1.0,-1,15
they deleted the&nbsp;pending_surveys test inside response_controller_spec.rb&nbsp;and refactored the #redirect test section. test coverage according to&nbsp;code climate is&nbsp; %.,-1.0,-1.0,-1,25
"based on the wiki page and the associate pull request work done, i think this is quality work!",-1.0,-1.0,-1,18
"yes. the&nbsp;writeup states exactly what was accomplished in the ""tasks accomplished"" section complete with sections of code and what the response_controller&nbsp;does. very convenient having the pull request link right in the wiki page. i will add that to&nbsp;my group's wiki page also.",-1.0,-1.0,-1,49
i ran the tests for&nbsp;response_controller_spec.rb&nbsp;and they passed.,-1.0,-1.0,-1,12
i see they have made a lot of commits after round and they seem to be consistently working on their project.,-1.0,-1.0,-1,21
they did add test cases and the coverage did increase. they seem to have cover most part of their project.,-1.0,-1.0,-1,20
i have sen some errors on their github page but they seem to have fixed almost all errors.&nbsp;i think this could be deployed onto the production server because i see their last commit shows that their build passes travis ci and hence they should be good with its working.,-1.0,-1.0,-1,51
"all the variable names and class, method names seem to be reasonably appropriate to their functionality.",-1.0,-1.0,-1,16
"the writeup is very clear and clean. they have explained in detail about what the project is talking about and they have explained what webaudio api is and how it works for the project, which is nice because for the students who did work on expertiza would also understand what this project is if they read their writeup properly.",-1.0,-1.0,-1,59
their code seems to be written with good code style and by following dry principle.,-1.0,-1.0,-1,15
they have clearly explained in detail what their project talks about and briefly explained what&nbsp;are the problems and how are they fixing them.,-1.0,-1.0,-1,25
i see commits have been made for the nd round and the code seems to be updated.,-1.0,-1.0,-1,17
the code seems to be pretty efficient and there seems to be no dry problems or bad code style.,-1.0,-1.0,-1,19
there seems to be no problem with the working of the system and all the features are working properly.,-1.0,-1.0,-1,19
"the team seems to have not generated any new tests based on what was changed, but the old tests are covered in the testing section. in addition to this, a video clip was provided in the expertiza submission that shows tests being run and passing.",-1.0,-1.0,-1,45
"these items are intuitive for the most part. for example, a method that clearly populates local items was changed from author_feedback_popup to questionare_details_populate, which makes lots of sense.",-1.0,-1.0,-1,28
"i think the code is written quite well, and the majority of problems in the first round were fixed. the writeup details the laundry list of changes that were made, and it seems that the changes made abide by best coding practices for the most part.",-1.0,-1.0,-1,46
"coverage increased by at least . %, newly added tests certainly added coverage to the assigned range of the project.",-1.0,-1.0,-1,18
"it seems that the variable, method and class names are all intuitive and make sense for their respective functionalities.",-1.0,-1.0,-1,19
"comments were added more than sparingly, and were detailed in the writeup on the expertiza wiki. long and ambiguous method names were also modified to method names that were shorter and made sense in the context of what the method was actually doing. problems from the first round seem entirely fixed.",-1.0,-1.0,-1,51
"i could not find any issues with the current code(from what they have implemented so far). the problems solved mainly are renaming, removing redundant code and updating flash messages.&nbsp; everything so far seems to be good",-1.0,-1.0,-1,38
saw a few commits few days before the deadline with changes as asked by the expertiza team,-1.0,-1.0,-1,17
cannot be tested from the ui as it a mozilla project.,-1.0,-1.0,-1,11
"the team uses tests from a different project with few changes to the name to accommodate the changes they made to the code . for coverage, travis cl code coverage is %.&nbsp;",-1.0,-1.0,-1,31
the naming convention does not have any problem in the newly added code.&nbsp;&nbsp;,-1.0,-1.0,-1,15
"the write up is very clear. the most impressive part is their explanation - what they have to do, how they did it and why they did it for each task! no complains here",-1.0,-1.0,-1,33
the team had to refactor and the changes code works just as intended.,-1.0,-1.0,-1,13
"yes, the authors converted all the case in test plan, since this is issues fix project, it is very clear and direct to test.",-1.0,-1.0,-1,24
"the write up is well written and easy to read. they used the reasonable&nbsp;name of variables, methods, and class names.&nbsp;",-1.0,-1.0,-1,23
they fixed the issues and all the issues they have fixed is working well. i didn't see any edge case because i think they don't need to talk about this on their existing issues.,-1.0,-1.0,-1,36
the writeup is very good. they showed all the issues they met and with detailed&nbsp;code. they improved the writeup accordingly.,-1.0,-1.0,-1,22
"the code written&nbsp;is very good. i didn't found problems in the first round of bad names, long functions, bad code styles. the authors made the code better.",-1.0,-1.0,-1,30
the write up is very clear and indicate they are working on the issues fixed project. i can understand what the project does.,-1.0,-1.0,-1,23
"yes, there are some new code committed during the nd round.",-1.0,-1.0,-1,11
"yes, the team added test cases. the coverage increased. from the write up, the coverrange is %",-1.0,-1.0,-1,16
they have test plan section and list the steps of the test and provide a video about their test.&nbsp;,-1.0,-1.0,-1,20
the writeup explained how and why the authors did the work by giving the common issues they have and provide the solution. they didn't use any design pattern because i think they don't need design pattern on their project.,-1.0,-1.0,-1,41
"yes, so far, they can pass all the test with dry, ruby style guide, commented, no long methods, and properly&nbsp;named code.",-1.0,-1.0,-1,23
"because this is the issues fix project, i didn't see any variables, methods, and class names are not reasonable or suggestive of the functionality.",-1.0,-1.0,-1,25
"the code is well written. i didn't find the further bad names, long or complicated functions, bad code style, dry problems. probably need some comments.",-1.0,-1.0,-1,26
"the write up is very clear to understand what the project does. it describes the expertiza first and then talked about the project, give the guideline, and analyze the&nbsp;typical questions they meet.",-1.0,-1.0,-1,34
the project is fixing code. the feature now is work as they are supposed to.&nbsp;,-1.0,-1.0,-1,16
the code is ready to be deployed onto the production server since there is no issues on code climate and the travser&nbsp;ci.,-1.0,-1.0,-1,24
their project is code fix. i didn't find any conflict&nbsp;that must be resolved.,-1.0,-1.0,-1,16
"test passed, good job... i wasn't able to get mine to",-1.0,-1.0,-1,12
"things seem to work, and very impressive the team deployed their implementation.",-1.0,-1.0,-1,12
"yes, they did add test cases. they even added videos of themselves testing the project.",-1.0,-1.0,-1,15
it looks like their pull request is ready to be merged into the servo project.,-1.0,-1.0,-1,15
the writeup is very well-written and thorough. they definitely improved it since the st round.,-1.0,-1.0,-1,16
"their variables and methods all had relevant names, and their commits had appropriate commit messages. overall, i thought their code was very nice.",-1.0,-1.0,-1,23
"i was not able to verify the system operation from the ui since it is a mozilla project. however, it seems to work as intended and they refactored the relevant code.&nbsp;",-1.0,-1.0,-1,32
"yes, multiple commits were made during the nd round.&nbsp;",-1.0,-1.0,-1,10
it does not seem like they needed to add new test cases for this project. the testing section of their writeup explains this. the existing relevant automated tests all pass.,-1.0,-1.0,-1,30
i built the project in development mode and it built successfully.,-1.0,-1.0,-1,11
"the code was well-written. their variable names and methods made sense, as did their commit messages.",-1.0,-1.0,-1,17
"there does not seem to be a way to test the servo project from the ui. additionally, their project does not seem to change anything the end user would notice; it just changes the type of the bluetoothadapter for ease of development later on.",-1.0,-1.0,-1,44
it looks like&nbsp;the system works as intended from the ui.,-1.0,-1.0,-1,12
i believe the team has outlined the problems and proposed solutions from a high level overview. illustrations were used to clearly identify problems and a bulleted&nbsp;type list used to propose solutions.,-1.0,-1.0,-1,33
"n/a. it was my understanding for the development documentation, that this was to be from a higher view and no coding would need to be implemented at this point.",-1.0,-1.0,-1,30
the team has identified a simple outline for implementing a functional conflict notification feature.,-1.0,-1.0,-1,14
the document appears to contain the necessary sections from a higher level to begin working on the project.,-1.0,-1.0,-1,18
"according to the flow chart provided in the wiki, i feel the team has captured the overall function of the featured requested.&nbsp;",-1.0,-1.0,-1,23
i feel the team has done a sufficient job at explaining how they plan to proceed from a higher level view.,-1.0,-1.0,-1,21
the team have added flow-charts and mock-ups of the completed feature.,-1.0,-1.0,-1,13
"i believe the team did a great job out laying out the process they are going to use to achieve their goal. there were illustrations, uml, that clearly laid out what it is they are going to change/update as well a technique for doing so.",-1.0,-1.0,-1,46
the team had great visual aids for illustrating the existing feature implementation as well as the process they will using going forward.,-1.0,-1.0,-1,22
the intended path the team plan's to follow appears straight forward with&nbsp;minimal changes.,-1.0,-1.0,-1,16
i believe the team has done well at laying out their intended actions to complete the bid review.,-1.0,-1.0,-1,18
"i think the team has all of the functionality that is needed, covered.",-1.0,-1.0,-1,13
"from a high level, the team has explained the task at hand and a plan to complete the new feature.",-1.0,-1.0,-1,20
the team has assembled several diagrams include flow-charts and mock-ups.,-1.0,-1.0,-1,12
there are several illustrations and diagrams depicting the flow of the work.,-1.0,-1.0,-1,12
"the design appears to be sound and it follows appropriate principles and patterns. the document structure is pretty impressive i.e. layout of problem statement, changes to be made, test plan.",-1.0,-1.0,-1,31
the explanation provided by the team for each of the contents is very clear. the authors left a note for reviewers to clarify on a few things. the team did not complicate the explanation with too much data.&nbsp;,-1.0,-1.0,-1,39
"the team included code, examples as well as the status of the project in the implementation section. they have given a detailed description of the implementation.",-1.0,-1.0,-1,26
"the design document appears to be fine. the team have included most of the points that are necessary. i could identify few changes since the last submission in ""code"" part of the document. the process of solving the issues is depicted clearly with diagrams. there are links to the video showing the implementation as well. from the videos i can see the implementation of the project as well.",-1.0,-1.0,-1,68
the design document satisfies all the required functionalities. the team have included all the sections that are supposed to be included in a design document. i liked how the team also put in a section for peer reviewers. the document followed proper format with well written sections. the problem statement and the implementation are very clear.,-1.0,-1.0,-1,56
"yes, there is a clear explanation of how the authors plan to make the changes. it has been clearly depicted by the flow diagrams in the ""the process of solving the issues"" section.&nbsp;",-1.0,-1.0,-1,34
the document looks good with detailed explanations of all the sections and also the team included many code snippets which show the implementation part of the project.,-1.0,-1.0,-1,27
the explanations are very detailed and very relevant to what the team has planned to implement. all the important sections have been written well with code snippets.,-1.0,-1.0,-1,27
the team has clearly asserted about the functions they want to implement their changes for. the design looks good and i don't think there are any gems that can simplify the process.&nbsp;,-1.0,-1.0,-1,34
visual aids were included in the design document and the diagrams are very relevant to what the team was working on.,-1.0,-1.0,-1,21
the design document is simple and clear. it contains almost all the sections one could include for the project.&nbsp;,-1.0,-1.0,-1,20
"yes,&nbsp;the design includes all of the functionality required. the functionalities&nbsp;have been completely described in the wiki document.&nbsp;",-1.0,-1.0,-1,22
the design document included a test plan. they have implemented original rspec test code along with some new tests.&nbsp; the team also implemented a ui test to make sure all the features worked well. the test results are also given under this field. the code snippet of the test case is posted in the document as well.,-1.0,-1.0,-1,58
the explanation given by the team is quite simple. the proposed code changes made it clear how the team is planning to approach the problem.,-1.0,-1.0,-1,25
the proposed code changes included two methods in which the changes are to be done. the new design proposed looks simple and efficient. the comments in the code made it easier to understand.,-1.0,-1.0,-1,33
the design is simple and easily understandable. the flow of the design document is clear.&nbsp;,-1.0,-1.0,-1,16
"the design document appears to be crisp and clear, with appropriate principles.&nbsp;",-1.0,-1.0,-1,13
"the design doc included most of the functionalities, the problem solution is described as current scenario and the expected solution field describes the approach to the problem. the team had also included design diagram like usecase and data flow diagram.",-1.0,-1.0,-1,40
the team made sure to include all the details in the document.&nbsp;,-1.0,-1.0,-1,13
they have mentioned all the files that need to be changed for project to complete.,-1.0,-1.0,-1,15
the provided design is simple and the team also have provided more uml diagrams and screenshots that they were lacking last time.,-1.0,-1.0,-1,22
the design looks good and follows the appropriate principles and patterns.,-1.0,-1.0,-1,11
"yes, they have explained as what all files need to change and how would they proceed to do that.",-1.0,-1.0,-1,19
"yes, they have added test plans and have created different scenarios to try to cover all edges cases as well.",-1.0,-1.0,-1,20
"yes, the class diagram clearly mentions all the things that the student will be able to do after the implementation such as choosing other language and able to see the expertiza details in that selected language which is the whole scope of this project.",-1.0,-1.0,-1,44
it incorporates everything that is required as per project description.&nbsp;,-1.0,-1.0,-1,11
"the team has mentioned their strategy about how they are going to test. in writing it looks good as they have mentioned all the possible files that going to be affected, new code that will be added and also the ui in their tests.",-1.0,-1.0,-1,44
the team has mentioned the changes they have identified and the code changes to be made,-1.0,-1.0,-1,16
there seem to be no new methods being added for this project. though it is like adding extra work from before it will not increase the response time of the system. after rubric update the application work as expected and was working previously.,-1.0,-1.0,-1,43
"yes, the team has mentioned the scenarios that need to be changed clearly.",-1.0,-1.0,-1,13
"yes, they have&nbsp;explained in detail the work that they proposed and how would the implement it as they are working on it since the project so, the build should pass and the explanation is given in detail.",-1.0,-1.0,-1,39
"yes the design does incorporate all the functionalities required for this project,&nbsp;",-1.0,-1.0,-1,13
the design doc pretty much covers every aspect of the project&nbsp;,-1.0,-1.0,-1,12
"yes, the class diagram does depict clearly the object flow during the call of the class and it is clearly explained and goes hand in hand with the planned work of the team.",-1.0,-1.0,-1,33
"yes, the document is organized and clear to the point as in what they are supposed to do and how they are implementing it. the design document is sound and it follows appropriate principles and patterns.",-1.0,-1.0,-1,36
"yes, they have explained what changes they plan to make to the existing system. they have what files have to be changed with respect to project definition.",-1.0,-1.0,-1,27
"yes, the team gave a detailed explanation in manual testing describing different scenarios.",-1.0,-1.0,-1,13
use of uml diagram and mock screens are used appropriately to understand what changes are to be made to the system in one go.,-1.0,-1.0,-1,24
"yes, it is good to look at and understand what the team is assigned and their approach to accomplishing the task. they have updated the document by adding a new view and some other sections of the document.",-1.0,-1.0,-1,38
"yes, the design incorporates all the functionality required. it has a good structure right from explaining&nbsp;what is the purpose of the project, previous implementation, task to be accomplished, design, test plan.",-1.0,-1.0,-1,33
i do not find the design complex. it is pretty easy and simple to understand.,-1.0,-1.0,-1,15
yes the design appears to be sound and follows approriate principles.,-1.0,-1.0,-1,11
"yes, a detailed test plan have been mentioned. good work !!",-1.0,-1.0,-1,10
changes proposed are good. explanation written is intuitive and easy to understand.&nbsp;,-1.0,-1.0,-1,13
the design appears to sound. for now i could not see any if any of the code/design would cause smells of any other system issues.&nbsp;,-1.0,-1.0,-1,27
"yes, the design is pretty simple and easy to understand.&nbsp;",-1.0,-1.0,-1,11
"yes, the design appears to be sound and follows the patterns appropriately.",-1.0,-1.0,-1,12
"yes, the changes to the system have been explained well by the author and diagrams make it easy for us to understand the system now.",-1.0,-1.0,-1,25
"yes, there is a detailed and self explanatory test plan included in the document.",-1.0,-1.0,-1,14
"yes, the diagrams are present and now make it more clear to understand.&nbsp; team has considered the past review about the diagrams missing and added them now.&nbsp; good job with the samples and use case diagram.&nbsp;",-1.0,-1.0,-1,39
the quality of explanations is pretty good. the visualization demoed helps us understand the solution better.&nbsp;,-1.0,-1.0,-1,17
the design flow looks good. it would implement the functionality in&nbsp;a straight forward way.&nbsp; looking forward to its implementation.,-1.0,-1.0,-1,22
visual aids are pretty helpful. mock html page helps us understand the implementation better.&nbsp; design flow is intuitive as well. &nbsp;,-1.0,-1.0,-1,22
"yes, the design appears to be simple. good work.&nbsp;",-1.0,-1.0,-1,10
"yes, the design appears to be sound and clear to understand.&nbsp;",-1.0,-1.0,-1,12
the changes have been explained pretty well and are easy to understand.&nbsp;,-1.0,-1.0,-1,13
the design is good and has all the important topics covered from problem statement to proposed solutions to test strategies. good work.,-1.0,-1.0,-1,22
visualizations are pretty good and self explanatory. good work here.,-1.0,-1.0,-1,10
it seems their idea is sufficient and includes all the things needed.,-1.0,-1.0,-1,12
the design doc seems to be complete with all the details added.,-1.0,-1.0,-1,12
the data flow diagram and the use case diagram helps in understanding the details of the project and are not redundant and follows all the conventions.,-1.0,-1.0,-1,26
yes. it seems they have put in a lot of thought into it!,-1.0,-1.0,-1,13
seems so that all of the cases are thought about.,-1.0,-1.0,-1,10
the design proposal is good. they are looking into the problems why the code wasn't merged which is great.,-1.0,-1.0,-1,20
"&nbsp;the design doc explains all the existing, new and expected implementation with complete details. ",-1.0,-1.0,-1,15
"&nbsp;the test plan is good and the manual testing is a great way to make sure the viewers have a breeze of time understanding the entire project. good job, team! ",-1.0,-1.0,-1,31
&nbsp;the use of visual tools has been used wonderfully. it is used wherever required to enhance the documentation understanding. ,-1.0,-1.0,-1,20
"the test plan is amazing. i learned something new, related to capybara tests. the team is yet to come up with the exact test cases they will implement, but i am sure that will be a cakewalk once they code it up.",-1.0,-1.0,-1,42
"yes, they have jotted down the changes in code, test cases and refactoring very well",-1.0,-1.0,-1,15
the test plan is foolproof. they have not only figured the test cases required for the current implementation but also for the previous implementation.,-1.0,-1.0,-1,24
good work: the design appears to be as simple as possible. it straight forward and properly presented&nbsp;by the team. good work done by the team over the implementation of the feature.,-1.0,-1.0,-1,33
"suggestion: design looks good. but the team has already implemented the functionality. i couldn't see any flaws in the current implementation, but in general, the team could wait for the feedback over the implementation. so in any flaw or&nbsp;better approach comes along, team could just change their strategy.",-1.0,-1.0,-1,51
"great work team... not only the team has created the design document, but also they have completed/ implemented all the functionality.&nbsp;",-1.0,-1.0,-1,22
great job: the document is great and properly structured. screenshots of test cases and code make it easy to understand what the team is trying to accomplish. the team has done really great work in creating this document.&nbsp;,-1.0,-1.0,-1,39
good work: the test plan is thorough and robust. the team has also mentioned the affected files and also have attached the screenshots of the affected code.,-1.0,-1.0,-1,27
"good work: team has adequately used the diagrams, screenshots and flows to represent the existing&nbsp;and proposed&nbsp;functionality.&nbsp;screenshots of test cases and code make it easy to understand what the team is trying to accomplish. the team has done really great work in creating this document.&nbsp;&nbsp;",-1.0,-1.0,-1,52
"good work: the document structure&nbsp;and flow are nice. the document correctly describes the project needs, purpose and the approach decided by the team. the proposed&nbsp;changes are in sync with the ruby and rails coding guidelines.",-1.0,-1.0,-1,39
good work: the design looks correct and the approach is satisfiable. i think the team has done good brainstorming to come up to a solution. the solution looks solid and may solve the problem.,-1.0,-1.0,-1,34
good work: team has adequately commented regarding the upcoming changes. it seems like the team has done thorough research about the feature and is confident about the new implementation. all the best...!!!,-1.0,-1.0,-1,32
good work: the diagrams and flows provided by the team help the reader to understand the functionality of the system and also helps to get some understanding of to be implemented the functionality.,-1.0,-1.0,-1,33
"yes, they have adequately explained the changes made to the system in detail",-1.0,-1.0,-1,13
"yes there is a test plan but as they have mentioned that the project does not have a direct output, they emphasize more on the build",-1.0,-1.0,-1,26
the document is well designed and explains the previous work with the changes to be implemented,-1.0,-1.0,-1,16
there is an existing feature description flow chart describing the features and their flow,-1.0,-1.0,-1,14
all appears to be good enough to cover the task,-1.0,-1.0,-1,10
its very easy to understand the purpose and the implementation of the changes.,-1.0,-1.0,-1,13
the design covers every functionality that needs to be changed,-1.0,-1.0,-1,10
the document looks very good and it would be really great to see these changes being implemented successfully.,-1.0,-1.0,-1,18
the test plan looks good and it does cover the implementation very well.,-1.0,-1.0,-1,13
the changes are explained really well and it is easy to understand,-1.0,-1.0,-1,12
the design document is very simple and explains every change very well. the use-case diagram also provides a good way to understand the problem.,-1.0,-1.0,-1,25
the design document explains the changes very well and also the db design changes are also explained&nbsp;very well.,-1.0,-1.0,-1,20
the test plan is good and covers every details in deep.,-1.0,-1.0,-1,11
"yes, the design appears to be simple and easy to understand. i really liked the model-view-controller explanation&nbsp;as it clearly mentions the functionality and task of each component. &nbsp;",-1.0,-1.0,-1,32
"yes, the team has utilized the visualization properly. the data flow diagram clearly explains the flow of data across various components of mvc. the screen mockups clearly&nbsp;show how the views would appear once the changes are complete.&nbsp;",-1.0,-1.0,-1,40
"yes, the design incorporated all the required functionality. i really liked the way the team divided the entire functionality into two phases (identification of edit and notification.). each phase explains ""what"" and ""how"" code changes would be done to implement the required functionality. &nbsp;",-1.0,-1.0,-1,44
"yes, the team have included a testing plan in their writeup. also, they have mentioned the spec file that would be used to add new test cases and ""why"" and ""what"" test cases would be added. the test cases look meaningful&nbsp;to me.",-1.0,-1.0,-1,44
does explain how the information flows and what is been done to achieve this.,-1.0,-1.0,-1,14
the explanation provided by the team is sufficient and is well backed by visual aids.,-1.0,-1.0,-1,15
yes the design doc incorporates all the functionality mentioned in the above link.,-1.0,-1.0,-1,13
the code block and the explanation that followed was helpful.,-1.0,-1.0,-1,10
it seems simple enough with the steps laid out as they are for each issue.,-1.0,-1.0,-1,15
they explained what the want to get done and what the previous group did. they explained what was wrong with that teams work and their plan to fix it.,-1.0,-1.0,-1,29
it does seem that this is most simple way to achieve better code. they are cleaning up the code while trying to maintain functionality. it was all easily presented in the wiki.,-1.0,-1.0,-1,32
"they have mentioned testing and work on the controllers, models, and views.",-1.0,-1.0,-1,12
it pretty well done. there&nbsp; are plenty of details that help the reader understand what work is going to be done.,-1.0,-1.0,-1,22
they do have a test plan and know which tests are going to be affected by their changes when they make their new controller.,-1.0,-1.0,-1,24
they explained their goals and what happens now and what they hope to achomplish.,-1.0,-1.0,-1,14
the visual aids are quite helpful and useful for understanding what they plan to do.,-1.0,-1.0,-1,15
they seem to have a good idea of what they need to do and where to do it.,-1.0,-1.0,-1,18
there is no specific design listed but they have an idea of how implement the changes without breaking anything else.,-1.0,-1.0,-1,20
they have excellent explanations and justification for what they plan to do.,-1.0,-1.0,-1,12
they know what will change when they update the code and they have an idea of what tests they will need to add to keep coverage.,-1.0,-1.0,-1,26
they have great visualizations connecting every file along with a visualization about how the interactions happen for the instructor and students.,-1.0,-1.0,-1,21
the team seems to have done a good job of keeping majority of the functionality in mind while writing up this page.,-1.0,-1.0,-1,22
"there is a good amount of information for the entire document, and there are use case diagrams and charts to explain their points further.",-1.0,-1.0,-1,24
"very thorough. proposed db changes look good and seem appropriate (better than many to one relationship, as noted).",-1.0,-1.0,-1,18
the changes that are proposed is very clear. they have given visual mock-up which cleared many of my doubts. also explained why this is needed. content wise it is a sound document. the is sufficient information as to what changes are to be carried out. along with the previously implemented changes.,-1.0,-1.0,-1,52
"yes, the design doc incorporates all the functionality needed. they have mentioned about the existing views present in the expertiza and how they propose to do it in their project. they have also presented the visualization of the functionality.&nbsp; the language used is pretty clear.",-1.0,-1.0,-1,46
they have provided a well-mentioned design strategy in the report which is pretty clear to understand. their plan seems correct and will not lead to any smelly code according to me.&nbsp; they have also proposed where they plan to make changes like some places it is tbd. their new design does not seem to be complicated.,-1.0,-1.0,-1,58
the design documentation consists of serval&nbsp;visual aids. they have added screenshots wherever necessary to make things easily understandable. the team has attached an er diagram which is a good way to demonstrate the linking between databases. &nbsp;,-1.0,-1.0,-1,39
"yes, the design doc does have all the functionality needed. they have identified the tasks needed before starting the implementation. they have mentioned about previous work and what were their flaws. how they plan to overcome. there is a link of previous documentation with the pull request and demo. overall great job.",-1.0,-1.0,-1,52
the team has&nbsp;done a solid job in defining the documentation. according to me the report seems complete and does not need any more changes. it can be concluded that the team has better knowledge of what they are going to&nbsp;do and how. &nbsp;,-1.0,-1.0,-1,47
"i found that the changes proposed are relevant to the use case. they plan ""&nbsp;integration of rubric statistic visualization for both single assignments and multiple assignments into the assignment grade view"". for this, they provide adequate explanation in the document. the explanations are easy and intuitive to follow.",-1.0,-1.0,-1,49
"according to their design document: i could not find any evidence of the authors proposing to add method(s) to the wrong class. the new design would make the code easier to understand. since the team cannot use any existing gems to add this functionality, making use of third part libraries makes sense here. the team plans to do the following: ""using a client-side rendering library will minimize the number of server interactions as the instructor changes which rubric statistics to display. this minimization of server interaction will maximize the response time of expertiza."" i believe this assertion to be true. i think the design is neat and does not need any improvement. ",-1.0,-1.0,-1,114
the design is as simple as it gets. this is primarily because they have decided to combine both the single assignment ans multiple assignment into a single visualization.,-1.0,-1.0,-1,28
"i think that the design is sound, the integration of rubric statistic visualization for both single assignments and multiple assignments into the assignment grade view is a good decision and is amply supported by good testing methodology and smart visuals.",-1.0,-1.0,-1,40
"yes, i found that the document was complete as it had a very informative introduction section where they detailed the topic that they would be working on and what kind of visualizations the instructors would need to understand the performance of the class. it includes a proposed changes section where they detail what strategies they are going to follow and also manage to include a decent test plan.",-1.0,-1.0,-1,68
"through the use of ample visuals, detailed explanations and a solid test plan, the authors have explained the changes very nicely.",-1.0,-1.0,-1,21
"i think the test plan it very detailed with separate testing for rspec, capybara and ui tests.",-1.0,-1.0,-1,17
"as with the previous review round, the visuals are smart and effective in their usage and convey the intended meaning behind the design.",-1.0,-1.0,-1,23
"the changes that the authors propose are intuitive and easy to understand. they are trying to ""provide a formula that takes both the peer review score and self-review score into account for calculating the composite score"". their strategy of showing the composite score as a different type of score is a good design choice.",-1.0,-1.0,-1,55
"the team plans to a new formula to combine the self review scores and peer review scores so that the scores can be a fair understanding to the students of their effort. i believe that the document includes all the functionality that is required. also, complementing the design with use case and application flow diagrams, makes it easier for me, as a reader,&nbsp; to understand their design choices. they also manage to include a decent test plan into their document.&nbsp;",-1.0,-1.0,-1,82
"i found the document to be sound and complete. the team has included ample explanations about what they want to achieve with their implementation and through the use of visuals helped to make their point. the project purpose, design and testing plan have all been stated in the document. good job!",-1.0,-1.0,-1,51
"they have explained what they are going to do but more detailed explanation could have been given for how they are going to do it. they have explained the change they are going to make , that is conversion of type from enum to trait.",-1.0,-1.0,-1,44
there are no tests necessary for this project since it is a mozilla project. but they do have given instructions on how to run/test the project.,-1.0,-1.0,-1,27
they have proposed two types of visualizations such as rubric assessment for a single assignment and the other one is rubric assignment of two different assignments. they have also given proper information on the design part using flow charts and have also mentioned the tools they will use for this project.,-1.0,-1.0,-1,51
 ) i couldn't find any error in their approach of implementing this project. ) this new functionality that they have to implement will not make the code smelly ) i could understand their design process and they have given some good explanation for their design process. ) this new design will not increase the response time. ) they have spent some time and put in good effort to complete this design document.,-1.0,-1.0,-1,68
they have designed the project well with all essential information crucial for the project. they have given enough information on the proposed design and its tools and design choices which follow good design principles.&nbsp;,-1.0,-1.0,-1,35
"they have properly given enough information on what the project is about, that is allowing the instructors to visualize on the scores and also compare the rubric with an assignment etc. they have given info on what they should do in this project.",-1.0,-1.0,-1,43
they have properly explained the changes that they are going to make to the system with proper visualizations such as flow charts and screenshots. they have done some good work in properly explaining the changes that are to be made.,-1.0,-1.0,-1,40
they have given proper information on how to implement the project with enough flow charts to depict the project flow and the design choices and the tools they will use. they have also given details for the test plan in their wiki page.,-1.0,-1.0,-1,43
"the design document included a test section which includes in detail about the rspec framework tests, capybara tests and ui tests and i think they have written enough test cases for the ui tests which will be necessary to test the system.",-1.0,-1.0,-1,42
they have used proper flow charts to depict their design flow and they have also included screenshots to depict the proposed grade visualization. so the visualizations makes it a little easy to understand what the project is about.,-1.0,-1.0,-1,38
"after checking the changes authors have proposed, i felt authors have worked very well on the implementation and they came up with good improvements.",-1.0,-1.0,-1,24
the authors have clearly stated about the functions they want to implement their changes for. the design looks good and i don't think there are any gems that can simplify the process.&nbsp;,-1.0,-1.0,-1,34
"yes,&nbsp;the design incorporates all of the functionality required. the functionalities&nbsp;have been thoroughly explained in the wiki document.&nbsp;",-1.0,-1.0,-1,22
the team has proposed several changes and they seem to be very good. i did not find it difficult to follow or understand these changes as they were explained very well.,-1.0,-1.0,-1,31
the team has definitely stated about the functions they want to perform their changes for. the idea looks good and i don't believe there are any gems that can simplify the process.&nbsp;,-1.0,-1.0,-1,34
the team has included diagrams that are relevant to the problem statement and it helps readers to map on to what the team is trying to convey in the design document.,-1.0,-1.0,-1,31
"yes, the team has included activity and use case diagrams which helps a reader to understand what the team was working on.",-1.0,-1.0,-1,22
"after reviewing the changes team has advanced, i felt the team has worked very well on the implementation and they came up with great advances to the design. the document also looks very good with detailed explanations.",-1.0,-1.0,-1,37
found visual aids like diagrams which explain&nbsp;about the design. the team included diagrams like uml in the document which makes it simple for the reader to trail with what is written.,-1.0,-1.0,-1,33
"yes,&nbsp;the design includes all of the functionality required. the functionalities&nbsp;have been completely described in the wiki document. the team has also included diagrams which makes it easy for the reader.&nbsp;",-1.0,-1.0,-1,35
the document looks very complete with detailed explanations of all the sections and also the team included many code snippets which show the implementation part of the project.,-1.0,-1.0,-1,28
the explanation is more about the problems than the solutions. but i am still satisfied with the level of detail that the project explores.,-1.0,-1.0,-1,24
the authors have not really mentioned if they are going to add methods but it seems so from the problem description. they have adequate test plans in place to ensure that the code is not smelly.,-1.0,-1.0,-1,36
all the requirements have been covered in the design doc.,-1.0,-1.0,-1,10
i absolutely loved the way the doc was structured and was made so easy to understand.&nbsp;,-1.0,-1.0,-1,17
"i don't see anything in the requirements to assign different rubrics for each round of the reviews. as the project remains the same, the rubrics would also remain the same. but just in case such a requirement comes forth in the future it would be a great feature.",-1.0,-1.0,-1,49
"the diagrams, screenshots provided are very intuitive and looking at them made it easier to understand the explanation.",-1.0,-1.0,-1,18
yes. i think the team has understood the project well and made the design very easy to digest.,-1.0,-1.0,-1,18
the design is indeed very simple. the project itself is complicated but the teams seems to have understood it very well!,-1.0,-1.0,-1,21
all the points mentioned in the requirements are considered in the design doc.,-1.0,-1.0,-1,13
they have used the earlier diagram and added to it as well!,-1.0,-1.0,-1,12
from my pointof view their idea is good enough. they willbe using config file to configure the links and will be making a new view to show conflicts. this will sove the problem referred.,-1.0,-1.0,-1,34
"yes, all the current design , its flaws and their design to rectify this issue. all the functionalities required was mentioned. i didnt find anything missing.",-1.0,-1.0,-1,25
"yes, all the current design , its flaws and their design to rectify this issue. all the functionalities required was mentioned. i didnt find anything missing. &nbsp;",-1.0,-1.0,-1,26
"yes, the newly inserted diagrams and screenshots helped a lot in understanding their solution. overall the writeup seems to have improved.",-1.0,-1.0,-1,21
the changes proposed by the author was good from my point of view and it encompassed all the requirements made by the problem statement. the diagrams and screenshots helped a lot.,-1.0,-1.0,-1,31
"yes, all the current design , its flaws and their design to rectify this issue. all the functionalities required was mentioned. i didnt find anything missing. they intend to use delegation pattern to resolve their problem which seemed appropriate to me.",-1.0,-1.0,-1,40
"they did a good job by using all sorts of visual aids to increase the understandability. they successfully used uml, flowchats screenshots etch to elaborate more on their plan of action.",-1.0,-1.0,-1,31
the author proposed quite genuine changes. they even compared it with the last failed same project.,-1.0,-1.0,-1,16
i think all the points are covered by the author.,-1.0,-1.0,-1,10
yup they added it after the last review. good job.,-1.0,-1.0,-1,10
the write up is simple and clear. they add some changes too.&nbsp;,-1.0,-1.0,-1,13
the write-up is pretty good. it contains all the functionality required.,-1.0,-1.0,-1,12
all the points seem to be covered by the document.,-1.0,-1.0,-1,10
design appears to be simple and the team is trying to address the limitations from the last pull request. design makes complete sense and is easy to understand,-1.0,-1.0,-1,28
"authors have explained the changes required in a best possible. there is lot of additional content for the reader to understand. this helps the reviewer/user to understand the process if the content added is not sufficient.&nbsp; team has also tried to summarize content from ""how the algorithm works, is taken from the ""college admissions and the stability of marriage ( )"" by d. gale and l. s. shapley."" this helps the user to read the summary rather than going through entire paper",-1.0,-1.0,-1,82
the problem statement is neatly broken down into multiple sub-problems to which solutions are elaborately drawn in the design. the explanations are easy to follow and are justified well. the proposed changes do not seem redundant and make sense.&nbsp;,-1.0,-1.0,-1,41
"adding a new column in the topics table seems to be the best way to solve the problem statement. according to the design i don't see how the author may go wrong with the code by adding a method to a wrong class or make it ""smelly"". the response time might increase do to another added filter of rubrics for each topic but i don't think that can be avoided. the design seems to be logical and appropriate for the problem.",-1.0,-1.0,-1,83
the design document is very well written with all the required functionality incorporated. most of the solution deign has been described and drafted out. code has not been written yet so test plan is left for later stage for obvious reasons. otherwise the design justifies the problem statement and is to the mark.,-1.0,-1.0,-1,53
the team has provided an adequate explanation for the changes to be carried out. the team has mentioned the features&nbsp;that were previously implemented along with the new changes carried out. the new changes are also explained with an interactive mock-up of the visualization.&nbsp; enough explanation is provided both&nbsp;visually and content-wise because of which it is very easy to follow the explanation. the team has followed good methods and techniques while proposing the changes implemented.&nbsp;&nbsp;,-1.0,-1.0,-1,83
"the design incorporates complete functionality which is required. the design mentions the changes required, details about the existing work done, the flow of design along with the test plan.&nbsp; the team has also performed mock-up of the visualization and added it to the design documentation. it was really good because it helped me understand the functionality easily. everything was very clear.",-1.0,-1.0,-1,63
"the changes are very clearly described with a specific explanation for every change. the change is described with three sections namely ""file"", ""problem"" and ""solution"".&nbsp; this shows that the team has put a lot of efforts in planning and strategizing everything. this also makes all the explanations easy to follow.",-1.0,-1.0,-1,51
"the ""design strategy"" clearly mentions everything that is required. according to me, the plans that the authors have decided to carry off the implementation looks correct and efficient.&nbsp; some of them have not been mentioned because they can not be carried out before actually coding the functionality. the design mentioned will not make the code smelly.&nbsp; also, the new design suggested by the team does not look&nbsp;complicated&nbsp;for now.&nbsp; &nbsp;",-1.0,-1.0,-1,76
the design does incorporate the functionality required. all the task that can be mentioned before the actual coding has been clearly described in the design document.&nbsp; a proper design strategy&nbsp;is also mentioned which gives a clear idea of the functionality that is to be implemented. there is also a section of the previous work mentioned which contains the link to the pr and&nbsp;the repo.&nbsp; the team has also detected the flaws by the previous team which could be improved.&nbsp;&nbsp;,-1.0,-1.0,-1,87
the first type of visualization allows instructors to examine the rubric statistics for a single assignment. the second type of visualization allows instructors to compare the rubric statistics between two different assignments when the criteria for each assignment is the same. they have clearly explained well as to how they&nbsp;are going to proceed. the design flow is also done well and was&nbsp;helpful for me to&nbsp;understand the plan of work better. the html mockup was also helpful to understand the plan of work.,-1.0,-1.0,-1,88
 ) no the authors don't add methods to wrong class. ) the new design will improve the system and make it easy for the instructors to address the problems that they might face.&nbsp; ) i think the tools that they use will be good for the design problem they are addressing. ) the new design will definitely add more complexity to the system but will improve the layout for expertiza. ) the effort put in will be justified because i feel that integrating rubric statistics with the assignment grade view is a good idea.&nbsp;,-1.0,-1.0,-1,92
they have a design flow diagram and a html mock up set up that makes me understand the whole system better. especially the mock up is done very well and also showed how the final implementation will look like.&nbsp;,-1.0,-1.0,-1,40
the design proposed is very easy to follow and understand . i was able to understand what has to be done. i have mentioned this in detail in the previous review.&nbsp;,-1.0,-1.0,-1,31
"the design document is done very well, they have completed all the functions by the previous review and have added more detail to the visualizations this time. the design flow diagram is also done very well.&nbsp;",-1.0,-1.0,-1,37
yes the design document seems to be complete with all the functionality required. they have detailed the plan of work and how they plan to implement it very well. the test plan has also been done well&nbsp;. they have spoken about how to integrate rubric statistics with the assignment grade view. they have also detailed and explained the design choices and tools to be used.&nbsp;,-1.0,-1.0,-1,67
they have done a very good job.&nbsp;the first type of visualization allows instructors to examine the rubric statistics for a single assignment. the second type of visualization allows instructors to compare the rubric statistics between two different assignments when the criteria for each assignment is the same. they have detailed the steps and methods they are using to achieve the functionality.&nbsp;,-1.0,-1.0,-1,64
"yes, they have a separate test plan. rspec, capybara and ui tests are proposed and will be interesting to see how they go about implementing them for the final project.&nbsp; &nbsp;",-1.0,-1.0,-1,32
these are improvised on for this submission and i found them to have done a very good job. i have mentioned the details in the previous review and they remain the same. they have included more figures of the html mock up this time around.&nbsp;,-1.0,-1.0,-1,46
"yes, the design appears to be as simple as possible.",-1.0,-1.0,-1,10
"showed what is currently in the system and what their new view will look like, good job.",-1.0,-1.0,-1,17
each change has useful explanations for the rationale behind it.,-1.0,-1.0,-1,10
this seems like the most simple way as they are not adding additional models/controllers.,-1.0,-1.0,-1,15
the design looks very reasonable and not complicated at all.,-1.0,-1.0,-1,10
they have show a clear design of their project. graphics and explanations are detailed and clear.,-1.0,-1.0,-1,16
the design includes most functionalities required and they also proposed all files that need modifications.,-1.0,-1.0,-1,15
"yeah, they showed files that need to be changed and gave different scenairos.&nbsp; &nbsp;",-1.0,-1.0,-1,15
they put graphs and user designs in the document. seems all these effort help with me understand their goal and design.,-1.0,-1.0,-1,21
the writting quality are high. they have detailed description for problem statement and what they going to do.&nbsp;,-1.0,-1.0,-1,19
they have a good description of what they will do. they also include tools that will use.,-1.0,-1.0,-1,17
there is a uml in the wiki describing their design. they also include tools they will use.&nbsp; the visualization of the design workflow is pretty good.,-1.0,-1.0,-1,27
the design looks clear and simple. no redundant content involved.&nbsp;,-1.0,-1.0,-1,11
the design looks sound and reasonable overall. the team has shown a clear design flow with good visualization. looks very clear.,-1.0,-1.0,-1,21
the writesup are well done. they almost includes all functionalities required.,-1.0,-1.0,-1,11
"yes, they have adequate description about changes and plan they would make.&nbsp;",-1.0,-1.0,-1,13
i think all things look good since we are still at the very beginning stage of the project.,-1.0,-1.0,-1,18
"yes, they included ui test plan in the document. seems their test plan is comprehensive.&nbsp;",-1.0,-1.0,-1,16
they provide great visualization of their design. the diagram shows detailed of what changes they might do.,-1.0,-1.0,-1,17
they give a good description of what need to do on their project. and they also include files that need to be changed in the document.,-1.0,-1.0,-1,26
seems they will involve a lot of changes. but overall their design is good.&nbsp;,-1.0,-1.0,-1,15
"the document is generally complete for this time. it includes problem statements, what need to do, files need to change.&nbsp;",-1.0,-1.0,-1,21
the design is simple and effective. no redundant or useless part included.,-1.0,-1.0,-1,12
yes. the document is very detailed and comprehensive about their plan and what they are going to do.,-1.0,-1.0,-1,18
"yes, the team include their test plan in this document. overall the test plan covers all cases.",-1.0,-1.0,-1,17
"yeah, they have a very clear user diagram and design strategy. their visualization looks very good.",-1.0,-1.0,-1,16
"yes, the design touches on all required functionality stated in the assignment description.",-1.0,-1.0,-1,13
"yes, the proposed solution touches on all of the required functionality.",-1.0,-1.0,-1,11
"yes, the proposed changes section explains exactly how they plan to implement their changes.",-1.0,-1.0,-1,14
the team has precisely identified the bugs to be repaired.,-1.0,-1.0,-1,10
i feel informed about the changes the team will attempt to carry out.,-1.0,-1.0,-1,13
the design appears to cover all of the required functionality.&nbsp; it shows how the new data will be created and how it will be able to be viewed.,-1.0,-1.0,-1,29
"the design looks fairly simple and very clear, the description of their design is also very simple to understand.",-1.0,-1.0,-1,19
the design appears to be very sound and follows all the appropriate principles.,-1.0,-1.0,-1,13
the team has successfully&nbsp;incorporated all the functionalities required for this particular project in their submitted doc.,-1.0,-1.0,-1,18
"the design doc does have a test plan proposed, the provided test plan has various scenarios covering all the possible scenarios, the brief details of all the scenarios cover all the possible ways to cover the functionalities.&nbsp;",-1.0,-1.0,-1,38
the proposed changes by the author are very clearly mentioned and are easily&nbsp;understandable.&nbsp;,-1.0,-1.0,-1,16
"the proposed design has been excellently written and very to understand, the team has done a very good job in explaining every step of their idea.",-1.0,-1.0,-1,26
all the diagrams used to explain the design flow or the types of visualizations are really good and easy to understand.,-1.0,-1.0,-1,21
the proposed idea for the design sounds very simple and very easily understandable.&nbsp; the tools and design choices part of the doc provides a much better way of understanding the topic.,-1.0,-1.0,-1,32
the design appears to be very sound and following all the appropriate principles,-1.0,-1.0,-1,13
the team is successful in implementing all the required functionalities for this particular project in their doc.,-1.0,-1.0,-1,17
"i feel the doc is complete, the team has given all the required information for me to understand what they are doing and how are they planning to do it. &nbsp;",-1.0,-1.0,-1,31
the flow of the design has been presented as a diagram and the idea is very clear and easily&nbsp;understandable.,-1.0,-1.0,-1,21
"the writeup is very brief and very easy to understand, problem statement has been very clearly stated and easily understandable, thier idea about the proposed process is very clearly understandable.",-1.0,-1.0,-1,30
"with the diagrams, the idea has been very well presented and very easy to understand.",-1.0,-1.0,-1,15
"i could see all the functionalities required have been implemented, and have been very neatly explained.",-1.0,-1.0,-1,16
"everything&nbsp;has been very clearly mentioned, and i felt it would be nice if i could see their idea on what the individual classes should perform in order to implement this.",-1.0,-1.0,-1,32
the presented flow diagram gives a very clear depiction of where the changes have to be done and also about the process of steps how it has to be followed.,-1.0,-1.0,-1,30
the design provides context to the reader very well and follows most of the functionality required.&nbsp;,-1.0,-1.0,-1,17
the authors have explained the plan for implementation of their given topic very well.&nbsp;,-1.0,-1.0,-1,15
the authors have explained very well. it is very detailed and visually appealing.&nbsp;,-1.0,-1.0,-1,14
they have clearly mentioned the files that would be changed and the design pattern that they would be using. i think that is more than enough in the initial submission round.,-1.0,-1.0,-1,31
yes the design is crystal clear from the pictorial description and their detailed explanation of each step,-1.0,-1.0,-1,17
very well-explained. one of the best wiki pages i have seen so far with adequate and relevant information and keeping it to the point.,-1.0,-1.0,-1,25
they have explained the project very well starting from what the project tasks are which clearly lets the reviewer know that the team is very well aware of what they would be doing throughout the project duration. they have a clear understanding of what the project is asking for which is clearly seen in the way they have explained the flow.,-1.0,-1.0,-1,61
yes. they have worked upon the testing quite thoroughly this time and explained in detail their plan of testing every corner cases.,-1.0,-1.0,-1,22
"yes, they have implement in the document. it seems that the project has been done most of part since the project is related to last project.",-1.0,-1.0,-1,26
the code follows dry principle and they didn't add new method to a wrong class. i don't think the new design will increase the response time.,-1.0,-1.0,-1,28
it's pretty well done. there are enough details to help the reviewer to understand.,-1.0,-1.0,-1,15
"yes, they explained the process for solving the issues and provided useful links for the reviewer to understand the change.",-1.0,-1.0,-1,20
they provide some figures about the process to solve the issue. they might not need uml figures in this project.,-1.0,-1.0,-1,20
"yes, the design is as simple as possible. they provided the issues right now and files they need to fix. they also provide the test plan. the structure is great.&nbsp;",-1.0,-1.0,-1,31
"yes, the design contains enough information about the project, including the statement, the issues and what need to be done.",-1.0,-1.0,-1,20
the diagrams are great and it is great that they start to do implementation now. they explained the changes well.,-1.0,-1.0,-1,20
they provide workflow figure and some implementation figures. i think they don't need to provide uml figure in this project.,-1.0,-1.0,-1,21
"yes, they provided two figures, one is to explain application flow and the other is to explain user case.",-1.0,-1.0,-1,19
"yes, the design specifies what their next step is going to be and how they're going to proceed.",-1.0,-1.0,-1,19
"yes, the team has explained clearly what needs to be done, and it makes everything clearer.",-1.0,-1.0,-1,16
the pictorial representations have made is easier for me to follow what they've done.,-1.0,-1.0,-1,15
&nbsp;each of the proposed changes have explanations along with proposed testing.,-1.0,-1.0,-1,12
the explanation about the proposed changes per task is excellent as it makes crustal clear what is intended and how they are implementing it.,-1.0,-1.0,-1,24
the design proposed by the author is pretty good.the explanation about each task and the solution separately is nice.they are making changes in the appropriate classes and have explained it too.,-1.0,-1.0,-1,33
the entity-relationship diagram shown to explain their proposed changes is very nice as it explains their logic in a very simple way. screenshots of the existing functionality along with their proposed changes is explanatory.,-1.0,-1.0,-1,35
the design document has explained all the functionality required for implementing the project.they have explained clearly with the screenshots the existing scenario and what they proposed to do.screenshots and diagrams clearly explain their view point and give big picture of what they proposed to do.,-1.0,-1.0,-1,47
overall the design document has all the important sections with a detailed explanation which makes it very easy to understand.,-1.0,-1.0,-1,20
they have explained the changes they are going to do but have not explained where the logic is going to be implement although they have mentioned actor and actions but detail explanation about this is required about where in the code they are going to implement this.,-1.0,-1.0,-1,47
their design to calculate the composite score and make it visible to the students is pretty straightforward and it is as simple as possible which makes it very easy for anyone to understand what they are trying to do.,-1.0,-1.0,-1,39
the application flow together with the use case for both the instructor as well as the student is very informative and makes it crystal clear to understand their design and what their objective is.,-1.0,-1.0,-1,34
the read of the document takes time but only because the team has delved into the changes which might be needed in every file. the explanation is very structured and has a good flow which makes it easy to follow.,-1.0,-1.0,-1,40
"the current design indeed does seem sound. on cursory inspection, the authors seem to be editing the right methods, the changes don't seem to make the code smelly or complex. however, i do not believe the changes would make the response faster, nonetheless the team wasn't tasked with this.&nbsp;",-1.0,-1.0,-1,52
the team has done a wonderful job in understanding and interpreting the work needed. they have mentioned the exact files which might need to be edited. the extent of analysis done at this stage in the topic is commendable.,-1.0,-1.0,-1,39
the team has headed the right direction towards the testing of the changes. the team talks about writing tests for the new algorithm/code they intend to write and perform ui testing.,-1.0,-1.0,-1,32
the design proposed contains the previous implementation and has improved from it.&nbsp;,-1.0,-1.0,-1,13
the diagrams helps me to understand the mechanism and workflow very well. they have also using the screenshots to show the desired output.&nbsp;,-1.0,-1.0,-1,24
"the design follows the simple basis ""first-come-first-serve"" and introduces the top circle trading mechanism. they tried to make it as simple as possible",-1.0,-1.0,-1,26
"yes, the design follows appropriate principles and solves the problem stated.",-1.0,-1.0,-1,11
"yes, the authors introduce the mechanism and other details about their design, they also sued the graphs to help the readers to understand their concept easier.",-1.0,-1.0,-1,26
"yes, they have used graphs to describe the changes that made to the system and also show the output with the screenshots.",-1.0,-1.0,-1,22
there are pictures showing the existing (old) work done as well as model relational diagram which are each relevant to the topic.,-1.0,-1.0,-1,22
the team has proposed implementation that addresses the issues faced by the previous work done.&nbsp;,-1.0,-1.0,-1,16
each section of the wiki is well thought out and explicit.,-1.0,-1.0,-1,11
there are visual aids in the wiki which aid understanding.,-1.0,-1.0,-1,10
yes. the proposed solution section has changes each of which are articulated well.,-1.0,-1.0,-1,13
yes. the test plan articulates the individual implementation steps to be taken.,-1.0,-1.0,-1,12
there seem to be no conflict with the design.&nbsp;they did make use of appropriate patterns in their design.,-1.0,-1.0,-1,20
"they have mentioned about implementing a new function through delegation pattern, which will allow object composition to achieve code reuse through inheritance.&nbsp;",-1.0,-1.0,-1,23
"based on the explanation they gave for what and how are they going to do the design, i think it is simple and easy to understand.",-1.0,-1.0,-1,26
the design does sound to be following appropriate principles and using appropriate principles. i couldn't find any problems with their proposed design.,-1.0,-1.0,-1,23
"they clearly mentioned the changes that they are going to do and also gave the file names of where they are going to change what. so, i think they did a good job at that.",-1.0,-1.0,-1,35
their design seems to be far more explanatory this time with appropriate use of patterns and principles.,-1.0,-1.0,-1,17
they did give a lot of explanation in writeup about how the changes and where the changes are going to be made. i think they did a good job at that.,-1.0,-1.0,-1,31
"from what i could gather in the design doc, it seems that the team has a good understanding of how they will go about refactoring bluetooth support, and the method explained seems as simple as possible.",-1.0,-1.0,-1,36
"yes, only what is absolutely necessary seems to be added in.",-1.0,-1.0,-1,11
"not much to say here, the plan of work seems very thorough and adheres to good design principles.",-1.0,-1.0,-1,18
"the test plan is very thorough, some example role mocking ideas are included, and lots of test conditions are mentioned.",-1.0,-1.0,-1,20
"since it is a mozilla project, they seem to focus on arriving at the solution. design patterns dont seem to hold here",-1.0,-1.0,-1,22
they seem to have added tests as recommended by mozilla. this shows that each test should work to test a functionality,-1.0,-1.0,-1,21
the diagrams are very simple and very understandable. they did not over do it and make it confusing. so thats a plus!,-1.0,-1.0,-1,22
found a section called pros and cons which i did not find in any other document. it helped me understand the previous work done. appreciate the effort!,-1.0,-1.0,-1,27
the visual aids made it really easy for me to understand the project and the tasks at hand.,-1.0,-1.0,-1,18
was definitely the best design documents i have reviewed! great work team&nbsp;,-1.0,-1.0,-1,13
the authors have a very good understanding of the project requirements and a clear plan for implementing the changes. they have written detailed explanations about their proposed changes.,-1.0,-1.0,-1,28
the design approach is solid. the team has gone beyond the proposed changes and identified areas where the code can be refactored. they have also used good judgement in designing their views where they mention the need for helper methods and why the views should not do the heavy-lifting.&nbsp;&nbsp;,-1.0,-1.0,-1,52
the team has not only covered all the project requirements but they have identified more special cases like rubrics for each phase of the assignment.,-1.0,-1.0,-1,25
the design doc is written in detail and complete with placeholders for implementation and testing.,-1.0,-1.0,-1,15
the team has followed a pretty straight forward approach to the problem without any unnecessary complications,-1.0,-1.0,-1,16
the design doc covers all of the functionalities mentioned in the requirements document,-1.0,-1.0,-1,13
yes the authors have explained clearly and in detail about the proposed changes. well done!,-1.0,-1.0,-1,15
the proposed approach is solid and the team has identified and listed all the code that might be impacted by this project,-1.0,-1.0,-1,22
"yes, the design document explains all of the functionality mentioned in the project requirements.&nbsp;",-1.0,-1.0,-1,15
" . the authors didn't plan to add method to a wrong class. . i haven't see any code ""smelly "" so far. . the new design is good, not too complicated. . i can not analysis the new design may increase the response time of the sysyem with a big amount. &nbsp;",-1.0,-1.0,-1,49
"yes, the design is easy to read and understand, they could be simpler but so far is good.",-1.0,-1.0,-1,18
"the design appears to be sound, followed appropriate principles and used the adapter pattern.&nbsp;",-1.0,-1.0,-1,15
the design incorporated all of the functionality required. they has described the oos project and the final project.&nbsp;,-1.0,-1.0,-1,19
"yes, they have described the changes they have made on the system by given the files of where they changed and the new idea of the new project.&nbsp;",-1.0,-1.0,-1,29
"the design includes the test plan. they said if the refactor is pass, the test will pass, so they will test the functionalities.&nbsp;",-1.0,-1.0,-1,24
"the overall quality of the explanations is very good with words and diagrams. especially the diagrams, they are really helping me to understand the project.&nbsp;",-1.0,-1.0,-1,26
 . no added method to a wong class. . i didn't see any potentially new design make the code smelly. . the new design doesn't look complicated. . the new design may potentially increase the response time.,-1.0,-1.0,-1,35
"they have some major visual aids of uml diagrams and a distribution graph. the diagrams are really helpful with very good quality.&nbsp; . i didn't find any diagrams is unnecessary and do not help the reader understand this project. . the uml diagrams followed the conventions. . most of the diagrams are about high-level design with some details, but i think it provides enough details about their project.",-1.0,-1.0,-1,68
"the design appears to be sound, followed appropriate principles, provided many pieces of information and graph to help understand",-1.0,-1.0,-1,19
"the design incorporates all of the functionality required. they have a good project explanation, what is the existing views, and what they plan to do, and the test case.",-1.0,-1.0,-1,29
"the authors adequately explained the changes to be made to the system by giving enough information of their task, what should be changed, what should be done, and how they make the changes with the proper graph help.&nbsp;",-1.0,-1.0,-1,39
"they have a good test plan in the design document with rspec framework tests, capybara tests, and ui tests, all the test are well described.",-1.0,-1.0,-1,25
they seem to be signing up to do a lot; i hope they can finish it all!,-1.0,-1.0,-1,17
seems reasonable. i really like the links to the proposed files to be changed.,-1.0,-1.0,-1,14
it does seem like this group found the most efficient way to tackle the project.,-1.0,-1.0,-1,15
they did a great job of explaining their ideas and giving rough ideas of the code too. i don't think there are existing gems that could simplify them because i don't think the rust language uses gems.,-1.0,-1.0,-1,39
it looks like the design incorporates all the required functionality.,-1.0,-1.0,-1,10
they did a good job of explaining the changes they need to make as well as providing code samples.&nbsp;,-1.0,-1.0,-1,20
their design looks good and their methods/code makes sense.,-1.0,-1.0,-1,10
"although the project is complex, it looks like the team has done a good job of simplifying it.",-1.0,-1.0,-1,18
"yes, the design appears to be sound. they explained why they do not need to follow any design principles as such.",-1.0,-1.0,-1,21
"yes, the design seems to incorporate all of the functionality required.",-1.0,-1.0,-1,11
they do a great job of explaining the changes they need to make and illustrating them via relevant diagrams.,-1.0,-1.0,-1,19
their design is very thorough and i do not anticipate them encountering any issues with it. it looks like they spent a great deal of effort considering their design choices and implementation.,-1.0,-1.0,-1,32
they seem to have simplified the design greatly by breaking it into parts and explaining how they plan to tackle each part.,-1.0,-1.0,-1,22
they do a great job of explaining the changes to be made to the system and their anticipated implementation.,-1.0,-1.0,-1,19
"yes, the design appears to incorporate all the required functionality.",-1.0,-1.0,-1,10
the ui for viewing student details was illegible in the first submission. the authors fixed this problem in this submission.,-1.0,-1.0,-1,20
"the models book, book_history, librarian, library, student, university, book_issue_history have all the required belongs_to, has_many, has_many through: associations.",-1.0,-1.0,-1,18
the ui was very intuitive and all the features for each user profile were easy to find. the team kept pushing chnages to the github repo throughout the project period.,-1.0,-1.0,-1,30
the app is deployed on heroku. the ui is very intuitive and easy to get used to. the readme file&nbsp;,-1.0,-1.0,-1,21
"in the initial submission, the app could only perform crud operations on universities. the number of functionalities added are very impressive in such a short period of time.",-1.0,-1.0,-1,28
the team constantly made commits in the period between the round review and the final submission. all the team members were active in committing.,-1.0,-1.0,-1,24
"the models book, student, librarian, library, university, book_history, hold_book_tracker all had the required belongs_to, has_many and has_many through: relationships.",-1.0,-1.0,-1,19
"yes, they kept on submitting their changes throughout the project and the still commit changes in round as well.",-1.0,-1.0,-1,19
"yes, they built rspec test structure for this project. they tested the librarian's model and librarian's controller. the test cover the most basic situation.",-1.0,-1.0,-1,26
"yes, they kept on submitting their changes throughout the project, and they still commit changes and polish their functions in round .",-1.0,-1.0,-1,21
"yes, they kept on pushing changes regularly and even in round .",-1.0,-1.0,-1,11
yes they kept on pushing changes throughout the period and also they have used issues functionality of github to divide the and track tasks.,-1.0,-1.0,-1,24
yes for admin and students controller and models they have implemented test cases.,-1.0,-1.0,-1,13
they have covered almost all controllers and models of the system in testing. just they have not covered failure test cases.,-1.0,-1.0,-1,21
"yes, the system works as it is supposed to, almost all the features and functionalities are implemented well. there was a problem of the book isbn number being not unique, now, that problem is fixed. for the password creation, there is an character requirement which was not mentioned earlier, but now its is mentioned. &nbsp;",-1.0,-1.0,-1,55
"yes, the code is written in a fairly clean and a reasonable way. all the good programming practices have been followed.",-1.0,-1.0,-1,21
"yes, they kept on submitting changes throughout the project. also&nbsp;yes, this team did commit changes in round . mainly, the project of this group was done before round one, but, they added additional functionalities and fixed a few errors that were there in the first round.",-1.0,-1.0,-1,47
"yes, the system handles the -to-n and n-n relationships properly. the library-book relation is -n, the university-library relation is -n, the&nbsp;university-student relation is -n, the library-librarian relation is -n &nbsp; &nbsp;",-1.0,-1.0,-1,39
"yes, the team has thoroughly tested a model and a controller",-1.0,-1.0,-1,11
"the ui is pretty simple, easy to understand and use, and also well defined in the readme file",-1.0,-1.0,-1,18
"the code is written precisely, and to a great extent, it follows good ruby and rails practices",-1.0,-1.0,-1,17
yes the student model and controller is thoroughly tested. almost all the functionalities of the student are working,-1.0,-1.0,-1,18
"yes, the code is written in a clean and a readable way.",-1.0,-1.0,-1,12
"yes, they kept on submitting changes throughout the project. also&nbsp;yes, this team did commit changes in round .",-1.0,-1.0,-1,19
the changes were committed and documented properly. the readme file was updated a couple of times that has reflected most recent changes,-1.0,-1.0,-1,22
the code is clear and readable. one method only handle one task. the naming of models/functions are very clear. overall the code quality is great.,-1.0,-1.0,-1,26
yes. the team keep on submitting changes throughout the project. there are commits and the most recent commits was in round .,-1.0,-1.0,-1,21
"yes. models has proper relations (has_many, belongs_to)among them such as library-book, book-hold-requests, book-bookmarks, etc.",-1.0,-1.0,-1,19
yes. the project is deployed well. yes. the ui is easy to use.,-1.0,-1.0,-1,13
yes. the team keep on submitting changes throughout the project. there are&nbsp; commits and the most recent commits was in round .,-1.0,-1.0,-1,22
yes. the code is clear and readable. one method only handle one task. the naming of models/functions are clear and easy to figure out. overall the code quality is great,-1.0,-1.0,-1,31
"the ui is simple and clear, which is easy to use.",-1.0,-1.0,-1,11
the commits in the project were made regularly and even after the st round.,-1.0,-1.0,-1,14
"even though rspec is not used, the testing is very thorough.",-1.0,-1.0,-1,11
"the code is beautiful and easy to understand. i have read almost all&nbsp;model and controller codes, and find it's enjoyable.&nbsp;",-1.0,-1.0,-1,24
the ui uses many js codes and looks soooo beautiful,-1.0,-1.0,-1,10
"wonderful ruby code, easily to read and understand, and learned a lot from your code!! thanks",-1.0,-1.0,-1,16
yes. team has been working consistently&nbsp;the whole time.,-1.0,-1.0,-1,10
"the code has been concisely and properly written. too many functions are not being done by method and in general, there is less commented code. the code follows good ruby coding practices with only activerecord queries fired on the database.",-1.0,-1.0,-1,40
"yes, the team kept on submitting their changes&nbsp;throughout the project&nbsp;in round and .",-1.0,-1.0,-1,16
"the system&nbsp;handles edge cases very well. since the team have developed the -to- and n-to-n relationships very well, the code smoothly works and does not throw an error anywhere. .&nbsp;the book disappears from the student's checked out books page if the admin deletes an issued book. . the user is properly deleted with the book getting unlocked for other users to checkout. . the admin account cannot be deleted. &nbsp;",-1.0,-1.0,-1,74
the code has been well modularized&nbsp;and is in general kept well.&nbsp;,-1.0,-1.0,-1,14
"the team regularly submitted changes throughout the project. yes, the changes were properly committed in round .",-1.0,-1.0,-1,16
the code is well-written with well-defined functions and has clean&nbsp;project structure.,-1.0,-1.0,-1,15
"yes, team has done good job in maintaining the code quality, making it more dry. no methods are really long. comments are given properly.",-1.0,-1.0,-1,24
"yes, -n relation has been maintained for library and books. university and library also have -n relationship maintained. team has used good approach for user to maintain that relation.&nbsp;",-1.0,-1.0,-1,30
"yes, whatever the functionalities are presented were tested in good manor.",-1.0,-1.0,-1,11
"nothing special been done for ui, but functionalities are easy to find and use.&nbsp;",-1.0,-1.0,-1,15
yes. the schema shows that the relationships are managed correctly as well as the functionality are working fine.,-1.0,-1.0,-1,18
 there is a commit almost everyday. also utilized github project board to some extent. ,-1.0,-1.0,-1,14
everything seems to work fine and schema looks good.&nbsp;,-1.0,-1.0,-1,10
"yes, the team does a good job in writing clean and readable code. for example, in the books controller, they have different methods for different functionalities like increase_count, decrease-count, add_to_hold, add_to_cart, etc.",-1.0,-1.0,-1,33
"yes, the team has made a great job with the use of github projects. they have committed regularly to the project. i can see changes after round but before the deadline of round .",-1.0,-1.0,-1,33
"yes, the team kept pushing their changes throughout the project period.",-1.0,-1.0,-1,11
i can see regular commits and issues created for every stage of the application. it also follows good ruby practices.,-1.0,-1.0,-1,20
there are decent number of commits throughout the project duration,-1.0,-1.0,-1,10
"there are lot of commits, looks like work was started on time.&nbsp;",-1.0,-1.0,-1,13
good coding practices because they have implemented in a good way.,-1.0,-1.0,-1,11
there have been substantial amount of commits so it looks like the team kept pushing their changes.,-1.0,-1.0,-1,17
admin model and controller seems to work fine according to the implementation required . hence it looks like admin model is tested properly&nbsp;,-1.0,-1.0,-1,23
yes its very good and well defined in the readme. good job.,-1.0,-1.0,-1,12
yes one model library and one controller library has been done thoroughly.,-1.0,-1.0,-1,12
the team worked everyday on the project and kept pushing their changes onto git.there is a clear clarity about the work progress and work division among the team members.,-1.0,-1.0,-1,30
"all the -n and n-n relationships are handled properly by the team. we can see that a library can have many books, users can borrow many books, many books can be bookmarked etc. all these can be seen in the migrations as well as models folder.",-1.0,-1.0,-1,47
"yes, the team was very organised and worked consistently on the project pushing code day by day from the moment they started delivering small chunks of functionalities.",-1.0,-1.0,-1,27
the team kept pushing the code into the git&nbsp;at regular intervals in an organised way with a clear motive of what the basic functionality they want to submit for the first review.all the contributors contributed to the project.,-1.0,-1.0,-1,41
yes the team consistently kept pushing for the round keeping in mind the previous suggestions and appropriate division f work among themselves.the commit graphs in the git hub shows their work.we can see the step by step enhancement and maintenance work in parallel.,-1.0,-1.0,-1,45
"yeah, they did commit changes throughout the project and even in round .",-1.0,-1.0,-1,12
the code is readable and clean. the naming conventions are as per ruby standards. the functions are unit functions and no long loops have implemented as far as possible.,-1.0,-1.0,-1,29
the team has done timely commits. updates have been committed in round as well.,-1.0,-1.0,-1,14
the relationship property has been handled. a library can have n books and book belongs to one library is followed through the system.,-1.0,-1.0,-1,23
"yes, the librarians controller and model is tested. it includes test cases for validations and uniqueness of librarian.",-1.0,-1.0,-1,18
proper coding conducts have been followed. code looks clean and readable.,-1.0,-1.0,-1,11
yes i can locate a many to many relation between student and books i can locate one to many relation between book and library one to many relation between library and librarian &nbsp;,-1.0,-1.0,-1,33
you have followed good coding practice and code structure look good to me. it is easy to find the required files based on directory structure. good work,-1.0,-1.0,-1,27
"yes. the team kept committing almost everyday throughout the time of this project, including round .",-1.0,-1.0,-1,15
yeah. i could see every commit though their whole process. &nbsp;,-1.0,-1.0,-1,11
their code is written in a clean and readable way.,-1.0,-1.0,-1,10
"all relationship are clear and correct, and the dependency is also&nbsp;",-1.0,-1.0,-1,12
"all the situations mentioned above and i could come up are handled, good work!",-1.0,-1.0,-1,14
"yes, they have write unit test to make sure correct.",-1.0,-1.0,-1,10
they do keep submitting on this project. and there have been a lot of changes.,-1.0,-1.0,-1,15
" commits throughout, that's a lot. the team was active and up to date in terms of code sharing",-1.0,-1.0,-1,19
features are easy to find and it's easy to navigate as well,-1.0,-1.0,-1,13
"team has used scaffolding and the structure generated has been enhanced by their code, hence they have followed good ruby and rails coding practices.",-1.0,-1.0,-1,24
team has used scaffolding and they kept the structure and seems to follow the coding standards as well,-1.0,-1.0,-1,18
"yes, the team did keep on committing their changes to the repository. also, changes made during the round were kept on committing.",-1.0,-1.0,-1,22
"yes, the system does handle the associations properly. a library is allowed to have multiple books.&nbsp;",-1.0,-1.0,-1,17
github repositories seem to be updated regularly by multiple users throughout the project period.&nbsp;,-1.0,-1.0,-1,15
"the user interface has been beautified with html and css and is very intuitive, showing all the fields correctly in place where it is supposed to be. the home page button is available to easily navigate, also the services available to the student is shown clearly.",-1.0,-1.0,-1,46
yes the team has done the testing of model and controller,-1.0,-1.0,-1,11
yes the team kept committing their changes throughout the project phase. also the round .,-1.0,-1.0,-1,14
code quality appears to be fine.&nbsp; &gt; methods haven't been cluttered with loads of tasks and are specific to the one they are supposed to perform. &gt; naming conventions have been taken care of and the code readability is good. &gt; methods are usually short and properly commented.,-1.0,-1.0,-1,50
yes. this team continued submitting their changes through out the project and specially after the nd round. i see over commits which shows the amount of work done!,-1.0,-1.0,-1,28
no such issue found when skimming through the code on git,-1.0,-1.0,-1,11
-the team did push the changes on git as and when required but i couldn't see much changes pushed after the first review mainly because most of the functionalities were working even during the previous review. &nbsp;,-1.0,-1.0,-1,38
the model 'book' has been checked and tested thoroughly with all possible test cases.,-1.0,-1.0,-1,14
i went thoroughly through the library model and controller and can say that it is tested correctly.,-1.0,-1.0,-1,17
the team has done a great job&nbsp;at testing the student model and the student controller using rspec specification.,-1.0,-1.0,-1,20
the team pushed code to github on a regular basis.,-1.0,-1.0,-1,10
the team has done a&nbsp;good&nbsp;job at testing&nbsp;the library model. they have also done some testing for the corresponding controller.,-1.0,-1.0,-1,25
the code has been written following standard coding guidelines. names are not ambiguous or misleading. functions do the specific tasks which they are assigned to do. the ruby-istic approach is followed in coding. the code is perfectly human-readable.,-1.0,-1.0,-1,40
yes it looks like most of the practices have been followed properly. models and controllers have been designed using many features specific to this environment.,-1.0,-1.0,-1,25
lib_books table maps the -n relationship for library and books. bookmarks and reservations are based on id of this table.,-1.0,-1.0,-1,20
seems like book model and controller has been tested thoroughly,-1.0,-1.0,-1,10
team has been consistent in committing changes once they have begun working on the project.,-1.0,-1.0,-1,15
basic cases for librarian controller and models have been included.,-1.0,-1.0,-1,10
"yes, they did commit changes in round though most of them were in a small amount of time.",-1.0,-1.0,-1,18
"yes, they have written meaningful tests for the model and controller chosen.",-1.0,-1.0,-1,12
the code is quite aptly written and is modular with respect to functionalities.,-1.0,-1.0,-1,13
"yes, continuous feature development is done post submission of round .",-1.0,-1.0,-1,10
repsec test cases were found for librarian controller and librarian model.,-1.0,-1.0,-1,11
"yes the systems works properly. in round , addition of books was not possible and various other book related functionalities were available only for the pre seeded data but now all the functionalities regarding books work really well.",-1.0,-1.0,-1,37
the changes were done at regular interval since the inception of the project. the commits started off slowly during the first week and then subsequently increasing in the following. the commit frequency decreased in the week after review indicative that they worked on the reviews and not on implementing a lot of new features.,-1.0,-1.0,-1,54
 -to-n and n-to-n relationships are handled correctly in the models. there are no issues while dealing with this.,-1.0,-1.0,-1,21
"the team was committing the changes fairly throughout the project.however, a majority of the commits are seen to be done in week .",-1.0,-1.0,-1,23
the code is written in a clean way and modular fashion where each&nbsp;method handles a specific task. it also follows ruby-style naming conventions &nbsp;,-1.0,-1.0,-1,27
"code quality is good and the methods were written in a neat,&nbsp; succinct manner.",-1.0,-1.0,-1,15
the team made code changes and pushed their code during round as well.,-1.0,-1.0,-1,13
ui has been neatly designed and has a good look. all method functions listed on the left-hand side helps in manoeuvring the flow.&nbsp;,-1.0,-1.0,-1,25
basic test cases for all models have been written and asserted correctly.&nbsp;,-1.0,-1.0,-1,13
they perfectly manage to write logic inside model and not controller.,-1.0,-1.0,-1,11
"yes, the team update many functionality that during first review result in code break. &nbsp;",-1.0,-1.0,-1,15
yes the labels are well defined. users can quickly scan the form&nbsp;&nbsp;,-1.0,-1.0,-1,14
" yes, the team has been committing their changes throughout the project &nbsp;",-1.0,-1.0,-1,12
"features that are functional, do have intuitive ui and have proper navigation.&nbsp;",-1.0,-1.0,-1,13
"yes, team did keep on pushing changes throughout the project.",-1.0,-1.0,-1,10
yes the team has tested one model and one controller,-1.0,-1.0,-1,10
"yes, the team did submit their changes throughout the project",-1.0,-1.0,-1,10
"the team has tested at least, one model and one controller.",-1.0,-1.0,-1,11
all the functionalities are working and i could not find any problems.,-1.0,-1.0,-1,12
the code is clean and readable. one method handles only one task and it easy to understand the code.,-1.0,-1.0,-1,19
the team submitted their changes throughout the project. the team has committed the changes in round .,-1.0,-1.0,-1,16
the user interface is amazing and the readme gives all the details required.,-1.0,-1.0,-1,13
they have tested at least one model and one controller.,-1.0,-1.0,-1,10
"yes, the team has tested at least one model and controller.",-1.0,-1.0,-1,11
"yes, the team continuously kept submitting their changes, especially during round . majority commits have been done during round which could be a sign that they have taken the reviews of round seriously and kept working to implement the feedback received in round .",-1.0,-1.0,-1,42
the team have tested at least one model and controller.,-1.0,-1.0,-1,10
- there are few basic test cases for models and controllers,-1.0,-1.0,-1,10
"works well, all functionalities have been implemented including extra credit.",-1.0,-1.0,-1,10
"yes, code is written in a good and concise way.",-1.0,-1.0,-1,10
"extensive usage of project boards, branches and commits made at regular stages. yes the team still made commits in roud ",-1.0,-1.0,-1,20
there are roughly over commits on github page detailing all changes at each commit stage and usage of branches and project board. kudos,-1.0,-1.0,-1,23
yes. i particularly liked that there was not one link to a broken functionality. kudos,-1.0,-1.0,-1,15
"yes, continuous deployment was done. changes were made after round ",-1.0,-1.0,-1,10
readme is written very well. all functionalities are explained well.,-1.0,-1.0,-1,10
ui is very simple and easy to understand. navigation is seamless,-1.0,-1.0,-1,11
"last commit was done on october, no changes in round .",-1.0,-1.0,-1,10
used scaffolding and devise gem mainly. code is adhered to mvc framework,-1.0,-1.0,-1,12
the team developed the project consistently throughout the project period (round and round ) and committed accordingly on github. &nbsp;,-1.0,-1.0,-1,19
the commits are consistent throughout the project period and work seems properly divided into teammates.&nbsp;,-1.0,-1.0,-1,16
"the team committed changes distributed throughout the project. in round two, they rectified their errors and committed those changes on the github.",-1.0,-1.0,-1,22
"a book cannot present in two libraries at any given instance, satisfying -n constraint for book and library. while a student can order a book from different libraries, satisfying n-n relation.",-1.0,-1.0,-1,32
 . everyone seems to have participated equally in the project contribution and committed the code after every change maintaining the integritiy. &nbsp;,-1.0,-1.0,-1,21
test cases are executed thoroughly. student cannot register using same email -id.&nbsp;no two books can be given same isbn number.,-1.0,-1.0,-1,22
"- yes, they fixed the majority of the problems and the flow of the application is without any hinderance.",-1.0,-1.0,-1,18
- they had continuous&nbsp;commits on the repo by all the members of the team.,-1.0,-1.0,-1,15
"yes,&nbsp;properly explained different actions of different roles.&nbsp;",-1.0,-1.0,-1,10
- massive improvements. a completely different application altogether. ui looks better and the flow of the application is also fixed now.,-1.0,-1.0,-1,20
- good management of authenticated pages and i cannot access pages i am not supposed to. - well written&nbsp;code. good use of before_action in controllers.,-1.0,-1.0,-1,25
yes the team kept making changes throughout the whole period,-1.0,-1.0,-1,10
yes the user interface is more inttutive and easy to use.,-1.0,-1.0,-1,11
"in the github, everyone give their update to repo, there are commit in total, which mean they have a good performance.",-1.0,-1.0,-1,21
repo has commit and everyone's contribution could clearly tell.,-1.0,-1.0,-1,10
"in general,&nbsp;the team kept on submitting their changes throughout the project and made a lot of commits which is a very good practice. in round , the team constantly committed changes (over commits).",-1.0,-1.0,-1,34
"in general,&nbsp;the team kept on submitting their changes throughout the project and made a lot of commits which is a very good practice. in round , the team constantly committed changes as well ( commits).",-1.0,-1.0,-1,35
the system handles -n relationships as well as n-n relationships correctly. there is no problem related to any of these relationships.,-1.0,-1.0,-1,22
good ruby &amp; rails coding practices have been followed. &nbsp;,-1.0,-1.0,-1,10
the test cases are covered as part of development and cover basic functionalities.,-1.0,-1.0,-1,13
i can easily understand the code and what the code trying to make.,-1.0,-1.0,-1,13
"from the commits history in github, i can see the team keep upgrading the code during the round period.",-1.0,-1.0,-1,19
the team did one model and one controller test perfectly.,-1.0,-1.0,-1,10
"they have earned the extra credits, good job ! its really amazing&nbsp;",-1.0,-1.0,-1,12
"yes they are currentlly still pushing the commit, good job !",-1.0,-1.0,-1,10
code is clean and readable. no redundant code. a method implement only one function. &nbsp;,-1.0,-1.0,-1,15
the group made commits throughout the entire working period. everyone committed to the repository. they work through round and round .,-1.0,-1.0,-1,20
"necessary relationships added. admin cannot delete a university, and destroy dependent objects. admin cannot delete a library, and destroy dependent objects. &nbsp;",-1.0,-1.0,-1,22
"the outlook is good. very neat framework, coded front-end layout. clear buttons for linking to main pages and function pages.",-1.0,-1.0,-1,21
there are several examples of -to-n and n-to-n mappings in the database.,-1.0,-1.0,-1,15
"it looks like at least one model and controller have tests, though i'm not familiar enough with rails to know how much is generated.",-1.0,-1.0,-1,25
"according to the code breakdown, only % of the project is written in ruby. everything else seems to follow good coding practices. the code follows mvc and a restful interface.",-1.0,-1.0,-1,29
"very terrific user interface.&nbsp; not only easy to use, but also quite fully developed.",-1.0,-1.0,-1,15
"well organized code following ""good ruby and rails coding practices"".",-1.0,-1.0,-1,10
very clear and detailed. quite sure what to click on if i&nbsp; want to take specific actions.,-1.0,-1.0,-1,18
"yes, they keep on submitting changes. however, most commits come from&nbsp;amanend.",-1.0,-1.0,-1,13
"yes, there have been a lot of commits performed and the team has committed throughout. and also they have commited and corrected a few mistakes in round which were there in round .",-1.0,-1.0,-1,32
yes the team has tested the bookmark controller and the user model throughly,-1.0,-1.0,-1,13
"yes, they have tested the bookmarks_controller_test and the bookmark_test model.",-1.0,-1.0,-1,10
"yes, they kept commiting in oct , , and , almost throughout the round period, mainly focusing on updates of book checkout limit, search functionality, book histores functionality, and modifications to book models and test cases, and adding email funcionality and social login functionality, etc.",-1.0,-1.0,-1,42
"the interface is much greater than many other groups. for example, they have all bolded title followed by a horizontal separation line, which makes the title very clear and easy to notice. besides, in the home page, the three selections are placed center. all are reflecting that they paid great effort to optimize the interface, and did a great job. actually, i think this is not an easy job, at least for new learners of ruby on rails like me, to edit the page format and even use some characters like bold or center or using different color, i have to read a lot of documents and make many attempts. so this interface is really a great job.",-1.0,-1.0,-1,118
the semantics and names format in the models and controllers files are accordance to the standardization. i even learned a lot from their views files on how to optimize the interface.,-1.0,-1.0,-1,31
"actually, this team has already completed most of the functionalities during round , so they only have a few commits during round .",-1.0,-1.0,-1,21
"yes, they handle all the necessary relationship between models clearly and correctly. no errors have been found.",-1.0,-1.0,-1,17
"yes, they have done all tests of admin, book, librarian, library, and student.",-1.0,-1.0,-1,13
"yes, the model relationships have been accurately implemented. dependent destroy has been used at appropriate places.",-1.0,-1.0,-1,16
"yes, there are a number of commits and the commit messages are descriptive of the task they perform.",-1.0,-1.0,-1,18
unable to login as admin as admin credentials not provided,-1.0,-1.0,-1,10
"yes, the model for books has been well tested and works well.",-1.0,-1.0,-1,12
it's a good looking ui which is intuitive and looks clean.,-1.0,-1.0,-1,12
many commits were made over the days during the project assignment.,-1.0,-1.0,-1,11
"yes,the team has been pushing the changes throughout the project",-1.0,-1.0,-1,11
they used project board to track the progress of their project.,-1.0,-1.0,-1,11
their&nbsp;system handle the -to-n and n-to-n relationships properly,-1.0,-1.0,-1,13
this system handle the -to-n and n-to-n relationships properly,-1.0,-1.0,-1,12
they kept on submitting their changes throughout the project. and there are some commits during the round .,-1.0,-1.0,-1,17
they kept pushing the changes of the codes throughout the project period.,-1.0,-1.0,-1,12
the user interface is easy to understand and use.&nbsp;,-1.0,-1.0,-1,10
they followed ruby and rails structure to write their codes.,-1.0,-1.0,-1,10
"yes, they test some models and controllers. they tested a book model that should have valid name.",-1.0,-1.0,-1,17
"the wiki write up covers issues assigned to this team, and detailed documented the steps it took them to fix these issues",-1.0,-1.0,-1,22
"there are no design patterns required in this work, it's a implementation of something outside of expertiza",-1.0,-1.0,-1,18
"the team has made changes in multiple files where they need not create a new method, hence no comments there. the wiki pretty much explains what they have done and how they have done it.",-1.0,-1.0,-1,35
" . all the functions are adequate . no, the length of methods are fine. . adequate information provided on wiki page . the code follows the ruby guidelines. . all code looks good",-1.0,-1.0,-1,28
"yes, the travis ci seems to be passed. the branch did not have any conflict with the base branch.",-1.0,-1.0,-1,19
"the variables used in all files like&nbsp;app/assets/javascripts/tree_display.jsx,&nbsp;app/controllers/tree_display_controller.rb,&nbsp;app/models/questionnaire_node.rb,&nbsp;app/views/tree_display/list.html.erb&nbsp;are good. the code clearly depicts what it is doing.&nbsp; i didn't find anything where names doesn't suggest the functionality.&nbsp;",-1.0,-1.0,-1,55
"yes the feature works as intended. when i was change from courses to assignments and click on manage content again, the page landed back in assignments.",-1.0,-1.0,-1,26
"writeup seems good. the team has taken great time to explain the issues, functionality, process, test-plan and code snippet. they missed the test plan on st round but have included it in second round.",-1.0,-1.0,-1,35
"yes, the write up seems pretty clear. i was able to login and check the functionality with help of wiki page. the flow chart help me understand what should i do.",-1.0,-1.0,-1,31
the team has checked in test cases and modified code in&nbsp;app/controllers/assignments_controller.rb&nbsp;in nd round.,-1.0,-1.0,-1,20
"yes, the code looks good to me and could be deployed to production slot.",-1.0,-1.0,-1,14
"yes, the write up seems pretty clear. i was able to login and check the functionality with help of wiki page. the ui testing&nbsp;part helped me understand what should i do.",-1.0,-1.0,-1,33
the variables used in file assignments_controller.rb&nbsp;are good. the code clearly depicts what it is doing.&nbsp; i didn't find anything where names doesn't suggest the functionality.&nbsp; the method create is also self explanatory,-1.0,-1.0,-1,39
yes the feature works as intended.&nbsp;directory&nbsp;was created once the new assignment was created,-1.0,-1.0,-1,17
team did a good job on writing the code and refactoring it.&nbsp;,-1.0,-1.0,-1,13
yes i can see new commits . the team have updated test cases in nd round,-1.0,-1.0,-1,15
yes the team has added one test case and updated the other. the new test case cover pretty much for the work team did,-1.0,-1.0,-1,24
"yes, i think the code is ready to be deployed onto the production server. no the project need not to be done from scratch.",-1.0,-1.0,-1,24
yes the build pass in travis ci. no there were no conflict that must be resolved.,-1.0,-1.0,-1,16
the team has come updated the code and implemented the feedback provide in the st round.,-1.0,-1.0,-1,16
yes the feature seems to be working as per the description.&nbsp;,-1.0,-1.0,-1,12
"yes, the travis ci build passed and there were not any conflict which was to be resolved.&nbsp;",-1.0,-1.0,-1,18
"the variables, methods and class names all looks good. all the names provide information or suggest the functionality.",-1.0,-1.0,-1,18
"the code is well written. i did found issues in st rounds regarding comments, the team has improved on the feedback given.&nbsp;",-1.0,-1.0,-1,23
the travis ci build passes successfully and clears all the checks after the last commit. there is no conflict that needs resolving.,-1.0,-1.0,-1,22
i think that this code is ready to be deployed onto the production server as there were small refactoring changes made to the quiz_questionnaires_controller.rb which were tested against the pre-written tests. i do not think that the project should be redone from scratch. i strongly think that this project is a good starting place for a future team to pick up from.,-1.0,-1.0,-1,64
"the travis ci build passed successfully and cleared all the checks after the latest commit, which was expected as the latest and the only commit made after the initial review only involved addition of comments to file. i could not find any conflict with the base branch that needed resolving. &nbsp;",-1.0,-1.0,-1,51
i tried running the test myself and all the tests passed as expected. the features work perfectly.,-1.0,-1.0,-1,17
"the writeup is very well written and provides a good introduction and explanation to the controller, the issues and their solutions. the code snippets help in following the written part even more. the testing section also gives a good insight into the testing of the quiz_questionnaires_controller_spec.rb with rspec and includes link to the youtube video and a screenshot of the successful travis ci build.",-1.0,-1.0,-1,65
"the new code was well written and nicely refactored without actually changing the existing logic. the code did not have any bad names, long functions or redundant code. there were no dry problems as well. the code followed the ruby style conventions and was very readable and easy to follow. the addition of comments to the refactored code in the nd round helped in understanding the changes made by the team and gave an insight into their thought process.",-1.0,-1.0,-1,79
"proper comments are present in code, helpful to understand what is being done in the method.&nbsp;",-1.0,-1.0,-1,17
"code does not have any long methods, this code is written in rust not ruby so i don't think&nbsp;",-1.0,-1.0,-1,21
team seems to have added few new test and removed some older test.,-1.0,-1.0,-1,13
"yes the writeup is easy to understand and clean, they mentioned that design pattern are not applicable for this project.",-1.0,-1.0,-1,20
build seems to be working and code is working as intended.,-1.0,-1.0,-1,11
code is well written and functions are not very long or complicated,-1.0,-1.0,-1,12
proper details are provided in the wiki to understand what changes are done,-1.0,-1.0,-1,13
no method is longer than line. code is&nbsp; dry&nbsp; and follow ruby style guidelines.&nbsp;,-1.0,-1.0,-1,17
i think this project can be deployed on production server of expertiza.,-1.0,-1.0,-1,12
"yes, they works correctly in edge cases. and they also describe their cases in wiki as well.",-1.0,-1.0,-1,17
the wiki almost explains everything. and i can get enough information about what they have done.,-1.0,-1.0,-1,16
"very brief wiki page, can fully understand what they have done.",-1.0,-1.0,-1,11
"yes, they did commit and add necessary comments suggested on previous review.",-1.0,-1.0,-1,12
"yes, i thinks it is ready to be merged as they have fixed previous bugs and the code is easy to follow for future students.",-1.0,-1.0,-1,25
"yes they eased out the ""purpose and scope"" section of write up which was previously confusing as been pointed out in my previous review and they added some background as to what is score report. so overall it is now easy to follow.",-1.0,-1.0,-1,43
yes they have improved code by adding more comments to it.,-1.0,-1.0,-1,11
yes they have explained all the things related to the work adequately in write up.,-1.0,-1.0,-1,15
yes they have included all the necessary sections and links which are easy to follow.,-1.0,-1.0,-1,15
yes the write up is very well organized and easy to follow all the changes implemented.,-1.0,-1.0,-1,16
"yes, there are comments for each method, and they are descriptive enough to tell what the method does, and how it does it.",-1.0,-1.0,-1,23
"no, the functions are not too long, the code does not need to be extracted into seperate methods. the comments are descriptive enough. the code follows the ruby style guide and is dry.",-1.0,-1.0,-1,33
yes there is commit. this commit changes the file&nbsp;app/helpers/review_mapping_helper.rb.,-1.0,-1.0,-1,14
"yes, this code is ready to be deployed onto the production server, the changes are good enough, the refactoring is done correctly and the project works pretty well. this is a good starting place for a future team to pick up.",-1.0,-1.0,-1,41
"yes, the authors have converted all the cases discussed in test plan into automated tests. i don't find any tests that failed or are missing.",-1.0,-1.0,-1,26
"yes, the build did pass travis ci. no conflicts to be resolved.",-1.0,-1.0,-1,12
"yes, the features work as intended. the work is refactored.",-1.0,-1.0,-1,10
"the writeup is pretty good, there is no lack of explanation, no lack of functionality. i could understand the writeup very easily as well as the functioning. the functioning and the working of the project is explained precisely and concisely.",-1.0,-1.0,-1,40
"yes, the features work as they are supposed to. the refactoring is done correctly. &nbsp;",-1.0,-1.0,-1,15
"yes, the write up comprehensively specifies the changes made and the impact of them",-1.0,-1.0,-1,14
"although new commits were not made , the existing code is complete and requires very little change",-1.0,-1.0,-1,16
the project is based on improving the testcases and adding more testcases. each test-case has appropriately handled the edge cases&nbsp;,-1.0,-1.0,-1,22
the test-plan is not explicitly mentioned since the project is on testing.,-1.0,-1.0,-1,13
"yes the build has passed in travis ci, before the nd round. &nbsp;",-1.0,-1.0,-1,13
this is an expertiza project. yes the build passed in travis ci and no conflicts was found with the base branch.,-1.0,-1.0,-1,21
( ) the length of functions are good. ( ) no need to be extracted. ( ) yes. more comments will be helpful. ( ) the code does follow the ruby style guide ( ) the code is dry and the code quality is good.,-1.0,-1.0,-1,35
yes. there was new code committed during the nd round. the latest commit was days ago.,-1.0,-1.0,-1,16
yes. the team added test cases. the coverage has reached&nbsp; . % which is mentioned on wiki page. &nbsp;,-1.0,-1.0,-1,18
yes. i think the code is of good quality and ready to be deployed.,-1.0,-1.0,-1,14
"names of the variables , methods are reasonable. no vague names were found.",-1.0,-1.0,-1,12
"i think the writeup is great. problems in this project are well defined and clarified. also, for each issue the solution is provided to explain the plan or idea how the team will fix the issue which is helpful for reviewers. the code change shows in which file and how the code is modified, which is very clear.",-1.0,-1.0,-1,58
"i think the code quality is good. the code style is good. no problem such as bad names, bad code style or dry problems was found.",-1.0,-1.0,-1,26
yes the writeup is clearly explained the functionality the work is related to. it explained in details what the issues are and what is done to fix issues.,-1.0,-1.0,-1,28
"yes, the operation work as intended. also the wiki page has showed the step-by-step instruction how to test from ui which is very clear.",-1.0,-1.0,-1,26
yes. i think the code quality is good and ready to be deployed.,-1.0,-1.0,-1,13
the code can be deployed to production; with the caveat of verifying the code coverage.,-1.0,-1.0,-1,15
the best documentation i have come across. it is detailed and covers all things that are required to understand the project.,-1.0,-1.0,-1,21
travisci build was successful. the branch can be merged without any conflicts.,-1.0,-1.0,-1,12
all changes seem to be good and suggestive of their respective functionalities.,-1.0,-1.0,-1,12
the writeup is very exhaustive and covers all possible sections needed to understand and review the feature. good job team!,-1.0,-1.0,-1,20
the wiki page is very well documented. has supporting screenshots for reference. good job team.,-1.0,-1.0,-1,15
the functioning of the project&nbsp;did not change after refactoring.,-1.0,-1.0,-1,11
the wiki page has plenty of details about the task and how they approached their solution. good job on the documentation.,-1.0,-1.0,-1,21
the team has added all the missing elements that were reported in the last review.,-1.0,-1.0,-1,15
"no concerns were reported in the first round, the same code exists now as well.",-1.0,-1.0,-1,15
"it is a testing project, and the test cases are pretty exhaustive. good job!",-1.0,-1.0,-1,14
the comments are decent and are added to all methods as it was one of the issue mentioned in the tasks.,-1.0,-1.0,-1,21
"no major changes to existing methods, just positioning of methods is changed.",-1.0,-1.0,-1,12
"there was only commit during round , which was adding comments.",-1.0,-1.0,-1,10
the pull request passes the travis ci build. all conflicts from previous commits were fixed.,-1.0,-1.0,-1,15
"the write-up is pretty thorough. it explains the problem statement, current implementation, what improvements were made, and shows the tests pass.",-1.0,-1.0,-1,22
"yes, they updated the readme and added test cases during the nd round.",-1.0,-1.0,-1,13
the writeup explains explains that the expertiza currently doesn't have checks related to the number of reviews a student can be assigned. it does a good job of showing what files were modified and what changes were made in them. they also describe why each change was made.&nbsp;,-1.0,-1.0,-1,50
"despite past builds failing, the most recent commit builds on travis ci. there are no remaining conflicts.",-1.0,-1.0,-1,17
the write up does a good job of stating the problem statement and background. it walks through the team's planned solution as well. the manual testing section made it much easier to test the ui.&nbsp;,-1.0,-1.0,-1,37
the system works as expected; i can't request more reviews than limited by the assignment while logged in as a student.&nbsp;,-1.0,-1.0,-1,23
because they only need to do is to change haml file to erb file. there's no need for them to add additional comments.,-1.0,-1.0,-1,24
"( ) no function is too long. ( ) no method needs to be split into two methods. ( ) comments are enough in this scenario. ( ) the code follows ruby style guide, it's clean and easy to understand. ( ) all the codes are&nbsp;dry. &nbsp;",-1.0,-1.0,-1,40
yes they add new commits in nd round about comments.,-1.0,-1.0,-1,10
"their test coverage decreased. in nd round, they didn't add any test, so the coverage remained same as round .",-1.0,-1.0,-1,20
"because they only changed the layout of the view, so they test for what they have changed using ui testing.",-1.0,-1.0,-1,20
"yes, they explain what the problem is here and how to deal with that problem. the write-up is easy to understand.",-1.0,-1.0,-1,22
"because they didn't&nbsp;change the layout of the view, they converted the view file from haml file to erb file. so they only did ui test for this part.",-1.0,-1.0,-1,31
"the names of variables, methods and class names look fine to me. they all follow the principle of naming!",-1.0,-1.0,-1,19
"the writeup is well written and is easy to understand,",-1.0,-1.0,-1,10
their code follows dry principle and is clean enough to follow.,-1.0,-1.0,-1,11
the writeup is well done. it explained the work very well and it is very easy for me to understand what they have changed in this issue.,-1.0,-1.0,-1,27
"yes, it works as intended. everything seems fine when i test manually.",-1.0,-1.0,-1,12
the writeup explain clearly that what the problem is and what they plan to do and then what they have done.,-1.0,-1.0,-1,21
"during my manually test for their work, it seems that everything works fine.",-1.0,-1.0,-1,13
their writeup is good and easy to follow. i can understand what they have done.,-1.0,-1.0,-1,15
they have climate and shorten their code many times and now it is dry enough.,-1.0,-1.0,-1,15
there were definitely many commits in the second round but the commits were all done together before days only.,-1.0,-1.0,-1,19
"yes, the team has added some test cases and the code coverage has increased by %. this means that the tests are&nbsp;covering&nbsp;the new code as well which is a good sign for the team.",-1.0,-1.0,-1,37
"the writeup is excellent. the authors have mentioned everything.&nbsp;the actual issue that they are trying to solve,&nbsp;the solution that they implemented and the related code snippet. this really helps anyone to clearly understand what their project is about and what&nbsp;are their&nbsp;contributions to the codebase.",-1.0,-1.0,-1,52
the&nbsp;features work as intended. i tried to upload a video(.mp ) but&nbsp;i couldn't because&nbsp;of the file type validation done by the team. nice work.,-1.0,-1.0,-1,31
"the writeup by the authors is very good. they have&nbsp;clearly specified what is the background issue, how they have approached the problem in high-level terms and then added code snippets and screenshots to show what&nbsp;changes they have done.&nbsp;anyone can easily understand what the project is and what issue is the team trying to solve and how.",-1.0,-1.0,-1,63
"according to their&nbsp;servo project page, it seems their steps don't require&nbsp;external tests to be added from their side. the&nbsp;servo team has predefined test cases&nbsp;to check whether new code works or not. since their tests pass, their code&nbsp;should&nbsp;have the correct behaviour.",-1.0,-1.0,-1,53
yes team has made commits every other day after the review .&nbsp;,-1.0,-1.0,-1,12
yes teams build has passed on travis ci! they have no merging conflicts. they had build issues but they have resolved it.&nbsp;,-1.0,-1.0,-1,23
"yes i have reproduced the issue and then also checked after the change, issue does not exist now.",-1.0,-1.0,-1,18
"yes write up very well written, they explained the problem, mentioned the design, how they solved it, step by step documentation, testing screenshots. they have explained it really well. good job to team.&nbsp;",-1.0,-1.0,-1,34
"yes, in test plan session team has clearly defined the steps that reviewer can take to test the issue they fixed. i have done the manual testing on ui and they have resolved the navigation issue. even in review also this team has done a good job, the only thing was of test plan which is also resolved now.&nbsp;",-1.0,-1.0,-1,60
"last commit show is of days ago, so i don't think team has made any changes after review .&nbsp;",-1.0,-1.0,-1,20
"team has not added the new test cases as they are just refactoring the code, but they did run the rspec file and made all the test cases pass. and after my manual testing also i didnt find any issues.",-1.0,-1.0,-1,40
i did test to best of my knowledge and the way i did in review and i donot see any issues. it would be better if in wiki page they can give better detailing of how to test thoroughly.,-1.0,-1.0,-1,39
yes team has commented the test cases and give good description about what they are going to do and also name explains that too.&nbsp;,-1.0,-1.0,-1,25
"yes, team has made commits after review . they have worked on the changes i pointed out in first review. good job to team.&nbsp;",-1.0,-1.0,-1,24
this project was to write test cases. coverage has increased to % from %.&nbsp; this is a really good improvement made by team. team has considered it from very beginning how the test coverage can be improved and they ave achieved it,-1.0,-1.0,-1,41
"yes, these test cases make total sense to me and i think they can be put easily in production server.&nbsp;",-1.0,-1.0,-1,21
yes they have converted all of them in test cases.&nbsp;,-1.0,-1.0,-1,11
"yes, build pass in travis ci and there were no merge conflicts.",-1.0,-1.0,-1,12
yes they have increased coverage to % which team has considered as target from way beginning in test plan also. the have given good description to test cases and they are self explaining&nbsp;,-1.0,-1.0,-1,33
i pulled their code and tested it manually and test cases are working perfectly fine and team has done very good coverage of test cases.&nbsp;,-1.0,-1.0,-1,26
this project is mainly related to writing the test cases. they have covered good number and ways of scenarios to be tested. i do not have any critics.,-1.0,-1.0,-1,28
"the project was to write the test cases and team has done good job. i have looked into the test cases, they have tried to cover many scenarios in the testing like&nbsp; different stages of assignment, review deadlines, project deadlines.&nbsp;",-1.0,-1.0,-1,42
"it's a production ready code now,&nbsp;all the test cases passed, comments are added and code follows the design principle.&nbsp;",-1.0,-1.0,-1,23
&nbsp;travis ci build successfully passed. there are no conflicts in the pull request.&nbsp;,-1.0,-1.0,-1,15
"yes, the build is pass, also there are no merge conflicts with the main branch.",-1.0,-1.0,-1,15
yes the code is clean. all the method and variable names used are intuitive and clearly explains what their purpose in that block.,-1.0,-1.0,-1,23
"yes, the build pass and the merge has no conflicts.",-1.0,-1.0,-1,10
"since the project was focussed on refactoring, they have used meaningful names for the methods and variables. also, it is neatly mentioned on the wiki page.",-1.0,-1.0,-1,26
"the writeup is written well. they have covered all the required components and explained in easy to understand language. also the code snippets which was inserted/modified to fix the bugs is mentioned. also, they have included the flow diagram to explain the work flow.",-1.0,-1.0,-1,45
"the code is commented wherever possible, they have used good names for variables and methods,",-1.0,-1.0,-1,15
there are ample comments in the functions to tell me what is happening or will happen.&nbsp;,-1.0,-1.0,-1,17
"yes, the code seems ready to be deployed on the server.",-1.0,-1.0,-1,11
the writeup explains what is the problem and they they are currently doing to complete this project.&nbsp;,-1.0,-1.0,-1,18
"names of functions, variables, methods and class seems to be intuitive.&nbsp;",-1.0,-1.0,-1,12
only comments have been added in the commits for round .,-1.0,-1.0,-1,10
the wiki page covers all the points. it tells about the problems and identifies the issue. they explain which files have been modified and this is supplemented by a youtube video which helps graphically understand the before and after scenario.,-1.0,-1.0,-1,40
al the test cases for travis ci build have passed.,-1.0,-1.0,-1,10
"yes, the variable names in the html files are fairly relevant. for example info, warning, etc",-1.0,-1.0,-1,16
"most of the code is written in html. the variable names in the html files are fairly relevant. for example info, warning, etc. most of it is html code, so not all of the ruby principles need to be checked. no new ruby methods have been added &nbsp;",-1.0,-1.0,-1,48
"yes, the writeup clearly suggests what and where the issue was and changed code blocks are appropriately added.",-1.0,-1.0,-1,18
"yes, the code is well commented and the comment properly explains what each function does.",-1.0,-1.0,-1,15
"yes, the code added/deleted follows most of the above ruby principles. for example, huge blocks of code have been modularized and distributed in different methods",-1.0,-1.0,-1,26
no new tests were required to be written for this project. they executed the same rspec file and have checked whether the application is working.&nbsp;,-1.0,-1.0,-1,26
"yes, the authors have explained why refactoring is required for that particular file and they have identified the issues and worked on it.",-1.0,-1.0,-1,23
"as this is a refactoring project, no new test cases were required to be written.",-1.0,-1.0,-1,15
"yes, the project passes all the travis ci build test cases.",-1.0,-1.0,-1,11
"yes, the names of the methods accurately depict the function they perform. for example: obtain_team_colour and check_submission_state.",-1.0,-1.0,-1,17
the writeup is well written. it shows a comparison of before and after of the code which is refactored.&nbsp; the flowchart and images help us verify the approach used to refactor by the team.,-1.0,-1.0,-1,35
the program follows the dry principles and it was very important for them to do so as it was a refactoring project.,-1.0,-1.0,-1,22
the writeup clearly explains the changes in blocks of codes by giving both before and after version.,-1.0,-1.0,-1,17
"code looks good, by looking at the changes which is really really less. it's difficult to give the feedback on these points.&nbsp;",-1.0,-1.0,-1,24
there are changes in the names of the variables but still few names aren't good. comments have&nbsp;been updated which wasn't there in the version .&nbsp;,-1.0,-1.0,-1,29
no new code was committed during the second round. because most of the functionalities were implemented in the first round .,-1.0,-1.0,-1,20
test cases&nbsp;were modified&nbsp;and coverage has increased substantially. because it is a refactor project with not much changes.,-1.0,-1.0,-1,21
there aren't any test plans because refactoring makes changes in the existing test plan which they have done.,-1.0,-1.0,-1,19
they followed every aspect of design patterns and they used it perfectly.,-1.0,-1.0,-1,12
they dont require to have test plan for the given implementation.,-1.0,-1.0,-1,11
yes travis ci&nbsp; build was passed with no conflicts. good job.,-1.0,-1.0,-1,12
the write up is very thorough and complete test plan is mentioned code snippets and changes in the ui were mentioned and proper screenshots were shown.,-1.0,-1.0,-1,26
refactoring is done perfectly. the code adheres to ruby standards and comments were added adequately. name of html class is also well defining of its functionalities.,-1.0,-1.0,-1,26
they have explained every details in a great way and perfect implementation.,-1.0,-1.0,-1,12
the code is good enough for deployment because it adheres to the ruby principles and passes most test cases and it is just for refactoring.,-1.0,-1.0,-1,25
yes everything was mentioned as the problem statement provided the details. the changes were well documented and,-1.0,-1.0,-1,17
the pull request passed the build for travis ci and no conflicts were present.,-1.0,-1.0,-1,14
questionaire is working as expected so no changes in the functionality detected even after the refactoring.,-1.0,-1.0,-1,16
the code has been improved a lot and refactoring is done in a good way.,-1.0,-1.0,-1,15
it is working as expected. the refactor things have not affected the functionality of the code. good job.,-1.0,-1.0,-1,18
"yes, there were a&nbsp;total of commits during the nd round.",-1.0,-1.0,-1,12
"the test case for scenario ""when copy topic equals yes"" is well-written.",-1.0,-1.0,-1,13
the problem statement along with different scenarios and the solution are clearly explained. good to have code snippets.,-1.0,-1.0,-1,18
the&nbsp;problem statement along with different scenarios and&nbsp;the solution are clearly explained. proposed recommendation looks promising.,-1.0,-1.0,-1,19
 . copy without topics:&nbsp;i didn't&nbsp;see 'topics' tab near general tab. . copy with topics:&nbsp;i&nbsp;saw 'topics' tab near general tab. topics had been copied and students weren't. &nbsp; . copy with topics and students:&nbsp;both were copied under 'topics' tab.,-1.0,-1.0,-1,47
no new method implemented. and the changes done are self-explanatory.,-1.0,-1.0,-1,11
the team did a lot of commits. but it seems most of them were for passing travis build test.,-1.0,-1.0,-1,19
the code passes all travis build test and there are no conflicts with the base branch. lots of commits were done to pass the build test.&nbsp;may be could have been&nbsp;achieved&nbsp;in less no of commits.,-1.0,-1.0,-1,40
just adding an if condition resolved the issue. no other variables or methods added.,-1.0,-1.0,-1,14
i got an email when i tested by adding a participant to an assignment,-1.0,-1.0,-1,14
the writeup is very well written. it was very easy to understand because of screencast video and how to test the changes section,-1.0,-1.0,-1,23
the code is&nbsp;readable and well-commented. no dry problems were found.,-1.0,-1.0,-1,13
the task seemed to be complicated but apparently a simple&nbsp;if statement&nbsp;resolved the issue. the identification of the root cause of the problem is praiseworthy.,-1.0,-1.0,-1,28
i got the email for account creation and csv upload worked perfectly well.&nbsp;,-1.0,-1.0,-1,14
no new method added. only basic modifications are done. the changes&nbsp;are self-explanatory.&nbsp;,-1.0,-1.0,-1,16
 commits were performed during the nd round. almost every day someone worked on the project which is great.,-1.0,-1.0,-1,18
build successfully passed. there are no conflicts in the pull request.&nbsp;,-1.0,-1.0,-1,12
build successfully passed. there are no conflicts in the pull request.&nbsp; &nbsp;,-1.0,-1.0,-1,13
"variables has proper names, methods also have names so that one can easily understand why this method has been written.&nbsp;",-1.0,-1.0,-1,21
the code refactored has functions with apt length.&nbsp; &nbsp; the code follows ruby code of conducts.,-1.0,-1.0,-1,17
"the writeup is well written and explains the need for project improvement, the problems and their respective solutions.",-1.0,-1.0,-1,18
"the writeup is very well written. it consist of well stated issues, implementation and results.",-1.0,-1.0,-1,15
"the writeup is amazing. it clearly explains the need of improvement, the issues and the respective solutions. the writeup provides screenshots which makes the flow and their work easy to understand",-1.0,-1.0,-1,31
"the writeup is written well which explains their changes, issues and implementation very well",-1.0,-1.0,-1,14
they have submitted links to two pull requests. thus. i checked the later one and yes they have few commits,-1.0,-1.0,-1,20
"no link of pull request is mentioned thus, i can't review",-1.0,-1.0,-1,12
"the writeup is really very good. they seem to improve after first&nbsp; round. they have explained their project, work and implementation in a good manner",-1.0,-1.0,-1,26
"they have made changes mainly in the .html file. hence all the components that they have added like the warnings, the tabular format and the supporting css functions, all seem necessary. no function is too long and the code follows standard html style.",-1.0,-1.0,-1,43
"they have modified only the ui of the application. they have made changes in the .haml and .css files and hence their test plan includes a sequence of steps to test the ui. i followed those, they are pretty clear, and the ui seems to be working very fine.",-1.0,-1.0,-1,49
"yes, the score report and the review report have been combined to give the same basic ui to both these functionalities. because of its consistency, they chose the student ui to be the base template. they write up is really detailed and the screenshots make it easier to understand the before and after scenarios.",-1.0,-1.0,-1,54
"yes, their build passed in travis ci. no problem with that at all.",-1.0,-1.0,-1,13
"all the variable names like scores_round_, max_score_round are intuitive and short. i cannot see any change that uses wrong naming conventions. in fact, they have followed the standard html code construct everywhere.",-1.0,-1.0,-1,32
the write up is very well-written. it is nicely formatted and all the sections are nicely supported using screenshots&nbsp;and embedded codes.,-1.0,-1.0,-1,24
"even during the first round, i had mentioned, their naming convention and coding style are good. there seems to be no violations of standard ruby coding constructs.",-1.0,-1.0,-1,27
"yes, the write-up was the first thing that i read and i could immediately identify the current scenario and the expected scenario. screenshots made it easier to understand what they did. the write up was neatly written and in detail.",-1.0,-1.0,-1,41
"yes, there are a few comments which explain what particular parts (whose functions cannot be easily understood) of the controller do.&nbsp;",-1.0,-1.0,-1,22
the last commit was made days ago. so no commit was made after the st round submission (maybe because their project was complete).&nbsp;,-1.0,-1.0,-1,24
i think that enough test cases are written. the ui also works properly. i think that this project is ready to be merged.,-1.0,-1.0,-1,23
"yes, they have properly explained the purpose of the problem statement and how they have accomplished it.",-1.0,-1.0,-1,17
"yes, the variables and functions like paginated_users, paginate_list, all_roles, requested_users and so on are intuitive and well named.",-1.0,-1.0,-1,18
"yes, the page is rendered according to the screenshot. rest all was refactoring so did not have much to test in the ui.",-1.0,-1.0,-1,23
the write up is properly written. all the sections are properly explained and screenshots help to support their statements.,-1.0,-1.0,-1,19
everything worked fine for me. i did exactly as the steps that they had mentioned on their wiki page. it worked smoothly.,-1.0,-1.0,-1,22
the code is concise and very readable. it follows common ruby style.,-1.0,-1.0,-1,12
yes. it explains the purpose of this project very well. it also shows how they approach this problem with code snippets making it very easy to follow.,-1.0,-1.0,-1,27
naming is descriptive of the function and easy to understand.,-1.0,-1.0,-1,10
"yes, the features work as expected. there are no edge cases that i found would crash.",-1.0,-1.0,-1,16
"it explains it very well. with code and descriptions side by side, it doesn't take&nbsp;many efforts to understand what they did.",-1.0,-1.0,-1,24
the test examples are all concise and easy to follow.,-1.0,-1.0,-1,10
"it only adds new tests, so it shouldn't affect the main functionalities. the tests are well-written and easy-to-read.",-1.0,-1.0,-1,22
yes. the writeup clearly lists the methods they intended to test and in the .rspec file each example is descriptive of what it's testing. it's easy to understand why each example exists.,-1.0,-1.0,-1,34
"yes, the build passes and there is no merge conflict.",-1.0,-1.0,-1,10
yes. it describes each test case well in the .rspec file.,-1.0,-1.0,-1,11
all the tests pass. there are no new features added.,-1.0,-1.0,-1,10
"yes. it is about increasing the test coverage of student_task.rb, and the writeup lists all the methods they wanted to test. they did it by inspecting the coverage report and adding test examples to increase coverage",-1.0,-1.0,-1,37
they added test cases and every test increased the coverage.,-1.0,-1.0,-1,10
"yes. they considered all pre-conditions, edge cases, invalid input values, and other possibilities.",-1.0,-1.0,-1,14
"they have&nbsp;converted all the cases discussed in&nbsp;test plan&nbsp;into automated tests. however, there is some mistake in their pull request.",-1.0,-1.0,-1,25
"the variables, methods, and class names in the newly-added code in the pull request is&nbsp;clear and good.",-1.0,-1.0,-1,20
"in the second round, they add more instruction about test coverage in their wiki page, which&nbsp;makes the writeup more complete and clear. &nbsp;",-1.0,-1.0,-1,25
"i didn't see any problem in the first round, neither in the second round. &nbsp;",-1.0,-1.0,-1,16
"their task involved modification of existing methods, and the features work as they are supposed to. &nbsp;",-1.0,-1.0,-1,17
"their test plan is complete. they have considered every pre-condition, edge cases, invalid inpiut values, and other possibilities.",-1.0,-1.0,-1,19
"the variables, methods, and class names in the newly-added code in the pull request is clear and good.",-1.0,-1.0,-1,19
"the architecture of their wiki page is clear and easy-reading. in the first round, i recommended&nbsp;more instruction of design pattern, and they did make corresponding improvements.",-1.0,-1.0,-1,29
"i didn't see any problem in the first round, neither in the second round.",-1.0,-1.0,-1,15
 ) they have been keep working on this project ) they did commit a lot to pass travis ci in nd round,-1.0,-1.0,-1,20
 ) i think the code is ready to be deployed since the function works and code pass all checks ) it is good for another group to pick up since they write it really good and writeup is comprehensive ) there have been enough comment for the code so it should not be hard to follow,-1.0,-1.0,-1,53
 ) the pull request passed all checks ) travis ci passed and no conflict needs to be solved,-1.0,-1.0,-1,16
 ) there is absolute no bad names for variables and methods in this round ) the method are all in healthy length and easy to catch up ) essential comments have been provided with the code ) the code is dry enough,-1.0,-1.0,-1,38
" ) this refactor project could be test from ui ) everything works as the original one, the refactor is succeed &nbsp;",-1.0,-1.0,-1,19
" ) they have been keep working on this project ) there have been commits in nd round, but most in st round",-1.0,-1.0,-1,20
 ) this project is supposed to test manually ) everything works as it was required and the framework has been improved,-1.0,-1.0,-1,19
 specs have been modified and one spec has been added,-1.0,-1.0,-1,10
"the write up is detailed and informative. i could understand the problem statement, issue and approach very easily",-1.0,-1.0,-1,18
"all of the code added follows ruby on rails principles and the variable, method and class names are standard. &nbsp;",-1.0,-1.0,-1,20
the write up is written very well and is lucid,-1.0,-1.0,-1,10
team has done a good job of including the comments and all comments are very descriptive,-1.0,-1.0,-1,16
most of the code added uses preexisting variables and ruby coding standards are followed,-1.0,-1.0,-1,14
the write up is very good and easy to understand,-1.0,-1.0,-1,10
the write has just about all of the details required,-1.0,-1.0,-1,10
the write-up is written very well and is detailed,-1.0,-1.0,-1,10
 test cases have been modified and more have been added&nbsp;,-1.0,-1.0,-1,11
"the write up is detailed, screen shots helped me to understand what exactly the issue is about",-1.0,-1.0,-1,17
i think all of the test cases are converted into automated test cases,-1.0,-1.0,-1,13
yes the build passes and there are no conflicts in the pull request&nbsp;,-1.0,-1.0,-1,14
the write up is well written and is easy to understand,-1.0,-1.0,-1,11
"comments like this -&nbsp;# checks the submission state within each round and assigns team colour, properly explains what needs to be done.",-1.0,-1.0,-1,22
cyclomatic complexity has been followed very well. dry principle and ruby style guides are followed.,-1.0,-1.0,-1,15
last commit was made on th november.&nbsp; the commits were continuously during round of the project timelines.,-1.0,-1.0,-1,18
test plan has been properly explained in the write-up and yes they have been executed as well.&nbsp;,-1.0,-1.0,-1,19
the writeup is very well. the refactoring has been done carefully. the principles are followed while making the changes.,-1.0,-1.0,-1,19
travis ci and codeclimate checks have passed: &nbsp; &nbsp; all checks have passed successful check &nbsp; continuous-integration/travis-ci/pr &mdash; the travis ci build passed details this branch has no conflicts with the base branch only those with write access to this repository can merge pull requests. &nbsp; &nbsp;,-1.0,-1.0,-1,51
the writeup very well explains how is the refactoring being done.,-1.0,-1.0,-1,11
the refactoring is done very carefully. the method changes follows the dry principles.,-1.0,-1.0,-1,13
writeup is very carefully written and includes images to explain the changes being made.,-1.0,-1.0,-1,14
"last commits were made on nov , .&nbsp;commit were continuously made in round .",-1.0,-1.0,-1,13
yes the team has added the test cases like below: &nbsp; &nbsp; &nbsp; &nbsp; allow(reviewresponsemap).to receive(:reviewer_id).with( ).and_return( ) allow(assignment).to receive(:num_reviews_allowed).and_return( ) params = {,-1.0,-1.0,-1,28
"yes, the code works fine. the code is ready to be deployed into production.",-1.0,-1.0,-1,14
the write up clearly explains what is code expected to do and what is the description. the design principles and patterns are followed very well.,-1.0,-1.0,-1,25
checks are passed: all checks have passed - successful check continuous-integration/travis-ci/pr &mdash; the travis ci build passed &nbsp;,-1.0,-1.0,-1,21
"&nbsp; &nbsp; &nbsp; if @review_mappings.size &gt;= assignment.num_reviews_allowed &nbsp; &nbsp; &nbsp; &nbsp; flash[:notice] = ""you cannot do more than "" + assignment.num_reviews_allowed.to_s + "" reviews based on assignment policy"" the variable names follows the standard.",-1.0,-1.0,-1,34
the writeup is good and clearly explains the project description and changes that were made. the images clearly explains the project difference.,-1.0,-1.0,-1,22
the functionality works as expected. the&nbsp;reviews done by any student is&nbsp;now getting&nbsp;checked in the back-end. outstanding reviews are getting checked.,-1.0,-1.0,-1,27
yes the code looks good to be deployed to the production server. the test cases do pass and the functionality is working fine.,-1.0,-1.0,-1,23
&gt; the build seems to have passed. &gt; i dont see any conflicts either.,-1.0,-1.0,-1,14
"&gt; the writeup is very well written. &gt; proper descriptions have been added. &gt; screenshots have been added for easier understanding. &gt; also, i had mentioned earlier about adding a screencast which seems to have taken care of.",-1.0,-1.0,-1,38
"&gt; i believe the code has been written properly. &gt; it follows ruby style guidelines. &gt; the variable names, method names etc. are properly declared. &gt; comments are also given. &gt; there wasn't much complaints from the st round , hence i dont see any code updates.",-1.0,-1.0,-1,47
i see a lot of commits were made on november . most of them were related to tests and code climate.,-1.0,-1.0,-1,20
the writeup explains the authors work pretty well. the problem and the solution they designed and the implementation are clearly mentioned and very descriptive along with the screenshots.,-1.0,-1.0,-1,28
"the writeup is pretty good. the design pattern, solution, and implementation along with the test plan is explained very well including the screenshots and changes made in the code as well..&nbsp;",-1.0,-1.0,-1,32
the writeup clearly indicates the functionalities the work is related to. it clearly explains what the project does along with the screenshots.&nbsp;,-1.0,-1.0,-1,23
the project works as intended and the features work as they are supposed to be.&nbsp;,-1.0,-1.0,-1,16
the code is well commented. almost all the methods were commented which explains the functionality of the method. the dry principle is followed. all method names make sense which explains the functionality of the method.&nbsp;,-1.0,-1.0,-1,36
the documentation is good enough to understand what the project does. functionalities are clearly mentioned and the feature is quite understandable.,-1.0,-1.0,-1,21
the code is pretty easy to follow since the variables used are reasonable. the altered code is understandable and intuitive.,-1.0,-1.0,-1,20
the build passed successfully in travis ci and there were no errors or conflicts detected.,-1.0,-1.0,-1,15
"i think that the newly added code is intuitive as in, it is easy to understand the functionality even though the variable, method or class names would have been unreasonable however this is not the case. so great job guys.",-1.0,-1.0,-1,40
most of the features are working correctly as tested but have not tested or come across any corner or edge cases.,-1.0,-1.0,-1,21
the write up is very well documented highlighting the various changes implemented and its working with the help of screenshots. this would make it easier for a reviewer to visualize most of the changes while simultaneously changing the actual changes implemented.,-1.0,-1.0,-1,41
"the code is quite intuitive and easy to understand with method names, variable names and comments used reasonably. so kudos to that.",-1.0,-1.0,-1,22
"the code is mostly unchanged. however, the existing code does seem to follow good coding practices for the most part.&nbsp;",-1.0,-1.0,-1,21
"there don't seem to be any new commits during the second round. having said that, the team seems to have completed all the requirement by the first round itself. kudos!",-1.0,-1.0,-1,31
"the team modified the existing test cases to incorporate the refactoring changes that they've done. also, the test cases seem to cover all of the changes made by the team. no, the test coverage did not increase.",-1.0,-1.0,-1,38
"the project is very well done, and since it involved refactoring existing code, the possibility of it breaking any functionality is very minimal. thus, the project can be readily deployed onto production server but not without some sanity testing.",-1.0,-1.0,-1,39
"although not a section by itself, the team has given a brief about the modifications done to the existing test cases. the team&nbsp;has also mentioned fixes for some edge cases (the case where the list showed all users).",-1.0,-1.0,-1,40
"yes, the writeup explains the work done by the team in a very concise manner.",-1.0,-1.0,-1,15
"yes, the build passed in travis ci. also, there is no conflict that needs to be resolved.",-1.0,-1.0,-1,17
"since it is a refactoring project, not a lot of new code has been added. however, the team has done a good job of refactoring some method names as mentioned in the wiki.",-1.0,-1.0,-1,33
the write up is very well written. they've also included a link to a video explaining the test cases in the write up.,-1.0,-1.0,-1,24
"yes, the&nbsp;wiki is well written and easy to understand.",-1.0,-1.0,-1,11
"as this was a refactoring project, the team did not have to write new test cases. they did modify an existing test case to reflect the change they've made. also, they've moved the test cases for the functionality they separated into a new controller to a new rspec file, which is in accordance with good coding practises.&nbsp;",-1.0,-1.0,-1,60
"the last commit was days ago. so no, it seems like the team did not commit any new code during the nd round.",-1.0,-1.0,-1,23
"the team did not add new test cases. however, they modified the existing specs to incorporate their refactoring changes. no, the test coverage did not increase.",-1.0,-1.0,-1,26
"the team has made the&nbsp;required&nbsp;changes and also modified the existing specs to incorporate the changes. the tests also pass after the changes. so yes, the code can be deployed to production.",-1.0,-1.0,-1,35
"yes, the team has mentioned about the changes they made to the existing rspecs to accommodate their changes. they've also included a video for the same.",-1.0,-1.0,-1,27
"yes, the team has done a great job of explaining all the changes.",-1.0,-1.0,-1,13
"yes, the team has modified rpecs to accommodate their changes.",-1.0,-1.0,-1,10
"yes, the build passes in travis ci. there are no conflicts with the base branch which need to be resolved.",-1.0,-1.0,-1,20
the names are intuitive and describe the functionality that the methods perform.,-1.0,-1.0,-1,12
"yes, the write up is very well written and has relevant screenshots added where necessary.&nbsp;",-1.0,-1.0,-1,16
"the provided link does not work. also, as it is a refactoring project, the features work as they are supposed to. the team has included a screenshot for the same.",-1.0,-1.0,-1,30
the code contributed by the team is concise and well written.,-1.0,-1.0,-1,11
"yes, a test plan section is included and following the steps also&nbsp;allows to&nbsp;test the functionality shown in the video.",-1.0,-1.0,-1,23
"yes, the write-up explains the work done by the team nicely with the help of diagrams.",-1.0,-1.0,-1,17
"yes, the pull request has passed and the changes do not have any conflicts with the base branch.",-1.0,-1.0,-1,18
"the code is very well written and follows ruby conventions. also, all the methods are well documented.",-1.0,-1.0,-1,17
"the team did not have any method to implement. the if condition which they have added, doesn't require comment as it is intuitive by reading.",-1.0,-1.0,-1,26
"yes, a lot of changes have been made during round . almost - commits have been done during round .&nbsp;looks like a lot of efforts have been given.",-1.0,-1.0,-1,27
"yes, the code looks like ready to be deployed when merged. the checks are passing and functionalities are also working properly when tested from front end and rspec.",-1.0,-1.0,-1,28
the build passed the travis ci. all checks have passed and there are no conflicts.,-1.0,-1.0,-1,15
"i tested by adding a participant to an assignment. then i got the email in the entered email address. so, the functionality seems to be working.",-1.0,-1.0,-1,26
the code is written nicely. standard naming convention and ruby style guidelines are followed. it would have made the code much more readable.,-1.0,-1.0,-1,23
"the test plan is not implemented but the authors have run two commands (""./mach test-tidy"" and ""./mach build -d"") that, as per authors, executed successfully.&nbsp;it means that the code is correct and the changes are passing standard tests and the code is able to get built successfully.",-1.0,-1.0,-1,50
"as discussed above, there are no test plans included. rather some standard tests of mozilla and a command to build servo is run to test if everything is working fine.",-1.0,-1.0,-1,30
"checked the pull request - there are no conflicts with the base branch, build passed.",-1.0,-1.0,-1,14
testing seems to have been focussed upon by the team.&nbsp;,-1.0,-1.0,-1,11
the writeup is straightforward and clear. i really appreciate the flow diagram to represent the mvc relationship. ,-1.0,-1.0,-1,17
"yes, test plan is mentioned for testing via the ui. rspec tests have also been included.",-1.0,-1.0,-1,16
comments have been added for the second round of review and other naming issues have been taken care of.,-1.0,-1.0,-1,19
"since some method shave been moved&nbsp;to&nbsp;accountrequestcontroller, the team have also updated the test cases. edge cases are not part of this project as this is only a refactoring project.",-1.0,-1.0,-1,33
the writeup very well explains what they did (refactoring) and why they did (to remove coupling). they attempted to remove coupling between&nbsp;account requests and user objects.&nbsp;,-1.0,-1.0,-1,29
"yes, it is an expertiza refactoring project and the travis ci is passing.",-1.0,-1.0,-1,13
the code is well written and all the test cases have been updated according to the changes in the refactoring.,-1.0,-1.0,-1,20
"yes, tests were adjusted according to the refactoring changes are all of them were working.",-1.0,-1.0,-1,15
"yes, this is an expertiza refactoring project and the travis ci build is passing.",-1.0,-1.0,-1,14
the team has paid close attention to coding guidelines while renaming the variable and classes. they have also documented the reason for renaming on github.,-1.0,-1.0,-1,25
i found the writeup very helpful and informative. all appropriate screenshots were added. good job team.,-1.0,-1.0,-1,16
the writeup is pretty good and very well explains each refactoring change.&nbsp;,-1.0,-1.0,-1,13
they covered the tests in the first round itself. they have also included a video describing the same.,-1.0,-1.0,-1,18
there are sufficient tests with all the edge cases covered.,-1.0,-1.0,-1,10
the problem statement and the procedure followed is explained in sufficient detail. there are a good number of screenshots provided as well.&nbsp;,-1.0,-1.0,-1,23
they have added tests and provided screenshots for each as well.,-1.0,-1.0,-1,11
"i had no issues with the writeup in the first round either, theirs is one of the best ones i have seen.",-1.0,-1.0,-1,22
"i could not personally find any such instances. since it was a refactoring project, the team has actually followed the steps to reduce redundancy in code.",-1.0,-1.0,-1,26
the writeup quality has significantly improved from the last round. the team has taken suggestions into account as well.,-1.0,-1.0,-1,19
all the unit test cases related to the student tasks are passed.,-1.0,-1.0,-1,12
the write up is quite informative and and has adequate descriptions related to all the documentation sections.,-1.0,-1.0,-1,17
the&nbsp;names&nbsp;are descriptive enough to omit the need for comments which is a better way than by using comments. ,-1.0,-1.0,-1,22
 the code written by the authors are in pretty concise and since its just adding couple of lines there is no need to extract into seperate methods. the naming conventions are followed which omits the need for writing comments and it follows ruby style conventions as well. the code is well dryed &nbsp;,-1.0,-1.0,-1,53
commits were done in during the second round&nbsp;based upon the feedback&nbsp;given in the first round,-1.0,-1.0,-1,19
the code is ready to be merged and no changes are required.,-1.0,-1.0,-1,12
the build passed and there are no conflicts that needs to be resolved.,-1.0,-1.0,-1,13
the variables and methods are according the conventions and the code follows the community standards. all the names are suggestive of the functionality that it performs.,-1.0,-1.0,-1,26
"the writeup is well written. the writeup starts with feature that they are talking about, followed by the problem statement that mentions about the issues they they are trying to resolve and what is their proposed plan and flowchart of expected behaviour. the proposed changes are attested with code snippets that make it easier to comprehend the work that has been done in this direction. along with this, the language is really lucid and easy to comprehend which makes it easier to understand and think about their vision in&nbsp; the project.&nbsp;the good point is that they have also mentioned the details as to why did that issue crop up which is a good&nbsp;documentation&nbsp;methodology.",-1.0,-1.0,-1,120
the code is written keeping in mind all the coding practised and following ruby norms and conventions. no&nbsp;problems were found in the previous round as the code was already dryed and following the norms,-1.0,-1.0,-1,36
" the writeup is well written. the writeup starts with feature that they are talking about, followed by the problem statement that mentions about the issues they they are trying to resolve and what is their proposed plan. the proposed changes are attested with code snippets, screen casts and flow diagrams that make it easier to comprehend the work that has been done in this direction. along with this, the language is really lucid and easy to comprehend which makes it easier to understand and think about their vision in&nbsp; the project. the good part is that they have also mentioned about the reasons behind the error which shows clarity of thought process. ",-1.0,-1.0,-1,113
the system works as it is intended to work. the tests which are mentioned in the documentation is working as expected. the bugs that were already present are&nbsp;resolved .&nbsp;,-1.0,-1.0,-1,31
there is no test plan mentioned in the automated test or even in the writeup. so i cannot comment on that,-1.0,-1.0,-1,21
the travis ci test was passed and no conflict is detected.,-1.0,-1.0,-1,11
"the authors of the project have done an excellent job in writing a documentation which is simple and lucid. i can see significant improvement from the documentation that is submitted in the first round . the documentation starts with elaborate description of the problem statement which clearly sets up the goals of the project followed by motivation for the project. it also goes further to explain what is the current implementation and why is it buggy and then proposes a solution to these implementations.&nbsp;to back up with&nbsp;the lines of code that are newly implemented, test cases are written along with the code snippets which makes it easier to grasp the content mentioned .&nbsp; all of these features are a major improvement from the first submission .&nbsp;",-1.0,-1.0,-1,129
the project works as intended when tested from ui. the issues that the project had have all been successfully fixed when tested for the assignment that is mentioned in the documentation.&nbsp; &nbsp;,-1.0,-1.0,-1,33
the code commits to the project happened&nbsp;regularly. development and bug fixes occurred throughout the project duration.,-1.0,-1.0,-1,18
all the builds in travis ci pass. there are no merge conflicts in the code that need to be resolved.,-1.0,-1.0,-1,20
"the first scenario to&nbsp;render the correct view as directed (fixed stored ""manage content ... "" issue) by going to the manage content and selecting an option that differs from the one stored as manage content - is working as expected. checked multiple times and also checked that the url changes accordingly.&nbsp; the second issue has been tested manually and the page doesn't show editing features for the rubric that doesn't belong to the instructor. cases also checked - changed the url to try and edit a rubric not belonging to the instructor - worked as expected.&nbsp;&nbsp;",-1.0,-1.0,-1,98
the write-up has been written coherently and it is easy to understand their work with the presence of&nbsp;flow charts and code snippets. the authors have improved upon the test plan section also.,-1.0,-1.0,-1,35
code was neatly written and it follows the dry principles of ruby. there are good and descriptive comments in the code to explain their changes and the newly added functionality.&nbsp;&nbsp;,-1.0,-1.0,-1,32
ui has been tested and the code works as intended.&nbsp;,-1.0,-1.0,-1,11
all methods and line changes are heavily commented on their reference source and working functions.,-1.0,-1.0,-1,15
the latest code commit was made on nov . the team made consistent code commits throughout the project duration.,-1.0,-1.0,-1,18
"according to me, the code looks good enough to get merged. once the mozilla team approves their testcase changes, their changes can be merged into the oss project.",-1.0,-1.0,-1,28
"the test plan specifies the prospective test cases to be covered and the basic code structure/styling, which they pass.",-1.0,-1.0,-1,20
the question is ignored since it is a mozilla project.,-1.0,-1.0,-1,10
the variable names are properly labelled and the function methods are intuitively named.,-1.0,-1.0,-1,13
the write-up is very well written with github code diffs shown for code snippets which provide for easily readable code. they have also neatly addressed the test plan section and very well explained the setup and steps in their project.&nbsp;,-1.0,-1.0,-1,42
"code has been written well, and they have improved upon the code as per the mentor's comments.",-1.0,-1.0,-1,18
"according to the pr comments and the wiki documentation, we can see that their current code works as expected and their test cases also return true for the iframe tests (expected behaviour). they have also worked upon their code as their per the guidance of mozilla mentor to write the best version of the code.",-1.0,-1.0,-1,55
the changes were in the ui so the test cases were not present.&nbsp;,-1.0,-1.0,-1,14
the document is very well formatted and clear. everything is easy to understand.&nbsp;,-1.0,-1.0,-1,14
yes the travis ci for the project passes and there are no conflicts.,-1.0,-1.0,-1,13
yes the names are intuitive and easy to understand.&nbsp;,-1.0,-1.0,-1,10
the write up is good and can be understood easily. they have listed everything properly and in orderly manner.,-1.0,-1.0,-1,19
write up was very good and i was able to understand all the stuff.,-1.0,-1.0,-1,14
"everything looks good. they followed the ruby style guide with proper indentation, which makes it easier to read. the code is dry. functions are small and tidy.&nbsp;",-1.0,-1.0,-1,28
yes a&nbsp;new commit&nbsp;was added during&nbsp; nd round.,-1.0,-1.0,-1,12
"addition of new test cases led a decrease in code coverage. code coverage was decreased by . %. well overall, the test didn't increase the code coverage.&nbsp;",-1.0,-1.0,-1,27
the code works well. there was no feature or edge cases because it was test case.&nbsp;,-1.0,-1.0,-1,17
the wiki page is very well documented and can be understood easily.,-1.0,-1.0,-1,12
"no, i think the code is well written by following proper ruby coding standards.",-1.0,-1.0,-1,14
yes they have covered all the scenarios including empty or no data.,-1.0,-1.0,-1,12
write up is good and everything can be understood. they have developed the documentation which is comprehensive and understandable.,-1.0,-1.0,-1,19
yes the build is successful after following the steps described in document.,-1.0,-1.0,-1,12
" ) yes, new code commits are added. ) they added new test cases which is related to view assignment name on top or on content page &nbsp;",-1.0,-1.0,-1,25
yes the write up is descriptive and well formatted. &nbsp;,-1.0,-1.0,-1,10
" ) yes, there issue is related to ux, and after resolving issues, it works as intended. &nbsp;",-1.0,-1.0,-1,16
"yes, new commits are added. where refactoring and work on comments are done",-1.0,-1.0,-1,13
"&nbsp;workyes, the write is quite self-explanatory and describes what the pr is trying to achieve. work is majorly related to ui, so no standard design principle can be applied here.",-1.0,-1.0,-1,32
"the pr itself was about refactoring the existing code, so the added followed all the coding standards and conventions.",-1.0,-1.0,-1,19
"the variables, methods and class names suggest the functionality well.",-1.0,-1.0,-1,10
the variables naming is good and they followed the object-oriented principles in naming the methods and variables.,-1.0,-1.0,-1,18
"yes, there was a new code committed during the nd review.",-1.0,-1.0,-1,11
"yes, the code is ready to be deployed onto the production server, the code also contains comments which explain the flow really well.",-1.0,-1.0,-1,23
i checked the pull request and the travis ci build passes. there were no conflicts for the pull request.,-1.0,-1.0,-1,19
the code is written well which follows good naming and does not contain complicated functions. the code looks dry and also contains comments.,-1.0,-1.0,-1,23
yes the system operation from the ui works as expected. the project does not require any refactor or fixing. the issue is fixed and the features work as intended.,-1.0,-1.0,-1,29
there was a new code committed during the nd round.,-1.0,-1.0,-1,10
they did not add any new tests but they have tested the servo implementation against the servo provided automated test suite.,-1.0,-1.0,-1,21
the writeup explains the issue and the reason for solving the issue has also been mentioned. the writeup explains the functionality well.,-1.0,-1.0,-1,22
the code was written well and they added meaningful comments so it was easy to follow the code. the code had no bad names or long functions in the previous round as well.,-1.0,-1.0,-1,33
they have provided steps to check the functionality and it works as expected. the project may not require any refactoring. the goal of this project was to&nbsp;support compiling webassembly programs asynchronously and this goal has been achieved.,-1.0,-1.0,-1,39
"i didn't find much problems with the code in the first round as well and looking at modified code, the team has made use of good coding practices.&nbsp;",-1.0,-1.0,-1,30
their major code change was in the assignments_controller and they did add comments for it.&nbsp;,-1.0,-1.0,-1,16
"yes, quite a few commits were added in round &nbsp;",-1.0,-1.0,-1,10
"the team has modified existing test cases to suit their requirements, such that it covers the code modified in the controller.&nbsp;",-1.0,-1.0,-1,22
"yes, they gave a description describing all their changes and other details as well which they believed would help the reviewer do a better job such as the testing details.&nbsp;",-1.0,-1.0,-1,31
it was easy to understand and i didn't have to search for anything specific. it covers all the necessary sections.&nbsp;,-1.0,-1.0,-1,22
the write was well written. they included a class diagram of what they accomplished and even included a screencast of how to access what they did.&nbsp;,-1.0,-1.0,-1,27
- descriptive variables and funcition names have been used to make the code more readable - naming made consistent across classes -&nbsp;,-1.0,-1.0,-1,20
- there are comments indicating the function the method is performing,-1.0,-1.0,-1,10
- yes as most changes are refactoring related and the tests execute correctly after the changes; it is ready to be deployed - the code must be once deployed on test server and the review_mapping_helper must be tested manually before deploying,-1.0,-1.0,-1,39
- the test plan looks complete - the team has tested all the methods&nbsp;,-1.0,-1.0,-1,13
- yes the team has included test plan and implemented tests as per the plan,-1.0,-1.0,-1,14
- the code doesn't seem to be deployed as the project is refactor only,-1.0,-1.0,-1,14
- the document is well written explaining the changes - the team added screenshots of tests implemented,-1.0,-1.0,-1,15
"- most code is same functionality refactored and as all the tests are executing, it is ready to me deployed on the production",-1.0,-1.0,-1,22
- the writeup is properly written and explanation is provided for each change - the required changes are properly mentioned and the reasons for each change are properly stated,-1.0,-1.0,-1,27
- write up clearly and concisely writtent which adequately indicates the functionality,-1.0,-1.0,-1,11
the project itself was to write tests. no explicit test plan section&nbsp;,-1.0,-1.0,-1,13
"the code follows the style guidelines, contains method of appropriate length and properly named variables.",-1.0,-1.0,-1,15
"can't see new commits, maybe because the pr got merged",-1.0,-1.0,-1,11
the introduction and proposed implementation sections are easy to follow.,-1.0,-1.0,-1,10
the problem statement and test plan are very well documented in the wiki. the authors have explained the steps to generate the issue with screenshots and the files that were modified for the fix.,-1.0,-1.0,-1,34
the comments have been provided for most of the methods and describe their functionality.,-1.0,-1.0,-1,14
" . functions are not long. . function names are mostly within the proscribed length limit. .&nbsp;the authors have considered cognitive complexity, cyclomatic complexity of the code and have made right changes.",-1.0,-1.0,-1,30
"the&nbsp;test plan contains&nbsp;pre-conditions, edge cases, invalid input values.",-1.0,-1.0,-1,13
build passes travis ci. no conflicts with the base branch,-1.0,-1.0,-1,10
variable names and method names are according to their use and needs.,-1.0,-1.0,-1,12
the write up is pretty detailed. the changes in the code are explained well with snippets of the code changes.,-1.0,-1.0,-1,20
"yes, the write up is very clear. diagrams are also present to explain the design. screenshots were also made available in the write up.",-1.0,-1.0,-1,24
the features work as they are supposed to and the spec tests pass.,-1.0,-1.0,-1,13
"yes, it can be deployed. yes, this is a good starting point for the future team to pick up.",-1.0,-1.0,-1,19
"yes, the conditions are changed a little bit to improve the functionality. it follows ruby style guide.",-1.0,-1.0,-1,17
"yeah, i do think there have been tests added for this project. they do cover range of the project.",-1.0,-1.0,-1,19
"yes, it is ready to be deployed. couldn't get idea of last commit which changed readme.md file and then suddenly build succeded. so",-1.0,-1.0,-1,25
"since the team has only done refactoring of existing code, they did not need to write new tests. their refactored code was successfully able to pass all rubocop tests. also all the travis builds have passed successfully. the coverage decreases by . %.",-1.0,-1.0,-1,41
"since the team has only done refactoring of existing code, they did not need to write new tests. their refactored code was successfully able to pass all rubocop tests.",-1.0,-1.0,-1,29
yes the pull request passes the travis ci with . % coverage.,-1.0,-1.0,-1,10
"yes, since the check is made in the controller, even logging the url request and re-sending it again does not result in edge case.",-1.0,-1.0,-1,25
"all test cases passed, build successful, no conflicts to be resolved.&nbsp;",-1.0,-1.0,-1,12
writeup is very precise and delineates the entire process very well.,-1.0,-1.0,-1,11
write-up is very detailed and all the steps taken by the authors are indicatedclearly. the testing process is well elaborated with visuals.,-1.0,-1.0,-1,23
"yes, as&nbsp;majority of the changes are done in the views of the pages, no major changes are made in any functionalities. so, can be deployed.",-1.0,-1.0,-1,27
no code was committed during the nd round as there were no changes required post the st round,-1.0,-1.0,-1,18
"yes, they have given exhaustive explanations for all the changes they have made and what led them to make those changes. however, in some cases",-1.0,-1.0,-1,25
the build is passing in travis ci. there are no conflicts to resolve.,-1.0,-1.0,-1,13
the fix addresses all the issues and works as intended.,-1.0,-1.0,-1,10
the code&nbsp;meets&nbsp;all the above five requirements.,-1.0,-1.0,-1,10
the code is ready to be pushed onto the production server.,-1.0,-1.0,-1,11
"the writeup describes the issues and its fix in a great detail, along with a snapshot of each. this is by far the best writeup i came across.",-1.0,-1.0,-1,28
the new pull request is passing in the travis ci with no failures.,-1.0,-1.0,-1,13
"the code is well written, adhering to all good coding practices.",-1.0,-1.0,-1,11
the writeup covers the issue and its fix in full details.reading the document made the&nbsp;issue and its fix more easy to understand.,-1.0,-1.0,-1,25
the build is passing the travis ci with no conflicts.,-1.0,-1.0,-1,10
authors have not added new tests or modified any of the existing ones. but all of the changes they mode don't cause any of the test case to fail. and also the travis ci build passes on the last commit.,-1.0,-1.0,-1,41
 . they have commented where they've introduced a new method or refactored something. . comments are descriptive and clear.,-1.0,-1.0,-1,18
"the task was completed and working, that is why this team have not made any new changes and committed ti github.",-1.0,-1.0,-1,21
"yes, the team have added new test cases, which cover new controllers they've written to refactor the original one.",-1.0,-1.0,-1,20
"since the task was to refactor, they have introduced a new controller and have shifted some methods to that controller. they've written a rspec test for that, which passes successfully.",-1.0,-1.0,-1,31
authors did the work perfectly at the previous iteration only.,-1.0,-1.0,-1,10
"the writeup is clear and describes all the tasks they did so far. they've also included some snapshots, which helps a better understanding of the changes.",-1.0,-1.0,-1,27
every new method works fine and also the controller they refactored works perfectly.,-1.0,-1.0,-1,13
they've added comments for each method. they are descriptive and concise.&nbsp;,-1.0,-1.0,-1,13
"all the tests are building successfully, and their test plan looks promising. so the code can be deployed to the production server.",-1.0,-1.0,-1,22
" . yes, the writeup is clear about the changes made and reasons for changes.",-1.0,-1.0,-1,13
the travis build has passed successfully. and there are no conflicts with the existing expertiza project,-1.0,-1.0,-1,16
the writeup is very illustratively written. clears everything about their task and how did they complete it.,-1.0,-1.0,-1,17
"yes, the authors have added more comments to the code.",-1.0,-1.0,-1,10
"the task was to refactor the controller. since the travis ci is passed, every functionality is working.",-1.0,-1.0,-1,17
"yes, the test coverage has increased. they've written test case for some new functionalities they've written.",-1.0,-1.0,-1,18
"yes, the code is ready to&nbsp;be deployed onto the production server as this functionality is helpful for the teachers and graders.",-1.0,-1.0,-1,23
 . writeup explains everything nicely and clearly. . snapshots and screencast help to understand the project even more clear way.,-1.0,-1.0,-1,18
travis build has passed successfully. the functionality is working perfectly. the data can be downloaded in csv file format.,-1.0,-1.0,-1,19
"yes, the snapshots and flowcharts help t understand the code in a clear way. the flowchart mentions the plan of the procedure.",-1.0,-1.0,-1,22
"since code refactoring is the requirement, there is no need for new testing specs",-1.0,-1.0,-1,14
build is passing and there are no conflicts visible in the pull request,-1.0,-1.0,-1,13
the writeup is indeed improved and worked upon since last time!,-1.0,-1.0,-1,11
- very well written. they have added links to the actual issue on the expertiza which helped me understand the issue better. - added screenshots which makes it easy to understand.,-1.0,-1.0,-1,29
- well written writeup - i liked that they added links to the main issue on expertiza page as well. - added screenshots and explained their approach well.,-1.0,-1.0,-1,25
- do not need them. their task unit test cases themselves.,-1.0,-1.0,-1,10
- the build is passing meaning that the new test cases added didn't&nbsp;break the build.,-1.0,-1.0,-1,17
- i think the writeup is sufficient. they have added enough information for me to understand what were they doing and what did they achieve. i also liked the fact that they added information about possible fail scenario were they might get issues.,-1.0,-1.0,-1,42
- the test cases mentioned in the wiki are working fine.,-1.0,-1.0,-1,10
- very well commented code. - they have even added todos which is a good practice.,-1.0,-1.0,-1,14
- they&nbsp;didn't add any new functions or files but they have made many changes in the available test cases related to their changes.,-1.0,-1.0,-1,25
- well explained doc. they have added snippets along with the code step which makes it easy to understand their approach.,-1.0,-1.0,-1,20
- the writeup is much better now. they have added enough information for reviewers to understand. they also explained the reason for not doing things like adding comments etc. - they included screenshots now which is good and a good addition.,-1.0,-1.0,-1,39
- the author constantly collaborated with the reviewer of the pr and made changes when needed and asked by the reviewer.,-1.0,-1.0,-1,20
yes the code is adequately commented. it is not heavily commented which is a nice thing.,-1.0,-1.0,-1,16
yes it can be included in the corresponding oss project.,-1.0,-1.0,-1,10
yes the write up does explain what the authors have done and how to test those changes. it is informative,-1.0,-1.0,-1,20
the code was decent enough and followed most of the principles,-1.0,-1.0,-1,11
yes it explains with great ease what all the issue were about and gives the plan properly to fix the issues.,-1.0,-1.0,-1,21
yes the code can be improved and be merged into the main product.,-1.0,-1.0,-1,13
the write up is very easy to read and great.,-1.0,-1.0,-1,10
the test work well on the function they assigned to.,-1.0,-1.0,-1,10
i think it could handle all kinds of problem in their function.,-1.0,-1.0,-1,12
"excellent display in youtube, i can totoally understand what they done.",-1.0,-1.0,-1,11
"yeah, the variables, methods and class names they used is all reasonable.",-1.0,-1.0,-1,12
"it is ok, since it is in same style which is regular.",-1.0,-1.0,-1,12
"the code is written in regular style, i think it is ok",-1.0,-1.0,-1,12
"the team did add many new test cases. some existing test cases were also refactored. the code coverage did not increase, it decreased by&nbsp;- . % to . % there are many new added test cases, so it&nbsp;essentially increases the&nbsp;tests covered range of the project. added tests: - redirect to checktopicscopy page&nbsp; - rendering of&nbsp;checktopicscopy page -&nbsp;copies the original assignment to a new one and returns the new assignment_id when copyoption equals copywithtopicteams edited tests: - redirect error message&nbsp;when new assignment is not able to be copied",-1.0,-1.0,-1,91
"yes, the write up explains all the work done by the authors and also, why they did what they did and the way they did it. it explains the problem statement, the solution and the way to test the solution. everything is easy to follow.",-1.0,-1.0,-1,45
the feature works correctly.&nbsp; description is very well defined in the wiki page.,-1.0,-1.0,-1,14
"the authors have done a great job on the write up of the project. they have added screenshots everywhere it is necessary. all the required subheadings have been covered in the writeup. they also added a section on ""our recommendation for a separate issue&nbsp;(for instructors only)"", which includes the issue that the team feels should be addressed on priority.&nbsp; they have also added enough information on how to precisely test their added feature which is great. &nbsp;",-1.0,-1.0,-1,80
"the code is well written. variables have been named appropriately. a few more comments could be added, but it's fine. no new code has been added in the second round, so as such there has been no improvement in the code in the second round.",-1.0,-1.0,-1,46
"the write up explains in detail, the functionality of the work done by the team. this being a&nbsp;feature/functionality improvement&nbsp;project, the authors have provided sufficient details of what the problem was there with the code previously and what they have done to improve it. i can clearly understand how &amp; what the project does from reading the writeup.",-1.0,-1.0,-1,62
the ui works as intended. the features work exactly like they are supposed to. i am able to view &amp; test the added feature when attempting to copy assignments. a great job done on adding the feature.,-1.0,-1.0,-1,37
i&nbsp;think that this code is ready to be deployed onto the production server for the oss project i do not have any&nbsp;concerns about the project. the project need not be redone from scratch using a different approach or picked by a different team. as it is a refactoring project &amp; the team has already done all of the work required.,-1.0,-1.0,-1,64
"the write up explains in detail, the functionality of the work done by the team. this being refactoring&nbsp;project, the authors have provided sufficient details of what the problem was with the code previously and what they have done to improve it. i can clearly understand how &amp; what the project does from reading the writeup. write up includes the changes made as well as the files those changes are made in.",-1.0,-1.0,-1,73
the build passed in travis ci. there are no conflicts that need to be resolved.,-1.0,-1.0,-1,15
reasonable and meaningful names have been given to the newly added functions. &nbsp; &nbsp;,-1.0,-1.0,-1,14
the authors have done a great job on the write up of the project. they have added screenshots everywhere it is necessary. all the required subheadings have been covered in the writeup. test plan has been thoroughly covered with all the screenshots. before &amp; after code has also been added with the required explanation and need of the changes done.,-1.0,-1.0,-1,60
"the code is well written. the authors&nbsp;have renamed functions as well as variables to match ruby's standard requirements. they have made corresponding changes in the spec files as well. no new code has been added in the second round, so as such there has been no improvement in the code in the second round.",-1.0,-1.0,-1,57
the build passed in travis ci. there are no conflicts that need to be resolved. &nbsp;,-1.0,-1.0,-1,16
reasonable and meaningful names have been given to the newly added functions.,-1.0,-1.0,-1,12
"the authors have done a great job on the write up of the project. they have added screenshots everywhere it is necessary. all the required subheadings have been covered in the writeup. they also added a section on the current implementation, which includes the functionality as well as its drawbacks &amp; solutions. this is a great addition and very useful for readers. &nbsp;",-1.0,-1.0,-1,63
the ui works as intended. the features work exactly like they are supposed to. (this being a refactoring project) &nbsp;,-1.0,-1.0,-1,20
i think code is good enough to be merged as authors have used better variable names explained all functions properly in comments. and also looks fairly decoupled code which can be easily reused.if these are the qualities you look for production ready code then you should merge this.,-1.0,-1.0,-1,49
"yes, the travis build ci has passed and there are no conflicts to resolve.",-1.0,-1.0,-1,14
"yes from the first round code is fairly improved. as per my criticism from the previous round that they didn't provide comments which they rectified in this round. also, variable name are also good enough.",-1.0,-1.0,-1,36
"yes the code passes travis test,comments are provided where they are needed and code is dry enough to pass for production ready code.so i would recommend.",-1.0,-1.0,-1,28
"yes, the writeup is written very well and they have explained why they did what they did.",-1.0,-1.0,-1,17
the variable name are well written and method names are also self explanatory.,-1.0,-1.0,-1,13
yes during st round i found that there are not enough comments for the code written but that has been improved. so the code written is of good quality.,-1.0,-1.0,-1,29
"variables, methods, and class names are explaining the cause well.",-1.0,-1.0,-1,10
yes. it was helpful to see the added code in the write up and the step by step instructions on how to see the added feature.,-1.0,-1.0,-1,26
the writeup is precise but it is very concise and can be a little more elaborative.,-1.0,-1.0,-1,16
functions are small and are written for what they are intended to do.,-1.0,-1.0,-1,13
"yes, in that sense code is very elaborative along with diagrams to support.",-1.0,-1.0,-1,13
the class and variables are named relevantly and are semantically correct.,-1.0,-1.0,-1,11
comments were very precise and to the point in their project. it did not took a lot of time for me to understand their code.,-1.0,-1.0,-1,25
actually none of the tasks needed much code and most of them were to updating the already existing code.,-1.0,-1.0,-1,19
"yes, they wrote test cases to test the functionalities that they have implemented.",-1.0,-1.0,-1,13
they did come up with the plan that was sufficient enough to test all the proposed changes. good job guys.,-1.0,-1.0,-1,20
yes the write up shows exactly how they approached the problem and why did they took those steps.,-1.0,-1.0,-1,18
all name of the functions and variables were logical. every one can understand what does it mean by its name.,-1.0,-1.0,-1,20
"yes, this implementation is working as it is supposed to be.",-1.0,-1.0,-1,11
wiki page is very well written. they have explained the proposed changes and why did they chose that approach.,-1.0,-1.0,-1,19
"overall, the code written was very well and self describing. names of the variables are self explanatory.",-1.0,-1.0,-1,17
wiki page were excellent to understand the project thoroughly and all the proposed changes. problem statement was mentioned clearly in order to understand the project purpose.,-1.0,-1.0,-1,26
i think the implemented changes are in ship ready state. &nbsp;,-1.0,-1.0,-1,11
they did fulfilled all the requirements that were present in the problem statement. all functionalities are working perfectly in deployed application.,-1.0,-1.0,-1,21
"since the problems are fixing view, the tests are ui test and are complete enough.",-1.0,-1.0,-1,15
looks good to me. they do not have bad code style and dry problems etc.,-1.0,-1.0,-1,15
i&nbsp;guess it can be deployed because it looks good to me.,-1.0,-1.0,-1,13
well done ! keep going and make it better next time,-1.0,-1.0,-1,10
writeup is very clearly and easy to follow. i can understand what the projects does and how the project does what it does.,-1.0,-1.0,-1,23
yes they have written the wiki correctly and so detailed.,-1.0,-1.0,-1,10
yes they add test cases and it coverage the corner carefully.,-1.0,-1.0,-1,11
the team's wiki is pretty good and detailed enough. i can totally understand what they have done.,-1.0,-1.0,-1,18
"yes there are commits during the nd round. they made to codeclimate, added tests and revised the wiki page.",-1.0,-1.0,-1,19
"class name, variables, method name are good. nothing seems wired.",-1.0,-1.0,-1,10
very clear writeup. they added a lot of screen capture to state the ui operation i believe it is good enough.,-1.0,-1.0,-1,21
"names are good, no long functions. enought comments. a lot of commits to improve the code accordingly.",-1.0,-1.0,-1,17
"yes, they did pass all the travis ci test. and i have check all the pull request on github.",-1.0,-1.0,-1,19
"the writeup is clear, they well explain all the code in expertiza wiki.",-1.0,-1.0,-1,13
"for now it is very hard to test the email functionality, so i leave this to ta.",-1.0,-1.0,-1,17
"i can understand, they fix bug in the previous email project.",-1.0,-1.0,-1,11
"if the ui testing passed, the code seems ready to be deployed",-1.0,-1.0,-1,12
"it seems not very much code were edit, so it was good",-1.0,-1.0,-1,12
"most of the work is debugging, so i think there is no need to put too much comments",-1.0,-1.0,-1,18
"the code are clean, readable and in good ruby style.",-1.0,-1.0,-1,10
"since there is not many commits in this project, the did well on this requirement. the code are clean and readable.",-1.0,-1.0,-1,21
"yes, they did commit a lot in the second round.",-1.0,-1.0,-1,10
"i haven't found any tests they added,but they did pass all the tests.",-1.0,-1.0,-1,15
the code are in good ruby style. it is clean and readable.,-1.0,-1.0,-1,12
"this is one of the best writeup i have seen in the review. they provides good description, detailed code, screenshot and even diagrammatic representation.",-1.0,-1.0,-1,24
"most of the functions work as intended in the st round, and they improve the system in the round .",-1.0,-1.0,-1,19
"as they only changed the view and scss files, and they didn't change any methods in controller. so they didn't add comments for methods. but they actually add comments for the new scss style. good.",-1.0,-1.0,-1,37
"( ) their function doesn't need to&nbsp;change the function ( ) their function needs no separate methods; ( ) the comments of scss style seem practical for the code; ( ) yes, all code follows the ruby style guide ( ) no, all code is dry.",-1.0,-1.0,-1,39
"yes, they explained why they choose ui testing and give",-1.0,-1.0,-1,10
"yes, they&nbsp;explain how and why they did the work in wiki. and they&nbsp;used dry&nbsp;principles&nbsp;during their coding process.",-1.0,-1.0,-1,25
"they only test from ui testing. but they explained why they chose these. as they only change the layout of the view, so the automated test may not works or them.",-1.0,-1.0,-1,31
"yes, the new&nbsp;layout&nbsp;of review report looks more beautiful than before. and i need to say again that, they only change the layout of the view so there may not any edge cases.",-1.0,-1.0,-1,36
"yes, their wiki document seems clear and adequate. i can know why they finished this function and coding process.",-1.0,-1.0,-1,19
there are many commits after the st round. i see they were trying to pass the build in travis ci. and they did. great work.,-1.0,-1.0,-1,25
"in the first round, there were only manually tests.&nbsp;but&nbsp;this time they added rspec test and passed the build.",-1.0,-1.0,-1,22
"yes, i think some part of their code is ready to be deployed onto the production server.",-1.0,-1.0,-1,17
"there&nbsp; are some commits during the nd round, and the code has changed only a little bit.",-1.0,-1.0,-1,18
no new variables or methods have been created as it was refactoring but methods have been merged so similarly named variables have been used but those used are proper.,-1.0,-1.0,-1,29
the writeup is done excellently and doesn't seems to have any faults,-1.0,-1.0,-1,13
the writeup is very good at explaining the functionalities and the work that has been done. so there is no issue in the write-up.,-1.0,-1.0,-1,25
the code was perfect during the first review and therefore there weren't much changes to be made and looks good. the authors did not need to change anything further.,-1.0,-1.0,-1,30
 ) functions are of correct length ) the test cases are in their proper files ) no comments made ) the code is in proper format ) no,-1.0,-1.0,-1,23
"yes, the writeup looks good with the test plans written along with the code provided for each section.",-1.0,-1.0,-1,18
"the code follows all the good practices and did not have any problems during the first review and they&nbsp;haven't made any changes after that, so it is ok.",-1.0,-1.0,-1,31
i have manually checked and the cases it fails is already mentioned in the writeup and is well documented.&nbsp;,-1.0,-1.0,-1,20
"the naming convention seems to be alright, as whatever has been refactored has been done with existing code, thus making the author not liable for names being used.&nbsp;",-1.0,-1.0,-1,29
the write up has a detailed test plan which describes the tests and their automation process.,-1.0,-1.0,-1,16
they have done a reasonably good job on adding testcases as described by the plan.,-1.0,-1.0,-1,15
the document is well written with detailed description of what is done and how it is done.,-1.0,-1.0,-1,17
"the code looks clean. as it was a refactor story, dryness is ensured.",-1.0,-1.0,-1,13
the cases described in the test plan are all working.,-1.0,-1.0,-1,10
the write up has been significantly upgraded and looks much better now. they have added video link and screenshots which improve the quality of the wiki.,-1.0,-1.0,-1,26
the code is coherent now. there is good improvement to enhance the code quality compared to the st round.,-1.0,-1.0,-1,19
the code is well written and follows ruby style guide. the code is dry,-1.0,-1.0,-1,14
&nbsp;there is great code commenting done. they explain all they have done very well.,-1.0,-1.0,-1,15
the write up is pretty detailed with screenshots and code snippets.,-1.0,-1.0,-1,11
&nbsp;explanation of requirements and details of implementation is done with sufficient details.,-1.0,-1.0,-1,13
the code works as required. the doc takes care of the rest.,-1.0,-1.0,-1,12
i have no concerns at this time. the code functions as expected and there are tests written to ensure functionality remains.,-1.0,-1.0,-1,21
"i thought that the writeup contained enough detail the last time i looked at it, but it looks like even more details have been added. looks good.",-1.0,-1.0,-1,27
tested the system manually through the ui. the functionality works as expected.,-1.0,-1.0,-1,12
everything they wrote was in normal length and followed the normal standards of the whole project.,-1.0,-1.0,-1,16
"no additional tests needed this time, and they have thoroughly run test-tidy.",-1.0,-1.0,-1,13
"as mentioned in their wiki page, all their work focused on the implementation, and they have made statements clearly about what they have done and their changes to the codes.",-1.0,-1.0,-1,30
"yes, all the function names are very natural and easy to understand. all the names are accordance to the normal principle.",-1.0,-1.0,-1,21
"because their pull request has passed the test and already been merged, eveything works fine. and they have made a contribution to this open-source prototype web browser.",-1.0,-1.0,-1,28
"after i pointed out that there lacks the interior logic behind why they implemented as what they did, they made an update to the wiki page, which now contain the depicted project scope explaining precisely how the program works and what is the logic behind it. thus the documentation now is complete and detailed.",-1.0,-1.0,-1,54
the code seems fine. good coding practices have been followed. methods are concise and handle single functionalities.,-1.0,-1.0,-1,17
the problems and the teams approach to solve the issues has been well documented.&nbsp;,-1.0,-1.0,-1,15
"task : redirection to questionnaire/courses/assignments is working as expected. task : working as expected, instructor cannot edit questionnaires created by others.",-1.0,-1.0,-1,21
some comments have been added to assignments_controller.rb. the changes that they have made don't need as many comments anyway.,-1.0,-1.0,-1,21
"yes, a number of commits were made on the day of the submission including a commit for adding rspec tests.",-1.0,-1.0,-1,20
the wiki page only talks about testing details out of which the major portion talks about how to recreate the scenario that they have fixed. it's basically about ui testing.,-1.0,-1.0,-1,31
the write up self explanatory and contained and provides links to videos showcasing demonstration of the project and test cases passing.,-1.0,-1.0,-1,21
"the ui testing part explains what the team wanted to do, hence, it is easy to understand what they were trying to fix.",-1.0,-1.0,-1,23
they have made new commits&nbsp;and tried to implement the changes that were suggested in the first round.,-1.0,-1.0,-1,19
"yes the authors have added the check for valid input, like the check to sanitise the name of the name of the assignment folder when automatically created.",-1.0,-1.0,-1,27
th wiki explains the issues and what needs to be done correctly.,-1.0,-1.0,-1,12
they have added new test plans that cover ll the test cases.,-1.0,-1.0,-1,12
the pull request pass the ci tests and there were no merge conflicts.,-1.0,-1.0,-1,13
the write explains the current scenario and what needs to be done perfectly.,-1.0,-1.0,-1,13
"yes, the authors have fixed most of the issues that were pointed in the first review.",-1.0,-1.0,-1,16
yes the wiki page include all the details and background for the task. they have clearly explained the desired outcome and have also added video and screenshots of the same.,-1.0,-1.0,-1,30
yes they have covered the edge cases and removed older test cases that re redundant,-1.0,-1.0,-1,15
the pull request passed successfully. and there are no conflicts,-1.0,-1.0,-1,10
"the write is pretty verbose and clearly states the reason behind the project, and the test plan.",-1.0,-1.0,-1,17
they have added new comments. there are no coding guidelines violation.,-1.0,-1.0,-1,11
the wiki page is pretty explanatory with images to shows details.,-1.0,-1.0,-1,11
yes the system works as it is supposed to work.,-1.0,-1.0,-1,10
"no, i have to look at the code how it is working the options = ['--------', nil] is a strange value, have to look at the coed to understand what it does",-1.0,-1.0,-1,30
"yes,the build has passed and i can find it on github",-1.0,-1.0,-1,12
"writeup looks pretty good,as the refractors have been explained in details,with inclusion of certain videos as well",-1.0,-1.0,-1,19
test plan has been included in the writeup and it has been written considering enough conditions and cases,-1.0,-1.0,-1,18
the write up has been drafted neatly and it is easy to follow,-1.0,-1.0,-1,13
the feature has been implemented properly and the the functionality is working as intended.,-1.0,-1.0,-1,14
the functionality have been clearly and adequately explained in the writeup,-1.0,-1.0,-1,11
write up is clean.the problem statements and solutions have been suggested with screenshots etc.,-1.0,-1.0,-1,15
only comments where added in nd round as mentioned in the review during round .,-1.0,-1.0,-1,14
the write up well explained and include the steps done and to be take to run the test cases.,-1.0,-1.0,-1,19
"yes, the test are automated&nbsp; in the test plan. the code has increased coverage.",-1.0,-1.0,-1,15
i have manually checked and the case that fails is mentioned in the write up,-1.0,-1.0,-1,15
the write up well explained and include the steps done and to be take to run the test cases,-1.0,-1.0,-1,19
"the writeup is well written. they covered issue description, solution, implementation and test plan.",-1.0,-1.0,-1,14
"as far as i can tell, there would be no additional test plans or edge cases. its just a simple view update.",-1.0,-1.0,-1,22
"its rspec testing, so though there are not comments, the way the tests are written are intuitive enough to understand.",-1.0,-1.0,-1,20
one new commit was added to update/revise some comments.,-1.0,-1.0,-1,10
"i'm not the best at writing rspec tests, but it looks good to me.",-1.0,-1.0,-1,15
"i am hesitant to say this covers all scenarios as there could always be some bizarre edge-case i can't think of due to the nature of expertiza, but as far as i can say the tests seem to be exhaustive.",-1.0,-1.0,-1,42
"yes, they did pass in the travis ci.&nbsp; they improved a lot of things in second round and did the project very well.",-1.0,-1.0,-1,24
 . there are comments for each method. . they descripe the method thoroughly.,-1.0,-1.0,-1,11
i think this code is ready to be deployed onto the production server.,-1.0,-1.0,-1,13
the build passed in travis ci. there wasn't any conflict that must be resolved. &nbsp;,-1.0,-1.0,-1,16
"their writeup is organized and explains their work well. they explains the problem statement, how they do their work, and how they test their code.&nbsp;",-1.0,-1.0,-1,26
the system works as intended. they refactored a part of code. the features works as they are supposed to.,-1.0,-1.0,-1,19
the newly added tests covers the range of this project and the build passes.,-1.0,-1.0,-1,14
the build passes and the system works as intended. and they tested their code. i think this code is ready to be deployed onto the production server.,-1.0,-1.0,-1,27
the build passed in travis ci. there wasn't any conflict that must be resolved.&nbsp;,-1.0,-1.0,-1,16
i tested all features related to their project on the link where they deployed the project. all the features work correctly as in the document.,-1.0,-1.0,-1,25
"they explained they work in detail and well. the writeup includes the problem statement, how they do their work, and their test plan.&nbsp;&nbsp;",-1.0,-1.0,-1,25
"their writeup's structure is clear. they introduced the background of expertiza, what results they should achieve, how and what they do to achieve the goal, and how they test their work. i can understand what the project does by reading their writeup. &nbsp;",-1.0,-1.0,-1,44
the system works as intended. the functions works as the document said.,-1.0,-1.0,-1,12
"looks complete, they even mentioned that the project needs to care about removing the consent to share as well.",-1.0,-1.0,-1,19
"very well out lined test plan! this is what i wanted to see, detailed steps (actions) to be taken by each role. having this listed in words helps implementation in great deal based on my experience, i am glad this team did this.",-1.0,-1.0,-1,43
"yes, the authors have adequately explained the changes to be made to the system.",-1.0,-1.0,-1,14
"yes, the design appears to be good. the authors have used appropriate principles and thoroughly thought of the design process.",-1.0,-1.0,-1,20
yes the authors have adequately explained the changes which are to be made to the system. the authors have described each of the issues thoroughly and explained the problem and solution for the issues.,-1.0,-1.0,-1,34
"yes, the design seems to be simple. the search for user, assignment,&nbsp;questionnaire&nbsp;and&nbsp;review&nbsp;seems good as the required search field are taken into consideration.",-1.0,-1.0,-1,30
"yes, the design include test plan. the authors have thoroughly given test plan for automated as well as manual testing.",-1.0,-1.0,-1,20
 . the task doesn't require methods to be added. . no. . no the design doesn't look complicated. the design provided by team is enough. . not applicable . the effort provided by team is enough.,-1.0,-1.0,-1,33
 . everything seems good and the use case diagram did help me understand the project. . the use case diagram follows the convention. . all the diagram provide enough details.,-1.0,-1.0,-1,27
"yes, the design seems simple as team have given thorough planning for ui, work flow and test plan.",-1.0,-1.0,-1,18
"yes, the design appear to be sound and the team seems to be using appropriate principles.",-1.0,-1.0,-1,16
"yes, the design incorporates most of the logical functionality and is clearly explained. &nbsp;",-1.0,-1.0,-1,14
"yes, the team have provided thorough test plan with rspec test and ui test.",-1.0,-1.0,-1,14
the authors have adequately explained the proposed changes made to the system by including localized information about the issues&nbsp; i.e. the files associated with a particular issue and the exact part of the code in that file that will actually be changed. this helps in giving a view of how the issues will be resolved. &nbsp;,-1.0,-1.0,-1,58
"the visual aids on the design document help in understanding the issues and proposed changes even better, especially the user case diagrams. &nbsp;",-1.0,-1.0,-1,23
yes design incorporate what is required to be implemented in this project.,-1.0,-1.0,-1,12
plan proposed by user is clear and easy to understand.&nbsp;,-1.0,-1.0,-1,11
design is clear and easy to understand. proper details are present in document to understand how the implementation would be done.,-1.0,-1.0,-1,21
uml diagram explains the flow of code and its helpful to understand whole design of the project.,-1.0,-1.0,-1,17
"no, the way team has explained, design looks simple. team has done good explanation of the design. they have made section about plan of work which is really descriptive and make it easy to understand.",-1.0,-1.0,-1,35
"team has given good information about in design document, they have covered all the details required for a design document, only thins is that they have not mentioned about which design principle they will be using and how.",-1.0,-1.0,-1,38
document mention clearly what is required to be done is this project,-1.0,-1.0,-1,12
"design doc looks complete, author have mentioned every thing for this project.",-1.0,-1.0,-1,12
author has provided with details on what&nbsp;changes are required and at which place these changes will be implemented.,-1.0,-1.0,-1,20
uml diagram is suggestive enough and provide information on how the program flow will work.&nbsp;,-1.0,-1.0,-1,16
"they have proposed two solutions for the problem and both of them does not look complex, but looking at the solution, solution a looks more simple to me. they have given screenshots of screens also that they are going to change, which makes it easy to understand",-1.0,-1.0,-1,47
"yes design looks good, they have not made any changes in page for round submission. it is same as before but they have covered everything",-1.0,-1.0,-1,25
design document looks complete and author has added all the required details.,-1.0,-1.0,-1,12
team has given good number of test cases taht they are going to test the functionality. testing from different perspective is been done. they will be writing test cases and manually testing the functionality also.,-1.0,-1.0,-1,35
i found explanation in their design document seem suitable for the function required.,-1.0,-1.0,-1,13
"yes, they listed all the files and methods they may modified, which is quite clear.",-1.0,-1.0,-1,15
there's a diagram for the whole process and help me to understand what they are going to do in this project.,-1.0,-1.0,-1,22
"the project purpose, the project design, and the testing plan are included.&nbsp;",-1.0,-1.0,-1,13
the use of diagrams makes it easier to understand the system.,-1.0,-1.0,-1,11
they have included plenty of diagrams to make the user understand their work.,-1.0,-1.0,-1,13
they have a dedicated section for code changes and explained them pretty well.,-1.0,-1.0,-1,13
they addressed every aspect of the features that are to be tested.,-1.0,-1.0,-1,12
all the changes proposed in the form of flow charts and design strategies seems good and are easy to follow.,-1.0,-1.0,-1,20
"yes, design appears to be pretty straightforward and easy to follow because of good use of visualization.",-1.0,-1.0,-1,17
"yes, they have explained all the necessary changes to made in the system in the form of diagrams and also mentioned in which part of the code these changes will be reflected.",-1.0,-1.0,-1,32
they have covered all the necessary sections of the design doc.,-1.0,-1.0,-1,11
"yes, they have included test plans for each subgroup of issues/changes and have covered all the functionalities to test.",-1.0,-1.0,-1,20
"yes, the design appears to be very simple and clear as it is well documented and they have clearly expressed the changes in the flow in the form of diagrams.",-1.0,-1.0,-1,30
yes they have covered all the functionalities mentioned in the project specification.,-1.0,-1.0,-1,12
"yes they have included test plan section. compared to previous submission, they have included well-defined and easy to follow test plans for each of the functionality.",-1.0,-1.0,-1,27
all the changes proposed and corresponding explanations are easy to follow and correctly identified.,-1.0,-1.0,-1,14
yes they have taken into account all the necessary functionalities.,-1.0,-1.0,-1,10
the changes that the authors have proposed seem good enough to execute the functionality.,-1.0,-1.0,-1,14
the flowchart looks very descriptive and explains the functionality pretty well and they are pretty helpful.,-1.0,-1.0,-1,16
"yes, the design appears to be as simple as possible, without any complications and unnecessary additions.",-1.0,-1.0,-1,16
"yes, the design doc appears to be sound, following appropriate principles and using appropriate patterns. the files to be modifies seem to be correct.",-1.0,-1.0,-1,24
"yes, the design strategy does implement all of the functionality required.",-1.0,-1.0,-1,11
"yes, the authors have adequately explained the changes to be made to the system, and also the use of flowcharts and class diagrams help a lot.",-1.0,-1.0,-1,26
"yes, the design does include a test plan and also there are seperate test plans for each issue. they do really seem to test the functionality.&nbsp;",-1.0,-1.0,-1,27
"yes, the class diagrams and flow charts clearly describe the changes to be made to the system. they explain the functionality pretty well.",-1.0,-1.0,-1,23
the changes that the authors have proposed seem good enough. the explanations are descriptive and understandable and adequate.,-1.0,-1.0,-1,18
the designs proposed by the authors seems pretty good and there do not seem to be any errors.&nbsp;,-1.0,-1.0,-1,19
"the use case diagram given by the author are very understandable and helpful, follows all the conventions.",-1.0,-1.0,-1,17
"yes, the design appears to be as simple as possible and with minimal complexity.",-1.0,-1.0,-1,14
"yes, the design appears to be sound, following appropriate principles and using appropriate patterns.",-1.0,-1.0,-1,14
"yes, the design doc implements all of the functionality required and is adequate enough.",-1.0,-1.0,-1,14
"yes, the authors have explained the changes to be made to the system pretty well, making use of use case diagrams and bar graphs.",-1.0,-1.0,-1,24
"yes, the design includes a test plan, and also plans rspec tests. these tests really test the functionalities pretty well.",-1.0,-1.0,-1,20
"yes, the use case diagrams and the bar graphs explain the functionality and the changes to be made to the system pretty well.",-1.0,-1.0,-1,23
"the visual diagram is very clear and helpful. there is one diagram with explanation used for 'design pattern', which clearly shows the chain of responsibility in design pattern. the other one is used to explain the work flow which is also clear to others to show the structure of the function. &nbsp;",-1.0,-1.0,-1,52
yes. the design contains all the functionality that is required in the document.,-1.0,-1.0,-1,13
"since the design pattern is not applicable on this project. according to the diagrams and proposed approach, the design is simple and clear. the team describe the logic clearly through the diagram and the proposed approach.&nbsp;",-1.0,-1.0,-1,37
yes. the team added a 'behavior for instructor/ta diagram' to show how the feature works and the relationship among different parts. the diagram is clear and helpful for people who is not working on this project to understand the function or relationship among different parts quickly. the quality of the diagram is great.,-1.0,-1.0,-1,54
the logic is fairly simple and appropriate for the problem at hand.,-1.0,-1.0,-1,12
the problem statement as well as the background is very well stated.,-1.0,-1.0,-1,12
"given that the problem statement is not that complicated, the team has included a flow chart which is more than sufficient to understand the strategy. concise yet good enough.",-1.0,-1.0,-1,29
the design is very simple and has minimal changes. good job team of keeping the design simple and not trying to over engineer the solution.,-1.0,-1.0,-1,25
the design is sound and perfect for the problem at hand.,-1.0,-1.0,-1,11
very good job on putting together this document. i was able to understand all the issues that you plan to fix.,-1.0,-1.0,-1,21
the only thnig that needs to be added is code level changes. good job team!,-1.0,-1.0,-1,15
the document has a single class diagram which is good enough to understand the proposed solution as the solution itself is very simple.,-1.0,-1.0,-1,23
the authors do a good job of explaining the new functionality that needs to be added (automatic mentor assigning&nbsp;upon team forming and notifications). they did a good job of explaining why this is needed.,-1.0,-1.0,-1,36
"yes, the wiki covers that a mentor should be automatically assigned to a team at a threshold, that the mentor should be emailed when this happens, and that team members should possibly be notified as well.",-1.0,-1.0,-1,36
"as this is a&nbsp;refactoring project, it focuses on simplifying everything. it plans to dry out the code, as well as to manage the javascript used by the project. a new controller must be added as well.",-1.0,-1.0,-1,38
the design doc mentions all the functionality and more. it pulls from the requirements page and adds to it.,-1.0,-1.0,-1,19
the authors do a great job of explaining why changes are required. they list each feature and what needs to be changed for it. this is under the feedback and improvements section. they state each problem and solution here.,-1.0,-1.0,-1,39
"the test plan seems pretty solid. there is a list of what tests need to be added for the rspec. the functionality seems covered by these tests. the team explains that there are no required ui tests, as mostly an api connection to github is getting updated.",-1.0,-1.0,-1,47
"yes, the design seems to be sound. there're problem statement, proposed approach and test plan.",-1.0,-1.0,-1,16
"yes, they have explained why they want this change and how to do it.",-1.0,-1.0,-1,14
"yes, their test plan almost cover every scenario with regard to their project.",-1.0,-1.0,-1,13
"yes, they have explained well about why they want to make a change and what they plan to do.",-1.0,-1.0,-1,19
"yes, they have drew a diagram shows what changes will be made to this system.",-1.0,-1.0,-1,15
"the proposed solution is sound, in that the team has explained every little step they'll take. it looks&nbsp; like the solution is well-thought and should solve the issue.",-1.0,-1.0,-1,31
"yes, they have one big flow chart explaining all changes. the chart is pretty easy to understand.",-1.0,-1.0,-1,17
the team's explanation of&nbsp;the&nbsp;problem statement is lucid. they have properly defined their approach&nbsp;by mentioning low-level and&nbsp;high-level details and&nbsp;also have a test plan set up.,-1.0,-1.0,-1,37
the team have drawn a&nbsp;very nice&nbsp;flowchart which shows how they are going to approach the problem while specifying details about what data format will they use to pass data and which web service api will be used. it&nbsp;really simplifies the statement and is a perfect balance between low-level and high-level design. ,-1.0,-1.0,-1,59
the design appears to be simple. there are no complex logic blocks which are hard to&nbsp;understand. the team&nbsp;have very nicely explained everything related to the problem statement and it doesn't seem&nbsp;that their design is complex. the flowchart also&nbsp;depicts as there are no cross edges and everything is pretty much linear in their workflow.,-1.0,-1.0,-1,62
"the design appears to be sound. the team have explained the problem statement, the steps to be taken and also&nbsp;what&nbsp;automated tests are required to be written to guarantee the proper working of the system. it is&nbsp;good to see that the team thought about more test cases and have included&nbsp;those in the writeup as well.",-1.0,-1.0,-1,62
the design appears to be sound and i don't see any major issues. the team have explained the problem statement in great detail and i think they have a proper idea of the work to be done. they have also completely figured what which files would they change.,-1.0,-1.0,-1,49
the design doc is well made and includes everything that is required in a design doc. the&nbsp;functionality is well explained with enough details.,-1.0,-1.0,-1,25
the authors have explained the changes to be made in great detail. the explanation has&nbsp;been very nicely written while providing a lot of details about the&nbsp;system and the way it should ideally behave. the team have written the problem statement well and seem to have a great understanding of the way to approach the project.,-1.0,-1.0,-1,59
"the design doc is extremely complete and includes everything. they have also explicitly mentioned a lot of tests along with the context in which they might be required. the statement has been explained well, the diagrams support their approach and testing plan is thorough.",-1.0,-1.0,-1,44
the team&nbsp;have carefully thought out their test plan. they have covered a lot of context&nbsp;of the system and have figured out how the system should act in those scenarios. the tests are very detailed and will really&nbsp;test the functionality of the cake questions.&nbsp;,-1.0,-1.0,-1,50
&nbsp;they have given a good explanation of what is expected from them in this project and what they are going to do to implement it. they have also given the flow diagram. this makes it easy to understand.,-1.0,-1.0,-1,39
the design looks comprehensive and simple. the flow chart in the design document clearly explains their design.,-1.0,-1.0,-1,17
"yes, their design looks good. as mentioned in the earlier review, they have used good flow diagrams to clearly explain the changes they are making to their project. &nbsp;",-1.0,-1.0,-1,29
yes. they have covered the functionalities required with proper diagrams.,-1.0,-1.0,-1,10
"yes. the document looks comprehensive. they have included screenshots of the system, flow chart for the design strategy and a food testing plan.&nbsp; it is easy to understand and follow the document.",-1.0,-1.0,-1,33
&nbsp;all the required components of design documents are covered.,-1.0,-1.0,-1,10
yes. they have included the test plan for the final project. it seems they have done most of the testing part in the oss project step itself. but they have made a separate section for the final project. they have described the match utility commands to test their system.,-1.0,-1.0,-1,49
"yes, they have utilized the flow-chart diagram to explain their design strategy.",-1.0,-1.0,-1,13
they have spent enough time on the design document. they added the proper and relevant screenshots. the uml diagram shows that their design is easy to implement.,-1.0,-1.0,-1,27
"yes, they used uml diagrams to describe the design strategy such as use case diagram and the flow chart which explains how their changes are going to solve the issues provided. the use case diagram follows the design style for uml standards.",-1.0,-1.0,-1,42
"yes, the design looks simple. they have drawn a uml use case diagram to explain the design. it makes the design easier to understand.",-1.0,-1.0,-1,24
yes. it covers functionalities required to fix the given issue. they have given good approaches and solutions to the issues with the diagram.,-1.0,-1.0,-1,23
they have used good screenshots to explain the changes they intend to make. they have also described the problem statement and the appropriate solution at every issue.,-1.0,-1.0,-1,27
"yes, the design is simple and intuitive. they have utilized good flow-chart diagrams to explain how their solution is going to solve the given problem.",-1.0,-1.0,-1,26
"yes, the design looks good. they have used uml diagrams to explain their design strategy and other screenshots to explain how it will work.",-1.0,-1.0,-1,24
"yes, they have added the solution and approach they are going to follow to fix the issues.",-1.0,-1.0,-1,17
"yes, they have included flow-chart diagrams for their changes. it clearly explains the changes they intend to make.",-1.0,-1.0,-1,19
the explanation was detailed and covered all the points. good job,-1.0,-1.0,-1,11
the visual aid and bullet pints were provided to give more clarity nd better explanation,-1.0,-1.0,-1,15
the explanation was very clear and it sounds like the problem has been addressed fully.,-1.0,-1.0,-1,15
good explaination was given for the approaches that they are taking.,-1.0,-1.0,-1,11
"yes, the design appear to be as simple as possible",-1.0,-1.0,-1,10
"yes, the design appear to be sound, following appropriate principles and using appropriate patterns",-1.0,-1.0,-1,14
i thin the design that they propose can help address this problem fully.,-1.0,-1.0,-1,13
"yes, the authors adequately explained the changes to be made to the system",-1.0,-1.0,-1,13
an overview bout the testcases is provided which i think is adequate to test the functionalities.,-1.0,-1.0,-1,16
"yes,&nbsp;the design appear to be as simple as possible",-1.0,-1.0,-1,11
"yes,&nbsp;the design appear to be sound, following appropriate principles and using appropriate patterns",-1.0,-1.0,-1,15
"yes,&nbsp;the authors adequately explained the changes to be made to the system",-1.0,-1.0,-1,14
the class diagram and/or other figures clearly describes the changes to be made to the system.,-1.0,-1.0,-1,17
"team has specifically mentioned in the document that design patterns are not applicable for this project. as far as i tried to understand the code, changes looks good to me. they have given proper explanation for the changes.&nbsp;",-1.0,-1.0,-1,39
"there's no design for the project, so i don't think that having diagrams would make sense in the document of this project.&nbsp;",-1.0,-1.0,-1,25
there's no design section in the document also team has mentioned about why they don't have one.&nbsp; i think the way changes has been done and explained is enough to understand. minute details are included for everything which is really helpful to understand the changes and the project.&nbsp;,-1.0,-1.0,-1,52
"there are no design principles to be followed in the project, as clearly mentioned in the document.&nbsp; team has given the explanation for why certain changes are made in specific way and that explains enough.&nbsp;",-1.0,-1.0,-1,37
"there are two issues for the project and both are covered in the document. as this project is an extension of the oss project, so the document includes that as well.&nbsp;",-1.0,-1.0,-1,32
"code changes are explained in detail, why certain changes are done in specific files and why that's the best way to do it.&nbsp;",-1.0,-1.0,-1,25
all the necessary details are explained in detail. team has also mentioned why the pull request is still pending and that's because of the test cases but not the implementation and code changes.&nbsp;,-1.0,-1.0,-1,35
"it does include the test plan in detail. also the team has mentioned that there are some issues because of the test cases from servo's end, so the pull request will be raised based on the resolution of blocker.&nbsp;",-1.0,-1.0,-1,41
i don't think that this project/document&nbsp;should have uml or class diagrams. there's a flow diagram in the document which explains process or flow for the changes and that's quite helpful.&nbsp;,-1.0,-1.0,-1,37
team has done a good job identifying the files to be modified and the decision to follow the consistent solution a.&nbsp;,-1.0,-1.0,-1,22
"design appear to be sound, as the team has considered two approaches and selected by one by considering the pros and cons of both. new question type is being added by extending the models scored, choice, question.&nbsp;",-1.0,-1.0,-1,38
the team stated the problems to be fixed and also indicated in which file the issue can be at the end of each issue. the motive seems to be pretty clear to fix the issues related to the meta reviews which is the expected outcome.,-1.0,-1.0,-1,45
the visualization used was good enough to give a decent overview of the where is the problem focussed on.,-1.0,-1.0,-1,19
the design appears to be very straight forward with every detail has been explained clearly. the test plan is also clear.,-1.0,-1.0,-1,21
the authors have very nicely explained all the changes that need to be made and a detailed plan of the changes that are going to make.&nbsp;,-1.0,-1.0,-1,27
"yeah, they have described the changes to be made very well.&nbsp;",-1.0,-1.0,-1,12
the team has added good visuals to make us understand the problem with the existing implementations which are pretty good.,-1.0,-1.0,-1,20
the proposed changes have been aptly explained by the team. the team has attached screenshots as to where they will make changes and what type of changes will be made. appropriate explanation is given stating why the said approach and what will the team do if that approach does not work.,-1.0,-1.0,-1,51
the proposed code changes look good. the new design proposed by the team looks simpler and the name of classes where changes are proposed look appropriate.&nbsp;,-1.0,-1.0,-1,27
"the design follows appropriate design patterns and appears to be sound. the team has aptly explained all the sections of the document, emphasizing on the proposed code changes. along with that, the uml diagrams and test plan has also been explained properly.",-1.0,-1.0,-1,42
the design incorporates all the functionalities required as stated in the document. the team has included the issues present in the existing design and the&nbsp; new proposed solution.,-1.0,-1.0,-1,29
"yes, it does. for example, for enabling the teammate to self review, they are proposing a simple change to remove the session id user check, which was fairly simple. they are proposing other solutions as well alongwith, which is good.",-1.0,-1.0,-1,40
"the team has done a good job while creating the documentation. they have explained the approach well, as well as the test plan has been properly justified. the documentation is quite detailed.",-1.0,-1.0,-1,32
"the team has completed the doc pretty well. all the sections are covered. the test plan, proposed code changes and the uml diagrams are aptly explained to justify the given problem definition.",-1.0,-1.0,-1,32
"yes, the design incorporates all the functionalities mentioned in the document",-1.0,-1.0,-1,11
"the purpose, current situation and their proposed implementation is explained really very well.",-1.0,-1.0,-1,13
they have added a uml diagram which is nice but their writeup is so clean that it was not really needed.,-1.0,-1.0,-1,21
"no, they are adding things like creating a new controller. but it is too avoid complicated code in the current controller which the previous team has modified. i feel all the changes that they have specified make sense.",-1.0,-1.0,-1,38
"yeah, the existing code has many issues which they have properly identified. they have also provided reasonable solutions for the identified problems.",-1.0,-1.0,-1,22
"yes, they have captured all the requirements in their wiki page.",-1.0,-1.0,-1,11
"yes, they have added more visualizations and text to explain the problem statement better than the last time.&nbsp;",-1.0,-1.0,-1,19
they have included and explained all the mandatory sections. it is seen that they have given a lot of thought to their test plan. they have carefully jotted down each feature to test.,-1.0,-1.0,-1,33
i see that they have updated their use case diagram from last time (which had similar diagrams.) they have also added an explanation to their use case diagrams. the diagrams seem adequate.,-1.0,-1.0,-1,32
problem explanation is given for the problem and proposed solution. various diagrams and flow chart makes it easy to understand the problem.&nbsp;,-1.0,-1.0,-1,23
"yes they have considered all the functionalities mentioned in the problem statement and came up with justifying solution to this problem,",-1.0,-1.0,-1,21
"yes, the uml diagram and other figures clearly describe the changes to be made to the system",-1.0,-1.0,-1,17
yes documentation address all the required changes mentioned in the problem statement.,-1.0,-1.0,-1,12
"yes, the class diagram and/or other figures clearly describe the changes to be made to the system",-1.0,-1.0,-1,18
the visual aids are helpful in understanding the functionality required.,-1.0,-1.0,-1,10
their diagram is necessary and helpful. it follow the conventions and provide enough details.,-1.0,-1.0,-1,14
"the design appear to be sound, following appropriate principles and using appropriate patterns. the design document contains problem statement and overview, code changes flow, use case, current process, new process and test plan.",-1.0,-1.0,-1,33
"yes. authors have adequately explained the changes to be made to the system. the design document contains problem statement and overview, code changes flow, use case, current process, new process and test plan.",-1.0,-1.0,-1,33
"their explanation is clear and high quality. i'm shocked that they have accomplished their function, list the code and almost completed the test case. &nbsp;",-1.0,-1.0,-1,26
"( ) they added methods to correct classes. ( ) i don't think&nbsp;the new design may potentially make the code ""smelly"". ( ) the new design is simple enough. ( )i don't think the new design will add load to the system. ( )their design is good enough.",-1.0,-1.0,-1,44
"their diagram is helpful, follow the conventions and provide enough details.",-1.0,-1.0,-1,11
the design is simple enough to highlight it's point. but it's not too simple and i could get the system structure and the relationship of different table. &nbsp;,-1.0,-1.0,-1,30
"yes. authors have adequately explained the changes to be made to the system.&nbsp;the design document contians&nbsp; introduction, problem statement, proposed solution and test plan. &nbsp;",-1.0,-1.0,-1,28
"i think their explanation is clear and easy-reading. it not only contains why or how to accomplish the function, but also includes the files which&nbsp;require modification.",-1.0,-1.0,-1,29
"yes. authors&nbsp;have adequately explained the changes to be made to the system.&nbsp;the design&nbsp;document&nbsp;contains&nbsp;project overview, current implementation, plan of attack, files which require modification (tentative) and test plan.",-1.0,-1.0,-1,37
 ) the functionality required in the document is covered in the design ) they have separate problems and described it more clear than it was in the requirement &nbsp;,-1.0,-1.0,-1,27
 ) the design is simple and clear ) it is easy for reader to follow ) diagrams also elegant enough,-1.0,-1.0,-1,17
 ) the diagram does comprehensively describe how their design works ) it is easy to understand and really helpful,-1.0,-1.0,-1,17
 ) the design is simple enough ) each task/step is explained in elegant words and easy to follow,-1.0,-1.0,-1,17
 ) the design is absolutely sound and comprehensive ) they have considered specific principles for this project ) the pattern is appropriate and good.,-1.0,-1.0,-1,21
 ) it is a refactor project and they have covered every functionality required ) they have referenced previous design of this project and make some improvement based on that &nbsp;,-1.0,-1.0,-1,28
 ) the explanation is adequate and easy to follow ) changes are explained in detail and sound reasonable,-1.0,-1.0,-1,16
 ) the test is deep enough ) they covered how to test manually form ui ) they also explained the automotive rspec tests,-1.0,-1.0,-1,20
umls and flowcharts are given in the design which are always welcome. this helps in understanding the design in a better way,-1.0,-1.0,-1,22
i never expected so much of visuals for a testing project! great job!,-1.0,-1.0,-1,13
i am not sure if the feature is complex from the inside as from the out it looks fairly simple. but the solution seems complicated,-1.0,-1.0,-1,25
visuals are abundant here and they are all related and elaborate&nbsp;,-1.0,-1.0,-1,12
explanation is not exhaustive but i feel it is adequate for the first round,-1.0,-1.0,-1,14
yes the design includes all the aspects of the problem in hand,-1.0,-1.0,-1,12
"as per the design, everything seems good and the changes are placed at right places. the steps are clearly explained.",-1.0,-1.0,-1,20
"the write up explains the design&nbsp;of&nbsp;the students could read through some sample reviews, in a very clear format. it's simple and elegant.",-1.0,-1.0,-1,27
the writeup clearly explains what has been proposed as part of the design changes. it's to the point.,-1.0,-1.0,-1,19
"yes, the design is simple and clear to understand. it is explained by the flowcharts. the changes they are proposing are simple, they are simply testing the email functionality in various scenarios.",-1.0,-1.0,-1,32
the wiki page clearly explains about the places where changes will be made and why are they necessary.,-1.0,-1.0,-1,18
&gt; everything has been explained in great details. &gt; the use of multiple visualizations helps in understanding the changes very well.,-1.0,-1.0,-1,21
&gt; yes the design does include the test plan. &gt; the test plan is in great details covering both the regular use cases and the corner cases.,-1.0,-1.0,-1,27
&gt; yes they have added a lot of visualizations which helps in understanding the proposed changes much better. &gt; they have also added representations for relevant tables which is very good.,-1.0,-1.0,-1,31
&gt; yes they have included both manual and automated test plans. &gt; the test plans covers all the functionalities and also the corner cases.,-1.0,-1.0,-1,24
"the design proposed by the authors is pretty good. they addressed all the issues along with code quality, redundancy, etc.",-1.0,-1.0,-1,20
"yes, the design doc has all the required things, following the patterns and appropriate principles.",-1.0,-1.0,-1,15
the design of the project incorporates all the functionality required. all the metrics required to assess teammate contribution.,-1.0,-1.0,-1,18
the authors pretty much explained all the changes to be made to the system in detail.,-1.0,-1.0,-1,16
"yes, the design does include the test plan. and as per the document, the tests are not shallow and they will test the features.",-1.0,-1.0,-1,24
changes have been as requested in the previous review. the use case diagram provided for the two approaches clearly mentions the changes that will be made to the system.,-1.0,-1.0,-1,29
"yes, mainly while deciding on one of the proposed approaches, they have gone with a far subtler approach of only removing a user session id check as against the other flow of introducing a new self review altogether.&nbsp;",-1.0,-1.0,-1,39
"yes they proposed multiple solutions, shown two approaches and justified one. good job overall. they've extended the cake model from scored question model, which seems right.",-1.0,-1.0,-1,27
"they've pretty much covered everything, the proposed solutions were detailed. they've stated two approaches and justified the choice as well. test plan covers edge cases like self-review check enabled/disabled.",-1.0,-1.0,-1,33
the changes proposed appear to be sound and it doesn't seem like the changes will lead to smelly code.,-1.0,-1.0,-1,20
the team has made use of visual aids nicely to help the reader understand issues and the&nbsp;proposed solutions.,-1.0,-1.0,-1,20
"yes, the design has been explained in simple terms. use of visual aids further helps clarify any doubts that a reader may have.",-1.0,-1.0,-1,23
"yes, the&nbsp;authors have provided adequate explanations and made use of visual aids to help a reader understand the flow.",-1.0,-1.0,-1,21
"yes, the team has made good use of uml diagrams to assist&nbsp;readers in understanding the flow of the project.",-1.0,-1.0,-1,21
"yes, the design includes a test plan which covers the different types of tests they will be carrying out.",-1.0,-1.0,-1,19
"yes, the team has made use of uml diagrams to make the user understand the flow of the changes that the team will be making.",-1.0,-1.0,-1,25
"yes, the design document incorporates a good portion of the requirements.",-1.0,-1.0,-1,11
the design appears to be well defined and looks like good research is done to come to the conclusion of using this approach. the document explaining the way to derive the formula is very interesting and i appreciate the team for the efforts.,-1.0,-1.0,-1,43
"yes, the team has done really good job at making it as simple as possible. it is easier for every one to understand yet describing all the necessary cases that needs to be tested.",-1.0,-1.0,-1,34
the project itself is a testing project. they have mentioned all the cases that they are going to test very clearly.,-1.0,-1.0,-1,21
the design appears to be pretty straight forward and clear.,-1.0,-1.0,-1,10
the authors did a great job of explaining their project through wiki.,-1.0,-1.0,-1,12
they have provided appropriate visuals and screenshots explaining the current behavior of the system.,-1.0,-1.0,-1,14
"&nbsp;yes, the team has made great efforts in designing the approach and documenting it in the wiki.",-1.0,-1.0,-1,18
"&nbsp;they have provided good visuals including use case diagrams,&nbsp;database designs and the relevant database tables.",-1.0,-1.0,-1,18
"the design for the entire project, that is the oss and final parts is quite clear as flowcharts make the flow easy to understand.",-1.0,-1.0,-1,24
"i could not find anything the document lacked, it seems to cover everything from the motivation to the plan to be followed.",-1.0,-1.0,-1,22
the explanations made by the authors are in great detail including mathematical equations as well when appropriate. i think they have done a good job overall.,-1.0,-1.0,-1,26
flowcharts and uml diagrams are used when appropriate and are also specific in nature. i think the team has done a good job.,-1.0,-1.0,-1,23
"the design is remarkably lucid, i don't think the team could have done a better job.",-1.0,-1.0,-1,17
the team has divided the problem cleanly into separate issues and mentioned a good plan of attack for each.&nbsp;,-1.0,-1.0,-1,20
"the authors have explained the changes in great detail, including the files to be changed as well as what screens will be impacted due to theses changes.",-1.0,-1.0,-1,27
there is a test plan in the writeup with detailed steps for testing the functionality to be changed.,-1.0,-1.0,-1,18
"the team has used screenshots, flowcharts and uml diagrams, all to great effect.",-1.0,-1.0,-1,13
the team has made better use of screenshots and flowcharts compared to the previous round. the design is now way clearer and easy to understand.&nbsp;,-1.0,-1.0,-1,26
the design associated with the test plan is pretty elaborate.,-1.0,-1.0,-1,10
profound explanation is provided pertaining to the changes to be done to the system.,-1.0,-1.0,-1,14
the authors have made use of flowcharts to explain the expected output of the functionality. this helps the user in grasping the information without having the need to read through the text. these flowcharts convey accurate information without overloading it with details or even does not give a too high level design.&nbsp;,-1.0,-1.0,-1,53
"the design&nbsp;appear&nbsp;simple. in places where oo concepts are required, the author has done a good attempt to paste the code which would be extended which shows the clarity of thought in designing .&nbsp;",-1.0,-1.0,-1,37
the authors have well explained the proposed set of changes along with how they are planning to implement that as well as what files would be potentially modified.,-1.0,-1.0,-1,28
"the team has maintained the documentation page really well and has explained the setup of the local environment for this project, introduction to rust and servo and the methodological process to make their proposed changes to the dom. their efforts for the final project are clearly stated and the test plan has also been explained.",-1.0,-1.0,-1,55
 the team has explained the project using flowcharts of dom and screenshots of their test plans. all the diagrams are easy to understand and provide the details needed. ,-1.0,-1.0,-1,28
the design is clear and their detailed explanations help others understand what the project does and what its steps are. the changes are easy to follow and looks like the implementation is also simple enough once one understands the logic.,-1.0,-1.0,-1,40
the design document seems well documented and is complete. the team has explained all the steps properly and has even added a flowchart to outline its implementation plan.&nbsp;,-1.0,-1.0,-1,29
the team has worked on the mozilla project for their oss project as well and they have very well documented their efforts and proposed changes.,-1.0,-1.0,-1,25
"they have added plenty of legible flowcharts for the dom, their implementation and many github code diffs. this vastly increases the&nbsp;impact of the design doc.&nbsp;",-1.0,-1.0,-1,28
"based on the explanation of the current problems and what they wish to improve upon, the proposed changes seem logical and are coherently described.",-1.0,-1.0,-1,24
" the proposed changes look good. the changes right now do not look smelly. though the code to improve upon last sem's code would be worked upon while the project is ongoing and it will be checked later on. the checks look sound enough. no need for new gems, i think. the expectation is that since they are improving on last sem's code, the response time will same or less. the design has been well thought out and seems appropriate enough. ",-1.0,-1.0,-1,82
"the diagrams are neat, easy to understand and portray the essence of the project. so no complaints there.",-1.0,-1.0,-1,18
"the project is simple and concise. the code changes are explained logically and the flowchart does a great job of showing the design. overall, it is simple enough to be easily implemented.",-1.0,-1.0,-1,32
"the design has been well thought out and they address each scenario to develop. they have also specified the design pattern using - delegate pattern, which i think is the correct choice for this project.",-1.0,-1.0,-1,34
"the document is well-drafted and has all the appropriate sections including file changes, uml diagram, db changes and future test plans.&nbsp;",-1.0,-1.0,-1,23
"the changes have been adequately explained. the wiki documentation page will undoubtedly be updated as the project progresses. for now, this much seems enough.&nbsp;",-1.0,-1.0,-1,25
"along with tables, the team has also added a user model flowchart to the design document. this really helps others understand what their project does.",-1.0,-1.0,-1,25
 team has made a very easy to understand uml diagram and a db design diagram as well. shows that they have understood their project well and are good at projecting relevant information to others. everything seems to be in order. ,-1.0,-1.0,-1,40
"the design is simple and it seems easy enough to implement. several view changes, creating a new model and editing a controller to add the model changes are clearly stated and it shows clarity with the team.&nbsp;",-1.0,-1.0,-1,38
"the design doc shows the current problems, the team's proposed solutions and code changes, uml diagrams and test plans.&nbsp;",-1.0,-1.0,-1,21
right now the doc seems complete and the team will update their test plan section and code changes section as the project progresses.,-1.0,-1.0,-1,23
"the team has used a uml diagram, a db design and even screenshots to explain their project clearly yet succinctly. this helps in easy understanding of the project.",-1.0,-1.0,-1,28
visual aids are&nbsp;proper and makes the flow of the application clear.&nbsp;,-1.0,-1.0,-1,14
"&nbsp;design is good, but they have not made&nbsp;any changes since last submission.",-1.0,-1.0,-1,15
the quality of the explaining issue is good. the explanations are concise and clear to the point. also the method of explaining new formula in doc is quite good.&nbsp;,-1.0,-1.0,-1,30
detailed the test plans are described in good way in documentation.,-1.0,-1.0,-1,11
 ) yes the document elaborately describes the functionality required. ) they mentioned what's wrong with past implementation and now which new algorithm/approach they gonna try to implement,-1.0,-1.0,-1,27
" yes the design appear to be sound, following the appropriate principles and&nbsp;patterns. ",-1.0,-1.0,-1,14
yes the author put efforts to describe the changes to be made.,-1.0,-1.0,-1,12
design do include test plans and manual test from ui&nbsp;,-1.0,-1.0,-1,11
the changes are appropraitely descibed and mentioned in the document.,-1.0,-1.0,-1,10
"yes, the design appears to be simple and the code change flow diagram is helpful in understanding the solution.",-1.0,-1.0,-1,19
the design document incorporates all the required sections. it covers all the functionalities as well.,-1.0,-1.0,-1,15
they have one functionality to cover and they covered their major functionality in detail. the design document explains the detailed view of the functionality.,-1.0,-1.0,-1,24
"yes, their design looks very simple and it is easy to follow and understand.",-1.0,-1.0,-1,14
they have added all the details about the automated test and also regarding the manual test to be performed. it looks like they have covered testing all the functionalities.,-1.0,-1.0,-1,29
the design has already been worked upon so it looks clear and simple to me.,-1.0,-1.0,-1,15
test plan section is detailed. each test cases are given along with what to be tested.,-1.0,-1.0,-1,16
"yes, the design looks robust and appropriate principles seem to have been used. the write-up also mentions those quite well.",-1.0,-1.0,-1,21
the design looks simple and the team has done good job explaining it in the write-up.,-1.0,-1.0,-1,17
since no design principles are required but the proposed changes look sound.,-1.0,-1.0,-1,12
the changes have been adequately explained by the team in the write-up.,-1.0,-1.0,-1,13
the&nbsp;behavior diagram in the write-up looks quite intuitive.,-1.0,-1.0,-1,11
"yes, also they have put in a lot of thought in coming up with a scoring system which was commendable.&nbsp;",-1.0,-1.0,-1,21
"yes, they have identified all their tasks and come up with proposed changes.&nbsp;",-1.0,-1.0,-1,14
the proposed code changes were explained visually which was very unique and easy to understand&nbsp;,-1.0,-1.0,-1,16
"yes, they have a decent design in mind and a way forward.&nbsp;",-1.0,-1.0,-1,13
"yes, the design was simple and illustrative with steps to reproduce&nbsp;",-1.0,-1.0,-1,12
"yes, the design was well thought out. they listed the use cases and edge cases as well and how their design takes them into consideration",-1.0,-1.0,-1,25
"yes, the changes they plan on doing was well explained with files changes they proposed as well.&nbsp;",-1.0,-1.0,-1,18
"yes, they have talked about automated and ui tests that they plan on doing.&nbsp;",-1.0,-1.0,-1,15
"yes, they included a use case diagram, db er diagram and the table relationships of the tables they would be touching.&nbsp;",-1.0,-1.0,-1,22
- the authors have proposed changes with good quality explanations and have throughly considered&nbsp;the&nbsp;issue to be resolved &nbsp;,-1.0,-1.0,-1,21
- yes the design appears to be sound with appropriate principles,-1.0,-1.0,-1,10
since this is a mozilla project the design steps are predefined.,-1.0,-1.0,-1,11
the design is well thought of. they propose solutions and the final design chosen by them.,-1.0,-1.0,-1,16
the test plan covers possible test cases and also covers edge cases.,-1.0,-1.0,-1,12
multiple diagrams visualizing and explaining the changes that need to be done to the system.&nbsp;,-1.0,-1.0,-1,16
"the authors have done a good job of explaining all the changes that are required for the project. a detailed plan of changes is described. the functional requirements, bidding algorithm are clear, uml diagrams are helpful.&nbsp;",-1.0,-1.0,-1,37
"the uml diagrams for models are good. the inclusion of relationship between bidding and team, participant and response is well-explained through the use of diagram",-1.0,-1.0,-1,26
"it is simple to understand. all the problems to be solved are described in the proposed approach. the uml case diagram, database design, and test plan are helpful too.&nbsp;",-1.0,-1.0,-1,30
the design appears to be sound and the doc is very well explained. the project problem&nbsp;definition is well defined and clear definition of the proposed solution.&nbsp;,-1.0,-1.0,-1,29
the tests are really good. the team has done a good job in describing the tests per model.,-1.0,-1.0,-1,18
"the uml diagram, database&nbsp;design&nbsp;are very well crafted.",-1.0,-1.0,-1,11
"yes, the design is good and they have followed all patterns.",-1.0,-1.0,-1,11
"yes, there is separate functional requirement section in the documentation regarding that. they have mentioned of the new algorithm, they are going to implement.",-1.0,-1.0,-1,24
the information included is perfect and good enough to understand the changes in system.,-1.0,-1.0,-1,14
"yes, the design is simple and everything is mentioned in flow.",-1.0,-1.0,-1,11
"yes, the design appears good and helpful and they have used appropriate patterns.",-1.0,-1.0,-1,13
"yes, they have proposed changes of what they have made.",-1.0,-1.0,-1,10
explanations are detailed and sufficiently explain the changes to be made to the system.,-1.0,-1.0,-1,14
" ) no, i don't think there are any issues with the location of the proposed changes ) too early for me to say as it depends on how the team goes about whatever they've proposed ) no, its not complicated ) no, the response time should be the same ) the document is good enough",-1.0,-1.0,-1,52
"yes, the document addresses all the functionalities listed in the design document",-1.0,-1.0,-1,12
great utilisation of the use-case diagram to demonstrate the functionalities of the system.,-1.0,-1.0,-1,14
"yes, their design appears to be to the point and seems to follow a lucid logical approach.",-1.0,-1.0,-1,17
the design is quite sound. there is appropriate flow in the design which helps us understand the document better.,-1.0,-1.0,-1,19
all three issues have descriptive flowcharts to help us understand the team's approach towards solving it. i think the flowchart for issue is redundant though,-1.0,-1.0,-1,26
"yes, they've addressed all the issues listed in the specifications doc",-1.0,-1.0,-1,12
"although the process seems complicated, the team has broken down the steps and explained them well",-1.0,-1.0,-1,16
the team seems to have learnt well what changes are required and what needs to be done,-1.0,-1.0,-1,17
"by the overall look of it, the flow looks appropriate",-1.0,-1.0,-1,10
the team has added one flowchart to present the flow of the actions. it helps in understanding the system.,-1.0,-1.0,-1,19
the diagrams put down in the document are completely relevant and provide a very good understanding of the project,-1.0,-1.0,-1,19
"yes, the team has laid out a plan well which seems to fit the current design",-1.0,-1.0,-1,16
the design document covers all necessary components required and is well structured,-1.0,-1.0,-1,12
overall explanation of the changes that need to be made are made pretty clear,-1.0,-1.0,-1,14
the document looks complete and well written. it is structured&nbsp;well and is easy to understand,-1.0,-1.0,-1,17
uml has been used to describe the flow in detail.,-1.0,-1.0,-1,10
the changes proposed by the authors are thoughtful and well put through.,-1.0,-1.0,-1,12
the test plan sounds reasonable and it is well designed.,-1.0,-1.0,-1,10
authors have explained details in a very well structured manner.,-1.0,-1.0,-1,10
whole task is to write test. so there is a very extensive test plan. all the manual and automatic tests are mentioned,-1.0,-1.0,-1,22
diagrams and flowcharts explain the flow of the application clearly and in a very simple manner.,-1.0,-1.0,-1,16
they've inserted at least a screenshot for every problem they are supposed to solve. which makes it easy for the reader to visualize the problem.,-1.0,-1.0,-1,26
"yes, design is simple and properly explained using visual aids.&nbsp;",-1.0,-1.0,-1,11
authors have put effort to find out different ways of achieving the task and selected the best one.,-1.0,-1.0,-1,18
"yes, authors have explained the changes to be made and documented carefully to make it easy for the reader to understand.",-1.0,-1.0,-1,21
diagrams are properly commented and explained to give the reader a complete understanding of the proposal of their changes.,-1.0,-1.0,-1,19
"yes, everything is explained clearly. flowcharts and diagrams help you to read and understand the design nicely.",-1.0,-1.0,-1,17
uml diagram and database design diagram clears the concept of the design and changes authors are proposing.,-1.0,-1.0,-1,17
author has mentioned the changes carefully and distinctly. documentation shows the details of changes category wise which helps the reader to understand the tasks.,-1.0,-1.0,-1,24
"the design plan sounds good. they've proposed to follow good coding practices in ruby, such as dry principle.",-1.0,-1.0,-1,19
design is clear and very simple to understand. helps to follow the functioning of the code.,-1.0,-1.0,-1,16
"yes, authors have explained the details about the changes to be made to the system.",-1.0,-1.0,-1,15
the design doc overall is very complete and covers every aspect needs to be displayed.,-1.0,-1.0,-1,15
- the changes are very specific as specified in the issue on servo github so cannot argue much about that. they have mentioned everything that they need to do in this project.,-1.0,-1.0,-1,31
- based on the previous review's pr it is clear that servo has a very fixed standard in terms of what needs to be written in the source code and their code/suggested change follows that.,-1.0,-1.0,-1,36
"- the design, coding standard and pattern is as per the servo guidelines and is appropriate for this current project.",-1.0,-1.0,-1,19
- the doc is in continuation of the previous project and has many details. it's great that they added some information about what is the problem user-facing and what would happen after&nbsp;,-1.0,-1.0,-1,34
"- given the specific changes and need of the issue, they have given enough information&nbsp;for the readers to understand the changes needed.",-1.0,-1.0,-1,23
- very well written wiki. they have written it well to make a reviewer understands what they are trying to achieve.&nbsp;,-1.0,-1.0,-1,21
- a well laid out test plan is provided. they have provided proper steps for each type of user.,-1.0,-1.0,-1,18
- they seem to understand what needs to be done and have written the functional flow of things that their implementation should do.,-1.0,-1.0,-1,22
- the changes are listed out very well. they know exactly what files need to be worked on which is definitely a&nbsp;good thing.,-1.0,-1.0,-1,24
the document presents the design in a way that makes things really clear to the reader.,-1.0,-1.0,-1,16
"the most impressive part of the document, a very detailed test plan.",-1.0,-1.0,-1,12
"the design is as simple as it gets. but it doesn't contribute much, if anything, to the document's purpose.",-1.0,-1.0,-1,21
yes the design appears to be logical and according to me will help in achieveing the functionalityu,-1.0,-1.0,-1,17
yes they plan to make adequate changes in the system,-1.0,-1.0,-1,10
yes it does include the test plan it is highly localized,-1.0,-1.0,-1,11
it was adequate to follow what all things to they have planned to change.,-1.0,-1.0,-1,14
the uml diagram do follow the principles and it is quite informative.,-1.0,-1.0,-1,12
yes the proposed design does include the know-hows of the functionality required and how to achieve it.,-1.0,-1.0,-1,18
yes they have included most of it as far as i know and the content is also quite intuitive.&nbsp;,-1.0,-1.0,-1,20
i could only see the wiki but code or interface.,-1.0,-1.0,-1,10
"changes to be implemented as a part of this final project have been given in a detailed and pointwise manner, which is easy to read and understand for the reader.",-1.0,-1.0,-1,30
the design proposed by the team appears to simple and straight forward. it is easy to understand and give a clear idea of what and how the team plans to work on the project. the flow of the proposed project design is also easy to understand and has been well described by the team.,-1.0,-1.0,-1,54
the project design appears to be sound and well-thought-out. the team has rightly mentioned that design patterns are not applicable&nbsp;to their project as it&nbsp;involves the implementation of methods and modifying various files&nbsp;and that the implementation section provides details of why certain steps were implemented the way they were.&nbsp; &nbsp;,-1.0,-1.0,-1,58
"the authors have laid out a detailed stepwise plan of the changes that have already been made to the system as a part of the oss project, as well as the changes that the team plans to make as a part of the final project, under the scope section of the document.",-1.0,-1.0,-1,52
"the team has added a flow chart to explain a high-level view of their proposed solution. this i believe will greatly help any person reading the document. also, the images used to explain the html page content as well as the dom tree are really useful for a person who may not understand what dom features are.",-1.0,-1.0,-1,58
the design appears to be very straight forward with every detail laid out int he design document. the possible issues and the pitfalls have also been highlighted by the team.,-1.0,-1.0,-1,30
the design doc is very well explained. project purpose is explained in detail as well as in a fun and practical manner.,-1.0,-1.0,-1,22
the authors have very nicely explained all the changes that need to be made and a detailed plan of the changes that are going to make. it included the algorithm they plan to implement as well as the functional &amp; non-functional requirements of the project.,-1.0,-1.0,-1,46
the visual aids are good and they explain the proposed solution succinctly.,-1.0,-1.0,-1,12
"yes, the design appears to be sound and simple to understand.",-1.0,-1.0,-1,11
"yes, the test plan is there with covering all scenarios.",-1.0,-1.0,-1,10
"yes, use case diagram and db changes diagram are added.",-1.0,-1.0,-1,10
"yes, changes to be made to the system are explained nicely.",-1.0,-1.0,-1,11
the flow chart is great and easy to see the logic of what they will do.,-1.0,-1.0,-1,16
&nbsp;they did a good job explaining why rspec will not work in this case. ,-1.0,-1.0,-1,15
 . the author is on the right way. . don't think so. . no. . maybe because of the database interaction.,-1.0,-1.0,-1,18
"yes, they are following the principals and it is sound.",-1.0,-1.0,-1,10
"yes, the design is simple and easy to understand through uml and visual diagrams.",-1.0,-1.0,-1,14
the explanation is quite expansive and clear to why the solution proposed is going to work.,-1.0,-1.0,-1,16
 . no . no . yes . it might because of database hits. . no.,-1.0,-1.0,-1,10
yes. the test plan is elaborative and should help in testing the features after the code part is complete.,-1.0,-1.0,-1,19
"yes, the visualization help in understanding the&nbsp;approach of the&nbsp;solution.",-1.0,-1.0,-1,13
they did stated all the changes that they have decides to change. it looks complete from my point of view to resolve the issue present in the problem statement.,-1.0,-1.0,-1,29
all things that they have decided to alter looks clean and efficient to me. it wont complicate the code or produce any unnecessary response time.&nbsp;&nbsp;,-1.0,-1.0,-1,27
yes proposed design is simple and neat. it is self describing for anyone to understand.,-1.0,-1.0,-1,15
yes it seems that they have pointed out both the point that were present in the design document.&nbsp;,-1.0,-1.0,-1,19
yes. the project implemented the first issue from the problem statement in the oss project and the second issued are going to be implemented in this final project.,-1.0,-1.0,-1,28
yes there is test plan present in the design document to test the changes that they have proposed to implement.,-1.0,-1.0,-1,20
yes they have did added diagram to describe the flow of the functionality that they are implementing. it makes it easier that way to understand for other persons who are reviewing the document.,-1.0,-1.0,-1,33
"yes, the tests for the&nbsp;issue are well designed.",-1.0,-1.0,-1,10
"yes, the design&nbsp;incorporate all of the functionality required",-1.0,-1.0,-1,10
"yes, the diagrams help me to understand how tests run.",-1.0,-1.0,-1,10
the&nbsp;visual aids are helpful for understanding the problem.,-1.0,-1.0,-1,10
"yes, the solutions of the team to each problem are well designed.",-1.0,-1.0,-1,12
"yes, the wiki well explained all changes to be made to the system.",-1.0,-1.0,-1,13
i can easily understand work flow by work flow diagram.,-1.0,-1.0,-1,10
"yes,&nbsp;the design incorporate all of the functionality required.",-1.0,-1.0,-1,10
the team didn't miss important part in the document.,-1.0,-1.0,-1,10
i think they may choosed the right class to change,-1.0,-1.0,-1,10
it's in good design and the pictures are good drawn,-1.0,-1.0,-1,11
the uml&nbsp;diagrams is easy to understand and good explaination.,-1.0,-1.0,-1,11
target classes are all good. code is not smelly. the new design looks not complicated. &nbsp;,-1.0,-1.0,-1,16
the design is straightforward to be understood. i can totally understand what they have written in the writeup. good job.,-1.0,-1.0,-1,20
"&nbsp;yes, this design doc have appropriate principles and using appropriate patterns",-1.0,-1.0,-1,12
the uml diagrams is the most comprehensive diagrams i have ever seen.&nbsp;,-1.0,-1.0,-1,13
the explanation of the proposed approach to the project is very clear and easy to understand,-1.0,-1.0,-1,16
"yes, the solution was clearly explained and very easy to understand",-1.0,-1.0,-1,11
"yes, the proposed implementation is very clear and possible files are listed and implementing methods are indicated",-1.0,-1.0,-1,17
"the proposed changes are clearly stated along with the code, flow chart and pseudocode, which is very good and easy to understand&nbsp;",-1.0,-1.0,-1,23
the design appears very simple and clear in flow charts,-1.0,-1.0,-1,10
"yes, the design is perfectly corresponding to the functionality requirements",-1.0,-1.0,-1,10
"the team listed the proposed solution and the files that likely to be changed, which is good&nbsp;",-1.0,-1.0,-1,18
the proposed changes&nbsp;are very well explained and easy to understand.,-1.0,-1.0,-1,12
"it's difficult for me to comment on this, being unfamiliar with servo, but the changes seem to be well thought out.",-1.0,-1.0,-1,22
as far as i can tell. it's difficult to determine since i'm unfamiliar with servo.,-1.0,-1.0,-1,17
i think the design is very good and much more fleshed-out than the original submission of this document.,-1.0,-1.0,-1,19
it seems that the&nbsp;project outlined on the servo page related to issues and this design document covers both very extensively.,-1.0,-1.0,-1,22
"this is difficult for me to determine as, again, i am unfamiliar with servo.",-1.0,-1.0,-1,14
"according to the document, no tests need be added. however, these participants have still laid out how they will use existing tests to test their functionality.",-1.0,-1.0,-1,26
"after reading this, i have a great idea of&nbsp;what functionality will be present after the change and how the students for this project intend to refactor existing code.",-1.0,-1.0,-1,30
as simple as a design can be which attempts to consolidate multiple past attempts.,-1.0,-1.0,-1,14
this design document fully incorporates the required functionality and&nbsp;has great plans for how to refactor existing code.,-1.0,-1.0,-1,19
the visualization makes very clear&nbsp;how the proposed changes are designed and how they will affect the look of the system.,-1.0,-1.0,-1,22
"according to their explanation, the design seems simple but practical.",-1.0,-1.0,-1,10
"yes, their design document have incorporated all of the functionality required.",-1.0,-1.0,-1,11
"yes, the design includes the test plan and it seems quite necessary.",-1.0,-1.0,-1,12
"yes, the diagrams in the document describes the intended changes clearly.",-1.0,-1.0,-1,11
the overall quality of explanations is good. they've clearly explained what neet to be done in the next couple of weeks.,-1.0,-1.0,-1,22
"their design strategy write about the&nbsp;impersonating student using anonymized names,anonymized view for students,&nbsp;anonymizing team names and wrong anonymizing names. their flow chart looks concise and percise.test plan contains the most test cases also include the edge cases.",-1.0,-1.0,-1,43
they give the solution of the each issue and they all make sence. the solution they make is just precisly fixing the problem. &nbsp;,-1.0,-1.0,-1,24
"the flow chart added in the wiki, which look concise and simple, and excatly tells the reader about their design strategy.",-1.0,-1.0,-1,21
the design appear to be simple since the author added the flowchart. which explain the problems they have and the possible solution to it.,-1.0,-1.0,-1,24
the design appear to be sound while looking through the&nbsp;proposed solution. the author give&nbsp;solution to the wrong anonymizing of the team naming and the anonymized view for student.,-1.0,-1.0,-1,32
"from the doc, i konw that the team should fix the bug of&nbsp;students cannot switch into and out of anonymized view, allow impersonation of anonymous usernames , fix some things are not anonymized and team names are also not anonymized. so i can see the author list all the problem in the wiki doc and describe their way in solving it.",-1.0,-1.0,-1,62
yes the author has explained the changes in the proposed solution part demonstrating the specific reason for that.,-1.0,-1.0,-1,18
"the design doc is quite comprehensive, since it's include the design strategy, test plan, user cases and etc.",-1.0,-1.0,-1,19
"the design is simple and clear, form the approach, the author&nbsp;propose to use `updated_at` in `answer_tags` model for each user to calculate gaps between each tagging action.",-1.0,-1.0,-1,29
the design make sence. from their approach i think the solution is doable and also tries to solve the problem.,-1.0,-1.0,-1,20
the test plan is comperhensive which inclued all the issues they have,-1.0,-1.0,-1,12
"the author shows us the&nbsp;behavior diagram for instructor/ta diagram, which we can clearly know how to track time of the tagging data.",-1.0,-1.0,-1,25
the team has used visual aids which are easy to understand.,-1.0,-1.0,-1,11
the explanation is given in steps it is easy to understand. also the explanation is reasonable and comprehensive and easy for the reader to follow.&nbsp;the design appears to be simple. &nbsp;,-1.0,-1.0,-1,33
"yes, the team has mentioned all the functionalities that are required and mentioned in the google doc.",-1.0,-1.0,-1,17
the document contains the appropriate software principles and patterns. no pattern was adopted but the design looks sound.,-1.0,-1.0,-1,18
the team gives detailed steps on ui test. they&nbsp;have provided the rspec tests which is good.,-1.0,-1.0,-1,18
the authors have mentioned proposed changes and they are explained properly.,-1.0,-1.0,-1,11
"no, it seems that the plan proposed is correctly done by the authors.",-1.0,-1.0,-1,13
"yes, the authors have used relation diagrams to explain the functionalities and the dependencies which explain the problem very well.",-1.0,-1.0,-1,20
the team did well on explanations.&nbsp;the design sounds perfectly sound and the appropriate patterns have been suggested. i think they have done a proper job.,-1.0,-1.0,-1,27
yes the team has incorporated all the functionalities mentioned in the google doc.,-1.0,-1.0,-1,13
"yes, the changes and the thoughts have been put out clearly that are to be done by the team.",-1.0,-1.0,-1,19
the design doc seems to be completed properly and not much needs to be changed.,-1.0,-1.0,-1,15
the team&nbsp;has used a lot of diagrams and uml to explain their working which is really useful and easy for the reader to follow through the whole document.,-1.0,-1.0,-1,30
"yes, the design does seem to be solid and uses the right methods/files involved for designing the project.",-1.0,-1.0,-1,19
"yes, the necessary changes that will be incorporated have been mentioned, including things like formula being used, and the team also has narrowed down the files that are to be changed/involved moving forward.&nbsp;",-1.0,-1.0,-1,35
"an update in regards to workflow is being shown this time around, which definitely helps in understanding the big picture for the project. also, ui changes have also been shown, helping in understanding what is to be done.&nbsp;",-1.0,-1.0,-1,39
the document is described in simple language and clearly explaining their approach and progress so far.,-1.0,-1.0,-1,16
the document is well designed and explained in good details.,-1.0,-1.0,-1,10
they have explained the changes made well and explained them with good details.,-1.0,-1.0,-1,13
documentation is complete with all the parts present and explained in good detail,-1.0,-1.0,-1,13
the changes proposed look good and if implemented well could result in a working feature. they have proposed solutions and deduced which one is better.,-1.0,-1.0,-1,25
"the design proposed looks sound and dry. as this is an initial analysis, names of methods to be implemented/edited should not be expected at this point.",-1.0,-1.0,-1,27
the design is clearly described and explained in sufficient details. it is simple to follow.,-1.0,-1.0,-1,15
they have made the document to encompass the entire functionality requested in the feature. it is thoroughly made with detailed analysis.,-1.0,-1.0,-1,21
the design is very crisp and well detailed. it is explained simply making it easier to follow.,-1.0,-1.0,-1,17
the design is sound and provided in good detail. it makes use of the required patterns wherein all the top level sections are all present.,-1.0,-1.0,-1,25
the test plan is very clearly laid out and contains sufficient test cases.,-1.0,-1.0,-1,13
yes. i like the fact that the controllers to be changed are parts of the diagram.,-1.0,-1.0,-1,16
"their descriptions on every issue completely covered specific problems and illustration on how to operate on ui system, thus the explanations are very comprehensible.",-1.0,-1.0,-1,24
"they have already made their documentation clear on design patterns, and all appear to be sound and appropriate.",-1.0,-1.0,-1,18
"yes, there are three tasks issued in total. the first two are about fixing existing bugs about meta-review, one for the link and the other for the number. and the last one is to enable instuctor to whether to open this section. and the wiki of this team completely contain all these three issues and correspondant&nbsp;illustrations.",-1.0,-1.0,-1,59
"yes, they have listed all files to be modified following their design logic of all issues very comprehensively.",-1.0,-1.0,-1,18
"the descriptions, the approaches to implement functionalities and the test plans of every single issue have all been specified clearly.",-1.0,-1.0,-1,20
"yes, they have clearly listed all files to be modified among the first three issues. since the last three issues only need supplementary tests, there is nothing to be modified so far.",-1.0,-1.0,-1,32
&nbsp;yes the design is simple and easy to understand.&nbsp;,-1.0,-1.0,-1,11
they have used the existing function/made to changed to the existing one which will help to dry code.,-1.0,-1.0,-1,19
yes the team has clearly explained the requirements and details of the&nbsp;improvements.,-1.0,-1.0,-1,14
&nbsp;yes the team has explained what changes are needed to be made in the system.,-1.0,-1.0,-1,16
&nbsp;they have added the flow diagram for different functionalities/cases.,-1.0,-1.0,-1,11
yes they have incorporated all the required functionality and gives details about the requirements. &nbsp;,-1.0,-1.0,-1,15
yes they have added the details and clearly explained what needs to be done for the project,-1.0,-1.0,-1,17
yes they have added the test plan describing the scenarios..,-1.0,-1.0,-1,10
the proposed solutions looks good and follows the design principles.,-1.0,-1.0,-1,10
yes the writeup is clearly written and sufficiently explain the changes and the solution,-1.0,-1.0,-1,14
explanation of the issues is fair enough. diagrams and images provide useful information too.,-1.0,-1.0,-1,14
"images are useful viaual information for the documentation, though a bit large.",-1.0,-1.0,-1,12
document provides a great overview of what is to be done in this project.,-1.0,-1.0,-1,14
"yes,the design includes the functionalities required as part of 'to be done'.&nbsp;",-1.0,-1.0,-1,14
they have provided the uml diagrams to describe their plan of work. which is quite easy to understand.,-1.0,-1.0,-1,18
"they mentioned what files need to be changed/created, which is good.",-1.0,-1.0,-1,12
flow chart is provided. also the issues and changes have been show in images.,-1.0,-1.0,-1,14
all the test cases are represented through simple easy to understand diagrams.,-1.0,-1.0,-1,12
the changes proposed are detailed and the explanation is to the point. they have mentioned the files that they will change and also what changes will they amke,-1.0,-1.0,-1,28
the design is well documented and consist all the section with well description,-1.0,-1.0,-1,13
the design document is well made and include everything &nbsp;,-1.0,-1.0,-1,10
there are visual aid present for each case and it is well described,-1.0,-1.0,-1,13
"yes, they have made the changes suggested and design document is well documented.",-1.0,-1.0,-1,13
the design plan is well organized and easy to understand.,-1.0,-1.0,-1,10
the design seams good to me. the use of&nbsp;chain of responsibility&nbsp;is a good practice.,-1.0,-1.0,-1,18
"the diagrams are quite good, help to understand the design.",-1.0,-1.0,-1,10
"i believe that the explanation is quite good, albeit a little confusing if you aren't familiar with what the ""anonymous"" feature of expertiza already is.",-1.0,-1.0,-1,26
"yes, they did very well, the design incorporates all of the required functionality.",-1.0,-1.0,-1,13
"yes, the test plans are included in the design doc, and they described each test in detail.",-1.0,-1.0,-1,17
"yes, they have very detailed diagrams to describe their changes and functionalities.",-1.0,-1.0,-1,12
they clearly stated which controllers or models need to be modified and give their proposed solutions step by step as well.,-1.0,-1.0,-1,21
"the solution thet proposed generally follow the chain of responsibility and the work flow, as they state their design clearly, i think their proposed design is good.",-1.0,-1.0,-1,27
"they added a screenshot to state their issue, which help me understanding their issue quicker, and they also added a work flow chart to show their proposed solution, all in details.",-1.0,-1.0,-1,31
"yes, they&nbsp;state&nbsp;their design pattern by showing a picture, which appeared to be as simple as possible.",-1.0,-1.0,-1,20
"yes, they use&nbsp;chain of responsibility as the design pattern, which is sound and appropriate to deal with the function they wanted to realize.",-1.0,-1.0,-1,25
"yes, i can see from their wiki page that they use&nbsp;&nbsp;chain of responsibility as the design pattern, and they have considered all the functionality they need to realize by showing the work flow chart.",-1.0,-1.0,-1,37
they have a code changes flow diagram to show how they plan to change the code and what files will be modified. i think they found the right files and right class to change or add code.&nbsp;,-1.0,-1.0,-1,38
they have a code changes flow that shows the files they plan to modify and the relationship between those files. the diagram is clear and helpful to understand the project.&nbsp; and the use case diagram shows how self-reviewing is created and performed.,-1.0,-1.0,-1,44
the design incorporates all of the functionality required in the given document. the functionality required includes three main points that are all described in their design document.,-1.0,-1.0,-1,27
"the design document is complete. it includes the problem description, their plan of work, some visual aids helps better understand the project, test plan, and their plan of the formula.&nbsp;",-1.0,-1.0,-1,31
the code changes flow diagram shows the files they plan to change and their work order. and the use case diagram describes what student and instructor can do.&nbsp;,-1.0,-1.0,-1,29
the design appear to be as simple as possible. there is nothing in their document that is unrelated to the project.&nbsp;,-1.0,-1.0,-1,22
the figures shows the design flow related to anonymized view clearly.,-1.0,-1.0,-1,11
the design seems to be as simple as possible. they write the work progress and the methods they plan to change. their design is appropriate and has no point that is unrelated to the project.,-1.0,-1.0,-1,35
they write their design plan organized and the design seems appropriate. it follows right principles and using appropriate patterns.,-1.0,-1.0,-1,19
all models seem to have at least one test written for them.,-1.0,-1.0,-1,12
"no issues with login, auth seems to be working fine",-1.0,-1.0,-1,10
"yes, auth is good. i cannot login without an acceptable account.",-1.0,-1.0,-1,11
&nbsp; method names&nbsp;are descriptive and indicative of what they are storing and handling. &nbsp;,-1.0,-1.0,-1,16
&nbsp;none of the commits are handling multiple tasks.&nbsp; &nbsp;,-1.0,-1.0,-1,11
&nbsp;all the functionalities are intact. kudos to the team! &nbsp;,-1.0,-1.0,-1,11
&nbsp;code is well-written with lots of comments. all the methods are performing only task.&nbsp; &nbsp;,-1.0,-1.0,-1,18
"&nbsp;variables are descriptive, concise and indicative of what they are storing and handling. &nbsp;",-1.0,-1.0,-1,15
&nbsp;all the associations have been correctly handled in this application. &nbsp;,-1.0,-1.0,-1,12
&nbsp;i&nbsp;did not face any problems that were present in the first round.&nbsp; &nbsp;,-1.0,-1.0,-1,17
&nbsp;the team has implemented this feature completely. no private content is visible or editable to unauthorized users. &nbsp;,-1.0,-1.0,-1,19
the test cases are well written. team has tested controller (feedback_request) thoroughly covering all the validations and definitions.,-1.0,-1.0,-1,18
"yes, admin is able to log in and create/view/update/delete items/users. &nbsp;",-1.0,-1.0,-1,15
"yes, the student is able to log in with the email id and password.",-1.0,-1.0,-1,14
have relevant methods in appropriate controllers and in a structured manner,-1.0,-1.0,-1,11
i was able to get details from admin profile and sign up as teacher.,-1.0,-1.0,-1,14
"yes, user is getting emails when signed up and when registered",-1.0,-1.0,-1,11
"admin is able to create, view, update and delete a user",-1.0,-1.0,-1,11
teacher is notified that student is no longer enrolled in course,-1.0,-1.0,-1,11
good code quality! i think they did better than i except! great job!,-1.0,-1.0,-1,13
the method names make sense as the method is doing exactly what it name implies. many of the controllers even contain methods that check for relationship deletions and handle them well with before actions.,-1.0,-1.0,-1,34
"no, all the features initially reviewed are working as they did or were directly improved upon. features such as course registration, histories, and feedbacks work properly now when there were issues before.",-1.0,-1.0,-1,32
methods are coded to handle the single task the method is named for such as empty_cart and update.,-1.0,-1.0,-1,18
most of the logic in the program are conditional logic to checks for which user type is logged in and what db entries already exist. loops are not nested and used to just iterate through db arrays to display courses/histories/feedbacks. most of this logic/iteration is contains in the views in various index and show files.,-1.0,-1.0,-1,58
"yes, the variable names make sense and store the information stated. i was able to get a quick overview in the schema.rb located in the db folder. an interesting note here is that students/teachers themselves do not have an id tag but all the other sections such as histories and feedbacks have them instead.",-1.0,-1.0,-1,56
not able to. a message comes up saying access is restricted.,-1.0,-1.0,-1,11
"the relationships that are shown in the code make sense and the schema and data tables back that up. because it is done properly, it is possible to have the courses/histories/feedbacks linked from student to teacher properly.",-1.0,-1.0,-1,39
this works well when purchasing courses as a student. reject incorrect codes and accepted the code emailed.,-1.0,-1.0,-1,17
"yes, the course model is tested quite well to make sure it is created without duplicate and requires all fields to be filled in. there is a check that the price has to be greater than zero as well.",-1.0,-1.0,-1,39
the code is written well in that is very easy to follow the logic. the variable names are straight forward so conditional checks are self-explanatory and the migrations properly set up the db to store information in an easy to access useful way.,-1.0,-1.0,-1,44
"yes, they can edit their fields. i changed all the fields and it saved. i then reverted it back to the default and it was successful. logging in with new info worked as well.",-1.0,-1.0,-1,34
a student is able to see all of the information of every teacher (except password) in the system including their major and email.,-1.0,-1.0,-1,23
"yes, able to edit profile. changed password worked at login as well as reverting it back.",-1.0,-1.0,-1,16
it goes through successfully and is truly removed from the cart. i verified this by logging back in as the student to check if the item was still there and it had been removed.,-1.0,-1.0,-1,34
i like the password confirmation when signing up as a student. good touch.,-1.0,-1.0,-1,13
"yes, as an admin i was able to do all of the above to items and users.&nbsp;",-1.0,-1.0,-1,18
yes students are able to add themselves to a class. does not ask me to select teacher before doing so. although i can select a teacher later.,-1.0,-1.0,-1,27
"yes, student is able to login with email and password.",-1.0,-1.0,-1,10
yes student can pick a teacher by&nbsp;going into my courses section,-1.0,-1.0,-1,13
most of the test cases are descriptive enough that they dont need commenting and the code looks simple and clean that it does not need much commenting.,-1.0,-1.0,-1,27
"the code has proper naming conventions, follows standard code practices. its good.",-1.0,-1.0,-1,12
the rspec test cases are comprehensive and cover all methods from reviewmappinghelper,-1.0,-1.0,-1,12
there are test cases which seem to cover the test cases although the coverage increased by . ,-1.0,-1.0,-1,16
the variables and method names seem descriptive enough and look good.,-1.0,-1.0,-1,11
the video footage showed the running of review_mapping_helper_spec.rb and it ran with failures.,-1.0,-1.0,-1,14
the write is compact and thoroughly covers all methods in the reviewmappinghelper controller and all cases.,-1.0,-1.0,-1,16
"the code was mostly rspec, so the scenarios looked covered and the naming conventions apt.",-1.0,-1.0,-1,15
the writeup clearly tells about the test plans intended for the function and how its working.,-1.0,-1.0,-1,16
"the video demonstrates the testing of the review_mapping_helper_spec.rb file which runs with success, failures.",-1.0,-1.0,-1,15
yes comments are present for all the methods and they are meaningful,-1.0,-1.0,-1,12
yes there are test cases. coverage has increased by . %.the tests cover the important functionalities.,-1.0,-1.0,-1,15
code is well written and good practices have been followed,-1.0,-1.0,-1,10
this is a refactoring project. i&nbsp;have tested create and update and it works as expected,-1.0,-1.0,-1,17
"code looks good, tests are nicely broken up into appropriately-sized blocks",-1.0,-1.0,-1,12
i have no issues with the code as it stands,-1.0,-1.0,-1,10
"the code is well-written with enough comments, good code style, and simple names. the authors have improved the readability of the code significantly.",-1.0,-1.0,-1,24
the ui is working as intended. the tests that have been added are covering all the possible scenarios.&nbsp;,-1.0,-1.0,-1,19
all comments that i saw were descriptive enough for me to have a decent grasp on the code being changed/moved.&nbsp;,-1.0,-1.0,-1,22
"test plan looks good, edge cases/pre-conditions/test environment look easy to replicate.&nbsp;",-1.0,-1.0,-1,15
"all changed code seems as easy, if not moreso to follow.&nbsp;",-1.0,-1.0,-1,12
"writeup very clearly communicates the purpose of this refactoring, and it seems from what i can see that everything was properly implemented via the writeup. nice work!",-1.0,-1.0,-1,27
seems like overall coverage increased. team added passing test cases for the scope of the assignment!,-1.0,-1.0,-1,16
"barring any issues i was unable to find, this code looks good to be merged onto production. nice work!",-1.0,-1.0,-1,19
"writeup is very good. the team covered everything from fully showing their coded solutions, to how to run through ui tests with screenshots. very easy to follow",-1.0,-1.0,-1,27
"all new code used simple names, and overall seemed to cut down on overall code amount from a visual perspective as per the wiki. very well-written!",-1.0,-1.0,-1,27
everything that i saw was working seemingly as intended! features work as they are described in the wiki page.&nbsp;,-1.0,-1.0,-1,20
"i think they have done it pretty well, coverage increased and the code is easy to read for further use",-1.0,-1.0,-1,20
"yes, they refactor the code and make the code more readable, keep the features work at meanwhile",-1.0,-1.0,-1,17
"i love this writeup page, it looks clear and concise and has everything i need to know about this work.",-1.0,-1.0,-1,20
"they have all the cases, and all the rspec test pass&nbsp;",-1.0,-1.0,-1,12
seems like they fixed the issue and did very well,-1.0,-1.0,-1,10
they refine the code and achieve the features as supposed,-1.0,-1.0,-1,10
the comments are&nbsp;good and are descriptive of the methods.,-1.0,-1.0,-1,11
"yes, the team added test cases and the coverage has increased. the test cases cover most of the edge cases.",-1.0,-1.0,-1,20
the issues to be addressed and refactoring to be done are described very well.,-1.0,-1.0,-1,14
"the code looks good. in the first round, their deployed feature was throwing an error on testing. they have fixed that this time.",-1.0,-1.0,-1,23
i don't see any code smells. the methods are not long and comments are mentioned where required.,-1.0,-1.0,-1,18
"no code was commited, as i belive nothing else was needed.",-1.0,-1.0,-1,11
"all the methods are in good shape, not too long and easy to understand",-1.0,-1.0,-1,14
refactoring from big nested project is not very easy and they did a good job in my opinion. should be a good starting place for a future team to pick up,-1.0,-1.0,-1,31
clean coding style with good comments. improved a lot since first submission,-1.0,-1.0,-1,12
"yes, since this is a refactor project, all the functions works as intended",-1.0,-1.0,-1,13
the write-up is very thorough with screenshots to indicate code changes and added tests,-1.0,-1.0,-1,15
"yes, they needed to check the restrictions on the view for grades as a registered ta and it was done.",-1.0,-1.0,-1,20
"yes it does, in that tas are not allowed to modify their grades in their other classes.",-1.0,-1.0,-1,17
explained very well! listed the issues that needed to be fixed then carefully outlined how these issues were resolved!,-1.0,-1.0,-1,19
names that were previously unclear have been changed and are now more clear!,-1.0,-1.0,-1,13
very good job with comments ! series of comments before each method explaining what it is doing and are descriptive.,-1.0,-1.0,-1,19
"all methods are short and sweet! only do what they need to do and are commented very well, great job!",-1.0,-1.0,-1,20
"writeup is very well done! easy to follow, effectively explains what the issue is and shows examples. then explains the solutions and how they were implemented.",-1.0,-1.0,-1,26
"there was no test plan section but, they explained that that they modified some of the original tests and added some new ones to test functionality! all tests pass!",-1.0,-1.0,-1,29
great job! all variable/method/class names are clear and indicative of what they are doing or what values they contain. methods are therefore easy to follow.,-1.0,-1.0,-1,27
overall it is a well written write-up that presents all the necessary information in a meaningful and useful way,-1.0,-1.0,-1,20
"overall, the code was well written! modified existing code but kept the code concise. code that was added was fairly easy to understand but maybe could use some more comments but that is it",-1.0,-1.0,-1,34
"the writeup was really well done, easy to understand and sequential: problem-&gt;solution-&gt;implementation-&gt;tests. it is easy to understand what the project does and how it does it.",-1.0,-1.0,-1,32
great job commenting! each method has descriptive comments that help explain what the method is trying to do and how it is doing it,-1.0,-1.0,-1,24
the documentation explains the issues then presents the setup and test for each method that they tested,-1.0,-1.0,-1,17
good names! are fairly indicative of what they are doing,-1.0,-1.0,-1,10
overall good job on the writeup does a good job of outlining the testing process and showing the implementation,-1.0,-1.0,-1,19
"yes, there were several new commits during the second round",-1.0,-1.0,-1,10
"overall, all the code was well written, commented and easy to understand!",-1.0,-1.0,-1,12
comments are fairly clear and do a sufficient job explaining a method.&nbsp;,-1.0,-1.0,-1,13
i believe this work is ready to be merged.&nbsp;,-1.0,-1.0,-1,10
the write-up is very detailed and easy to follow.&nbsp;,-1.0,-1.0,-1,11
"incredible write-up with hyper-detail covering every and all changes including testing, test coverage, and more. amazing work.&nbsp;",-1.0,-1.0,-1,20
"extremely well written code following ruby style guidelines, matches round .&nbsp;",-1.0,-1.0,-1,11
"write-up is phenomenal. easy to read, clear, concise, and highlights the projects goal. all functionality described in detail.&nbsp;",-1.0,-1.0,-1,20
names of variables and methods are intuitive and reasonable.&nbsp;,-1.0,-1.0,-1,10
"code is written well, follow style guidelines, no apparent dry issues. things look clean.&nbsp;",-1.0,-1.0,-1,15
"the ui works as intended, and this project is to refactor, it do the features work as they are supposed to.&nbsp;",-1.0,-1.0,-1,22
"yes, team added test cases,&nbsp;spec/features/account_request_spec.rb,&nbsp;spec/controllers/account_request_controller_spec.rb&nbsp;and newly added tests cover all the range of this project",-1.0,-1.0,-1,27
"personally, i believe the code is ready to be deployed onto the production server, good refactor",-1.0,-1.0,-1,16
"well writeup, explain what is going on in the project.&nbsp;",-1.0,-1.0,-1,11
"code is commented appropriately, comments are clear and concise.&nbsp;&nbsp;",-1.0,-1.0,-1,11
the writeup is very thorough and goes into detail about what the team did.&nbsp;,-1.0,-1.0,-1,15
all checks passed and there are no conflicts with the base branch.&nbsp;,-1.0,-1.0,-1,13
the new code makes the naming much more indicative of functionality. code is clear and easy to understand.&nbsp;,-1.0,-1.0,-1,19
the documentation included detailed information on the test cases they created.,-1.0,-1.0,-1,11
"the test plan mentions that they wrote new tests for the altered methods, this appears to be covered in their spec file.&nbsp;",-1.0,-1.0,-1,23
the video they submitted shows their work passing all tests that were created.&nbsp;,-1.0,-1.0,-1,14
"yes, the comments are necessary and useful for what they are doing.&nbsp;",-1.0,-1.0,-1,13
the code is very well done and follows all of the necessary standards and guidelines.&nbsp;,-1.0,-1.0,-1,16
"code coverage increased by . percent,&nbsp; new test were added",-1.0,-1.0,-1,10
coverage increased (+ . %) to . % when pulling&nbsp;f a &nbsp;on nickrgarner:beta&nbsp;into&nbsp; a &nbsp;on expertiza:beta.,-1.0,-1.0,-1,20
"the test plan looks incredibly thorough, and i have no corner cases i can think of that aren't included.",-1.0,-1.0,-1,20
"new tests added and according to the bot,&nbsp;coverage increased (+ . %)",-1.0,-1.0,-1,11
from my testing i see no major issues in merging this pull request.,-1.0,-1.0,-1,13
"all names are intuitive, no poorly named variables were found.",-1.0,-1.0,-1,10
"write up is excellent quality, clearly defined each issue and how they approached a solution for the issue.",-1.0,-1.0,-1,18
code improved accordingly no major issues or bad names spotted,-1.0,-1.0,-1,10
works as intended the tests cover most of the scenarios.,-1.0,-1.0,-1,10
manual testing has been described in details. there is a google doc page with visual to help with it. &nbsp;,-1.0,-1.0,-1,20
"write up explains authors intent, motivation. it lists issues, describes them in details and also includes how these were fixed.",-1.0,-1.0,-1,20
new test cases have been added for save and create_multichoice. all test cases are working.,-1.0,-1.0,-1,15
i didn't find any edge cases. functionality is working as expected.,-1.0,-1.0,-1,12
write up is good. existing functionality and projects goal have been clearly explained.,-1.0,-1.0,-1,13
this question is not applicable. code was already well written and needed no change.,-1.0,-1.0,-1,14
the test plan has section for both rspec and ui testing. they have written new test cases and have also made changes to course controller path in existing ones.,-1.0,-1.0,-1,29
they have added test cases for create and update actions.,-1.0,-1.0,-1,10
"writeup is&nbsp;clear and adequate,&nbsp;it indicates well functionality the work is related to.",-1.0,-1.0,-1,16
no issues found with naming. names are suggestive of functionality.,-1.0,-1.0,-1,10
"dry principle has been applied, code has been extracted to separate methods.",-1.0,-1.0,-1,12
wasn't needed as everything was working in st round.,-1.0,-1.0,-1,10
test cases are passing. new tests have been added as well.,-1.0,-1.0,-1,11
writeup has good explanation of problem as well as its solution.,-1.0,-1.0,-1,11
i can understand what the project is about and how it works.,-1.0,-1.0,-1,12
"yes, each method has comments either outside the fn body or inside its code",-1.0,-1.0,-1,14
lots of scenarios were tested. it looks to me that they have made great coverage.,-1.0,-1.0,-1,15
"yes, the build passed.&nbsp;no conflicts found. agreed that things are fine.",-1.0,-1.0,-1,13
"variables conformed to the existing practice, and looked meaningful to me",-1.0,-1.0,-1,11
"i tested some scenarios but since the coverage is high, i didn't test everything",-1.0,-1.0,-1,15
the test cases are pasted on the page... and that's enough to understand them. the other sections are also clear.,-1.0,-1.0,-1,21
the language is crisp and concise. it didn't feel too long or dragging.,-1.0,-1.0,-1,14
code was good/working from the last submission itself (latest commit on oct th).&nbsp;,-1.0,-1.0,-1,15
no problems found. test coverage has increased and the idea seems clear. this is good to be deployed.,-1.0,-1.0,-1,18
methods/changes are easy to follow and have brief comments above them,-1.0,-1.0,-1,12
coding changes and new variables introduced are clear and reasonable,-1.0,-1.0,-1,10
the code changes are crisp. methods are easy to follow and have helpful comments too,-1.0,-1.0,-1,15
details are clear. code changes are shown and explained accordingly. i also like that the changed files were also specifically mentioned. that gives an idea of what components are involved in this project.,-1.0,-1.0,-1,33
works as described in the wiki and i agree that their implementation is logically correct.,-1.0,-1.0,-1,15
yes the group even created a link to a separate google doc with&nbsp;screenshots on how to test their changes.,-1.0,-1.0,-1,21
"the group did a good job of providing background info on what was worked on. really liked the testing our solutions section, made it easy for me to&nbsp;go thru their work and test out their implementation.&nbsp;also really liked how each issue was broken down into a problem and the solution taken to fix it.",-1.0,-1.0,-1,58
successfully ran bundle exec rspec spec/controllers/quiz_questionnaires_controller_spec.rb&nbsp; and passed all tests as seen in movie attached to submission.,-1.0,-1.0,-1,21
was able to create a variety of quizzes for different assignments as expected.&nbsp;,-1.0,-1.0,-1,14
"the team was very thorough in what was done and&nbsp;made it easy to understand&nbsp;the changes made. really liked the wiki and the ""testing our solutions"" google doc.&nbsp;",-1.0,-1.0,-1,32
