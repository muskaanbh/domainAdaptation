comments,Mention problems,Suggest solutions,Helpful,Token_num
"the last time, when i checked the deployed app on / / , the app was not working. however,it seems to be working fine now. the layout of the app is clean and simple and easy to follow. there was no confusion in navigating the app. however, it took quite some time to enter the address in proper format. same goes for the website and revenue while creating a company. you may put a sample address and phone number in the readme if you are strictly restricting the format. when applying for a job as a job-seeker, the error prompt for the portfolio format says that it should be of the form http(s)://www.website.com/org/etc however it only accepts the format http(s)://www.website.com. the same issue arised while creating a company while signed in as a recruiter. otherwise, the readme file is very detailed and helps the user to understand the working of the app very well. it could be a little brief or be displayed as bullet points instead of paragraphs to make it easier to read.&nbsp;",1.0,1.0,1,185
"the code for the most part follows good coding practices.the code is clearly written and is easy to understand for the most part.however, the use of comments especially for non-scaffold generated methods will help the user to understand the code much better. for eg:- filter function in the jobs controller. some of the empty-body methods can be written in a single line for eg:- ""show"" and ""edit"" method in users_controller. in the applications controller, there are parameters ""j_id"" and ""job_id"" which is slightly confusing. also, there are two controllers application_controller for authorization of users and applications_controller which handles crud methods for job applications. you could name it differently to avoid confusion. methods for destroying and closing an application have been defined in the model ""application.rb"" and similarly, in the job model file ""job.rb"" this negates the use of mvc architecture where the controller controls the interpretation of actions. &nbsp;",1.0,1.0,1,155
"the code is clear and easy to follow. however, it is pretty much the basic code generated by scaffold generation. in the authorize method of the application controller, the notice just says ""xyz"". this could be changed to a more specific message.the homepage controller has only two empty methods, create and new. this implies that its function is just to manipulate the views. i feel that this could be implemented in the user controller itself instead of creating a new controller for it.",1.0,1.0,1,84
"the admin model hasn't been tested at all. the configured email and password is not being authenticated.&nbsp; when the show button is clicked while viewing the company/job information , the recruiter is being able to edit the job &amp;/ company info even if not belonging to that company. furthermore, if a recruiter leaves a company, the jobs created by him/her are retained and can be edited/destroyed by the same recruiter which shouldn't happen according to the spec file. all these things should be take care of . you just have to put certain conditions in the appropriate views to display links to certain pages.",1.0,1.0,1,108
the models and controllers&nbsp;have not been tested properly. the code for testing the models and controllers is not present. the could also have developed the testing code.,1.0,1.0,1,29
"your code still follows good ruby and rails coding practices.&nbsp; your models/views/controller look good in terms of functionality, establishing relationships between classes, and your routing from page to page.&nbsp; i did notice some files that were blank as i was looking through your code.&nbsp; for example, a few controllers like welcome_controller.rb and homepages_controller.rb contains just the template and nothing else.&nbsp; in the future, you can individually make your own files in the terminal if you need just a model/view/controller (i.e. rails generate(or g) model model_name model_attributes).&nbsp; there's a scaffold i believe for models/views/controllers also if you prefer to use rubymine's way of generating code.",1.0,1.0,1,121
"very intuitive, the views are nice. the home page buttons could be space slightly better but there is nothing wrong with them. for a few forms (user sign up/create/update) if you try to put a password that is too short it crashes. update this so that instead it gives an error and tells the user what to change and to try again. on users there is also no validations for your phone number field. please update the color of text after the buttons have been clicked, its hard to read them. i really like the jobs in this company portion of the company show view, same for applications and jobs. the job seeker application process is a bit wonky, would add an apply button to job show and index.",1.0,1.0,1,131
"the user interface was slightly hard to use. in my opinion, there were too many clicks to get to applying for a job. by looking at the url in the browser (and in routes.rb), i see that you guys have -level nested resources. this may be a bad idea. i suggest looking at the following link for more information: https://medium.com/@jaredrayjohnson / -things-i-learned-toying-around-with-nested-resources-in-rails-fed d e &nbsp; furthermore, the readme.txt on github provided enough information for me to get started.",1.0,1.0,1,92
"the controllers' code is sometimes not dry. for example, the team specifically checks if the user is logged in with ""if !logged_in?"" in the companies_controller.rb&nbsp; &nbsp; instead of this, they can use a before_action in someplace thats more common for the flow of code (like the application_controller.rb). the code in the controllers also seems to ""play it safe"" when creating or editing things (they use new and save instead of functions like create! or save!). &nbsp; the team also did a decent job with the models. they look for validations and assign associations between the models. in the views, the ""code"" was simple enough to follow. the team did not fill the vies with ruby code too, which is good.",1.0,1.0,1,123
"yes, the team pushed a total of commits to&nbsp; master.&nbsp; on top of this, each team member contributed a decent share of the commits so this is good!&nbsp; this number of commits suggests solid group contribution.&nbsp; committing and pushing to github regularly is helpful for many reasons.&nbsp; one, it makes building a large, shared application much easier as everything can be built in little bite sized pieces.&nbsp; while it appears you all had no problem achieving this, one thing that might prove helpful in the future, is utilizing separate branches, and the issues section in github.&nbsp; using separate branches, allows each issue to be associated with a specific code branch off of master.&nbsp; this is useful, as when a pull request is made into master, the other team members are able to see exactly what that pull request contains.&nbsp; creating github issues is helpful in that it makes chopping up a large project into smaller, easier to understand tasks very simple.&nbsp; each issue can be assigned to different team members, and it helps everyone contribute an equal amount and work well together as a team.",1.0,1.0,1,195
"yes, the application has been deployed successfully.&nbsp; the user interface is clean, and though it is a little bland, it is easy to use.&nbsp; the readme is helpful when getting up and running with the application.&nbsp; it does a good job explaining how to login as an admin and such.&nbsp; one area i see for improvement still is in the readme layout and styling.&nbsp; github allows for the use of markup to style and edit readme and wiki documents on github.&nbsp; this is a great tool for creating tables, headers, and bullet points to help make documents more readable.&nbsp; if i were to give your team one suggestion moving forward with this section, it would be to give markup a try to help make the readme and other documentations more readable.&nbsp; here is a helpful resource regarding markup shortcuts, and how to use them!&nbsp;&nbsp;https://github.com/adam-p/markdown-here/wiki/markdown-cheatsheet",1.0,1.0,1,164
"pros: - no violations of ruby on rails coding practices. - proper naming conventions used. &nbsp; suggestions: - validations need to be added. (regex, empty values, etc.) - relationships should be defined clearly. (eg: has many, belongs to)",1.0,1.0,1,34
"&nbsp;the radio button on the bottom made it easy to switch between roles.&nbsp; an improvement could be recruiters being able to view job applications for a specific job.&nbsp; if they are viewing a job, they should be able to view its applications.&nbsp; it's ok as is in this system, but in a larger system with a lot of applications, a recruiter would want to be able to go from a job to its applications directly.",1.0,1.0,1,80
&nbsp;the readme could be made more clear with different sections for each user type,1.0,1.0,1,15
"it's pretty easy to navigate within the team's web application. they have drop-down lists whenever it's useful and appropriate, which makes it easier to choose, not typing. they also added&nbsp;a lot of&nbsp;additional instructions on their ui in readme, which could be a bit shorter.&nbsp;there is one suggestion i would give to the team&nbsp;that would probably improve the ui: -putting&nbsp;""home page"" and ""log out"" buttons in the upper right corner, which would&nbsp;make them more visually noticeable, and prevent an accidental log out case.&nbsp;",1.0,1.0,1,99
"the code looks great. the team followed &ldquo;good ruby and rails coding practices"". they use indentations and blank lines appropriately.&nbsp;just one&nbsp;suggestion: breaking some lines in your code into several would improve readability (line&nbsp; &nbsp;applications_controller.rb, ln in&nbsp;companies_controller.rb).",1.0,1.0,1,47
"i went through each file in test/models, and couldn&rsquo;t find any tests for any model.&nbsp; there are some tests in test/controllers folder though. some information on tests in readme would be helpful. one suggestion is to restrict some data types on data fields. like, revenue should be only integer, phone number should be max digits long, email addresses should follow conventions.",1.0,1.0,1,66
"in general, it is easy to navigate within the team's web application. i think it's&nbsp;good&nbsp;that they added some additional instructions on ui in readme.&nbsp;although, i'd like to give some suggestions that would probably improve the ui: adding ""home"" (for an easy jump to homepage) and ""log out"" buttons would be helpful on every page, maybe, in the upper right corner. keeping ""back"" button&nbsp;consistently at the same spot throughout the web app, maybe, even a little bit away from other buttons. adding drop-down lists for&nbsp;employment type,&nbsp;gender,&nbsp;race,&nbsp;veteran status,&nbsp;disability status. making 'additional information' for a job application optional. ",1.0,1.0,1,117
"the code looks good and ""dry"", and the team followed &ldquo;good ruby and rails coding practices"". however, i&rsquo;d give some suggestions: &nbsp; &nbsp; &nbsp;&nbsp;use indentations: for instance, when declaring &ldquo;private&rdquo; (applications_controller.rb, line ). it makes a declaration more visually noticeable. &nbsp; &nbsp; &nbsp;&nbsp;use blank lines between methods (applications_controller.rb), which improves readability. &nbsp; &nbsp;",1.0,1.0,1,63
"while this project excelled in all areas (best project i have reviewed), the documentation was its weakest part.&nbsp; the documentation wasn't bad (very good) but was a little hard to read/understand everything. specifically in the introduction of the problem.&nbsp; you go into detail of the task plan but i had a hard time understanding it all because the intro wasn't as strong.&nbsp; the youtube video helped fix this but i think both should stand alone.&nbsp;&nbsp;",1.0,1.0,1,83
"the code seems to be very well written.&nbsp; i like how you moved more code to the top of the file to avoid having to repeat code over and over for each test case (like you did in the first round).&nbsp; overall, very good job with the code.&nbsp;&nbsp;my only complaint is that you create these test , test , etc objects.&nbsp; if they were only used in a single test case it would be fine to name them that since i could discern what they were used for.&nbsp; however, since they are used in multiple test cases it is hard for me to determine why you use test rather than test (just an example).&nbsp; naming them with a more descriptive name could help with this.&nbsp;&nbsp;",1.0,1.0,1,133
"i understand perfectly what the goal of the project was. &nbsp; there's some awkwardness in the english, but nothing that's super important: &nbsp; ""the current functionality only allows for the author to review the bookmark, and the reviewer is not able to assess the usefulness of a bookmark."" has a random ""for"" in it and is a bit excessively wordy. -&gt; ""currently, only the author can review the bookmark, and the reviewer cannot assess the usefulness of a bookmark."" &nbsp; but that's picky and something that would be dealt with by the editor for a document, not the developers.",1.0,1.0,1,102
i had to search for the unity id of the student to locate the pull request. you might want to rename it to include the group number and name of the project. the&nbsp;coverage increased to . % some of the checks in the build were not successful. the test file has elaborately named tests which are indicative of its function and also which method they are testing.,1.0,1.0,1,67
"i was unable to verify the ui but the video and the screen captures show the working efficiently. more tests can be added. for eg- the first test only checks if a name for the menu is present. however, i feel checks should be made for the naming convention. this will help maintain uniformity throughout all projects.the team has checked if a menu name is nil. similarly, tests could be written to see if an invalid name is entered. also the test case . is just a slight extension of test case . . i wonder if an additional test is required for the same.",1.0,1.0,1,103
"in the&nbsp;app/helpers/response_report_helper.rb, the class summaryrevieweereport has many attributes contained in the class summaryreport. using inheritance would be a better option to keep the code dry.",1.0,1.0,1,30
"since it is&nbsp; a refactoring project, extensive code changes have been made. the team has posted snippets of all the changed code in the wiki. this has made the document unnecessarily lengthy without much information about the project or the refactoring itself. mostly, the code is repeated except for the addition of helpers. also, it would be more helpful to explain which sections of the test were already present and which sections were newly added. other than that, the team has explained the different aspects of the project very well.",1.0,1.0,1,91
most of the aspects are fine. the authors should include some code related to their functionality even if it is just the migrations.&nbsp;,1.0,1.0,1,24
"well as seen from comments on the pull request, the build has failed and also there are some conflicting files. also, code climate mentions few significant issues that needed to be fixed. i suppose that once all these issues are sorted out the code can be deployed on to the production because as far as the functionality is concerned the team has done commendable job. the current work is worthy enough to be considered as a starting point for future teams that are assigned this project.",1.0,1.0,1,86
"although there were not many problems with names selected, code climate reports few serious issues like function itemtemplate and method load_add_signup_topics exceed the allowed number of lines, few blocks have high number of lines, etc. the team should look at the suggestions provided by code climate for these issues and should fix these",1.0,1.0,1,53
there is one variable count in&nbsp;automatic_review_mapping&nbsp;which does not clearly indicate what it does even though the team has mentioned its significance in the wiki and in a comment in the code. one suggestion would be to change the name of this variable to something that is more suggestive of its functionality. rest of the naming convention seems quite reasonable and are suggestive of the proposed functionality.,1.0,1.0,1,70
as a few issues remain unresolved this code is not ready yet according to me. the functionality of the menu editor needs to be tested and after complete implementation should be deployed on the production server. but as the implemented functionality works fine this can be a good baseline for the future team to work upon and fix the remaining issues.&nbsp;,1.0,1.0,1,62
"no controller code has been altered by this team and hence i would not be able to accurately review this. the changes made only includes a migration which is done in a standard manner. however, there is an empty migration updatingbookmarksratingquestionaire which kind of adds redundancies.&nbsp; i would suggest to rollback this migartion.",1.0,1.0,1,54
"no the code is not really ready to be deployed. only one of the three issues have been fixed. even though the build passes, there are some code climate issues which needs to be looked at. unfortunately , this team faced a lot of problems with their interactive menu javascript. firstly, these issues needs to be resolved. secondly , since no tests are included, the newly added features should be thoroughly tested before deployment. i believe the project should not be completely scrapped. rather , the issues with it needs to be fixed and the future team can use this work as a reference.",1.0,1.0,1,101
"no test plan was included. no form of testing have been performed by the team. as some of the functionality mentioned in the problem statement is incomplete, i would suggest writing thorough tests beforehand and writing the functions till the tests passed. once the said functionality is included, the code can be refactored to make it dry. &nbsp; these test cases will formulate your test plan and thus increase the coverage.",1.0,1.0,1,71
the writeup is very descriptive. it clearly defines the problem statement and proposed solutions of the author. the karma points system designed by the author is pretty impressive. the instructions for ui testing are illustrated in details and thus are easy to understand.the authors have also proposed solutions for unimplemented problems which is impressive. they were unable to do it due to some other javascript error which is not really their fault. one suggestion i had was to include the db files or the new migrations created in the wiki for the reader to understand. this would have enabled the reader to understand how the previous migrations were faulty and how it was changed.&nbsp; plus the functionality of the new migration would be clear. at least the names of all the migrations altered or created should have been included. &nbsp;,1.0,1.0,1,142
"the wiki is properly documented. the problems are explained in detail along with the proposed solution. the unimplemented functionality is mentioned which is neat and helps the reviewer in accessing. the result are depicted in the form of screenshots displaying the implemented functionality. this part is done well. however, i think the wiki could have been enhanced if some code snippets were including showing the previous code with faulty migrations and the corrected one. this would enhance the overall understanding. the proposed model with karma points is impressive.",1.0,1.0,1,88
no writeup provided by the author. please provide the writeup for the next submission.,1.0,1.0,1,14
the authors have given a brief introduction to their project. they mention that they are required to add rspec for&nbsp;collusion_cycle.rb&nbsp;model. they can add a brief introduction to tdd process and a wikipedia link can be provided. other than that the document is well written.,1.0,1.0,1,49
the build passed travisci&nbsp;but did not pass the code climate check. the authors need to fix these issues to make up to the coding standards of the repository.,1.0,1.0,1,30
the authors have not provided any screencast of the testing they have performed. they have also not created any pull request (not mentioned anywhere). they authors must add a screencast of their work if they do not deploy their application so that reviewers can see their work.,1.0,1.0,1,47
the functions are adequate in size and cannot be extracted in a separate methods. it would have been helpful if more comments were given on the test cases. the code fillows good ruby and rails practices.,1.0,1.0,1,36
"the build passed in travis ci. the codeclimate issues still exist and they could be taken care of, moreover i feel the code could have been dried up more by removing repeated let statements.",1.0,1.0,1,34
"the code is well written but could have been dried up more, there are some repeated declarations in the let(..) statements of rspec that could have pushed up in their before(:each)&nbsp;",1.0,1.0,1,33
"as the pull request is not visible i cannot comment on the the coverage of these test cases, moreover their are a few places in the code that could be dried up, otherwise the test cases seem to pass and it seems that they cover a lot of scenarios. all in all, by doing a coverage test if the coverage is above % then i feel that the code could be deployed on the production server.",1.0,1.0,1,75
" i do not think that they have any of the functions which are too long. they have followed a pretty neat style of coding as said earlier, the code does look good however, i see there is some cleaning up left to do (file ex: github_data_cotroller.rb, lines: +) i worked on a mozilla project, so i did not have a chance to work on any part of the code of expertiza. overall, they seem to have followed good modularity. however, as i mentioned earlier, for better practices and for making reviewer's life easier, a brief description for a not-too short function could help. the code does seem to follow the ruby style guidelines very well. they have defined actions in the controller which is a good practice. ",1.0,1.0,1,129
"the write up was certainly well structured and covered the basic sections (why they are doing it, what needs to be improved, how they plan to improve it). not that this is something mandatory, but something i would like (as a person who is reviewing) is, i would also put up a side by side comparison of how their information would be different from the previous work. they have done their part of the job by adding link to previous work. i did try to skim through the link, however this is not your part, it was a long read and i had to figure out what was going on just by looking at the figures. apart from this, good work on explaining your project.",1.0,1.0,1,125
"there are gem related updates in the gemfile which majorly seem to be for a newer version of gems. but this is not the primary concern of the question. apart from that, i reviewed&nbsp;github_data_controller.rb&nbsp;file. the actions defined in this file seem to have understandable names (assignment, assignment_team). however, a brief description about a function (action_allowed?) would have made my job a little easier and code would follow a better practice ofcourse. was able to understand what this meant (possibly for checking if it is a pull request?) github_pull_regex = %r(https?:\/\/(?:[w]{ }\.)?github\.com\/([a-z - _\-]+)\/([a-z - _\-]+)\/pull\/([ - ]+)[\s]*)i a comment would have been helpful here. overall the naming conventions do not seem to be a problem, however, i would add some more comments describing briefly what each action in the controller intends/expects to do.",1.0,1.0,1,144
"the team has provided the screenshot of their working code's output, which is great! however, i have not worked on expertiza project and i do not have idea of how to build and test their code. i am not sure if they were supposed to deploy it. but a screencast of their demo would have been a lot better to understand their work. i would create a small screen cast explaining briefly the aim of the project and show a demo of your work.",1.0,1.0,1,85
"they seem to have done a really good job at refactoring blobs of code and breaking them into meaningful modules and also stating what, where, why and how they did that. even though they have done a good job at breaking down the code, i would add comments on functions to make code better and easier to understand for a rd person.",1.0,1.0,1,62
"i would recommend trying to build your factories rather than creating them.&nbsp; the difference between building and creating is that if you build an object, it won't be saved in the database while creating does save it to the database.&nbsp; the goal of testing is to create objects that you can use for testing purposes, so you shouldn't need to save them in the database.&nbsp; if you do want to do that, i would recommend cleaning your database with a gem called databasecleaner.&nbsp; also, you don't need to re-introduce factory builds if you are already doing them outside of your tests.&nbsp; you can remove those and your tests should run fine.",1.0,1.0,1,120
"great work on your code!&nbsp; you labeled your variables appropriately, the ruby syntax is on point and you&nbsp;cleaned up your file by adding duplicate code to before each lines.&nbsp; the only thing i would suggest is adding in comments for your tests.&nbsp; while i know it's listed in your wiki page, it's a good habit to document your code so that a code reviewer understands your work if they do not have access to your wiki.&nbsp; regardless, i think you all did a great job unit testing on_the_fly!",1.0,1.0,1,96
"based on the youtube video provided, all tests cases pass for the menu_item_spec file.&nbsp; however, no mention of where their coverage is at is mentioned in the writeup or the youtube video, so i can't tell if their coverage has increased or if they managed to reach the achievement mark for this project.&nbsp; for now, i am assuming that everything works properly and that they achieved the maximum amount of coverage they are told to generate.&nbsp;",1.0,1.0,1,80
"they do not have a test plan or any talk about implementation of tests. first i would recommend starting with ensuring everything works assuming all inputs are logical. then i would ensure these metrics update in the expertiza db as commits are added, or whatever other metrics are being considered. these are just some ideas to start from, because testing in my opinion is truly the most important aspect.",1.0,1.0,1,69
"there is no explanation of the actual implementation, only of the proposed plan, so i can't say they explained any of the work they did. i think they should work on adding these to the website as soon as they can, so we can get a idea of how things went.",1.0,1.0,1,52
"the first think i notice is in the problem statement they say they want to calculate ""meaningful"" metrics from github. what does that mean? it isn't explained further in a sort of implementation section. that sounds good as a base problem, but i think they should expound upon that to include specifics. they do explain the background, that they want to include functionality to take metrics from github and display them to instructors, which is pretty good. they describe their planned implementation, but don't go into project level specifics and actually explaining them going through the plan or how it works. they simply provide the interface by which they will receive these metrics, but not how it will talk specifically to expertiza. i think they need to work heavily on shoring up their logical flow of information and explaining the implementation, as well as their thought process going through the 'how it works' section.",1.0,1.0,1,156
"in some cases, such as when you included this statement&nbsp;allow(on_the_fly_calc).to receive(:score_assignment).and_return(''), you can use a before (:each) do block to perform this allow statement before each of the contexts, or even at the start of the test file if it is used several times. if you use the same time of testing returns, you can make a much more dry and readable testfile this way. i would say i can't quite understand what it is doing, but that mainly goes along with not having these methods explained on the web page too well. the length of some of the tests could be improved by implementing the dry technique i mentioned already.",1.0,1.0,1,118
"i suppose my answer to the previous area could be used here as well. basically, i like the way you explain your plan, but i think it would be very helpful for us and yourselves to explain the true function you are trying to bring, besides just saying you are testing this model, but not explaining what it does. i believe you could definitely come up with a great explanation and then this area would be perfect! to be honest, it looks like its a work in progress, as you have the sections made already, and so i'm sure once you explain the sections this area will be fulfilled.",1.0,1.0,1,110
"there is not too much to comment on the code, because it is simply a lot of test code, which uses fairly logical names in order to store fake objects. i would recommend delving into why the build has failed and the coverage had a % decrease, when this is a testing project, so i would assume the coverage will increase a fair bit.",1.0,1.0,1,63
"i believe it gives a good basic understanding and even laying out a plan of work, which i think is a good touch. what i wish was explained more, was what exactly does&nbsp;on_the_fly_calc_spec.rb do? you explain the places where you need to add tests, but i am having difficulty simply understanding the point as to the model and tests. the names themselves arent even defined enough to provide me the insight, so i would recommend explaining the point of the project in that regard. as such, what functions would performing these tests provide to expertiza? what do they do? explaining this would also help me and any other users the ability to understand how the project carries out these calculations and performs its purported function.",1.0,1.0,1,128
"baisc steps were explained, but having a more detailed infromation on 'how' they did the work, different steps taken etc , would be encouraging to have.",1.0,1.0,1,25
"pull request couldnt be found for the project .&nbsp; it would be good if the authors provided the pull request name&nbsp; the code , variables names and class names look well written&nbsp;",1.0,1.0,1,33
"basic functionality is written&nbsp; well that they wanted to give the matic after parsing the github commits information . if more detils of what was bad with the earlier design is written , it would be easier for the reader.reference could be added to the earlier implementation.&nbsp;",1.0,1.0,1,48
"different test cases were written for different functions . if there was a chance of making the code dry by adding more number of common test cases to be used, it would make it look better .&nbsp;",1.0,1.0,1,36
"more information about the model functions / what each function did and what exceptions were tested , would help the reviewer understand it in more easier way",1.0,1.0,1,25
"it being a test file and the conditions being in plain english already , it was easy to read through and follow them .&nbsp; if it was possible to move few of the object creations into the earlier / common steps , like in four node cylces . it would be good to make it look more dry&nbsp;",1.0,1.0,1,55
a little bit more explanation on what was&nbsp;two node cycle or three node cycle does would help the reviewer understand in more detail on what test is being accomplished&nbsp;through this task&nbsp;,1.0,1.0,1,36
"as the reviewer i had a good understanding of this, but additional commentary on why the testing strategy was the best option would be helpful.",1.0,1.0,1,25
"no test plan was mentioned in the wiki, it gives the impression that testing cases has not yet been considered, i would start adding test cases in the wiki and also mention what corner cases are to be considered.&nbsp;",1.0,1.0,1,40
"the images submitted should have been part of the wiki, there is no mention of design patterns or principles, it would have been very useful if they had mentioned what files would be affected and what plan of action would be, the objective should have been disintegrated so that it could have been relatively easy to understand.",1.0,1.0,1,57
"there were very few or no comments and it does become extremely difficult to work on such next time for someone, i would consider adding more comments.&nbsp; it can be seen that the ruby style guide has been followed and there isnt any code smell.",1.0,1.0,1,46
"i found some methods to be long, but that does seem okay as we are dealing with test cases.&nbsp; some variable names do seem to be a bit invalid:&nbsp;participant ",1.0,1.0,1,32
"yes, it can be clearly seen what the plan of action is and what they intend to do in the project, the one thing i would add here is a brief about what the test case would be doing or some minor piece of information indicating what work would be done and what checks would be taken care of and some additional images.",1.0,1.0,1,63
"by reviewing the code, i made the following observations: ) none of the functions are too long; all are around - lines each and good modular approach was followed. ) i felt the code was already modular and hence no new method is needed. ) although comments were added in many places, i felt more comments could be added to help improve code readability, especially in the github_data_controller.rb ) proper ruby conventions were followed throughout, including double spacing, having less/no logic in the views and no code felt repetitive.",1.0,1.0,1,86
"although the writeup explains the problem statement, it does not explain their work extensively. the proposed design simply says they are using graphql git api but doesn't explain that further. they haven't mentioned the use of any design patterns. however, the writeup does say that the&nbsp;github statistics api used by the previous team doesn't produce the required results and that is the reason for using graphql api. i'm deducting points for not clearly explaining the proposed design or adding any screenshots.",1.0,1.0,1,87
"the writeup seemed to end abruptly. improvements and testing sections were blank presumably because they are still working on it. i liked the way they had broken down the problem statement into smaller tasks, so i was able to understand the requirement. although they had provided a link of the previous team's writeup, i couldn't really understand how this team's design works. perhaps they could have explained the proposed design with design patterns, or screenshots or code snippets. &nbsp;",1.0,1.0,1,82
"while the write up does not contain an explicit ""test plan"" section, it does contain a section explaining the different tests that were written.&nbsp; these tests do a good job presenting the reader with the code and a what the code does.&nbsp; that being said this section could definitely be improved.&nbsp; i would suggest adding an explicit ""test plan"" section as ell as updating the test conditions and what they do.&nbsp; i like how you included the test cases in this section, but instead of including the raw code and then farther down the page a description of what the code does, maybe add a description first, and then the test.&nbsp; this would help with readability.&nbsp; other then this though, it seems like you hit all of the main scenarios within the scope of the tests.&nbsp; good job!",1.0,1.0,1,145
the only part that could probably be rename is changing from @test to @test_menu_item to more clearly show what the test variable is like you did for @controller_action,1.0,1.0,1,28
"i could find the code contributed easily, which i appreciate. the ruby guidelines have mostly been followed. there seems to be no issue there. no function is longer than necessary. there are a few redundant spaces that rubocop has detected. also i would suggest adding more comments to make the code and tests more readable.",1.0,1.0,1,55
since there is no feature or link for a deployed application to test and i do not see a screencast or a video of the tests in action to know if the test cases are working as intended. i recommend adding a screencast explaining all test cases covered and how all corner/edge cases have been handled.,1.0,1.0,1,57
i really like the way they have written out their writeup. it is detailed and has relevant headings/sections providing a good flow and readability to the user. the use of images for explanations is really helpful. i would like to see a little more information about what the project was about as i could not quite understand what they meant by a collusion cycle and i had to go through the project description. overall very well done.,1.0,1.0,1,78
"it was a bit difficult to find the files modified by the team. i went through the commits and found two files that have been created/modified: github_data_controller and github/show.html.erb. the code mostly follows good ruby practices and there are a few comments provided that tells what that particular code should do. the functions don't seem to be too lengthy either which is good. i am not sure how the graphql should be, but it seems to use many lines for a couple of words which i don't think it should be. you could add some more comments for someone else to be able to follow the graphql lines. overall, good work.",1.0,1.0,1,117
there is a testing section but it is yet to be implemented. this gives an impression that the users have not tested their implementation yet (even if they might have). consider writing detailed test cases on how you would test the commits made and scenarios when the user uses a different git account but has still contributed towards the project.,1.0,1.0,1,60
"the authors have included images as part of their submission which gives a little idea about what they're trying to achieve. however, the images could have been included as part of the writeup on wiki giving brief descriptions and instructions on what was done and what a user needs to do to see it working. there is a proposed plan section that briefly describes their intended plan of action, however i feel it could have been more thorough with the use of images and examples. also, plan on including the design principles/patterns you have used.",1.0,1.0,1,97
i could not find a pull request that matched the project description. have you opened a pull request yet? consider opening a pull request at the earliest so that the expertiza team can check the work you have done and integrate it if it passes their requirements.,1.0,1.0,1,47
"the problem statement is explained well and one can understand the need for it in expertiza. there are well formed headers distinguishing between each section. however, the contents haven't been filled yet and need further work on. adding a section on items completed and tasks left would help the reviewer understand the flow better. the team has identified the sections they want to include and i believe the next submission will include it.",1.0,1.0,1,74
"the writeup clearly explains the purpose of the project. but i guess it is found lacking in explaining how the team has implemented whatever changes they have incorporated. the writeup clearly states which functions need to be tested but what these functions do isn't elaborated. also, it would be nice if you could explain what a particular test is for.",1.0,1.0,1,61
"the writeup does not have an explicit test plan section. the work you did looks promising but you could have included all the cases that you considered in the writeup. again, i understand there is a not a lot to describe, but it is difficult for a reviewer when not all aspects are described in a proper manner.",1.0,1.0,1,58
the writeup describes clearly what functionality the work is related to but it is not descriptive enough when it comes to describing what all change the team has done and how they have done it. adding screenshots and elaborating on the code that was incorporated would be helpful.,1.0,1.0,1,48
"the code is nicely written. one minor thing is in the suggestion_controller, lines - , maybe remove commented out code?",1.0,1.0,1,18
"yes, it seems they have thoroughly listed and explained every steps they took in detail. but i'm a little confused about the ""expertiza environment setup"" part cuz they didn't include&nbsp;installing bower code in ""setup commands"" which is essential to run expertiza on local host. also, i didn't find database migration in their setup process.&nbsp;it's a minor problem but i'd recommend making that part complete.",1.0,1.0,1,73
"wiki for this project is well written and organized. the hierarchic structure almost covered every thing need to be mentioned: there're ""introduction"", ""problem statement"", ""plan of work"", &ldquo;implementation steps&rdquo;, &ldquo;conclusion and learning outcomes&rdquo; and &ldquo;references&rdquo;. but i'd make suggestions: . the &rdquo;introduction&ldquo; part is&nbsp;very long and all about&nbsp;explaining what expertiza, tdd and unit testing are, which i think is not necessary. ""introduction"" should focus more on your project&nbsp;rather than something so general. . there's no result shown in the write up such as how many coverage percentage they finally got.&nbsp;",1.0,1.0,1,106
explanation of each change is very good and detail - i really like the screenshots.&nbsp; i do think you need a better introduction explaining things.&nbsp; just go into a little more detail about what expertiza is and what you're trying to do.&nbsp;&nbsp;,1.0,1.0,1,46
"the diagrams are super messy. there are both arrows that turn into other arrows at corners and lines that properly continue through the corner. there are places where multiple control flows combine into one and there's no combination diamond there, they just awkwardly kinda kiss these are flow diagrams that have blocks like ""instructor"" and ""student (team_id)"" and ""your work"" that are clearly not actions that are being taken. there's also no start node or end node in any of them (the little black circle in a white circle and the other little black circle that's on its own) there's also a decision block (is srq enabled?) that has one exit and no condition on said exit. they would definitely be useful if they were actually uml flow diagrams, i'm sure, but they're mostly just confusing. the first one is probably unnecessary, though. it just kinda looks like a list of buttons the user is pressing. the screenshots are nice, though. love those.",1.0,1.0,1,169
"yes, yes they have. &nbsp; they go into great detail about what work they will do. it would be nice to have a bit more information about what the system is, though. the only real information about the existing system is ""servo is experimental web browser developed by mozilla to ""to create a new layout engine using a modern programming language"". by automating servo (the web browser) we were able to quickly see if servo could render the randomly generated pages."" &nbsp; it doesn't even say which ""modern programming language"" it is!",1.0,1.0,1,93
"it's a mozilla project, so most of this is just provided by mozilla, and there's not a whole lot that could really be added. &nbsp; a little bit of background on what servo is would be appreciated, though, since most of the students in the class have never interacted with servo ever.",1.0,1.0,1,54
"the explanations for the changes proposed are good and makes the reviewer understand what needs to be done but i feel the explanations that are provided do not answer the question ""how it is going to be achieved?"". so i feel there can be certain additions to the explanations that describe how the proposed changes will be implemented. suggestion: mention the files that will need changes and what kind of changes so that the person reading the document can understand what changes on code level have been proposed. &nbsp;",1.0,1.0,1,89
"the authors have not included a testing plan in the document. the major focus of the project is on making a lot of changes to the ui. so, the authors could have mentioned about adding certain tests that will verify whether the changes that have been made to the ui are correctly working or not.",1.0,1.0,1,55
"the explanations provided by this team are very short. they do explain the ideas but not many detailed have been divulged. the files to be modified have been provided which is good. however, what changes the authors intend to make have not been provided and explained. only diagrammatic representation of the result has been given. this alone is not enough for the reviewers to gauge the performance of this team.&nbsp; for the next submission , i suggest to explain the proposed design and the problem statement in detail. include a flowchart or a uml diagram to explain the functionality and the data flow. also thoroughly test the code. include a test plan with an exhaustive set of scenarios.&nbsp; this would enable the reviewers to better understand the work of this team and thus analyze their performance and make it easier for the readers o understand. also i would suggest to add a brief explanation of the two result images provided and clearly indicate the part that has been added by this team.",1.0,1.0,1,173
"yes, some visual aid has been provided. this team has included a hand drawn diagram of the&nbsp;potential page. this makes it clear to the reviewers what the team is looking to implement. however, i suggest that the authors should include a flowchart to explain their proposed implementation. this would make it easier for the reviewers to understand. also , i suggest this team to include a uml and a use case diagram to explain the data flow and the different operation scenarios.",1.0,1.0,1,83
"yes, the design appears to be sound. the proposed design has been explained with the help of a uml diagram and wireframes. these are quite descriptive and help in understanding the proposed implementation by the author. however , only a brief explanation has been given of these diagrams. it would have been great if the authors would have elaborated&nbsp;more&nbsp;over the diagrams. also, i believe most of the doc gives an overview of the proposed idea. only some information have been given about the actual implemenattaion. it would have been better, if more information would have been provided on this front. but i understand that can be difficult at this early stage. also , i believe that it would have been better if the authors would have included some more information about the peer logic, ajax and jquery and how exactly will it be integrated with the design. for someone , with no prior information about peer logic, it can be slightly difficult to understand.",1.0,1.0,1,165
"yes, the authors have adequately explained the changes to be made to the system. they have clearly and eloquently explained the problem and the solution proposed by them to solve these problems. the use of the uml and wireframes have made the design and the author's intentions very clear and the data flow is easy to understand. however, i have one suggestion. i like the fact that the files to be modified have been listed. however, they should mention in brief what changes are to be brought about in the file. the authors have provided the uml which shows the changes that they plan to make. however, adding a brief explanation of each of these changes proposed in the corresponding file would have enabled the reviewers and the readers to get a better understanding of the implementation.",1.0,1.0,1,138
"yes, a test plan is included in this document. the test plan is very descriptive and elaborative. it clearly states the different scenarios to be tested and a detailed description of the various tests performed for each scenario has been provided. the test cases are well thought of and are quite exhaustive covering the entire range of functionalities. however, the test cases included are mostly only for the views. i would suggest to include tests for the controller methods where a response is received from peer logic and the response is checked for correctness. various scenarios of the json response received for different requests can be checked. i would suggest to add some controller tests which tested the different controller methods written for tone anlaysis.",1.0,1.0,1,125
"yes, the visuals included in the doc are very descriptive of the proposed design. the uml diagram is very illustrative and gives a clear indication of the data flow. the wireframes included gives a very good idea of the intended results to be achieved by this team along with the steps to achieve it.&nbsp; i have one suggestion though, it would have been good to include a flowchart or a use case diagram to illustrate the steps of implementation. while they have represented their idea pictorially , the actual implementation lacks some representation. including a use case diagram or a flowchart of the implementation would have aided in understanding the program flow.",1.0,1.0,1,112
"the design doc incorporates all the functionalities that are required to be implemented for this project. it explains the role of each functionality and explains the plan of action for implementation. just one suggestion , the project requirement states that in the review report , the course name and the student name must be shown as correctly it does not display that. this part has not been clearly stated in the doc but rather implied. it would be better if this is also stated as a goal and implementation steps are shown for it in the next submission.",1.0,1.0,1,96
"the design doc is almost complete. it includes most of the relevant subsections. the problem statement has been clearly explained with the help of images. the design which the team proposes to solve this issue has also been explained thoroughly. however, the test plan section is missing . they haven't mentioned anything about testing their proposed design. also this team has mentioned the changes that they need to make in detail but have not mentioned the files that needs to be changed. this would make it easier for the reader to gauge these changes and see if they are accurate or not. thus, i would suggest to add a test plan explaining in detail the proposed testing methodology and include the files to be changed with a brief explanation of changes in each file.",1.0,1.0,1,134
"yes, the design appears to be quite sound. they have included a detailed design proposal which explains the concept they have in mind very well. the design is neat and accurate and addresses all the problems in the problem statement. the overall design flow is also accurate and without any fallacies. they mostly require changes to be made to the views such as adding checkboxes and additional questions so that part of the implementation would be dry. they have mentioned that they will be creating a subclass of questionnaires controller called srq. however , they haven't provided any implementation details such as what methods this class would have. since it is a subclass of the questionnaires controller, i would suggest to use inheritance to its fullest. also, i did not really understand how exactly the appending of the questionnaires would work. i would suggest to include some details about how this appending would function which would make it easier to understand for the reviewers.",1.0,1.0,1,164
"yes, a hierarchical test plan has been included which explains the testing scenarios they have in mind. however i believe that the current test plan included is too short and just provides an overview of testing. since this team plans on adding a new class and altering views for it, they should thoroughly test the functionality. i suggest to include a detailed test plan, where each scenario is described and the different tests for that scenario are mentioned. this would enable the reviewer to gauge the test plan and maybe provide an insight into any of the cases that may have been missed by this team. i scenario that i can think of is that they should test if the correct questions are graded. like the extra student generated questions are not graded.",1.0,1.0,1,133
the wiki doesn't have many visual aids maybe because hard to explain in a visual way.&nbsp;i think can put some pictures of every steps in what to be done section.,1.0,1.0,1,33
"the team has given a short description on what the project is about and the files that has to be modified. clear explanation is given on how the changes can impact the system. the design of the ui screens is provided in a neat and clear manner. tone analysis is also shown at each of the review. only the above informations are given. the team has missed to provide the uml diagram, or any mockup screen of the present working scenario. this would have enhanced the readers understanding. please try to provide a short information on what expertiza is about.&nbsp;",1.0,1.0,1,101
the document starts with two lines of explanation on what expertiza is about and then followed by existing review report shown for the users. mockups are shown that helps to understand more on the problem. problem statement is shown that explains what exactly the project is about in a crisp way. review report page is then explained with all possible screenshot with the proposed changes for the screens. testplan is not mentioned anywhere in the document. please add test plan that adding bulleted point wherever necessary could have improved the readability of the content.,1.0,1.0,1,94
"the authors have done a great job explaining the intent of the project. the screenshots and descriptions are very helpful. the only improvement i can suggest is to segregate the sections properly. at the moment, the ""present scenario"" and ""proposed implementation"" are mixed up. the authors need to separate these into different sections. secondly, the proposed implementation should also contain details of the application files (views/models etc) that needs changing. third, the authors need to add a ""test plan"" section and describe the same.",1.0,1.0,1,85
"the authors have clearly explained&nbsp;the tasks related to the project. some of the sections needs more explanation. such as section in ""work to be done"" states ""-generating elements trees of arbitrary depth"". the authors could explain these bits in more detail.",1.0,1.0,1,43
"the&nbsp;authors do not mention about the proposed design. it mentions ""what"" tasks need to be completed in the ""work to be done"" section but does not mention ""how"" to do them"". a proposed design section lists screenshots and descriptions of how the application will look or work after the changes are made.",1.0,1.0,1,54
the authors have only provided one screenshot of a generated html. they need to provide more diagrams which will describe aspects of their application such as: . modules of the project and their relationships.&nbsp; . flow of the application. . testing life cycle specific to the application (if different from ).,1.0,1.0,1,48
"the design document clearly mentions the purpose of the project. they also mention the proposed next step. but the&nbsp;authors need to add more sections in the design document: . ""test plan"" is not mentioned anywhere in the document. . also, the authors need to add a ""proposed design"" section. the ""work to be done"" section can list more specific details such as models/controllers to be changed (or related code changes).",1.0,1.0,1,71
"the test plan is brief. the authors need to add&nbsp;specific test cases pertaining to their project. for example: . given input x to browser , input x to browser , both browsers should render same. . given input x to browser , input&nbsp;y to browser , rendering results should be different. .. so on. &nbsp;",1.0,1.0,1,52
"the test plan seems to be superficial and shallow. the team could have mentioned the different scenarios in the controllers and models that are going to be changed , they could just mention the changes these files will have and can briefly mention all the possible test cases that can be implemented on these files.",1.0,1.0,1,54
"though the files that will be changed are mentioned, a high-level overview of what code changes need to be made to these files is not given. it is suggested that this section be added.",1.0,1.0,1,35
"while the explanation of methods and tables is complete, this section may be better exemplified by using an erd for the tables and uml diagram for the methods.&nbsp; the same is true for the test plan.&nbsp; for example, test could be drawn out with decision diagrams to show the flow of execution and error/pass conditions.",1.0,1.0,1,58
"the test plan and the functionality of the controller sections detail what is to be done well.&nbsp; it would be better if these sections were combined so that a reader does not have to scroll to get further context.&nbsp; for example, if a reader is looking at the create_requested_user_record(number ) test, they can see how the test is run, but they have to scroll up to the functionality section to see what the method is supposed to do.",1.0,1.0,1,80
"the test plan section could be improved by the use of visuals.&nbsp; for example, the text below could be better portrayed as a decision diagram. . ""does the user belong to any institution? if yes, good. otherwise, set a new institution."" . ""is the user already existed and valid? if both yes, good. if the user already exist, send notification. if the information is not valid, fail.""",1.0,1.0,1,66
"these changes are difficult to visualize.&nbsp; adding one or two mockups with arrows with the bullet points pointing to the relevant section of the mockup would be helpful.&nbsp; for example, the bullet item ""when a student goes to &ldquo;your team&rdquo;, he should be able to select a duty from a drop down menu."" may be better shown with a screenshot of the ""your team"" page with the added drop-down and an explanation of its function.",1.0,1.0,1,80
"the functionality is covered in the proposed implementation section, but this section is too verbose. this may be rectified by adding mockups as stated before.",1.0,1.0,1,25
"the design document sections are complete and satisfactorily cover the need, approach, and testing required for the project.&nbsp; it would be helpful to have some diagrams/mockups in the test plan or proposed implementation.&nbsp; in the test plan section, the word ""role"" should be replaced with ""duty"".",1.0,1.0,1,49
"the test plans cover the flow of the ui well, but it would make the test plan more complete to add negative tests to the positive, ""happy path"".",1.0,1.0,1,28
proposed code changes are not given in the proposed design section; please add these.&nbsp;add a screenshot to the proposed design for issue ; these are a good visual add in seeing what will be changed.,1.0,1.0,1,36
"the design appears sound in that it appears to work well within the existing functionality.&nbsp;the proposed use of principles and patterns is not given. this could be accomplished by, for example, stating what design patterns are in place and will be kept for the existing functionality.",1.0,1.0,1,48
"the authors proposed to review the db schema and update the wiki. however, no more detail at all was given, and as such it is difficult to gauge the quality of the explanations present.",1.0,1.0,1,34
the design appears to be simple and easy to understand by a normal user. the team could have made use of more visual aids to make it more appealing. the team could also include the test plan.&nbsp;,1.0,1.0,1,38
the design appears to be sound with all the required information about the project. it contained the details about the previous work and work to be done now. it has all appropriate principles and patterns. it is complete and may include some use of visual aids to make it much better. it could also include the testing plan which is highly appreciated.,1.0,1.0,1,62
the authors have explained the project well. the design document included the previous work and the changes that need to be done for the next work. the authors have taken enough effort to make the design document easy to understand. the team could have used more visual aids that would add to the explanation of the project.&nbsp;,1.0,1.0,1,58
the design document did not include the test plan. including a test plan in design document is greatly encouraged. the test cases must also be included in the test plan. this would improve the coverage of your project and hence will improve the range of the project.,1.0,1.0,1,47
there is no class diagram in the design document. the visual aids in the design document is a screenshot. these figures are contextual and relevant to the explanation. the screenshot clearly demonstrates the previous work. use of more visual aids is greatly encouraged as it would make the design document easy to understand.&nbsp;,1.0,1.0,1,54
"under proposed implementation, i don't think they need to explain each step they are going to use for the problem, instead, they should focus on describing their ideas, which would be enough.",1.0,1.0,1,33
"the arrangement of the context under proposed implementation can be improved, e.g. don't use bullet points to separate two sentences that's should flow&nbsp;sequentially.",1.0,1.0,1,28
i am not sure if implementation doubts should be part of the design doc? maybe they should just meet with their mentor to solve those doubts.,1.0,1.0,1,26
it might be redundant to separate&nbsp;problem and solution since they both use the same screenshot. i would suggest that they just describe each problem with its solution and then use the same screenshot.,1.0,1.0,1,35
"they explain the project purpose well, but when they explain the design, or what they will do satisfy this purpose, i feel they could be more explicit. perhaps in the resubmission they could explain the exact places they will look and files that will most likely end up being changed, but this document is fairly lacking as it is. also, the testing plan only states that they will ensure previous tests work. what are the pivotal tests that must work? graphical inclusion would be a great idea, and im not sure listing the entire documentation is too great of an idea too because its rather confusing and doesnt actually explain what&nbsp;their&nbsp;contribution will be.",1.0,1.0,1,117
"in general the document is really good and complete . i appreciate the teams effort in analyzing the requirement . test plan was also written , few things i think could be in cooperated are&nbsp; . i was not clear on how the visualization would be incooperated into the table view , more details will be pretty helpful&nbsp; . a little more information on testing like , it is to the unit test files or would it be a ui test etc could help a lot",1.0,1.0,1,81
the team mentioned the files to be modified. if possible addition of a little bit more finner details will be really helpful to answer this question&nbsp;,1.0,1.0,1,27
"in some cases it is mentioned which files would be changed but they are only related to view, it would have been beneficial to have included changes in controller as well. in ""assignment of good reviewer"" its very difficult to just know a column by icon, usually if the space is very small it makes sense to have icon, but in this case it would be better to have written text.",1.0,1.0,1,71
one change i would suggest in the proposed implementation is adding the files which would be affected by the change proposed or in the file modification adding what this change is for. the proposed changes no where mention when the instructor will add questions related to each role. &nbsp; overall the proposed implementation gives a good idea what&nbsp;one might need to do to accommodate this change . &nbsp;,1.0,1.0,1,69
"the document appears complete in the proposed implementation: i do have doubt regarding what if one&nbsp;student&nbsp;is doing multiple things&nbsp; in the files to be modified, it would have been better to include what changes should there be in each file, would give better idea as to why these files need to be modified. test plan should be more elaborate: testing before submitting project all the students should have some role in the new files section rather then mentioning duties table, it would have been better to write about migration script and specify the columns and their data types &nbsp; &nbsp;",1.0,1.0,1,105
"i did not find a section where the classes, models, controllers or views that would be impacted were listed. they could have listed it in a separate section so that they could have been visible properly",1.0,1.0,1,36
the uml diagram looked very informative. but apart from that i could not find other screenshots . they could have provided some more diagrams that could have explained the design doc better.,1.0,1.0,1,31
"the design document is well presented, but i felt that the introduction part could have been written in points , because it is the most important part of the project and if it is written in points, the reader can have an overall understanding of the scope quickly",1.0,1.0,1,47
"the design doc felt a bit incomplete to me. although the problem statement was explained in detail, the document does not say what was wrong with the previous version of the project and why an improvement was needed. regarding the design, a single mockup was provided which gave me an idea about what the team is planning, however it would have been better to provide uml diagrams and names of files that are to be modified/added. also, a tentative test plan could have been included.",1.0,1.0,1,86
"there was a single uml diagram which was a class diagram that was very detailed and also showed the relationships between the classes. but i felt that at this stage, a usecase diagram and an activity diagram would have been better choices to help explain the problem clearly. there was also no mockups, hence i am deducting points.",1.0,1.0,1,58
"the design looks good. it has been supported with uml diagrams such as a class diagram, however usecase or activity diagrams would help in explaining the overall design of the system whereas a class diagram explains only the relationship between certain classes. hence i am deducting a point.",1.0,1.0,1,48
"a test plan is provided and it looks detailed enough to test all of the new functionalities of the system. however, i am deducting a point because rspec test files could have been mentioned where the necessary changes are to be implemented.",1.0,1.0,1,42
"they have provided the external link to introduce the required functionality, but it would better if they include some materials on their own page.",1.0,1.0,1,24
they have the general structure. it would be better if they can include more background information. and they can reserve one extra paragraph for their team members.,1.0,1.0,1,27
"the portions that the team added at the top of the write up are good, they explain what is required of the project, and some of how they plan to get those steps done. but the bottom part, the list to all the tables in the db, seems a bit overkill. the write up does not need to link to every table that will be touched, maybe if you want to include them they can be added in a simple string of links rather than these large blocks? since they are added i feel there should be some details attached to them as well, like what each is used for, and how you plan on updating that specific one.&nbsp;",1.0,1.0,1,120
"no testing section is included, but the tests for this project are going to basically involve running the test from each other module that has some db interaction. so that is out of the scope of this project i think.",1.0,1.0,1,40
"overall very well done, especially in the future work section. one area i can see room for improvement in is the previous work section, parts through could have some small explanations added to them.",1.0,1.0,1,34
"the explanations were a little hard to follow at times. however, most of the time, i understood the changes that would need to be made to the first part of the project. adding a link to new topics so that a reader can have the chance to learn more if they are confused will be beneficial to this document.",1.0,1.0,1,59
"the design document incorporates all the functionality required. however, this functionality was only described in words. a kind of pictorial representation or a flowchart of the code that will be written would have been useful to the doc.",1.0,1.0,1,38
"yes, since the team's project is to write integration tests, they of course need a test plan.&nbsp; the team provides a solid test plan and has done a really good job explaining what each method they test will do.&nbsp; while they have done a pretty good job explaining what will be tested, it might help to add a short explanation for each test.&nbsp; this is something i mentioned as well in my initial review.&nbsp; for instance, under the ""create"" method, one of the described tests states, ""is this the name new? if yes, good. otherwise, register the user by email address"".&nbsp; this is a bit confusing to me, as i don't fully understand what is going on.&nbsp; it seems to be saying if the name is new, then don't register a new user, but this seems contradictory to the idea of a ""create"" method.&nbsp; because of this, it would be nice to have some added explanation attached to each tests.&nbsp; other then that though, everything looks good.",1.0,1.0,1,178
"as i stated in my first review, the author does not appear to have proposed any changes out side of reiterating the project description.&nbsp; since this project mainly focuses on clearing up the db, i do not feel as though there is really any need for formal documentation such as wireframes or uml documents to be made.&nbsp; that being said, it is important that the team lay out a plan of action so that both reviewers and other team members alike have a good idea what is going on.",1.0,1.0,1,91
"while the team reiterates the project description, they do not appear to hvae worked though any design decisions as of yet.&nbsp; this is something i pointed out in my first review.&nbsp; to keep a team unified towards a common goal, it is critical that a well&nbsp;laid out design document be written up.&nbsp; because of this, i highly suggest that you all focus on writing up a design plan before beginning to code.",1.0,1.0,1,77
the design proposed by the team is good.&nbsp; their step by step course of action sufficiently describes how they intend to approach the project.&nbsp; one thing i would definitely suggest adding to their design document though is a uml diagram and a wireframe as explained above.,1.0,1.0,1,48
the team has not as of yet included many diagrams or visual aids.&nbsp; i would highly suggest adding a uml and wireframe as described earlier.&nbsp; the team did add a sample screen shot that complements one of their required functionalities though.&nbsp; this definitely helped me as a reviewer to understand the scope of the problem.&nbsp; i would love to see more examples like this attached to other functional requirements.&nbsp; other then that great job!,1.0,1.0,1,79
"the team has done a really good job describing their previous work, as well as what they plan on completing in this up and coming iteration of their mozilla project.&nbsp; they have done a good job breaking it down into steps and describing each step in detail.&nbsp; one thing i think should be added though, is a uml and wireframe.&nbsp; both of these can be super helpful when trying to get a team on the same page design wise.&nbsp; my favorite website for working with wireframes is balsamiq.&nbsp; a free trial can be activated on sign up here https://balsamiq.cloud/.&nbsp; when it comes to creating uml diagrams, my favorite free program is draw.io which can be found here&nbsp;https://www.draw.io/.",1.0,1.0,1,131
"the team has done a great job integrating figures into their design document.&nbsp; this is something i thought was lacking when i first reviewed their work, but they have addressed this problem nicely in their final write up.&nbsp; the team has provided a simple, easy to read flow diagram describing the system as a whole.&nbsp; one item i would definitely suggest adding though, is&nbsp; uml diagram.&nbsp; for documentation on creating uml diagrams checkout this&nbsp;wiki article that i think is really good and helpful:&nbsp;https://en.wikipedia.org/wiki/unified_modeling_language other then that, great job!",1.0,1.0,1,102
"the approach is as simple as possible and changes are not much to be done. the project is an easy one and the authors have not made any complicated decisions. however, reference to old work would be helpful to evaluate the work.&nbsp;",1.0,1.0,1,43
there is no testing plan present. the design doc can be more informative and have more images for the reviewers to better understand the approach the authors would like to take.&nbsp;,1.0,1.0,1,32
"i think almost all sections are there. the only one missing is the background information for expertiza itself. while i already know about expertiza i think it would be appropriate to include a background section saying what expertiza is and get more specific about how this project will benefit the expertiza project. &nbsp; the other suggestion i would make is to either put references in the references section or have them referenced somewhere in the wiki. you currently have no references. you could add references to things like tdd, expertiza, your own github&nbsp;repository, etc. to help flesh out the document.",1.0,1.0,1,102
"the explanation is easy to follow just by reading the code. however, i think more information can be present in wiki and the authors can include images to make it more informative.",1.0,1.0,1,32
"yes the work is explained concisely. however, the authors can use mockups of the ultimate system will look. since it is a mozilla project previous work is not present to evaluate whether the things they have implemented or not.",1.0,1.0,1,39
i didnt find any visualisation in the given wiki. i think the authors can use mockups for better explaining their project.&nbsp;,1.0,1.0,1,22
"the design document provides in depth details about the current issues and things to be implemented which is good. they make use of images to good effect. the only issue i see is that they are missing a few key sessions. consider thinking forward and adding test plans, as well as setting up a git fork that you'll be working on and adding it as necessary external links.",1.0,1.0,1,69
"the authors need to be more explicit about the changes they will make. it is good that the team communicated that they will update the wiki to reflect the current db schema, however instead of stating the potential changes, the structure of the entire wiki was instead presented. i think once the team dives a bit deeper into the project, they will be able to provide the names of the db tables that were changed or removed.",1.0,1.0,1,77
"no visual aids were used, and it would be a bit tricky for the team to include any on this one. however, screenshot of how various tables in the db are linked together presently would have been a nice use of visual aids. i would suggest somehow providing a visual aid that helps provide the rationale for each change made to the db. this would allow for more understanding regarding the project and the impact of the changes.",1.0,1.0,1,78
"the design copy and pasted the required funcionalities listed on the main document, so yes, objectively the design does incorporate them somewhat. however, the actions that team stated they will take are not very detailed, so it is difficult to guage whether or not the requirements are being met.",1.0,1.0,1,49
"there is no visualization, and it can be argued that there need not be any for this project. however, i would recommend that on top of the instructions that team provided for navigating the db schema, that the team also provide a screenshot of the console here as well.",1.0,1.0,1,49
"the explanantions provided are very clear and understandable. the specific actions that team will take for each of these changes are explicitly outlined and the scope of their changes is very apparent. i would suggest that the team be more specific with regards to which files will be modified and, perhaps also use a few visual aids such as mockups to illustrate some of the visual portions of their proposed changes (e.g. how the differences between rendered web pages will be indicated).",1.0,1.0,1,83
"there are no visual aids in this doc, and i think there should be at least one. based on the scope of the project, it is apparent that a lot of classes are interfacing here, and new classes will have to be made. a uml diagram would be very useful provided that they are accurate. in addition, a visual aid that shows how web page rendering comparision process will be done will also need to be added, as it is an important and visual component of the project's objectives.",1.0,1.0,1,90
"the design of the doc appear to be simple and clear, however, there a few parts of the design that lack detail. for example, the team mentions geckodriver, and it appears it is quite crucial to the project. if that is the case, the team should have linked to the geckodriver website within the doc or provided more information on it overall.",1.0,1.0,1,62
"the document is quite well written. the purpose of the project, the proposed actions, and the testing plan are all apparent from reading the doc. there is, however, a general lack of visual aids, so it hard to see what the current state of the project is. another suggestion would be to outline a more detailed and thorough testing plan, and also putting in a seperate section by adding a eading.",1.0,1.0,1,71
"this project seems like it would require quite extensive testing, yet the team did not include any. some of the testing proceure is implied, but i think the team should have a section named ""test plan"" that cleerly outlines what exactly they will be doing to test the functionalities.",1.0,1.0,1,49
"the team added a screenshot of a randomly generated html page, which is a major component of their project. this illustration provides a decent visualization of what this means. however, a design mockup of their visual results as described in the doc (e.g. the differences between rendered web pages), would have been beneficial.",1.0,1.0,1,54
"they wrote the potential changes in propose implementation which is quite easy to understand and followed the requirements. but it's just too short, details of implementations are not discussed and it's almost a copy of the requirements, so i'd recommend apart from propose implementation&nbsp;they may write implementation plan which discusses each proposed change in detail and includes newly-added files, classes, methods, variables and their functionalities.",1.0,1.0,1,71
"the team's wiki seems to be written after they have fully&nbsp;understand the goals of the project and i think they almost got everything needed in their wiki. they got overview, diagram, proposed implementation, test plan which is good. but i'd mention that test plan is kind of brief. they just wrote what need to be tested, so i'd recommend to include more information about testing such as the to-be-tested&nbsp;files, to-be-created rspec test files and brief descriptions of to-be-tested methods.",1.0,1.0,1,92
"&nbsp; yes. they got an excellent diagrams to illustrate the relationships between several models that are related to their project and how they relate to each other. but i got a little confused on some signs such as "" "", "" .."""", "" .."""" on those orange lines, so you may explain that a little bit in wiki.&nbsp;another minor problem is that the pictures are too large and can't perfectly fit the page&nbsp;so you may consider fixing this. &nbsp; &nbsp;",1.0,1.0,1,79
"the explanations for the proposed changes are straightforward and quite easy to understand but they are almost the copy from the requirements, so i'd recommend they discuss them in detail. for example, for "" . go through the expertiza_development database to find tables that not used any more or redundant records."" they may explain the criteria they decide to use to find the useless or redundant tables.",1.0,1.0,1,66
"project name could have been better. methods were kept small. comments were left out in some controllers/views. if-else blocks weren't properly indented in some cases. hard-coded numbers were used for comparisons. a better way is to create enums representing different values(such as roles) and using those enums in code. this way, something like if role == becomes if role == realtor and thus is more clear. &nbsp;",1.0,1.0,1,70
"the system performs all the desired functionalities. a shoutout to the idea for the auto filled inquiries. i really liked that feature where the inquiry is already filled after which the user gets an option to edit the inquiry. some parts need improvement. for ex: the link ""new houses"" in the house list redirects to the&nbsp; users/edit link. its a minor issue which could be looked upon. the layout of the homepage for house-hunter can be fixed as links overlap each other. also, the houses list shows edit/destroy options for the entire house list, that's a bug which needs fixing.",1.0,1.0,1,105
"overall, code is clean and readable.&nbsp;naming and project structure is consistent with good practices. one issue that stood throughout the code is that authorization is done directly in controller methods. it would be better if this common functionality was moved to a separate function call (e.g. validating user's role in houses_controller#create method)",1.0,1.0,1,57
"the ui for the login page is the only thing that loads, as i'm unable to sign up. a suggestion for the future would be to provide a username and password for an account that is already created to be provided somewhere to ensure a reviewer can log in even if signing up does not work.",1.0,1.0,1,57
although branching strategy was followed. the commits mostly seem to be made on the second-last and last day of submission. it will be helpful to keep committing code at the end of each day or every couple of days so that there is no major issue of merging at the end. also it ensures that all team members are working on the same copy of code.,1.0,1.0,1,67
code looks good. the first cut for good too.&nbsp; i still do not see code for models in model files if an additional gem has been used it would be good to mention that in readme,1.0,1.0,1,37
"the type of user in the view user panel through admin login is unavailable, would it be possible for the team to have two separate views/controllers and crud functions on realtors and hunters?",1.0,1.0,1,34
"the code quality is fairly standard,&nbsp;the code practices dry principles fairly well. i would suggest creating new controllers for managing house hunters and realtors from admin profile since, on creating a new realtor/house hunter the admin logs out and this seems like stop gap fix.&nbsp;",1.0,1.0,1,49
all methods and classes are well designed and serve well defined functionality. good job! could have named the methods and variables a little better. each function performs a single task. every method is short and to the point i.e does not contain many nested blocks or if.,1.0,1.0,1,48
"there a large set of variables that do not follow typical ruby naming convention. an example is that ""existassignment"" should be&nbsp;""exit_assignment"". additionally, some names are not very helpful. for instance, the variable ""frm"" is used for a form, but why not just use ""form""?&nbsp;there is also a lot of javascript written directly on the page and are difficult to read and understand as there is missing method names or other non-intuitive variable&nbsp;names",1.0,1.0,1,79
"- the write-up does mention the files changed but misses out on adding code snippets. - little formatting inconsistencies found like ""-- expertiza project"" in the introduction, and a "":-"" only for overview but none of the other headings. - looks like ""separate the list of 'teamed with' students from the current tasks box"" needs to be a heading rather than plain text! -&nbsp;now we have created a separate table for assignments"" sounds ambiguous - does it mean a new database table or a html table..? please be specific. - ""a helper function was also added to format a string into multiple lines"" - please mention what the string is about (what it represents), what are these multiple lines that it is getting split into, and why you would want to split them. - test cases are not stated. test plan does mention one as ""for example"" but the testing process could've been given a little more respect. :)",1.0,1.0,1,152
"the code is clear and concise. the variable, method and class name choice is correct.&nbsp; one variable i feel can be changed is&nbsp; top_max_choosers can be renamed to topic_max_slots, as slots has been used in the function name as well and it will be more consisted &nbsp;",1.0,1.0,1,49
max_choosers name was not changed. as far as i understand it denotes the maximum number of slots and should be called max_slots. which is not changed. apart from this code is good.,1.0,1.0,1,32
"i could only see commits with no significant file changes. i would request team to add and contribute the changes as soon as possible. with the present changed code, methods names and variables and class names are proper with reasonable naming conventions.",1.0,1.0,1,42
can not find any video or link or ip address link to manually test the changes. i would request team to deploy the changes so that we can test the system partially.,1.0,1.0,1,32
"an unnecessary commit has been performed because&nbsp; of which&nbsp;build has failed, and i think it wasn't required as already code&nbsp;had % coverage. you should check that out, it just an indentation issue i think.&nbsp;format it using rubymine and push, it should work.&nbsp; a&nbsp;shorter video to explain the work has been added as well.&nbsp;",1.0,1.0,1,64
"a commit has been performed days back , which isn't&nbsp;making any change to the code just the indentation, and since then&nbsp;build hasn't passed. you should check that out, it just an indentation issue i think.&nbsp;format it using rubymine and push, it should work.",1.0,1.0,1,50
set_proposer is a setter but appears to be used as a getter.,1.0,1.0,1,12
"the travis ci build did not fail exactly but it did not pass either. it showed in progress. but when i clicked on the details, it showed that the test failed.&nbsp; suggestion: travis ci issue should have been rectified.",1.0,1.0,1,40
"method&nbsp;remove_instructor is written twice in the same file, delete it.",1.0,1.0,1,12
it only explains how they did but not why they did. the various approach could have been mentioned in the wiki.,1.0,1.0,1,21
"code snippet added.&nbsp; still, git link is not of the pull request.&nbsp;&nbsp; no link provided for the change. either screencast or the url of the deployed application would have been ideal.",1.0,1.0,1,34
"the authors have included the different tests that they wrote, however a description of what the test is testing would be helpful.",1.0,1.0,1,22
"writeup clearly explains what their use cases are and what solution they came up with. there is a lack of background about it, how to test it from ui, test plan, test cases, dry principle etc. their write up is not on wiki, which makes it difficult to download the file every time and check it. although it was pointed out during the first round, the team didn't change it , or they didn't update the wiki page which they created.",1.0,1.0,1,82
"the code changes are very less, so not much to say about refactoring, dry problems etc. the code has ""put"" statements which are also pointed out by the code climate bot.having put conditions is not a good coding style, the authors could have considered to remove the statements. puts ""hi, im in import"" puts name.to_s the authors could have debugged to see the flow of code, or remove them before committing.",1.0,1.0,1,73
"the document clearly explains what was the problem and what was the solution they proposed.they have also compared and contrasted with the previous solution which is good. they have talked about how different roles come into play with respect to security perspective and what the pros and cons of having/not having those roles. comparing the code changes gave a clearer view of the code changes. one improvement could be in the 'background' part.&nbsp; taking it as it was: the majority of the project was related to solving issues regarding the deletion of administrator and instructor accounts. administrator and instructor are both account types that inherit behavior from user but are ( )handled and deleted in different codepaths. furthermore, properties are used on a user that aren't on an administrator, ( )such as team ids or course associations&nbsp; ( ) the different codepaths could have been shown to get a better view (atleast a screenshot, considering it wasnt within the problem scope) ( ) although, why these properties arent on administrator is defined in the forthcoming sessions, it was little unclear while reading it. (it could have been quoted that 'as we will see it in the forthcoming sections')",1.0,1.0,1,197
no new test cases were added. the new code changes don't change the modify the existing code coverage. the modifications were mostly on ui. they could have added capybara testing.,1.0,1.0,1,31
"for the ruby changes they have made, they have used intuitive names and used naming conventions as much as possible. def update_feedback &nbsp; some places, the variable names are used in camelcase whereas few places they werent used. few variable names were directly used from legacy code, although refactoring could have been done. curquestionnaire quesparams . questarray",1.0,1.0,1,56
"write up is good and self explanatory. test plan helped a lot in understanding how to test it. as discussed in the earlier review, images could have been resized for better visibility. was little difficult when one had to scroll along the page to view the entire image.",1.0,1.0,1,48
"the writeup s format on how they distinguished the features and explained solutions for each and everything is good. first they give a bird's eye view of the problems and then deep diving into each problem with solution and screenshot is good. the background explanation given could have been more specific towards their problem statement, rather than just about expertiza. the images tend to occupy the entire page and its little difficult while going through it, a little foramatting could have made their page really good.",1.0,1.0,1,87
"yes, the team has explained their code and the reason for the additions made. however, for the issue # , some more information about the tablesorter and some additional comments would improve the writeup. solutions to issue # and # are explained clearly and are easy to follow.",1.0,1.0,1,44
"most of the variable names and function names are named based on proper convention. suggestion: function addcreatetopicsection()this function name could be changed to maybe createtopic() or addtopic()apart form this, all other names look good",1.0,1.0,1,36
"there is no link provided to test the code manually. however from the video provided, i can infer that all the features have been implemented and are working properly. issue # and # are working as expected. in issue # , i could see that the previous version of the 'add new topic' page had a topic description and topic category field which is not seen in the updated version. suggestion: the team could implement that or if already implemented, add that to the wiki page to reflect the way in which that is handled",1.0,1.0,1,91
"the project is ready to be merged. the source code is clearly structured&nbsp;and&nbsp;can be used for the future team&nbsp;to work on. the project has % code coverage.&nbsp; in order to avoid potential problems of using assignmentparticipant instance, participantsuper object is defined in factories.rb, which is an instance of&nbsp;participant class. the possible&nbsp;suggestions are&nbsp;to deconstruct&nbsp;#scores method and introduce 'context' constructs&nbsp;to&nbsp;enhance code documentation.",1.0,1.0,1,79
overall the code looks good with most of the coding standards being followed. however i think it lacks proper commenting and also there were few stray&nbsp;pieces of commented out code lying around. adding few more comments and deleting unused code would be better.,1.0,1.0,1,45
"the code has been written as per the coding standard. the code written by the team adheres to dry principle. however, as per my first review comments it is advisable to follow better naming conventions. the team could rename their function names such as the below one to something smaller such as get_time_diff. the code needs refactoring in names and addition of comments.&nbsp; def get_time_diff_btw_due_date_and_now(due_date)",1.0,1.0,1,67
ruby coding standard has been followed. only one function has been added in controller as per requirement. code follows dry principle. the&nbsp;team can add comments for the code added which would be useful to understand the code.,1.0,1.0,1,39
the team has done good manual testing but it would help to add few test in features to test the impact of the changes done in functionality of the project.,1.0,1.0,1,30
the team has not included any test cases. it would be easy&nbsp;to include the test cases on the&nbsp;&nbsp;app/controllers/suggestion_controller&nbsp;for the&nbsp;update_feedback&nbsp;method that has been added. also&nbsp;the team may add some features test cases as most of the changes made are in html files. the&nbsp;team can refer&nbsp;the existing features present in the&nbsp;.spec/features folder.,1.0,1.0,1,72
"although i believe this project is ready to be merged into the branch, i would still like to make sure as to why their build is failing in travis ci. most likely it's not because of their own code, but as a suggestion the team should have also looked into this matter themselves, and explicitly stated somewhere in the wiki by getting clarification from the instructors.",1.0,1.0,1,67
"unfortunately, the build failed in the second round.&nbsp;but, in my opinion this was not due to the team's mistake. the build failure says the two examples failed are in files ""assignment_spec.rb"" and ""assignment_participant_spec.rb"", both files which the team had no connection with. i could be wrong though. as the build was passing and there tests were running in the first round, i am inclined to believe it was because of another team's incorrect code that this team pulled into their branch by mistake.",1.0,1.0,1,89
"the test plan is missing in the wiki page. the content in this section could be the one suggested in the above comment, to just include all the test cases added and write a brief description about each.",1.0,1.0,1,38
"the code is well written. although as suggested earlier, the team has not added comments to the code. in the wiki page, the team displays of how the code was before and after. but, i still feel this is not adequate information for a layman to be able to follow line by line what the code does. adding comments in the code for future projects would be my best suggestion. or, as an alternative, briefly explain in a line or as to what the code does.",1.0,1.0,1,86
"the code is very well written as previously said. however, some test cases are still not passing and that may be troublesome if deployed onto production server. it would be a really nice opportunity for students in further classes take this up and improve the work so that they can complete the work which was left incomplete due to time constraints.",1.0,1.0,1,61
"there have been only two commits - one on th oct and second on st october. there have been no commits since. it would have been better if you people had given one more commit resolving the issues given by code climate, since most of them are trivial.&nbsp;",1.0,1.0,1,48
"it feels like test plan only covers one aspect - ""changing of the background color for tasks as we approach the deadline."" &nbsp; here are other aspects which can be automated for testing, perhaps by rspec or the likes: add past due assignments to the student&rsquo;s task list (on student view). -- verify if they are being added/saved check for correction in due dates of assignments (when an assignment&rsquo;s due date is edited, it should be appropriately moved from the &ldquo;past assignments&rdquo; list to the &ldquo;current assignments&rdquo; list if needed) --- check if the functionality works. on student task page, separate the list of 'teamed with' students from the current tasks box. -- test if this works write the required tests before implementing/refactoring the methods in the above-mentioned classe ",1.0,1.0,1,136
"the write-up is very detailed as to what features have been implemented but lacks on explaining how they are implemented. it can be improved by adding how the features have been implemented, why they chose this logic to implement the features and how to test the code or show how they have tested the code.",1.0,1.0,1,56
"i think user experience and code readability are as imp as producing a working code. so based on how urgent is the requirement for this functionality, i would prioritize refactoring the notices and display messages to more appropriately indicate what action was taken when we try to add a participant to the assignment or import using a csv file. secondly improving the comments as explained with an example in the first question.",1.0,1.0,1,72
"there were some issues which i reported regarding comments and notice messages displayed to user which needs to be improved. but they haven't been incorporated. it is not a blocker but definitely an important change to improve user experience and better code readability. for example, in submitted_content controller there is a comment which says sending email to users. however it is just a method call which redirects it to delayed_mailer.rb. so this should be properly mentioned as it will be helpful for someone refactoring or understanding the code later.",1.0,1.0,1,91
yes good number of tests added coverage increased a but but i would like to see more -ve tests. mostly +ve test cases are covered in the tests &nbsp; &nbsp;,1.0,1.0,1,30
write up is good. great job. however i could find few points that if rectified would make it even better.&nbsp; it would be good if the problem statement could list the issue (hyperlinks) that are being fixed. that would make it easier to navigate instead of pasting screen shot for solution it would have been good if few words detailing approach would be put. post that screen shot could be put. &nbsp;,1.0,1.0,1,73
"comments in code are missing. there are few lines that need to be removed but still exist, it would be nice to delete those eg #emails &lt;&lt; assignment.instructor.email&nbsp; &nbsp;function length looks okay, most functions have len &lt; lines which is an acceptable number. since the code is implementing very specific issues over it has specific local changes.&nbsp; other change are okay and ruby like",1.0,1.0,1,70
"authors could use empty? instead of checking unityid != ''. another thing that the authors have taken care of ttml mails but what if the somone needs to non-html mails.&nbsp; attribute copy_of_all_emails does not look like a good name, it would be nice if they could rename it to email_copy_all or so this help in reader understand as well as in ide intellisense.&nbsp; code coverage has decreased&nbsp; &nbsp; &nbsp;",1.0,1.0,1,71
"write up is okay, the test plan comes before solution / approach section . pls change the ordering. there is no reference section&nbsp; instead of putting screen shots of code it would be better if the authors had put code snippets &nbsp;",1.0,1.0,1,41
"@all_task vs @student_tasks &nbsp; the name 'all_task' does not sound appropriate. it should be student_all_tasks. &nbsp; . all_tasks =&gt; student_all_tasks &nbsp; . student_tasks =&gt; student_available_tasks &nbsp; . current_student_tasks =&gt; student_current_tasks . past_student_tasks =&gt; student_past_tasks &nbsp; &nbsp; also, the filename will_paginate_array_fix.rb&nbsp;seems misleading to me. a better name would have been support_array_pagination.rb. &nbsp; also, i am not sure this file should be in the initializers, as it is just a require statement. may be this should be included in the places where the pagination is required, instead of loading it&nbsp;during app initialization.&nbsp; &nbsp; &nbsp; &nbsp;",1.0,1.0,1,96
"the how part is clear. as to the why part, thought they have clearly mentioned the the problem statement, i think a little bit more of an explanation could go into why is that actually a problem.",1.0,1.0,1,37
"the code is written aptly and it does what it is supposed to do. however, code comments are missing.",1.0,1.0,1,19
"yes, i was able to understand the issue as well as the solution overall. but i couldn't understand why there is a need to append a team name to an assignment. it was just mentioned that it is done in other part of the code as well. mentioning that would have given me a better idea.",1.0,1.0,1,57
"it is pending while i am doing this review. when i click on it, it did not pass travis ci, but it fails on tests on features, while this group is testing participant, it happened to our group as well, i assume it is not an issue with their code.",1.0,1.0,1,50
"commented-out code should be removed (at least one example found in participant_spec.rb). also, there are some indentation issues as well as other issues flagged by codeclimate. otherwise, the code seems to comply with the ruby style guide and be fairly dry.",1.0,1.0,1,43
"the writeup was fairly specific on how the solution was implemented, although more qualitative description should have replaced the source code dumps. the writeup barely explained why the improvements were needed, focusing on what was implemented.&nbsp;",1.0,1.0,1,37
"the team added the test plan section but it was too short and did not explain all the test files created and/or modified. the implementation section could do without the many code dumps. otherwise, the writeup was concise and effective.",1.0,1.0,1,41
the authors have documented the steps they did to solve the issues. although they haven't mentioned any particular design principles or design thinking that went on in solving the issues. they should have&nbsp; explained all the functionalities of each file they have modified and stated why they have modified the particular file. one thing they could have added were class diagrams and dependency maps. or some pictorial representation of the flow of each task which will help the reviewers and instructors to quickly catch up on their idea.,1.0,1.0,1,90
"the code written is following the ruby on rails guidelines. the variables, methods, and class names do seem to follow proper convention and are suggestive of the functionality they are being used for. in some cases they could have used a little more descriptive names for variables for example inside app/helpers/student_task_helper.rb&nbsp; they could have used background_colour instead of rtn as a variable name in the due_date_color() method. it will become more readable for the reviewers to understand the functionalities. also they have added to few commits for the amount of code change that they have done. the commit messages&nbsp; are not descriptive enough about what changes have the authors committed. ",1.0,1.0,1,115
the bug fixing does work according to the screenshots provided by the authors. they have provided a step by step screenshot of the issue that they have fixed. the authors haven't hosted their version of the expertiza so it is very difficult to actually check the functionality. they could have hosted expertiza on vcl or they could have put a screen cast of the working functionality to help in reviewing.,1.0,1.0,1,71
"the code was well written and there was no issue with the naming or functions used. however, a few comments could be added to the current_team,new_team and team to make the code more readable.",1.0,1.0,1,35
the write-ups been written well. a small suggestion to the team would be to explain their solutions in more detail as it would better the understanding of what the project does. also the team could use code snippets instead of screenshots of the code.,1.0,1.0,1,45
"i believe the overall coding objective was completed successfully! however, a lot of the logic is performed in the controller rather than the models. for instance, the search functionality contained a lot of business logic that was somewhat length. this may have lived better in tour model and just simple make a call to the tour model.",1.0,1.0,1,57
"there appears to be a lot of code in some of the controllers; the most pressing example is the bookings. you can create methods within the model that handle this logic in order to simplify code, then save the object within the controller. i think it is a little odd to create new ""search"" objects. it might be more intuitive and less wasteful to filter results dynamically using select with appropriate ruby blocks. i would also recommend abstracting common validations/attributes between your agent/admin/customer classes. this would help your code become dryer. also, agent should not be dependent on tours, but tours should be dependent on agent.",1.0,1.0,1,109
the user interface could be improved. ex - links can be placed on top of the page for ease of access. -search options can be shown on the same page as tours for better search. - a back/home option can be added on users page. &nbsp;,1.0,1.0,1,45
some function calls can be made in users_controller rather than embedding code at one place. everything else looks good. there were too many nested loops in tours_controller.,1.0,1.0,1,27
"the ui is very easy to use but there is a minor issue i faced when i was using the application. when i press the home button on top right corner, it takes me to the sign up or login page, but when i again press my profile, i log back into my profile. this is a minor page directing issue and can easily be looked into by the team. i used the read me file for admin user id and password, however read me file gave a very informative introduction about the application.",1.0,1.0,1,94
"most of the functions work well. one thing i'd like to point out is that the system should not let agent to decide whether a tour is completed/ in future/ cancelled. instead of that, the system should decide that based on the date of&nbsp;a tour.",1.0,1.0,1,48
"there are some test cases added to model tests and controller tests. for model tests, i think there should be more tests to thoroughly test the functionality. i would say the controller tests are good.&nbsp;",1.0,1.0,1,36
"from what they have completed, i found code easy to read and they seem to have decent ruby on rails coding practices. following are my observations: ) ""book_tour"" method is found inside tour_controller, ideally it should be in bookings controller and method ""bookmark_tour"" is found in bookings controller ideally it should be in bookmarks_controller. ) method ""cancel_booking"" in bookings controller performs more than one operation i.e. it updates the booking details and also updates the tour details. the code to update tour details is common and can be dry'ed out. )model ""user"" should have been named as ""customer"" as ""user"" of the system can be admin, agents or customer and what i can see from the code is that ""user"" model is defined to implement customers model. )&nbsp;also, the method ""cancel_booking""&nbsp;has too many nested if-else blocks.",1.0,1.0,1,140
used unittest/functional instead of rspec. please do testing with roles rather than just gets. no models tested.,1.0,1.0,1,18
"it is extremely simple and straightforward, and i had no issues in testing out the features at all. &nbsp; there is one thing i could suggest if i may, that the search fields were at the very bottom of the tours page. at first, there were a lot of tours and i did not realize that was where the search was, a better positioning would be a little nice. a user might not want to scroll through an entire list of tours to eventually reach the search bar.",1.0,1.0,1,88
system appears to work well. tours should display the itinerary. having contact info as a phone number instead of a foreign key to user is awkward. admin cannot create users. you should probably have a link to bookmarks and bookings from the tour index page not just the show page.,1.0,1.0,1,50
"the bookmytour function in booking does not appear to be streamlined. what is the point of mode ? perhaps an ""allow waitlist for seats"" option would be better than somewhat related cases. also makes for sloppy code in the bookings controller. for tour filteroutresults, it might be better to pass a dict of search options and use the keys and values in the where statement. current version with a bunch of if statements is sloppy and you could not easily add/remove search terms. when creating a search, why do you store things in the session?",1.0,1.0,1,95
&nbsp;may want some additional navigation links. see additional comments.,1.0,1.0,1,10
everything is well mapped and looks good. except&nbsp;i'm not sure whether another bookings_waitlist.rb&nbsp;model was needed to add. you could have simply used the same bookings&nbsp;model to implement the waitlist functionality.,1.0,1.0,1,38
"i believe that the code is messy and needs to be cleaned up in the following way: ) the logic should be moved from the controller to the helper methods. a lot of&nbsp;conditional statement&nbsp;that has been implemented here make the controller code difficult to understand. ) the code should be properly commented. i found the amount of comments to be lacking and hence i could not understand many parts of the program especially inside the controllers. ) no helper method has been used to clean up the code other than the session helper. this, should be cleaned up in my opinion.",1.0,1.0,1,102
"i believe that the ui is very bare bones and that is why it does not confuse me at all about what i need to do with the application. i can navigate easily to all parts of the application.&nbsp; however, the readme does not provide any instructions about how to navigate throughout the application which should contain information about navigating throughout the application.",1.0,1.0,1,64
"the code generally follows good ruby and rails practices. however, there are some&nbsp;suggestions that i would like to make: . other than the session helpers, there is no code that has been moved from the controllers to the helpers. a good rails practice would be to move the logic statements from the controllers to the helpers. . the same can be done with the views.",1.0,1.0,1,65
"the code generally follows good rails practices. the flow between models, controllers and views is easy to understand. however, i would like to point out that the team should consider moving the logic from the controllers to the helpers. also, it was advised to us to use postgres sql in the production environment which has not been done. instead sql lite has been used.&nbsp;",1.0,1.0,1,65
"the code is well constructed and easy to understand, however, i felt it would've been much readable if there were more comments to represent what each block of code does. the team has done a good job of evenly splitting the code into appropriate methods instead of stacking all the operations into an individual method. the naming convention they followed is also pretty straight hence making the code easy to follow.",1.0,1.0,1,72
"- code quality is pretty good. follows good naming conventions and can understand what each function is doing when read through.&nbsp; - schema wise, i see a bit of redundancy.&nbsp;for this project ""location"" was not needed to be a model and could have been implemented with tour. - if used oath, by default user is given ""googleuser"" password. as they will be logging in using google key, this default password could have been removed or a random value that admin cannot see would have been a good option",1.0,1.0,1,88
" )yes, each method handles only one task in most of the places. but, inside the tours controller, validations were added in the create and update methods. it would be better to implement them as separate functions and placing function calls within the controller. )yes, controllers and models were implemented separately to address bookmark functionality. also, a separate method call does the job",1.0,1.0,1,62
"it has followed pretty good practices, but felt some of the things could be refactored tours controller is clumsy. 'delete image' could've been handled in a controller which handles rest of the image functions. 'my tour' and 'set tour' and similar functions could've been added to helpers instead of controllers regarding the models, you can add validations here to check the fields before getting stored in the database. i can see that you have handled them in logic but it might be easier i felt waitlist need not be that heavy because it is needed only for updating the booking. it can be added inside bookings controller itself regarding the views, so many validations and operations are preformed in views. for eg, validating the minimum length of the password. it is better to add validations in models and use views for rendering. i can see that you have done a lot of work, but as a peer seeing the code for the first time it took a while to get used to the flow",1.0,1.0,1,176
"for the most part, i found the code easy to read, and was not confused by the code organization!&nbsp; a few suggestions: the email format regex&nbsp;/\a[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i&nbsp;is defined in the code in places in app/models.&nbsp; to be more ""dry"", you could define this in just one place (perhaps in a helper). there are occurrences of ""&lt;%#"" when i search in&nbsp;app/views.&nbsp; ideally once code is known not to be useful, it is removed rather than commented out.&nbsp; this can make reading the code easier. i was expecting to find more code in&nbsp;app/models.&nbsp; my understanding is that in an mvc app, the ""m"" should do a lot of the heavy lifting.",1.0,1.0,1,132
"for the most part, i found the code easy to read, and was not confused by the code organization!&nbsp; a few suggestions: the email format regex /\a[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i is defined in the code in places in app/models.&nbsp; to be more ""dry"", you could define this in just one place (perhaps in a helper). there are occurrences of ""&lt;%#"" when i search in&nbsp;app/views.&nbsp; ideally once code is known not to be useful, it is removed rather than commented out.&nbsp; this can make reading the code easier. i was expecting to find more code in&nbsp;app/models.&nbsp; my understanding is that in an mvc app, the ""m"" should do a lot of the heavy lifting.",1.0,1.0,1,130
"rigorous testing has been carried out on the user controller and model. url directed testing has been carried out in various files such as ""searches_controller_test"" and ""tours_controller_test"". some more basic test cases like email uniqueness and validation, password limit validation could have also been implemented. this would have added better test cases as well as helped in running some basic functionalities too. several test cases have been added to the rspec&nbsp;file.&nbsp;",1.0,1.0,1,74
"the code is quite readable,&nbsp;that is the models, controllers and views have been correctly placed with proper code. it is easy to find the code of a particular function looking at the name of a file. when a spelling convention is considered, the team has done a good job. the models must be singular,&nbsp;which are in its&nbsp;place. in one particular case, ""bookeds_controller"" is set as a file name, which is a misspelling instead of ""booked_customer"". the same spelling error has been repeated in views too. in case of function calls, the team has taken careful measures to call the functions implemented correctly. but in case of a bookmark, that particular functionality has not been correctly implemented. in coding a particular method, no long and nested methods are called, that shows that the team has tried to work with simple&nbsp;method calling correctly.&nbsp;",1.0,1.0,1,150
"the commits made on the github repository are not very clear in the first place. this sometimes becomes very difficult for a developer to track the code and identify the changes made during a particular commit. also, most of the commits have been contributed by a single person rather than the team. when considering commit changes in round , several commits and changes have been made. the app is made much better through the changes made after round . in case of some functionalities, the team has shown very good&nbsp;efforts as compared to the round application.&nbsp; i would suggest the team to make use of all the team member and its contributors in the upcoming projects.",1.0,1.0,1,117
"the code on github follows good ruby and rails coding practices. the code is readable and elegant. the work focuses more on the task and less on the technology. on the other hand, when maintainability of the code is considered, the github could be maintained better. for example, when a particular commit is made to update the code, the comments could be more clear, in order to identify and keep a track of the changes in the future.&nbsp;",1.0,1.0,1,79
"the mapping relationship seems to be good enough for the functionalities&nbsp;to be implemented correctly. for example, the agent-tour relationship was found to be to n appropriately. however, while implementing the waitlist functionality, booking model could be used instead of creating a separate&nbsp;one.&nbsp; this would have been an effective technique since a whole separate model need not be created in that case.&nbsp;&nbsp;",1.0,1.0,1,69
there seems to be contribution to the repository from only one member of the team who has updated git properly when the changes were added to the app. the others could also should feel free to push the functionalities added by them so that they can also get to work with a version control system.&nbsp;,1.0,1.0,1,56
"user interface is intuitive and the readme is very well documented.&nbsp; only recommendation might be to place the bookmark button next to the book button when tours are listed, but it's not a big deal.",1.0,1.0,1,37
your tours_controller and users_controller has way too much logic in it. according to rails best practice you should move most of that logic to the model.,1.0,1.0,1,26
tourscontroller has a huge if statement in it. there has to be a more better way to do this. maybe take advantage of datetime class instead of using strings.,1.0,1.0,1,29
"the system properly handles all relationships among the tables. no obvious problems our found. all relationship data is found in the models files. for example, user has many reviews, listings (for agent), bookmarks (for customers)m bookings, waitlists, tour (through listings, bookmarks, bookings, waitlists) tour has many reviews, photos, visits, bookmarks, bookings, waitlists, listings, starts_ats and etc. i see that some tables in the system are unnecessary, such as starts_at. since each tour has its own starting date and starting location, this relations is -to- and could be stored within tour table. however, the team has chosen to do it different way. give full credit since no obvious db relationship errors are found.",1.0,1.0,1,113
"overall, code looks clean, and follows good ror coding practices to a certain extent. i've noticed couple of things that can be done to improve code quality: . avoid bulk of if/ elsif / else statements in the controller. in fact, controller should be as simple as possible and contain no logic whatsoever. . keep all the logic in the model. . app/controllers/tour_controller.rb is a little over-extensive, which makes it a bit complex. may be consider refactoring it. may be bring some of the methods out of the file, or create additional helper or even new model classes. . model looks clean and with enough comments in it. i've noticed it has a way too many relationships with other tables. but this is your team's design, nothing can be done to improve it.",1.0,1.0,1,135
"the controllers/bookings_controller.rb file is a little overloaded with bulk if/else statements. in general, avoid bulks of if/ elsif / else statements in the controller (lines - - )). try to make your controller as simple as possible and move any logic out into model. if it becomes too bulky, consider refactoring controller. may be bring some of the methods out of the file, or create additional helpers or even new model classes instead of bulk of if else statements. model look great. but consider refactoring some views files. for example, tours/index.html.erb has a lot of complexity with if statements. i gave full credit because i know it is kind hard to keep track of all the things, especially in such short time. we are trying to make things just to work. otherwise, really good app.",1.0,1.0,1,137
"the interface was good in terms of being able to get to the various features from most pages.&nbsp; it would be good to add the navigation links to the pages associated with the user profile.&nbsp; also, it would be good to send the user straight to their profile instead of a profile list if the user is not an admin.&nbsp; the ""itineraries"" view was a bit confusing to me.&nbsp; i believe that itineraries should be associated with specific tours, rather than being peers to tours.",1.0,1.0,1,89
"a lot of the business logic was in the model, which is good.&nbsp; i believe the logic that filtered resources by user role would have ideally been put into the model as well.",1.0,1.0,1,34
"the admin login seems to be fixed as i can now log in as an admin. creating a tour with empty field still results in an error, and i was not able to create a tour with valid format without getting errors (possibly due to the format of the data fields). the new tour creation would be easier if the date was a drop down menu. admin cannot see accounts.",1.0,1.0,1,70
"overall, the commit history documents changes made throughout the project period and i can see one pull request as well as branch. i would recommending making more branches as per feature and merging it to master so it is easier to see changes throughout the project period.&nbsp;",1.0,1.0,1,48
"the application is deployed on heroku, and it is overall fairly intuitive. readme could be more descriptive in terms of which field we need to fill in while booking a tour and making an account. waitlist and booking steps would also be beneficial as i was not able to do either. on the flip side, the ui is pretty good and looks modern. sign up page is also simple and effective. profile edit feature is a great and easy to update as well.&nbsp;",1.0,1.0,1,84
"one improvement you can make is isolate the sql code to the models by making a function in the models, and including the filters such as the search in tourscontroller. it is good practice to put the database code in models rather than the controller itself. overall, dry principle seems to be followed, and the code is easy to follow.",1.0,1.0,1,60
the readme file could have been made better by giving the reviewer a clear demarcation of what you have implemented and what you have not. because the readme file suggests a lot of things that you have missed out.&nbsp; you can add a section always to state clearly what is left to implement.&nbsp;,1.0,1.0,1,55
"-the admin part. i can see the list of tours and customers. i can create tours and customers.&nbsp; -the agent part. i can create and edit tour. i can see the bookmarks from customer. -the customer part. i can see the list and details of tour, but i can't book the tour. i think they might have the&nbsp;wrong link with booking. the link makes me go to booking list page. -others. couldn't sign in with google account. when i click sign up wi google, it gives me page. it might because the devise&nbsp;gem. couldn't search tour properly. even when i search the tour that exists, the page went wrong. ",1.0,1.0,1,117
"i have to say the layout is very beautiful and i find you use bootstrap. i can find where is to sign up and login. but the problem is i don't know how to book and remark my tour. i saw there is controller in the code, maybe it is not complete or something. in readme, it's great that you provide admin account and others mentioned in the documents(the other two team i make review didn't follow that). as the comment on piazza, it would be better to write the connection with link. this is also the problem of my team. i think it will make the whole readme file more clear and understandable.",1.0,1.0,1,118
"from the code, i can see the effort in this project. there are a lot of commit here and whole team involved the work. the whole structure of code is nice and i can find the relationship between each object through the name of object. i t is easy to figure out how the code works. the only problem is that you haven't fully used model part. you can define functions in model instead of controller. it is more reasonable in mvc model and it will make the whole structure easy to work and maintain i think. all above is my understand of mvc model, fyi.",1.0,1.0,1,107
"interface is decent. one suggestion i'd give is to add a 'back' button to go to the previous or the required page. also, i wasn't able to&nbsp;go past more than a few functionalities.",1.0,1.0,1,37
"the user interface is very intuitive and easy to use. additionally, the missing features have been highlighted in the readme. separating the role/user specific views and functionalities was a nice touch. however, there are chances of missing the bookmark and book buttons, because its at the very bottom of the page. i would suggest moving these buttons to the top or making them bigger.&nbsp;",1.0,1.0,1,66
"the business logics are applied on the controller, while it would have been meaningful if implemented in the model. for instance, in the bookings controller, the update and create methods are too long and the entire business logic is applied within those methods.",1.0,1.0,1,43
"code is written cleanly for the most part. in some instances, for example in the cancel method in the tours controller, the 'if' statement evaluating newseatsavailable is a bit long, and could likely have used some additional method calls.",1.0,1.0,1,39
"looking specifically at the tours controller in the index method, it is very easily readable. there are some parts (for example in the waitlist method) where macros could have been used to more easily understand what's going on in your code, but otherwise it is quite good.",1.0,1.0,1,48
"controller testing is adequate, it seems that positive test cases are covered. it seems that more negative test cases could've been created, however. model testing isn't very thorough.",1.0,1.0,1,30
"the basic functionality works very well. one thing i don't like is that you can't just list all tours. there is the search tours button, but it won't let you just not search anything.",1.0,1.0,1,37
since the travis ci build is not passed. the team should make some changes in the code to be working appropriately then it could be merged onto production server. it need not be done from scratch but there are few changes that must be made to pass the build.,1.0,1.0,1,49
as both code climate and build failed. these things have to be handled before deploying or merging,1.0,1.0,1,17
the writeup is very clear and informative. it also gives introduction to new concepts being used for implementation. though it is difficult to understand what the project exactly aims at. it would be better if they include a seperate section on the problem statement and the tasks that needs to be accomplished.&nbsp;,1.0,1.0,1,53
the written code is easy to read and understand and merges well with the existing code base. the function length can be improved and the dry principles should be kept in mind. some code get repeated which can be merged into a helper function.,1.0,1.0,1,44
"i feel the code is ready to be deployed with a little modification that will help in improving the codeclimate responses. there is no need to redo it from scratch. others might feel that some more refactoring can be done. for example, the naming conventions are improved keeping one thing in mind, the common goals can be self understandable, and not clog the function names. there can be many other directions of improving the&nbsp; naming conventions such as - the 'get_link_updated_at' function name does not make much sense or give idea of whatt it does.&nbsp; - it could be changed to -&gt; 'get_last_modified_link' many variable names could be refactored as well, not qouting examples as there are many. but how much ever the team has done, it is functional, tested, working and improving piece of code which i appreciate.",1.0,1.0,1,139
"write-up looks good. they have explained why they have refactored, what they have refactored. they could have included a portion on why they 'have not' refactored certain functions, like what they thought made it a good function or pattern for not changing the existing code/name. i hope i make sense. they claim to use strategy pattern, but i am not sure how. it would have been better if they had given a bit of description on which of their code implements strategy pattern and how. to make the entire document more succinct, they could have added some more explaination to their screenshots, though they are self-understandable, but might not be so for someone who does not want to delve very deep into their code or implementation.",1.0,1.0,1,129
"i don't think so. there are some build failures that needs to be looked at. but it definately&nbsp;doesnt need to be redone from the sratch. the team has put good amount of effort in the working of said features. a good starting point would be to see why the build is failing, revert back changes on the db files if they are not reqiured and see if the existing test cases work well.",1.0,1.0,1,76
"the write-up is clear and concise - it does the required job to make the reader understand the motive, goal and way of implementation of the project, however there are a lot of ways to improve it: ) a demo of the working code could be given ) a fllow of implementation could be shown to visually draw the mvc interactions used for the project&nbsp; ) the writeup could mention what more needs to be done to complete the project in its complete sense or any future refactoring needed. basically adding more visual components to it could have improved the quality of the wirteup &nbsp;",1.0,1.0,1,103
scope of improvement: there was no proper mention of the rspec testing. this is something team could improve upon for the next round. i could see some of the commits related to rspec which means the team has worked on it. it would be more presentable if the team could include the rspec work in the document.,1.0,1.0,1,57
"the work that the authors did was adequately explained. there is just probably a misplaced title ""definition , demo code and snapshots""&nbsp;",1.0,1.0,1,22
"all the test cases have passed but they do not mention what exactly is being tested. if there is a little more elaboration on that, it would be perfect.",1.0,1.0,1,29
all the tests have passed but a little more elaboration on what it is that they have tested would be helpful,1.0,1.0,1,21
the travis ci bot shows that the build failed. it should have been updated after the first submission.,1.0,1.0,1,18
"the test coverage was reduced by the changes. also, there are a lot of code climate issues that came up. you can work on them to overcome that and it will help in improving it overall.",1.0,1.0,1,36
"the writeup mentions the changes performed but not the motivation behind it. also regarding the design principle, it just mentions the pattern but not the part where it was used. it would be easy if you could point out the part where you used the pattern in the writeup.",1.0,1.0,1,49
the writeup is very well written and it covers all the changes they performed but not the reason as to why a certain change was performed. can include extra information regarding the reason for the changes.&nbsp;,1.0,1.0,1,37
"i could not find any section of the writeup which explains why the authors came up with this approach or which design principle or pattern the team would be implementing. it would have been a&nbsp;better approach if the team&nbsp;had specified the design principle in the ""future works"" section (since most part of the implementation is yet to be completed)&nbsp;to indicate the plan of work.",1.0,1.0,1,70
i could not find any test plan in the writeup but i checked&nbsp;response_controller_spec.rb&nbsp;and i can see few test cases written over there. more test cases needs to be added to make sure existing functionality is not hampered.,1.0,1.0,1,42
there was no test plan section. although as suggested above a video showing the passing of all test cases would be a great add.,1.0,1.0,1,24
the writeup provides detailed information about the different fixes performed by the author. more information regarding testing could be added such as a video of the rspec tests passing to prevent any issues being missed during refactoring.,1.0,1.0,1,37
the good news is test coverage has slightly increased. bad news is that there are shallow tests. fix this by writing relevant expectations (not static contents like html code).,1.0,1.0,1,29
"looking at the pull request, i see that the build passed in travis ci. however, there are unnecessary rspec gem require. suggestion: remove it as it is already included. the expertiza-bot also suggests to avoid shallow tests by writing relevant expectations (not static contents like html code).",1.0,1.0,1,48
no testing link provided. team should have deployed in an vcl instance to allow testing of changes by the team even though this a refactoring project.&nbsp;,1.0,1.0,1,27
"there are changes to the schema.rb file which should not have been included in the pull request. this file should have been skipped. otherwise, the project seems to be ready to be merged.",1.0,1.0,1,34
"the build passed, but there are still warnings on the pull request. most of them are warnings that are not under the team's control such as more than lines changed, but one or two of them such as ""your pull request has many duplicated commit messages. please try to&nbsp;squash&nbsp;similar commits.&nbsp;and using meaningful commit messages later."" could have been resolved.",1.0,1.0,1,66
"in the users_controller, you may want to transform the block comments on lines - into method comments and make them a bit shorter (for instance, lines and are not useful. would belong in wiki but not in code comments). on line of the users_controller, is there something in the creation of the assignmentquestionnaire that sets the default notification value? because that seems like a roundabout way to set that. is there a better way?",1.0,1.0,1,73
"why did you change files in the bin directory (such as bin/rails)? if this was unintended, you should remove these changes. you also may not need to send the .coffee and .scss files; you may want to remove these.",1.0,1.0,1,40
"in the account_requests_controller, maybe 'create_approved_user' should be 'create_user'. it looks like this function also has the rejection condition. you refactored names of 'requested_users' and maybe you should do the same to the method 'create_requested_user_record'. you might want to make it 'create_account_request_record'. the method 'foreign' does not have a very instructive name (unless that is a special syntax or convention). 'find_user_roles' may be a more informative name. personally, i lean in favor of 'get_role' over just 'role'. &nbsp;",1.0,1.0,1,77
"in the account_requests_controller, the roles_for_request_sign_up method does not need a separate method. in the users controller starting on line , shorten the comments a bit. remove commented code lines in the users_controller (line - ). long comments on would be better placed in the wiki. remove the project number indication from comments. for pagination, is there a reason you pass options and not a number (that being the number of records to retrieve)? why have the mapping on line ? aside from small details and comment changes, code looks good!",1.0,1.0,1,86
"the writeup is good and has well structured. however, i felt that design pattern should have been above the implementation section which makes the reviewer look for what kind of design pattern they have implemented and then check for the same when looking at the refactored code. and same with screencast. it should have been above the implementation section.",1.0,1.0,1,59
"the writeup does not include any section to explain how and why the authors did their work. also, the team has not included a design pattern section in their writeup for the implementation that is carried out. i would suggest the authors to include information from the project description.&nbsp;",1.0,1.0,1,50
"the writeup adequately explains the functionality of the work in the about section. the team is trying to refactor the model to make the code close to crud functionality. the team has not added a section for how and why the code is being refactored in the writeup. i would suggest the team to include a ""proposed approach"" section for refactoring the model.",1.0,1.0,1,63
"their writeup is decent and they do have some good implementations in their fixes. using helper functions where the code was not dry before was a good strategy to make it dry. however, i did find some objections to their choices: . the team showed what solutions they implemented to fix the bugs in the code, however, they did not show a ""before and after scenario"" to argue why their code implementation is better now. some of their code snippets are confusing as to what they are trying to accomplish in that code.&nbsp; . they renamed&nbsp;ad_info&nbsp;to&nbsp;get_ad. however, i believe a more intuitive way to rename this would be get_ad_info, especially if we are not trying to use every ""ad"" information here.",1.0,1.0,1,126
"i found the code to fairly well written. i dispute some of their naming choices and the lack of&nbsp;testing documentation makes it harder to review. some design choices, on the other hand, like the use of helper methods, are good. i believe that they tried to make their code as dry as possible. i still believe some of the if-else statements in the controllers should be entirely moved to a helper function.",1.0,1.0,1,75
"i sincerely believe that the team has made a great effort to put all their design choices into their documentation and i find the code to be explained in an easy manner. i like how the team has made use of a problem and solution format to drive their point home and the document is to the point. however, i would like to point out a few issues. . the document fails to mention any testing that they have performed on their new code. . the implementation has not been hosted on any vcl or heroku app, so testing their implementation is difficult for me as a reader.",1.0,1.0,1,106
"the functions previously existing in another controller were moved to a newly created controller. all the methods are named as [crud]_&lt;controller_name&gt;. i can understand why there was a need fro this when all the methods were existing in the previous controller but now in the new controller, you can refactor the function names to [crud] only. that would make it a lot more in line with ruby on rails style of naming.",1.0,1.0,1,76
i understood clearly the questions as well as the solutions implemented from the documentation. the documentation could have been better formatted. (also there are a few 'to be completed' remarks in the documentation) i also would have liked to see a screenshot of all tests of both controllers successfully pass so that i would know that no functionality as broken because of creation of a new controller and changes to routes.,1.0,1.0,1,71
"the project is not ready to be deployed. the biggest concern is the build failure. also, the authors have not provided a vcl instance to test changes and not given screenshots in the documentation of them having tested those changes. this makes me a little apprehensive of deploying these changes. i do think that the work that has been done is worth while. it just needs a little more effort to make the build pass. i don't think that this warrants enough work that another team has to be assigned this project. if this team could just complete this since they already are familiar with the changes they made, that would be perfect.",1.0,1.0,1,114
the write up was very clear and well written. some of the explanation sounded repetitive.&nbsp; but i would much rather have a verbose documentation than a vague and short one. my one problem is that is lacks the screenshots of test cases passing.&nbsp;,1.0,1.0,1,45
"authors have mentioned that the team has used strategy pattern in the last section of the wiki. overall, there are just lines of code added and i am not sure where this pattern has been used.&nbsp; from the three partials changed, the method names are changed and in the helper file,&nbsp; its mosly refactoring the method name and adding comments &nbsp; any inormation on how the team has used the strategy pattern and why did they use this pattern would help the reviewer to understand the writeup in a better way.",1.0,1.0,1,93
"the authors have tried explaining the motive behind the proposed solution. there is no mention about the design principle or the pattern and i believe, we might not need one for this project.&nbsp; &nbsp; explaining a bit more on how the solution can help in redution of instructor's work or on what basis did the team finalize on this solution might help in easy understanding",1.0,1.0,1,67
"authors work cannot be tested at this point. as this is a new feature, i believe deploying the solution on heroku/vcl can help the reviewer to verify the feature. in case, this is a bottleneck, a short video can help the reviewer in better understanding",1.0,1.0,1,46
"write up looks clean and easy to understand. from the first round, team has made changes to the write up to make it more understandable. &nbsp; i would still be interested in reading ""proposed solution"" section (removed in round ). task identified section clearly explains what the team wants to do. the explanation for the solution taken could have been added for better understanding.&nbsp; &nbsp; at the end of the wiki, ""design"" section has been introduced with no explanation what so ever. was this due to the pressure of adding one into the project? i couldn't find where the team has used delegation pattern. it would have been great if the team explains more about the usage of this pattern in the project",1.0,1.0,1,124
"the variable names and other stuff looks clear. i am not sure why the team used this line when compared to the previous version ['super-administrator', 'administrator', 'instructor', 'teaching assistant'].include? current_role_name one major reason not to use this kind of coding is this line crosse characters. the previous version that ran across various line was much easier to read and understand. in case, if you take up code review, you don't wnt long lines like these in your code ",1.0,1.0,1,81
"&nbsp;the team has tried explaining why they are making copies of few files in the design choices section. the teams explaination&nbsp;"" even though the two forms happen to be the same right now, some time in the future, they may deviate. this option gives some flexibility to the accounts_controller to modify the form without affecting the user's form."" does not convince me. &nbsp; the partials copied are not the entire files rather email, password etc. as an application, there is hardly any change that we make to these fields and if made, would like to see the changes on all the pages. copying these partials misses out the advantage. in case, there needs to change these partials (say email form), i would see a same kind of change in the entire application. in my understanding, using the same partials would give us an edge when compared to copying the files",1.0,1.0,1,153
"there was no code changes in the nd round. also, the changes informed in the first round of reviews don't seem to be made into author's work. &nbsp; additionally, the number of commits is too high. there have been numerous failed commits. i would suggest testing the code locally and then commiting only when you are sure that the code is running as expected &nbsp; fd @kunalnarangtheone comment get user list for testing purpose f eb @kunalnarangtheone comment get user list for testing purpose try cf c @kunalnarangtheone comment get user list for testing purpose try c a @kunalnarangtheone comment get user list for testing purpose try e f d @kunalnarangtheone comment get user list for testing purpose try a dfd @kunalnarangtheone comment get user list for testing purpose try e cd ba nikitaparanjape merge branch 'debug' into beta a fb a @kunalnarangtheone comment get user list for testing purpose try fc c @kunalnarangtheone comment get user list for testing purpose try dec d @kunalnarangtheone comment get user list for testing purpose try c &nbsp;",1.0,1.0,1,177
"team has created the new test file based on the requirements for this project. as the team introduced new controller in ""account_requests_controller"", a corresponding rspec file has been created and the tests from users_controller.rb has been moved here. &nbsp; however, there is no additional test cases added by the team. as there has been quite a few changes in the way account is requested, adding few tests here would have made more sense.&nbsp;&nbsp;",1.0,1.0,1,76
"&nbsp;the team has copied the tests from user_controller rspec file&nbsp; and have tried running the test. based on the screenshots, it looks like all the tests have passed. &nbsp; as this is a new controller, i would suggest the team add a couppleof specific tests that trigger usage of account_request_controller in a specific way. using the same tests may not cover all the voundary cases",1.0,1.0,1,67
"&nbsp;yes, writeup clearly explains one part of the project, that corresponds to pagination of the user page. the reason to choose is clearly mentioned and the team provides enoughtinformation for the user to understand. &nbsp; i would suggest explaining the problem statement at length (separate all methods related to the workflow of a requesteduser object). for a first time user, the explaination for user_controller needs to self sufficient. also, as there was no requesteduser controller, explaining the need of this object or how it is being handled and why do you need this to be moved out would help the reviewer to understand in much better way",1.0,1.0,1,108
the team has pushed the code to beta branch and have not synced with master to run code climate/travis or other services. i would suggest team to read through piazza post that tells how to sync the branches in git,1.0,1.0,1,41
"code looks clean in most of the cases. almost all the changes are done in a reasonable way. &nbsp; one of the concern i have is the usage of parameterized query in users_controller.rb file (line ) @all_roles = role.where('id in (?) or id = ?', role.get_available_roles, role.id) as ruby active record in inherently uses parenthesized query and the usage in this context, this line may not be required.&nbsp;",1.0,1.0,1,69
"i'm giving the benefit of the doubt on whether the automated test&nbsp;assignment_spec.rb&nbsp;passes.&nbsp; i actually got an error beginning ""failed to load command: rspec"" when executing ""bundle exec rspec spec/..."", even though this works flawlessly on my team's code.&nbsp; however, i don't have any reason to believe that this is the fault of the code.&nbsp; rather, every time i have tried to get a rails project up and running, it has been quite bothersome (as noted further up in this review), and i simply lack the time to fight my way to a running state for several reviews.&nbsp; the tas are practiced in this and i'm sure they will execute the automated tests on every project.",1.0,1.0,1,128
"very clear, with the exception of how this requirement was met:&nbsp;""in addition, functions code can be optimized to ensure that it follows dry principle"" also, one unneeded method was commented out.&nbsp; imo it is preferable to remove such a method entirely rather than commenting it out.",1.0,1.0,1,49
"according to me the code added for the new function doesn't seem to be long enough, i.e, cannot be refactored. the one thing that could have been improved in the project is the addition of the comments for the new code added. this would give a clear idea for anyone seeing the code for the first time.&nbsp; along with that, the coding style also seems to be good with no bad namings as well.",1.0,1.0,1,77
"the writeup is clear and explains adequately on what is to be done and how is it done. the project idea is very clear and is explained on the wikipedia page along with the workflow of the project. for understanding, the authors have also given a brief idea and an introduction to the technologies used ""rust"" and ""servo"". however, the wikipedia page only gives partial information (that is, what all is implemented until now) because of which it is not very clear as to what is to be exactly carried out in the project. i would suggest the team to include some more information on how to follow the code.",1.0,1.0,1,110
"the writeup did not have any section on what work they did and how they did it. i would suggest the team to include a section of ""problem statement"" which would list the tasks that need to be carried out. because at times i had to go through the project description to understand the ideas of the project. also, the team has not included a design pattern which must be added. i would also suggest the team to include ""strategy design"" pattern as it is used to dry out the code.",1.0,1.0,1,91
"since i could not find any test cases other than a few mentioned in the response_controller_spec.rb&nbsp;file, the authors have not converted the test plan into automated tests. more test cases need to be added to make sure that the functionality that is existing is not hindered in any way possible since that is a very important thing to be considered during refactoring.&nbsp;",1.0,1.0,1,66
"the writeup introduces the concepts (servo/webbluetooth) the team is going to work with and what their work to be done is (refactoring vale from enum to trait). they have listed the steps to be followed and files to be worked with. the build procedure of the repository is also mentioned with which i was able to set up the environment.&nbsp; but that is all i was able to see in the wiki page, there were no details about how much progress the team has made with respect to the project and even in the links submitted i was not able to see any commits or pull requests. it would have been helpful if the team had mentioned the amount of progress/problems they are facing while implementing the above project.&nbsp;",1.0,1.0,1,133
the code was refactored and made dry-er.&nbsp; the only possible issue i see is confusing and long if conditionals.&nbsp; i think creating a helper class containing methods with meaningful names for those conditionals might be helpful to understand what the code is doing better.,1.0,1.0,1,47
"testing section needs to be improved. please include all of testing strategies team used to verify integrity and correctness of the code. provide enough information indicating how the code improvements/changes were verified and tested against new issues that could be caused by your implementation? list all relevant testing steps performed on the fixes that you have done. ensure to test your code changes/improvement with at least following steps and include&nbsp;results/observations in the wiki page: . code inspection . passing/fixing existing rspec tests (you still need to fix ""response_controller"" test) . running through a live demo in the expertiza instance through the ui that runs over changed/improved code in the controller (you may even record a short live demo and submit it here) the above test strategies are sufficient to ensure integrity of the code and indicates that you did not introduce new issues into the source code. complete this information into testing section.&nbsp;",1.0,1.0,1,158
"no tests were added and travis did not pass.&nbsp; since new methods were introduced, corresponding test cases should have been added.",1.0,1.0,1,22
"the writeup describes the reasoning and approaches used well.&nbsp; i would note, however, that in some cases the code is actually changing the behavior of the application, which is strictly speaking not refactoring.&nbsp; for instance, problem now flashes an error for a previously allowed operation.&nbsp; problem changed error message text.&nbsp; also, problem simply added comments to a method that was seen as too long, which arguably does not solve the problem.&nbsp; problem introduces the ""can_delete_topic?"" method which has side effects beyond simply returning a bool, which i believe is not really kosher.&nbsp; a route was removed from routes.rb, which presumably also changes the application behavior.",1.0,1.0,1,112
"the writeup includes before and after, and mentions the design pattern used. however, i would advise more explanation on the strategy pattern and concrete examples through screenshots. overall good attempt!",1.0,1.0,1,30
the names are definitely shortened which is good. however they still include the 'get' prefix where in most cases its not really needed. for example get_team_color can be replaced with team_color.,1.0,1.0,1,31
they have given examples for the renaming the method names and adding comments to various functions which is good. however i felt they could have cut this down short by giving fewer examples and giving more examples for code optimization for implementing dry principle which they mentioned in the problem statement.,1.0,1.0,1,51
"compared to the first round, the team has improved a lot with respect to the code. looks like the team has followed dry principle and haven't added unnecessary functions. the only problem i had was following the code that they've written as the code walk-through is pretty unclear to me. i feel comments could have been added for the code or the code walk-through could have been more clear.",1.0,1.0,1,73
"the writeup is good. they've mentioned the problem statement and they've added solutions for each and every problem. they've also added the test cases that need to be checked. the only problem is that, no information has been given regarding setting up the environment for expertiza. i feel they could have added that to ease the work for the people reviewing.&nbsp;",1.0,1.0,1,65
the write-up is clear. each and every&nbsp;section explains what the issue is in the users controller and what approaches have been done to overcome the issues. the only suggestion that i have is to add a bit of information regarding what kind of tests have been performed.&nbsp;,1.0,1.0,1,51
"in the create method, on line where&nbsp;prepared_mail is assigned, i think the method call is long. a suggestion is to have the method call with the parameters on multiple lines instead of having the method call all on one line.",1.0,1.0,1,42
no test plan found. please add a test plan section to the wiki.,1.0,1.0,1,13
i really like the before and after pictures along with the written descriptions of the changes. the table of contents is also nice. i think it would be great if there was an explanation of what the&nbsp;http:// . . . : &nbsp;link is for. i assume this is the example to test. also to provide the login information (in case the reviewer forgets).,1.0,1.0,1,62
"i think the code written in the controller is well written. only suggestion i have is in the ""redirect"" method. there is a if&nbsp;params[:return]...else if&nbsp;params[:return]...else if&nbsp;params[:return]... code block section. perhaps use a switch statement to have ""cleaner"" code.",1.0,1.0,1,49
the writeup is very explanatory but they have not added any snippets&nbsp;of their&nbsp;code showing where and what are the changes they made. it would make it much easier for the reader to find the issues and understand them.,1.0,1.0,1,42
"a high-level overview is given in regards to what was done and why it was done, but it is not explained on a case to case basis exactly why things were named as they were. i think significantly more detail can be given here.",1.0,1.0,1,45
"the write up explains the how they implemented clearly. they had a few name changes done. the new names follow good practices and proper naming conventions. when it comes to the whys, there are places were they have mentioned why they implemented the needed a certain way. for example, load_add_signup_topics is renamed to get_assignment_data. they have explained that they have done it to make it more intuitive. for solution in problem , they have moved duplicate code to helper function but they have not explained why they did so. maybe they thought it was self-explanatory. but adding such details would make the page even better. &nbsp;",1.0,1.0,1,106
"there is a portion in the page which has a little bit of code. but nowhere does it specify if they have done it,&nbsp; or if it is part of the problem statement. &nbsp; it would be great if the page followed a flow: problem statement-&gt;steps to take-&gt;implementation method",1.0,1.0,1,54
the write up is good. maybe contains too much information and is a cluttered. having simple and brief information in certain topics would make this an easier read. (adding bullets wherever possible),1.0,1.0,1,32
the write up is very clear. additional links describing certain topics makes it a little easier for the readers to get familiar about the project. &nbsp; it would be better if they add the problem statement or tasks they have to finish to understand the project objective better. &nbsp;,1.0,1.0,1,49
"i'm not sure i personally like the @topic.update_attributes being such a long line setting multiple things at once. the old way of having each thing on its own line was more intuitive and easy to read. perhaps if keeping it the new way, each param can be put on it's own line and lined up, even if it's actually all one executable line of code.",1.0,1.0,1,69
"the team did a good job with illustrations and diagrams for the exiting feature. however, there wasn't any diagrams or flow charts showing how the team was going to make improvements to the existing feature. i think a flow chart would do good to capture the thought process and flow of the future feature.",1.0,1.0,1,55
"the document did a great job at explaining the existing feature and how it operates. i believe the team should spend more time laying out their plan for improvement of the current feature as well as testing their changes. for instance, the wiki has a test plan section that states the team will run existing rspec tests. however, if the team adds new code to an existing model (i.e create a new method) or create a new model all togther, this would not have coverage in the existing rspec. the team could state that they will add/modify rspecs to have coverage of their new code.",1.0,1.0,1,107
"the team tried to implement few test cases. i didn't fully understand the implementation, i felt it would have been better if there's more explaination included regarding the test cases in the document",1.0,1.0,1,35
"i have checked the designs that are proposed by the authors. i don't think the authors did add any methods to the wrong class as per the documentation. the new design looks like it will change the previously implemented project to bring out a working functionality that passes all the edge test cases. the new design does not look complicated as the author tried to convey their understanding of the project in a simple defined structure. the new design may potentially increase the response time of the system as it depends if the internationalization is done predefined by the author or if a third party library is used to make the translation. once the team starts working on the implementation then the design page can be updated with screenshots, design flow, etc.",1.0,1.0,1,133
"the design document is simple and easy to understand. the only missing part is visual aids. the team can incorporate some diagrams to help the readers understand the problem and the solution in a better way. on the whole, it is good.",1.0,1.0,1,42
"i like the documentation on the whole. it was simple and to the point. as i mentioned in above question, one suggestion is to add the diagram about how the new system is gonna look like. apart from that everything is good. the authors are also advised to add the files where the changes are supposed to be made.",1.0,1.0,1,59
"the solution proposed is mentioned in ""too deep level"", where you have specified directly the files you would be interfacing(modifying). it would have been great if there were some explanation about functionality and solution in ""plain english"". unless the reader has detailed knowledge of the project, it would be hard for them to draw sense out of it.&nbsp;",1.0,1.0,1,60
there are no visual aids.&nbsp; a design flow or any other uml diagram would have been of great help understanding the proposed solution.&nbsp; &nbsp;,1.0,1.0,1,26
there are no visual aids provided. a few diagrams would have been helpful understanding the proposed flow/changes better.,1.0,1.0,1,19
the changes mentioned by the author seem valid but i found it a little difficult to understand but in no way inadequate. the reader has to read it a little carefully. the problem statement could have been explained in little more detail to give a good introduction to the entire problem. the remaining text becomes easy to understand once the problem description is clear. it would be better if the problem statement could have some previous context to it. a few more lines about audioparam and how it is useful for servo.,1.0,1.0,1,92
"&nbsp;the changes to be made is not explained, because the changes have already been completed - at least that is how it looks from their implementation. if they do have something left to implement, they should create a paragraph to add those details.&nbsp; ",1.0,1.0,1,44
the authors have not yet figured out/mentioned which all views and controllers they are willing to change. they have only figured the flow of ui which looks correct. they have not mentioned any design/refactoring plans to remove smelly code or anythig that will potentially add smelly code ()&nbsp; more feedback can be given once they come up with the final plan.,1.0,1.0,1,63
"the team should start with the existing code base in the merge request and see why it was not merged. eg. there are existing gems present to perform the tasks acquired by gems. some insights can be drawn from the previous implementation. there are a lot of things that are already completed in the previous implementation and the project does not need to start from the beginning.&nbsp; the team should rather concentrate on improving, refactoring and removing the merge issues.",1.0,1.0,1,81
"scope of improvement: the reason i chose to review this project was to understand&nbsp;reviewing something that you are not much in. as a novice reader, i find the use of too many technical terms in the project description/problem statement. team could just improve upon explaining&nbsp;things in much simpler way. overall the explanations are thorough and all sections are covered.&nbsp;",1.0,1.0,1,65
"i do not agree with the team's opinion that ""visual aids not applicable"". as per my understanding of the project, the project touches the workflow. so the team could add any uml diagram to represent existing workflow or any use-case diagram if applicable. i believe&nbsp;that adding a diagram will help the reader to understand the project quickly.&nbsp;",1.0,1.0,1,62
"scope of improvement: i couldn't see any improvement regarding the suggestion given during the&nbsp;previous review : ""the reason i chose to review this project was to understand&nbsp;reviewing something that you are not much in. as a novice reader, i find the use of too many technical terms in the project description/problem statement. team could just improve upon explaining&nbsp;things in a much simpler way. overall the explanations are thorough and all sections are covered."" this thing could have been improved by the team.",1.0,1.0,1,89
"scope of improvement: i do not much agree with the concept of ""public"" and ""private"" review. i believe providing this option to the user will only restrict the scope towards the public review. there me some review which are private, but instructors will not be able to share them. i think the instructors should be given the full authority to share a review (at the end, they better know what to share or not). this is something the team could discuss with the mentor or professor. &nbsp;",1.0,1.0,1,87
"scope of improvement: i couldn't find any diagram&nbsp;or flow in the document. though the description is good and understandable, it would be better if you could add some flows which will provide better understanding to the reader.",1.0,1.0,1,40
"scope of improvement: there is definitely some improvement&nbsp;after the first round review as i could see some screenshots added. but still, the team could have just improved it by adding some diagrams and flows. i would suggest the team could add some uml diagrams like ""use-case"" or ""sequence"" which will help the reader to understand the feature and proposed changes effectively and quickly.",1.0,1.0,1,66
"suggestion: team could have mentioned the exact test cases which need to be modified. it's good to see that team has figured out some of the good edges cases and have correctly mentioned in the document. my suggestion will be to add a test case to ""check between minor edit and major edit correctly"" as this functionality will decide the correctness of the implementation.",1.0,1.0,1,65
explanation are hard to follow. no preface about the issue proposed. i have no idea about&nbsp;bluetoothdiscoverysession&nbsp;either. so please spend some preface to explain and give the need for the project or an intro would be nice.,1.0,1.0,1,40
"the proposed changes only mention files that are being changed. a much better approach would be to add some textual context to the changes for each file and how they possibly could lead to a solution as well as how they affect the performance of the application as a whole. moreover, the doc lacks visual aids. visual aids provide a nice touch and intuitive explanation to the proposed changes.",1.0,1.0,1,69
"the design doc lacks any visual aids, moreover the test plan does not incorporate any form of automated testing. the team should add rspec testing as one of the automated tests. in terms of visual aids there are many visual aids that can be used such as activity diagram, er diagram, use case diagram, data flow diagram, etc.",1.0,1.0,1,58
"the design looks neat and descriptive. all the sections are well described and look perfect. as a reviewer, i am making some suggestions, which i think would make this overall document absolutely perfect. first problem i see is that the introduction section is too long and reviewers do not like to read a lot of text right in the beginning of the document. i would suggest you to have sub sections within introduction like motivation and others. second problem is that i feel that the section proposed changes shouldsbe under roject design section. third problem is that the table of contents should be before introduction. i suggest having it before the introduction section.",1.0,1.0,1,113
"the test plan has been well explained. i have some concerns though. there are no actual test scenarios for rspec and capybara. at least an overview of those would have helped. although the explanation is good and conveys to the reader what will be done, a little insight on actual cases could help provide more information. the manual tests are mentioned but more could be mentioned like testing what happens when tester unchecks all check boxes.",1.0,1.0,1,76
"i'm really happy that the team considered my suggestion in this perspective and have now included visualizations for the how the graphs would actually look. good job. i do have to mention a few things though. the class performance graph is unclear on what it means or is a little conficonf. please have axis labels for that. you can have axis labels for the class performance graph too even though it's already explicit. the design flow diagrams could have small descriptions on the arrows to make it easier to interpret the diagram. also, if possible, the team could put in examples of graphs for each or some of the frameworks mentioned in the document.",1.0,1.0,1,116
"from what i can understand, the team has done good work on the design. it looks good. however, one suggestion is to explain it better in the db design section as it was not very clear for me as a reviewer. the writers should know that the reviewers lack context in some cases. the writers should provide the context first.",1.0,1.0,1,60
"the design looks good. however, some changes can be made to make it better. first, the document should have an introduction to expertiza. this will help a new reviewer unfamiliar with expertiza to understand the document better. secondly, the problem statement and ""what this project will add"" section seem redundant. they both have same information. i would suggest that it can be removed.",1.0,1.0,1,63
"apart from the good work, the team missed adding the test plan and usage of diagrams. since you are making changes in the model, you should have a test plan in place to make sure nothing breaks. there may be testcases in place already and you might just have to add onto them.",1.0,1.0,1,53
&nbsp;the application flow and use case diagram convey the same message. remove one. provide more details/explanation for the same.,1.0,1.0,1,21
"the authors seem to understand their problem statement well and have explained it beautifully. the implementation part is also described but looks the authors are yet to figure out how to make the changes as mentioned in the document. one suggestion would be to have a quick look at the code and give an overview of what changes the authors may be needed. after all, this is a design document. this is the only thing i felt was missing and rest of the things are well done by the team.",1.0,1.0,1,90
"the test plan is included as expected. good job. however, the content of test plan section looks vague and incomplete. there is some content in the test plan that really should be in an implementation section. the only relevant point mentioned is that the team will write cucumber and rspec tests. this looks a little vague to a reader. the team could have created some scenarios that they plan to test and described it here. even though it's too early, the team could have atleat put in manual test scenarios.",1.0,1.0,1,91
"although the team is able to identify the flaws they have not mentioned how they plan to implement it. since there is no coding done it is not possible to identify the smelly code of the team. there should have given more information on which controllers, models, and views they plan to modify or add. in this way, it would have been easy for me to give any suggestions if needed.",1.0,1.0,1,71
i could not find any visual aid for the design doc.&nbsp; this was the only part missing i feel. i suggest them to add some uml for their final submission which&nbsp;gives clear idea. or they could have pictured&nbsp;scenarios instead of writing them.,1.0,1.0,1,47
yes. i was able to understand their proposed changes. they mentioned everything with proper sections. they have&nbsp;used easy language which makes stuff clear to understand. just issue i felt was it was way too big. the size of documentation if possible should have reduced.,1.0,1.0,1,46
"the design documents and the explanations are too big, but other than that it is good. the only problem is most of the explanations were too big. they could have written it in short and provided external links to read more about them.",1.0,1.0,1,43
"&nbsp;all the current design , its flaws and their design to rectify this issue. all the functionalities required was mentioned. the solution was not that detailed to the point of mentioning function names or classes to be included. they just wrote&nbsp;their solution and the files that may be affected by their implementation. nothing regarding the classes or methods to be implemented was mentioned. they should expand more on what they intend to do.",1.0,1.0,1,75
"the document is clearly in much better state. the document clearly explains things the team wants to achieve, how is team trying to achieve among others. one suggestion would be inclusion of a section that tells us how differently the team is implementing the algorithm. the team has tried to explain some here ""some discrepancies need additional attention."", it would be great if the team explains how exactly are they planning to implement these discrepancies. &nbsp; additionally, i guess that a project offered may not have any bidding and in turn no team will work on that problem statement, but in case of review, we need at least ""n"" number of reviews for each project (constructive reviews), how is this scenario being taken care of?",1.0,1.0,1,125
"at this moment, it is very hard to tell anything about the proposed design change. the major factor for this is, there is very limited information on how the team is making changes to the existing code base. for example move javascript code problem: there are some javascript codes in inappropriate positions. solution: we need to replace javascript codes to 'assets' fold. it is very hard for the reviewer to understand what changes the team is implementing. also, the major design change of adding a new controller ""github_metrics_controller"" is discussed in the document without much details on its implementation. also, validating the reasons to add new model and how these models are attached to the existed ""grades_controller""&nbsp; would be a great addition",1.0,1.0,1,123
"authors have used the use case diagram to explain their design. in both the use case diagrams added instructor is the actor who is viewing the teammate review. however the caption to the diagram shows us a different story. caption says ""&nbsp;use case diagram of two approaches to append 'github contribution metric' in teammate review"", but the use case diagram corresponds to the viewing of github metrics. it would be great if the caption reflects the image being used to depict the use case.",1.0,1.0,1,85
the design explains the problem statement clearly. the scope of the solution is to send a mail when there is a major contrast in the review score. i liked how they plan on including the standard deviation in the review report to show if there is a major change.&nbsp; it would have been better if the design included how they plan on detecting the major change and the mailing if there is a major change. as a reader it would interest me more on how they wish to proceed with the solution the author merely mentions the files to be changed and the addition of the standard deviation in the report. proposed code changes and proposed solution could be worked upon.,1.0,1.0,1,122
"the design document incorporates most of the required sections. proposed code changes could have been included and a test plan on how they plan on testing ui and rspec could have been briefliy explained. other than that, a very good effort has been made on the docume",1.0,1.0,1,47
"the proposed design strategy is very well defined. it is sound and follows all the appropriate design principles. i appreciate how the author implements the usage of delegation strategy to show the proposed solution design. the author very elaborately explains the problem statement and gives a clear understanding about the ttc principle for bidding instead of first come first serve principle which was in place earler. some very good examples have been used to explain. it would be great if a section with proposed code changes is also included where the author shows which parts of the code they wish to address and how. that would have helped in getting a better view. but even so, the author clearly mentions the controllers, model and view that will be affected in the proposed solution for the problem.",1.0,1.0,1,136
the team has not added any visual aids. no uml diagrams or screenshots have been put on the design document.&nbsp; i suggest the team to add a flowchart for the design flow to give a better idea on how will the implementation take place.&nbsp;,1.0,1.0,1,46
"the team has several sections in the design document which include an introduction of the topic, the problem statement, changes proposed and a section of a test plan. although an implementation section is present, no information is provided. the team is yet to mention how they are going to carry out their task. the team has also not mentioned anything about the ""designs"" that will be followed. the team has done a good job by providing several scenarios for testing which will make the reviewer's job very easy.&nbsp; i suggest the team to mention how and why are they implementing the functionality in the design document.",1.0,1.0,1,108
"considering the given metrics for a complete document the project purpose and testing plan is added to the document but no project design has been added by the team. according to me, a design is the most important part which shows how implementation will take place. i suggest the team to add some techniques used to carry out the implementation along with a design pattern which will be used. &nbsp;",1.0,1.0,1,70
the team has used enough visual aids which include a mock-up of their implementation and a flow chart of the design flow.&nbsp; both the visualizations provide specific knowledge on what is to be carried out. the reasons for visual aids have also been provided. the flow chart of the design&nbsp;clearly gives an idea of what is to be carried out. i would suggest the team to include more information on how the implementation will be carried out and mention it on the design&nbsp;document.&nbsp; &nbsp;,1.0,1.0,1,91
"&nbsp;""separate view will be created to address this issue"" is mentioned: what will this view look like? would have benefited from mockups. the existing visual aids are still really helpful.",1.0,1.0,1,31
"the authors do not go into detail about which methods they plan to add or modify.&nbsp; also, i think their proposed solution for the 'inefficient calculation of conflicts' problem could be made more efficient.&nbsp; the proposed solution relies on iterating through all previous reviews anytime a new review is added. this can be expensive for larges classes with many reviews. one suggestion would be to keep a running value (or values) that gets updated once a new review is added to the system.&nbsp; this way, a new review's score can simply be compared to this value(s) and iterating through all previous reviews will not be required. (of course, this would require some logic to make sure the scores that are outside of the threshold are not included in the calculation of the stored value(s)).&nbsp;",1.0,1.0,1,141
"the document includes all of the right sections, but not in the right order.&nbsp; the introduction section is good, but the project task section should be renamed to project tasks.&nbsp; the text is a little disorganized as some of the text would fit better under a different section.&nbsp; as an example, the text under project task might fit better under a separate section called previous work.&nbsp; the plan of work section is a good start. however, it is missing many of the implementation&nbsp;details.&nbsp; the refactor and improvements section should be moved inside of the plan of work section.&nbsp; the test plan section needs more details on how the code will be tested.&nbsp; the references&nbsp;look good.",1.0,1.0,1,126
"please do not mix your proposed changes (current work) and previously proposed changes (previous work) into single section you named ""changes proposed"". right now it has both changes that were proposed previously and your currently proposed changes. overall quality of the explanations is ok, but can be improved a lot. the only explanation is provided, ""we are focusing only on the student views and propose changes in the following files..."" and there is a list of files.please elaborate a little more what do you mean by ""focusing only on the student views"". also, it would be good idea to add explanation to each listed file as follows: what this file is responsible for? why and how this file is going to be modified? what goal would be achieved by proposed change to this fild? try to give as many details as you can.",1.0,1.0,1,144
"again, the core design is not shown in the document since it was provided by different team in the last semester. the team is only going to complete unfinished work started last semester. based on the ""implementation"" section, the team is happy with the initial design that was given (i guess team's mentor also reviewed previous work, and is aware of the design). based on the given document i cannot determine whether the design is as simple as possible. use case diagrams show it to be simple, but these are too high-level diagrams that do not reveal implementation details and cannot be used to determine complexity of the design. since the team is convinced that previous changes are ""on the right track"", i assume that the design is in fact simple as it could be.",1.0,1.0,1,137
"yes, the design mostly incorporates all of the functionalities required for this project. the document clearly states what functionalities must be added in the ""problem statement"", ""what needs to be done"" and ""implementation"" (also adds high-level solution to the problem) sections. very good work is done by the team to integrate proposed solution that has been done previously by different team (last semester) and team's own proposal, also considering the flaws of the proposed model. however, the design itself can slightly be improved by providing uml or e/r diagrams, which would help to&nbsp;clarify&nbsp; implementation details for these functionalities. although, the document contains workflow diagram, i think it is not enough for detailed explanation of the design. moreover, please consider implementation flaws that were reported to you (pull request is dirty, code climate issues, and etc.) along with the flaws of the design you found. generally, all functionalities are discussed and properly addressed in the this design document.",1.0,1.0,1,163
"yes, the proposed design appear to be sound and well-thought. it follows appropriate principles, but does not use any patterns due to simplicity of the implementation. design describes the ""major change"" and ""minor change"" and what cases (for major changes) should be handled appropriately. although, it is kind hard to follow the data flow diagram, it clearly shows when regulation of rubrics while projects are in progress should take place. the ""proposed code changes"" sections does great job on explaining how such mechanism should work by providing code sample (or stubs). overall, yes the design appears to sound. i still believe uml diagram is necessary along with ""proposed code changes"" section that provides great low-level implementation details. moreover, the design is missing workflow diagram to show high-level project overview, where it can illustrate when the feature to be implemented is utilized (provide&nbsp;if/else&nbsp;conditions that appropriately handled).",1.0,1.0,1,153
"yes, the team did really good job explaining the changes to be made in the system. the team did really good job on separation of concerns to implement the feature by proposing phase design and implementation. also the team did great job on breaking down required feature into multiple easier and more manageable implementation tasks that can be implemented in the multiple stages. for example, identifying whether a change of the rubric of a questionnaire is minor change or major change (only due to major change the feature should reset reviews and send email notifications). also, as i stated in the first peer review, the team did great job on providing code samples and stubs. that really showed that the team spent time thinking through the design and implementation. overall, i do believe all the changes are explained adequately. the document is only missing additional diagrams and well explained test plan. for the diagrams, please include at least uml diagram with class, methods, variable names and their relationship.",1.0,1.0,1,168
"some important information is missing and needs to be added into the design document. although all the key parts of the design are present in the document.the ""design diagrams"" section is missing uml diagram and data flow diagram is a little unclear to me (consider reworking it or adding interpretation of the diagram as a text below). also consider adding workflow diagram to indicate possible&nbsp;if/else&nbsp;conditions for regulating rubric changes instead of describing it within a text in the ""proposed code changes"" section.the rest of the project design section is clear and complete. project purpose stated at the beginning of the document is very clear, concise, and complete. no issues found there. ""test plan"" section is incomplete (not because information was not added, but because it does not cover required testing strategies). please consider adding at least two sections within ""test plan"": ""rspec testing"" and ""ui testing"". also reflect on code inspection and how (if) it was done. include missing sections, such as ""conclusion"", ""team members"", ""references"" and etc. overall design&nbsp;this is very good design document! great job!",1.0,1.0,1,186
"yes, the design does include the test plan. however, the test plan is very vague and incomplete. it mentions only new test cases related to editing a rubric and thus testing the feature. are these enough for&nbsp;thorough testing of the feature? i do not think that test cases can cover all possible case scenarios and test them.&nbsp; i understand that these tests would be done&nbsp;via rspec testing, however, would there be any ui testing or manual testing done to test email notifications? there should be such tests as well. in the test plan i would create two separate sections, for example, rspec testing and manual (ui) testing, where your team can elaborate on testing strategies, steps, and document the outcome on it. in rspec testing strategy do not limit your testing to only test case scenarios. test as many as possible test case scenarios (even unexpected). document everything so expertiza software engineers can accept your code changes without questioning whether implemented feature works or not.",1.0,1.0,1,170
"there are only diagrams, use case and data flow diagram. as i mentioned in the first peer review, the use case diagram is a high-level diagram that explain roles of the users, initiation of the rubric changes and corresponding regulated actions to handle such changes. data flow diagram is slightly confusing and requires some word interpretation to interpret the diagram. the diagram that clearly describes the changes to be made in the system is uml or similar type of the diagram, where names of the classes, methods and variables can be shown and documented. also, there is a change in the db, the team should include entity relationship diagram. unfortunately, at least uml diagram is still missing (as i stated in the first peer review and it was not addressed). moreover, mock screenshots are also missing to illustrate under what conditions does the feature works and possible email notification content. please include these once the project is completed.&nbsp;",1.0,1.0,1,160
"the problem statement is good.&nbsp; the design portion should include a diagram of what the ui will actually look like, not one with additional data that will not be included.&nbsp; it should also describe how enabling the new ""debug"" option will be done. the testing plan should include more details, for instance ensuring that the data retrieved from the api actually corresponds to the question answer text.&nbsp; if the comment text is not included in the analysis view, there's no way to ensure that the question answer text is what was actually sent to the api.",1.0,1.0,1,100
"the design is well written and seems to have all of the required details.&nbsp; the screen captures of the proposed changes are very helpful, especially the highlighting of the new widgets.&nbsp; the document provides a lot of detail, possibly more than is necessary.&nbsp; the entity relationship diagram is a bit large and has a lot of information in it that isn't relevant to this project; the contrast between the black and blue is a bit subtle.&nbsp; the diagram could be left out altogether, i think, without losing any relevant information.&nbsp; there are some grammatical errors in the writing, for instance ""by adding new such table we create many-to-many relationship between sign_up_topics and questionnaires tables..."" should be ""by adding this new table, we create a many-to-many relationship between the sign_up_topics and questionnaires tables...""&nbsp; in any case, the document exceeded my expectations.&nbsp; nice job!",1.0,1.0,1,154
"the explanations of the design elements that are present are good and the screen-shot mock-ups provide useful information, although they are a bit too large.&nbsp; the design is missing minor details, like the specific views that will be modified to include the new widgets and how the fact that review bidding is enabled for an assignment will be stored in the database.&nbsp; the design should also include the navigation to the bidding interface, as mentioned above.",1.0,1.0,1,80
"the project purpose is clearly stated and easy to understand.&nbsp; the design is thorough although as mentioned above, some things are unclear.&nbsp; the testing plan could be fleshed out a bit more in terms of specific things the tests should be checking (e.g. model fields) rather than just checking whether given methods are called when a specified action is performed by the user.&nbsp; the testing needs to verify that the correct information was indeed recorded.",1.0,1.0,1,79
"great job explaining test running process. however, test plan is not explained well and i suggest explaining what files you intend to change and what new tests need to be added for refactoring.",1.0,1.0,1,33
i think they might use the document in the last project. i think it will be better to write a document about the current project separately. there are many details about last project.,1.0,1.0,1,33
the design is written great. it will be better to explain more about the pattern used.,1.0,1.0,1,16
"yes, i appreciate that the team has added a few flow-charts. but, what is not clear to me is that, the heading 'process of solving the issues' is very vague and i do not exactly understand what issues the heading is denoting. they could have added what the issue is specifically.",1.0,1.0,1,52
they have included a test plan section in their design document and have mentioned that they will use cucumber and rspec for testing.they have mentioned about the functionalities which is what i think they will be testing and it seems appropriate. some test examples for eg. for invalid inputs or self_review score not given by the student or some test cases could have been explained to show how they will be testing their methods would have been better.,1.0,1.0,1,79
"the wiki is very informative with the use of diagrams. the team has leveraged the diagrams from the project proposals to a large extent. the entity diagram's objective seemed like they wanted to show the database relationships, which could have very well been established without the column names of the tables. the presence of the column names makes the diagram seem overly complex and has a lot of unnecessary information which do not help the reader.",1.0,1.0,1,77
"the document has a good flow to it. the document explains the project purpose, work flow, current scenario, required implementation and design very well. that being said, the document is missing the test plan. i suggest the team add the test plan section with references to the rspec files from the assignment allotment rspec files. this would help understand the complexities better.",1.0,1.0,1,62
they made use of visualizations here and there but i think they can add more figures to make their point more clear to understand instead of giving really lengthy writeup.,1.0,1.0,1,30
they did&nbsp;add two screenshots of how the expected output is going to look like but i don't think that showcases all the objectives they are supposed to achieve. they can definitely add more visualizations.,1.0,1.0,1,37
the overall quality is adequate. my one suggestion would be to reduce the number of links added in the description. it would be easier and more convenient for the readers to read a brief description explaining the concept instead. the frequency of the links can be reduced if possible.,1.0,1.0,1,49
"yes they have explained everything well. as i suggested before, if they could remove the number of external links in their document and a brief explanation of the same instead, it would be even better.&nbsp;",1.0,1.0,1,36
they have visualization which are some tables that screenshot from somewhere. the quality of the picture is not good which is not easy to read the context of the table. they should create the table by excel or word will help fix this problem.,1.0,1.0,1,44
"i think their explanations were very thorough. they even went above and beyond by answering common peer review questions on their wiki. however, i don't think keeping that section (answering common peer review questions) on the wiki past the peer review phase is a good idea. the purpose of the wiki is to explain your project, not ensure you get a good peer review grade. also, i suggest fixing&nbsp;the&nbsp;typos/grammatical errors on the wiki so that it looks more professional.&nbsp;",1.0,1.0,1,86
"they do a good job of explaining the project purpose, project design, and testing plan. my only suggestion would be to make the link submitted to expertiza the link for the entire wiki page (without the #... at the end). the reason for this is that the project purpose, design, etc. are explained at the beginning of the wiki, so if i were just looking at the ""final project"" section of the wiki, i would have no context and would not understand the purpose or design of the project.",1.0,1.0,1,88
"they have a great diagram that helps to explain their project. my only complaint is that their screenshots (in the ""implementation"" section) have not been scaled and are way too big for the document (i have to scroll a lot in order to view the images). i suggest that they use an image resizer to shrink the images and then re-upload and re-insert them.",1.0,1.0,1,66
"once logged in as an admin, there was an edit profile with all the required fields for updating the profile details. it also had an option of canceling the account. i'd strongly suggest to remove this feature for the admin account as you should not be able to change admin details or delete the admin account.",1.0,1.0,1,57
book is not deleted in case is it checkout or on hold. but should be handled with proper error message. student delete option is not available for admin.&nbsp; &nbsp; &nbsp;,1.0,1.0,1,31
"they have implemented basic functionalities very well. just the minor navigation issue is still there whenever i click on sign up button on home page it takes me to page to select user role in which i need to sign up, in that page there should be one ""back"" navigation link to get to the home page for two reasons:- firstly, for smooth navigation if user change the mind in middle then back button should be there in ui to take back to home page. secondly, as they have not swapped the positions of ""login"" and ""sign up"" button on home page, by default when user enters login information and hit ""enter"" button, it triggers ""sign up"" button instead of ""login"" and takes user to page where it is required to select user role for sign up and thus there should be back button on that page as user did not intend to sign up also, the notice messages are coming twice at some places like when i update librarian through admin login it appears twice.",1.0,1.0,1,176
"overall relationships among entities are well defined and resultant db design is pretty good. just one note that they could have added has_many ""students"" relationship in ""history"" as history table consists of many student ids who checked the book. to avoid automatic deletion of records from ""history"" table consisting of the student id for which particular student is deleted, they could have set dependent option as ""delete"" instead of by default destroy.&nbsp;",1.0,1.0,1,73
"yes its easy to follow. just one minor point in the login page, the location of sign up and sign in button needs to be reversed or handled in code so that by default user hits ""enter"" in keyboard after entering credentials they gets logged in and not redirect to sign up page. also there needs to be navigation button on sign up page to go back to home page if we don't want to proceed with sing up.",1.0,1.0,1,80
it follows usual good practices overall. just add more comments in the code and refactor some code from books controller to model which is related to business logic. also make sure that all the links/buttons included in ui have some responding action attached as show button in books list of librarian login home page redirect to error page.,1.0,1.0,1,59
"&nbsp; the ui can be modified to include only the functionalities that can be implemented by the current user. the functions in ui are well organised edit functionality should be implemented such that, the fields are auto-populated. and the user is able to edit the book fields.&nbsp; ideally in controller, the edit page in the view gets called, with the record fetched from the database. editing books can be redirected to from the books show view page. &nbsp; &nbsp;",1.0,1.0,1,81
"the corner cases are mostly like against null values. the users when signs in, they should be able to sign&nbsp; up as student or librarian. that way the next time, the user signs in, the type of user is stored in table the admin should be auto configured. one should not be able to sign up as admin, this leads to data privacy issues and malicious attacks &nbsp;",1.0,1.0,1,69
"the admin cannot edit his profile. all the users must be able to edit their profiles, some functionalities like -view student checkout list-view librarian approval list are failing while the student/ librarian logs in. these functionalities can be hidden from the home page if it cannot be implemented by for certain users.",1.0,1.0,1,53
the user interface is very friendly and the placement of attributes are goos. the sign up links could have been displayed in contrast. the readme file has&nbsp; details needed. the admin should be able to edit his profile. this can be done where all users are shown or as drop down as for other users.,1.0,1.0,1,56
"there are quite a few commits and the commit messages also signify what feature/bug fix is being pushed. however, peer review and pull requests were not used in the team. there are no pull requests created in the github project, which can be improved moving along.&nbsp;one good thing that i found was the use of github project in the repository, however, not extensively used but still is a positive aspect.",1.0,1.0,1,73
"the ui is pretty easy to use. i couldn't view the repository though, the link returned a . you should check that your repository isn't private.",1.0,1.0,1,27
"there're many long method in book controller, such as borrow method. my suggestion is that we can split it into many small methods to integrate a big method. &nbsp;",1.0,1.0,1,30
"( )the indentation of their code is other than !!!! &nbsp;( ) there are two different style for naming a method. in models, student.rb has a method named&nbsp;self.remove_from_wish_list? however, book_hold_tracker.rb has a method named&nbsp;self.handlespecialcollectionrequest? the traditional way for naming a method in ruby is the previous one. the latter one is the way java used.",1.0,1.0,1,60
"could not locate the readme file since the repo is not public.&nbsp;since this is just the first round, i understand that some of the pieces need re-work. hopefully, my suggestions would help :- please provide `back` button on all pages. little counter-intuitive to use the browser's back page- there were errors when i hit a back button from student edit page see screenshots https://snipboard.io/ha hrl.jpg",1.0,1.0,1,73
" the ui looks clean and intuitive. sign out button is shown even when the user has not sign in. some options which should not accessed by other than admins are visible to normal users. though they do work for students and profiles, it would be good to not show the features that they cannot perform. ",1.0,1.0,1,55
" . no, the student model has all functionalities to be yet developed. no checkout, return, hold functionality added. the link only shows the list of books. the student can permanently destroy a book from the libratry(this needs to be fixed). no functionality for calculating overdue fines. . librarian model is almost complete but as end to end flow from student to a database update is not complete. we cannot fully test if a book is actually added in the hold list. the databases are populated in different views, but that is not sufficient to guarantee a particular function works as no end to end implementation. no functionality to view overdue fines of a particular student.",1.0,1.0,1,114
"although the user interface is intuitive, it is difficult to navigate and view as there is no border or margin spacing and it sticks to the left o f the screen. i suggest to add some css and improve the ui by adding margins and padding appropriately.&nbsp;",1.0,1.0,1,48
"- the ui starts with asking user to either sign up or login as a student/librarian. in terms of ui perspective, it can be improved a lot to give the user a look and feel and also allowing users to understand the functionality well.you can create two buttons and displaying appropriate forms based on selection. -also, since the log in/sign up is divided into two forms, entering the admin credentials is not accepted by both the forms thereby failure of admin login. -once we sign into the ui, all the options are jumbled and there is a text overlap confusing the user. overall, the functionalities work and can be understood.but can be better.",1.0,1.0,1,116
-code comments can be added. -code can follow solid principles assigning only single responsibility to each method. -white listing can be specified in the respective controllers instead to other controllers like student controller can contain the student parameter white listing. -can try helper methods instead of rewriting&nbsp; the functionalities.,1.0,1.0,1,50
"i think there are a lot of controllers defined, they can be cut short by enforcing policies or restrictions in the same controller or view itself. and not very dry",1.0,1.0,1,30
 ) the code doesn't appear to be dry. and the naming of methods should be better. (camecase etc),1.0,1.0,1,18
"the codebase doesn't appear dry. instead of creating separate controllers for different users, gems could have been used to enforce restrictions.",1.0,1.0,1,22
"a lot of controllers defined and are highly decoupled. i think those controllers, models which can be merged should be merged and the functionality can be given through using policy gems, etc.&nbsp;",1.0,1.0,1,33
overall ui is good. you have made it simple and concise but not reaching to proper location after pressing back button. work flows are can be improved. for student it is showing status of book as checked out but when i look for checked out books it is not displaying any book there. over all at some placed it becomes confusing to understand the behavior of application but minor fixed will definitely make everything perfect.&nbsp;,1.0,1.0,1,76
"no. for the bookmarks model, it has 'belongs_to' relationships with student and book, but there are no corresponding 'has_many' relationships in book and student. hold_record, librarian_approval_list and student_checkout_list should 'belongs_to' student and/or book instead of 'has_one'. the links to bookmark a book/approve librarian don't&nbsp;work. i wonder if that has anything to do with it.",1.0,1.0,1,59
"i&nbsp;do not know what happened, but i couldn't find my first round review for this project now. so i just checked every function in this system again. and i find failing functionality as follow: . admin could only edit user's name, email and password. .&nbsp;sometimes, student couldn't checkout a book and it said something went wrong. . i created a book with a not-jpg/png file as image and it succeeded.&nbsp; and there are things not working/remaining: . unit test a model and a controller . dynamic overdue fine calculation (only calculated when book returned) and displaying the list for admin/librarian . sending email when book on hold is available for check out. . sending email when special collection book on pending is approved by a librarian . sign up with google (login in with google works! i.e. if a user has signed up normally, he'll be able to login with google in future)",1.0,1.0,1,159
"most of part is good, but part like borrow which contains many functions have many verifications may contains many&nbsp;repeat parts. it would be a better choice to write same verification in one method, also seems&nbsp;much work are done by someone&nbsp;individually and there isn't much definition for code.",1.0,1.0,1,54
"the testing has been done. however, all the functions have not been tested. most of the functionalities of the librarian are not a part of the test case written. like the admin can destroy the books etc. also, attaching few of the links which are showing error, once the test cases are written, these links should work properly or else easily identifiable.",1.0,1.0,1,62
"the code is well maintained and the business logic is kept separate from the views and models. this brings the good practice implementation in the code. the code has been well intended. however, more comments could have been put in place to make the code more easily readable to other users.",1.0,1.0,1,51
"github changes were regularly made. &nbsp; however, i do not see many ui functionalities for the librarian. like creation of books is not visible in the options shown on the ui.",1.0,1.0,1,31
relationships between tables have been taken care of. they have given the feature of linking a book to one single library only which takes care of to n relationship.&nbsp; however for cases when same title books needs to be added to multiple libraries then multiple copies of it will be needed to create.,1.0,1.0,1,54
"- in places such as the search function, and operators could have been used instead of using nested 'ifs'. moreover, i think that the search function looks too complicated due those nested conditional statements. it would have even done the job if a sql like query would have been written to check the incoming parameters against the required attribute field. - i would suggest that you could have avoided nested if in many other places too and used the and operator for the same. &nbsp;",1.0,1.0,1,83
"- the admin, while changing the status of a librarian, from unverified to verified is made to type the password of the librarian. however, as per the requirements, the admin is not expected to know the password of the users but just the basic editable details like name, university, library etc. in other words, there is no need to re-enter password of the librarian for just updating some fields. - also i don't think there is a double authentication required just for editing the user profile. if a user has signed in, he is the correct user in the first place. or for that matter, even if an impersonator would have signed in with the correct user details, authenticating again would&nbsp; not prevent him/her to change the user credentials. hence, i feel that putting in the password again for changing credentials would not serve any purpose.",1.0,1.0,1,148
the changes made to git have been thoroughly pushed on git however i would recommend that the commit names be specific and not general. for instance replace 'bug fixx' with something that was actually fixed. this would not only help to keep track but also make it easier to refer the log files.,1.0,1.0,1,53
"-the user interface has made sure that the elements are placed correctly on the web page however i would suggest to make use of some better color templates to make it look much more professional as well as enhance the user experience (something like blue and white or black and whilte) - you can also display the name of the user in the top right of the navigation bar when logged in. - ""hello user_name"" is unnecessarily big in size and is occupying more pixels even when not needed. -also the login and signup could be improved by scaling it down since both username and password would not exceed characters in most cases.&nbsp;",1.0,1.0,1,112
"the code seems to be very well written for the most&nbsp;part. however, there is some scope for improvement in the sense that there is some additional logic in controllers that can be moved to the appropriate models.",1.0,1.0,1,39
"yes the team has committed changes on github even in round . but i still feel that commits have not been used properly. for e.g. some commits have large&nbsp;number of line changes. (i saw about k line changes in one commit). also, they have not used any branches in their git repo. using different branches for different features might have been more helpful to get the commits done on regular basis.",1.0,1.0,1,73
"it would have been a better approach if branching had been used to develop different functionalities. such as new barnches for admin, student, librarian etc. every small change should have been committed rather than commiting big chunks of code.",1.0,1.0,1,39
" -to-n or n-to-n relationships have not been managed properly. they have added foreign keys to required fields but they have not mentioned ""belongs_to"" or ""has_one"" or ""has_many"" anywhere in the model files. this might lead to dangerous effects on data after some operations like delete which are included as a foreign key to other objects.",1.0,1.0,1,58
"yes the team has regularly used github and continuously committed code. but they have not used branching. they could have used different branches for different features such as admin functionalities, student functionalities, book hold/return etc.",1.0,1.0,1,36
test cases have been written for the librarian controller and librarian model. i liked that the rspec testing framework is used over rails' default one. but i feel that tests don't cover a lot of things. they have written just cases for model and cases for controllers. this is not sufficient to thoroughly test functionalities. a lot of functionalities are missed. for e.g. aa scenario in which librarian is created without the library should be tested and it should not create librarian object as library should be compulsory.,1.0,1.0,1,90
"the team used github very nicely. they used frequent commits even during round .&nbsp;but as i said in round review, it would have been&nbsp;more helpful to them if the team had created multiple branches for multiple features. for e.g. they could have created different branches for bookmarks, hold_requests, email notifications etc. also, some of the commit messages could have been more descriptive. ""final debug"" this type of commit messages are bad choice. messages should explain what does the change in the commit actually does. they should have mentioned which problem they were debugging.",1.0,1.0,1,97
"-""published"" field for books does not mention the format for date, just mentions that it cannot be blank. image needs to be uploaded twice, for some reason, in case some of the other fields are also changed. -admin -&gt; profile is still leading to users, probably this should lead to the admin's profile.&nbsp;-creating a new user (by admin as well as by sign up) also still logs admin out and logs into the new user , this was also mentioned in the previous review (although this has now been included in the readme ).",1.0,1.0,1,95
"for all the modules built so far, the interface is easy to understand. however for admin -&gt; profile is leading to users. it should probably be directed to show admin's profile. readme file is very informative, includes screenshots.",1.0,1.0,1,39
"sometimes, i am not able to create new books - ""we're sorry, but something went wrong."" is seen, instead of proper validation messages when i try to create a book. sometimes i am able to create them.i would suggest&nbsp;that number&nbsp;of books available needs to be included somewhere for students to view.",1.0,1.0,1,56
test cases are written for student controller and model. but the test cases are not proper. could have written more test cases to ensure the application works properly.,1.0,1.0,1,28
" ) just trim the space in email string when you take as input because if i write ""&nbsp;&nbsp;admin@lib.edu"" then it shows invalid credentials as compared to using ""admin@lib.edu"" &nbsp;",1.0,1.0,1,34
 ) functionality of view all books to student should be implemented and then provide option to checkout or add as bookmark. ) try to fix the issue of sign-up as librarian and it's functionality (http://enigmatic-badlands- .herokuapp.com/librarians/new&nbsp;),1.0,1.0,1,42
most of logic is written in controller instead it should be in model.,1.0,1.0,1,13
- most of the code follows good ruby practices with methods performing single action - few controllers like book_request.rb has few cluttered methods. most of the actions written in the controller methods can be moved to the individual models and directly called over controller as controllers must only handle functions linked to views - methods are named appropriately,1.0,1.0,1,56
"interface is easy to use. i like that you have implemented dynamic web pages to resize according to the browser window size. however, there are certain links (view all books &amp; libraries) which are broken or result in error.",1.0,1.0,1,39
"controllers and views are written nicely. function calls are not that much coupled and depend on other functions. gem devise is used appropriately. though the authors should consider adding logic into models rather than controllers, as stated by mvc architecture.",1.0,1.0,1,40
- the majority of the features handled. could have handled exceptions like if a book id doesn't exist show a default page instead of giving the error page.,1.0,1.0,1,28
" ) university should have a -to-n relationship with libraries, librarians and students. ) student should have an n-to- relationship with university. ) library should have a -to-n relationship with librarians and an n-to- relationship with university. ) librarian should have an n-to- relationship with library and university.",1.0,1.0,1,48
 . book should have a -to-n relationship with book_history. . book_history should have an n-to- relationship with library too. . librarian should have an n-to- relationship with university. . library should have a -to-n relationship with librarian and book_history. . student should have a -to-n relationship with book_history. . university should have a -to-n relationship with librarian too.,1.0,1.0,1,58
all contributors have committed frequently throughout the&nbsp;duration developed the project in. it could be better if the following suggestions are incorporated into the project. suggestions: ) the commit messages should have a meaningful description of the added code/functionality in that commit.,1.0,1.0,1,43
"( ) what will happen if the admin tries to delete a book that is issued? it gets deleted from the all books table (which is incomplete) but not from the checked out books table. ( ) what will happen if a student is deleted who had books issued and there are other students waiting for the same book? the other students on the waiting list do no get the book. (nothing happens) ( ) can admin account be deleted? no, it cannot. ( ) what will happen if admin tries to delete a student who has multiple pending book requests, will the reservations be deleted? no reservations are not deleted the readme.md should also cover how the system handles edge cases. the readme does not cover how the system handles edge cases.",1.0,1.0,1,126
the ui is fairly easy to use &amp; intuitive for easy navigation through the web app.&nbsp;suggestions: . add a back button on all pages to make navigation even better. . some screenshots can be added to the readme to make it better.,1.0,1.0,1,42
"good ruby coding practices have been followed. &nbsp; suggestions: better relations among classes (models) can be set up, such as:&nbsp; library has many books so if the library is deleted all is books are also deleted. &nbsp;",1.0,1.0,1,38
"all contributors have committed frequently throughout the&nbsp;duration of development of the project. it could be better if the following suggestions are incorporated into the project. suggestions: ) the commit messages should have a meaningful description of the added code/functionality in that commit. instead of using one or two words, use a couple more words describing the exact change made.",1.0,1.0,1,61
the university model and controller have been tested thoroughly. suggestions: consider adding more thorough testing to the university model. &nbsp;,1.0,1.0,1,20
code quality is dry as possible but most functionality is in controller which is opposite of functionality of thin controllrs and fat models.,1.0,1.0,1,23
the code is structured as expected from the standards of ruby and rails. code in views can be moved to helper files for reuse.,1.0,1.0,1,24
"i failed to log in as an admin using the admin account given in github. but an entry to signing up as a new admin works. i was able to to take actions like editing the admin's profile. but, it is better that the admin account is already preconfigured according to requirements of the project.",1.0,1.0,1,56
"i believe you guys did a good job, so please provide the link to github next time.&nbsp;",1.0,1.0,1,18
they'd better add come comments in their code to make it more readable.,1.0,1.0,1,14
"first i got confused by the model names borrow and history, which of them refers to the borrow histories? these can cause ambiguity. in the controller of borrow, i saw `checkout.each do |bo|`, where i quite wonder why they use ""bo"" to map, does it stand for borrow, or book? the thing is that, if this code block is long enough, the implicit ""bo"" will definitely cause confusion. besides, they appear that they don't like to use ""word_word"" format of their method names, while the names of other methods that are automatically generated remains the original ones. for instance, in the controller of borrow, both ""has_book_and_student?"" and ""holdrequest"" appear to be the name of methods, which are not accordance to an integrated discipline. it looks like that the team&nbsp;members did not form an integrated habits on how to properly name their models, methods and variables manually.",1.0,1.0,1,150
the code is mostly in controllers and views.&nbsp; whatever methods are written are mostly handling single tasks but there are some methods that have a lot of logic and refactoring might help.,1.0,1.0,1,33
"the university can be made a new table, as the id can be used as fk for user, library tables. the book table should use library id mapping instead of saving the library as string directly.",1.0,1.0,1,36
"few of the edge cases pass and few do not.for example,there is no option for the admin to delete an existing student so ca't really see what happens.but,admin can only be edited not deleted.",1.0,1.0,1,39
"user interface is interactive,however the ui can be made more clearer look wise and adding labels",1.0,1.0,1,17
"most part is good there are some suggestions:&nbsp; . add the ""back"" button on the all page. . some buttons and information are duplicated. for example, there are a lot of ""new_user"" button on the user management page.",1.0,1.0,1,37
"i don't think the code is ready to be deployed to production server. i think i have already mentioned the issue in last round where the array was hardcoded. moreover, it seems the tabs numbering are stored in session, the code could utilize something like localstorage instead of sessions.",1.0,1.0,1,50
i was't able to see any test plan or automated test. test should be written for&nbsp;app/controllers/tree_display_controller.rb&nbsp;and modified for other ruby files,1.0,1.0,1,29
i wasn't able to find the comments on the method. moreover comments can also be included in conditions like 'if&nbsp;!exist_assignment and&nbsp;!exist_directory' in create method,1.0,1.0,1,29
"write up is good. but i feel that there are lot of unnecessary screenshots in the write up. instead of it, if it would have have change flow graph, it could be better. like wise, author'c could paste the code and explain in the wiki. moreover i cannot see author's name in the wiki",1.0,1.0,1,56
"yes, the team had added the test cases. however, team could have written the cases thoroughly. i can see test cases like ""can create an empty csv with just headers"". but test cases with more edge cases need to be added like 'large csv files', 'csv with characres', etc. overall the coverage decreased in the ci build.",1.0,1.0,1,57
test plan is shown as testing step for users. i think test plan should include rspec or any functional or integration test.,1.0,1.0,1,22
i found over all code is well written but as mentioned above two&nbsp;methods are a bit longer and&nbsp;can be reduced into smaller method calls.,1.0,1.0,1,28
"yes, they comment each method for&nbsp;late_policies_controller.rb, and every comments seems practical. but method&nbsp;late_policy_params,&nbsp;instructor_id and&nbsp;late_policy&nbsp;have no comments.",1.0,1.0,1,27
"yes, they add correspond rspec test for their function. but i think they should add some valid test cases. besides, if they can have a picture of their test cases on wiki, i think that would be much better. last, i think they should add some ui testing steps for the&nbsp;policy function.",1.0,1.0,1,54
it would be better if they could add more comments in their wiki. even though the code they wrote is easy to read.,1.0,1.0,1,23
"overall, they have included all the necessary steps in the test plan to test the changes easily. there is one scenario which could be included in ""test ui for student login"" section which shows reviews which are given by the student to particular team :- click ""other's work"" click ""view"" then they could compare that view with the view they changed for review report. &nbsp;",1.0,1.0,1,65
they have included much of business logic in assignments_controller out of which some code could be shifted in model and also for the successful save message return in create method they have used it two times which could be dry out further by adding simple flag.,1.0,1.0,1,46
yes they did try to improve the code and resolved issues related to code climate. but still the indentation is not uniform and also they could have added more comments in the ui part and in assignments_controller,1.0,1.0,1,37
"overall, it works fine but on one edge case when i try to save two assignments with same name under same course, the application throws exception which should be handled with error message at the user end.",1.0,1.0,1,37
"comments are mostly descriptive &nbsp; selected_participants.each {|index| reviewresponsemap.where(reviewee_id: team.id, reviewer_id: index, reviewed_object_id: assignment_id).first_or_create } &nbsp; &nbsp; &nbsp; however the above line may require comment to completely comprehend",1.0,1.0,1,31
"some variable_names are too descriptive to a extent that is not necessary , participants_with_min_assigned_reviews the above variable can comfortably skip words like with.",1.0,1.0,1,22
the application hasn't been deployed heroku | welcome to your new app! refer to the&nbsp;documentation&nbsp;if you need help deploying. ,1.0,1.0,1,23
"the code is well organised and contexts and it are covered appropriately &nbsp;but in topic name class &nbsp; describe "".topic_name"" do &nbsp; &nbsp; context 'when topic name empty' do &nbsp; &nbsp; it ""return -"" do &nbsp; &nbsp; expect(student_task.topic_name).to eq(""-"") &nbsp; &nbsp; end &nbsp; &nbsp; end &nbsp; &nbsp; context 'when topic name empty' do &nbsp; &nbsp; it ""return topic name"" do &nbsp; &nbsp; &nbsp; two different scenarios are provided for the same context",1.0,1.0,1,75
"the method names are specified however the function and implementation details can be more broadly specified since.&nbsp; the method names can follow to the ruby naming practices, by inserting&nbsp; '_'&nbsp; between any words within the method name. for example, the method&nbsp; &nbsp; complete? can be changed to task_complete? or&nbsp; stage_deadline_complete?&nbsp; get_due_date_data can be changed to get_due_date_timeline since it returns the time_line specifically &nbsp;",1.0,1.0,1,69
"the method names are specified however the function and implementation details can be more broadly specified since. the method names can follow to the ruby naming practices, by inserting '_' between any words within the method name. for example, the method complete? can be changed to task_complete? or stage_deadline_complete? get_due_date_data can be changed to get_due_date_timeline since it returns the time_line specifically",1.0,1.0,1,61
"though no test cases were added, the explanation was given in wiki although for views, if test cases can be added. the existing tests&nbsp; for calculation of deadline duedate, for the following cases can be included -if no deadline date is set on topic' -if date prior to the topic submission deadline is set as drop topic deadline -if date after the topic submission deadline is set as drop topic deadline &nbsp; ",1.0,1.0,1,73
"i think the writeup is great. there are issues in this project and all of the issues are well defined. also, for each issue the solution is provided to explain the plan or idea how the team will fix the issue which is helpful for reviewers. the code change shows in which file and how the code is modified, which is very clear. if the team could add more details about how to check the work will be better.overall i think the quality of the writeup is great.",1.0,1.0,1,89
"given that this is a project to add test cases, the measurable output should be an increase in test coverage, but it has surprisingly dropped. i however dont think it is because of their code, but rather some issues with coverall (as some other teams too have reported issues with a drop in coverage despite adding new cases). so my only concern would to verify if the code coverage has increased for real. if yes, i think the code is ready to be released to prod.",1.0,1.0,1,86
there are some comments that are added but not to all the refactored method. should be added for the remaining methods as well.,1.0,1.0,1,23
"the repository definitely needs more comments as i had trouble following the code. however, the function naming convention and size are good as they are.",1.0,1.0,1,25
"the wiki seems good and explains the background and motivation of the task. however, the implementation is left for the user to figure out by providing the screenshots. it should rather have been explained about what approach was used and the reasoning behind it.",1.0,1.0,1,44
"no comments were added for the methods that were updated. you should add a comment where you check the review mappings size and compare it to the number of reviews allowed for the assignment explaining what it is doing. fortunately, it isn't too hard to understand what this code is doing. it would be good to add similar&nbsp;comments explaining the&nbsp;changes to it.",1.0,1.0,1,67
"the document contains a ""testing from ui"" section, not a test plan. rather than being focused on pre-conditions and edge cases, it gives a list of steps for a happy path through the new flow. alternate paths should be added.",1.0,1.0,1,41
"the build passes, but there are error notifications from code climate. specifically, there are issues to fix for code climate. code coverage decreased by about - %. no methods were updated, but they were extended to have new functionality for checking the review number. similarly, no variables were added. however, the field of assignment 'num_reviews_allowed' is named well. therefore, naming seems good. i would just look into the errors with code climate.",1.0,1.0,1,70
the tests added to review_mapping_controller_spec.rb are not dry because they share the same first or so lines. this could be reduced with a helper method.,1.0,1.0,1,26
"when i go to edit some assignments, i see the error message:&nbsp;undefined method `id' for nil:nilclass. this is followed by the code snippet: function populateduedates(topic_id, review_rounds) { elementsarray = ; $('[id^=""due_date_&lt;%= @assignment.sign_up_topics .id %&gt;""]').each( function(i, e) { /* you can use e.id instead of $(e).attr('id') */ elementsarray.push($(e).attr('value')); }); it looks like there isn't a null check in this function before looking at the due date. it's unclear if this error is related to new functionality. apart from this, the functionality seems to work. i could modify the deadlines of assignments.",1.0,1.0,1,101
"in&nbsp;_submitted_files.html.erb file, there's a if-else closure, and the name of method is not much easy to understand. in my opinion you can add some comments for these if-else closure.",1.0,1.0,1,36
they&nbsp;modify the existing test to fix current features. here's a small suggestion. maybe they can write more test for the new features they implemented.,1.0,1.0,1,27
none of the functions is long and&nbsp;there is no need to separate code into methods. it is modular enough. more comments are definitely needed because the&nbsp;code change in core expertiza file is easy to follow but the new js function&nbsp;if had comments would be easy for anyone to follow. the code definitely follows ruby style guides. there is no code that is not dry.,1.0,1.0,1,70
"the writeup is great. the team has really explained the core problem that they&nbsp;have tried&nbsp;to solve and how they approached it. however, the writeup would have been much better if the team would have explained the code in a brief manner as it would have enhanced the understanding&nbsp;of the project. the writeup did not lack an explanation of any functionality of any sort. however, the team could have specified steps on how to check the feature from ui because as an expertiza newbie, i had great difficulty navigating to the desired page.",1.0,1.0,1,98
"overall, the code looks good.&nbsp;the js function is a bit long but the functionality that they are trying to achieve is a singular one so one function&nbsp;suffices. the code has fewer comments so it is hard to understand why the statements were written as they were. the variable names&nbsp;could have been better specifically in the js function since other than that, the team has used the class objects and sql queries to accomplish st feature which&nbsp;will&nbsp;follow proper naming convention. unfortunately, the authors haven't improved the code accordingly.&nbsp;",1.0,1.0,1,99
comments are needed which explain what the code does. other things follow the style guidelines. the methods are short and should be doing what they do.,1.0,1.0,1,26
"the&nbsp;authors have properly attached screenshots of the exact changes made in the files along with a brief description of how they added the code. since the moz projects don't include writing a brand new file, the aspect of design pattern cannot be commented upon. it would be good if the authors explained the parameters and stuff.",1.0,1.0,1,59
"the writeup is good overall however it would have been much more helpful if the team had included what exactly is webassembly and how it is useful in browser engines. due to this,&nbsp;it was a bit difficult to understand exactly what they were trying to do. also, the team could have worked more on explaining the code they wrote. it is not possible to understand the code by just looking at it. other than that, it's proper.",1.0,1.0,1,80
"the page is well-written explaining what their project is and how it integrates with the whole of servo browser engine. they could have simplified the terms so anyone could understand what&nbsp;is web assembly compilation in browsers and why exactly asynchronous compilation is needed.&nbsp;other than that, i feel they have included necessary details and linked to their project page for more details.",1.0,1.0,1,66
no they have no created any test plan. team can test the existing test cases and make new test cases to test the methods which they have creates.&nbsp;,1.0,1.0,1,29
"i really liked the write up by team in how they have showed how to reproduce the issue and explained in greater detail, gave many other project details too. just team should write test cases.&nbsp;",1.0,1.0,1,36
"yes, team has explained well about what test cases they are going to write, and why they decided to write those test cases. though they have not used design pattern. and it would be nice if team can explain about test cases. because some test cases are hard to follow and in order to understand it you will have to understand the background of it.&nbsp; example hyperlinks? what does current stage means?",1.0,1.0,1,73
i agree that the variable names used are quite intuitive but the comments are not included. maybe because they just tried to fix the bugs. it would have been even better if you could describe the logic or action in one line as a comment.,1.0,1.0,1,45
the write-up is good. it is written in good easy to understand language with relevant sections required. it would have been better if they could also highlight the part of code which was earlier and part of the corrected code to easily comprehend the work they have done.,1.0,1.0,1,49
there's a change in the file&nbsp;db/schema.rb&nbsp;where as there's no description about it in the wiki. change in schema should have been explained as schema is&nbsp;the heart of the application always.&nbsp; &nbsp; &nbsp;,1.0,1.0,1,43
they didnt have any writeup but most things are specified in the video . everything that they have implemented has been demonstrated in the video. so just a wiki page explaining the process would be great and helpful.,1.0,1.0,1,37
"if&nbsp;variable copytopics is a boolean then naming it ""copy_topics?"" is more rubistic.",1.0,1.0,1,14
variable copytopics is a string that seems to have 'y' as the only possible value.&nbsp;it might be helpful to&nbsp;keep boolean it instead. copytopics use copy_topic (snake case for variables),1.0,1.0,1,33
usage of bookmark.create!&nbsp;using banged create should be thought of again as banged methods are dangerous.&nbsp;,1.0,1.0,1,19
"the modified code doesn't have comments in some files, which is pretty difficult for the readers to understand. may be a two liner about why a particular method is added or why some of the lines are removes would be useful. also, if the comment includes a hint for the user about the flow of code like before this which file we can look at, might be useful to understand the flow. big chunk of code has been removed and the same has been added and modified. not sure what happened may be github issue. &nbsp; &nbsp; &nbsp;",1.0,1.0,1,99
the write up is very clear and easy to follow. the team has stated what the previous problem was and what did they resolve and what is pending too. the steps for checking the bug is very clear. but there is no explanation about the how did they do it or which parts of the files were modified. may be including the screen shot of situation before the fix and after the fix would be great because it would be easy for the readers to follow and identify the work doe by the team. the team tried to include a video but i guess the link is not embedded properly. it is still a text.,1.0,1.0,1,115
"whatever is mentioned in the write up is clear but as mentioned in the above comments it can be more clear. some screenshots of work or a quick video would be good. also, the process to guide the user to check the functionality can be more clear and in points so that it is easy to follow. mentioning the code files&nbsp; modified in the wiki page and showing a giving a quick glance of code snippets. wiki page isn't sufficient to get the complete understanding of the project so the user had to go to the projects description in the oss document to get more understanding on it. to avoid this, the team can make their wiki page more informative.",1.0,1.0,1,122
the write up could have been better. the team needs to add actual code snippets and screenshots as well as the test plan for the test cases. a video for the test cases can also be added.,1.0,1.0,1,37
there should be examples to test the upload file limits as well. they only added the tests for ta changing grades.,1.0,1.0,1,21
they clearly&nbsp;explain how and why&nbsp;their job were done. but they didn't mention anything about design pribnciples or patterns in their wiki page. maybe they should add some descript sentences about it. &nbsp;,1.0,1.0,1,37
 ) the writeup does tell the work they did and how they did it ) the reason for doing this(user story) are too short and really hard to understand why should they do this ) they used screenshots to help explain the code and there should be more comment to explain also,1.0,1.0,1,50
" ) the writeup overall is good, they explained in detail about their project. like file they modified, the work-paln of the framework ) the size of the screenshots varis, some are too big while some are small. need to be improved ) the reason/user story for this project is not well explained",1.0,1.0,1,51
"code added is very well maintained and written with all principles in mind, but it doesn't include any comments. i would suggest them to add comments even though the code is intuitive&nbsp;",1.0,1.0,1,34
commenting has not been done. adding commenting before the changes would help understand the code better.,1.0,1.0,1,16
"the test plan could have been written in wiki page. currently, the wiki page only explains the ui testing manually.",1.0,1.0,1,20
"the write up does explain explaining everything very well and in brief. however, test plan could have been explained in write up",1.0,1.0,1,22
"&gt; team has updated the tests for the new controller, however i don't see any specific ""test plan"" section about all the changes done. &gt; it would be nice if the team could run the tests all over again after the updates and add some results for the same in the wiki. a screencast or even pictures depicting the test run would be nice. &gt; could not test or consider all the edge cases as there isn't much talk about the test plan. please add more and the results as mentioned above so that more rigorous testing scenarios can be considered. &nbsp;",1.0,1.0,1,104
"&gt; most of the variable/class/method names are fine. however, there are a few that could be improved. &gt; for example:&nbsp;per_page in users_controller, ""foreign"" method in account_request_controller. it does not suggest functionality. ",1.0,1.0,1,35
"&gt; there are a few comments but more can be added. instead of putting a lot of inline comments, team can add comments for specific functions. &gt; besides, there are some commented code lines that should be removed to make the code clean.",1.0,1.0,1,43
" ) the writeup looks good enough for understanding the issue and the modifications done. the issue reproduction steps however, have not been detailed out. ) team could have added a video for the test that they have done or something which could show the fix. ) the second issue fix hasn't been described with enough details. could add few more lines for the description. ) nothing has been added to the testing section of the wiki. also, a ""references"" section could be added.",1.0,1.0,1,80
"&gt; most of the variable names makes sense, however some of them could be improved. for example: ""sfilename"" isn't very clear. &gt; there are some unnecessary comments left out in the code. this should be removed.",1.0,1.0,1,37
"&gt; the cases seem to be working however since the details were not clearly mentioned in the wiki, it was tough to get it working. &gt; please add more details or maybe some sort of flowchart to your wiki so that anyone can easily login to the system and follow the instructions to test the features. &nbsp;",1.0,1.0,1,57
&gt; the writeup looks decent enough however there were a few things i would have liked to be added for more understanding. &gt;&nbsp;testing from ui section only describes what credentials needs to be used. i don't see any flow talking about how exactly the application needs to be tested &gt;&nbsp;a video demonstration could be added which can show the fix that has been done. &gt; fix for the second issue has not been described properly. would have appreciated more information about what and why the change was made.,1.0,1.0,1,93
"&gt; overall the code quality is fine. &gt; however, some of the variable names could be improved. i had mentioned ""sfilename"" but i dont see it getting fixed. &gt; some of the comments are redundant and could be removed.",1.0,1.0,1,39
" ) the writeup looks decent but a lot of modification needs to be done. some of the things have been mentioned without any structure. for example: testing from ui section only describes what credentials needs to be used. i don't see any flow talking about how exactly the application needs to be tested. ) some of the sections like ""references"", ""testing using rspecs"" are missing. ) a video demonstration could be added which can show the fix that has been done. ) the issue has been discussed but any pictorial representation for the same would be great. i can understand the project and what it does but more details or visuals would make life much easier. ) the code fixes for issue # needs more description.&nbsp;",1.0,1.0,1,122
more comments are needed. though for some methods the method name itself is self-explanatory adding comments could've made things easier to understand and more clear.,1.0,1.0,1,27
the methods are not well commented. could've been more descriptive to explain the method's functionality.,1.0,1.0,1,17
more comments are needed to understand the functionality of the method. comments could've been more descriptive,1.0,1.0,1,17
the build didn't pass. the team needs to look into travis ci log,1.0,1.0,1,14
while the static code changes seem to be appropriate. the travis build fails. please look into it,1.0,1.0,1,17
i can see a lot of changes being made and would suggest that the reviewer would gain more insights if you would have mentioned the purpose of adding or altering the code in the form of comments at places where the code has been altered. would suggest that you do the same in the next round of submission.,1.0,1.0,1,58
"the document is systematic to some extent however the test plan is not mentioned anywhere inside it. i would suggest that you jot down the test plan including all the corner and test cases for which the tests have been run correctly. this would not only save the reviewer's time to test already tested edge cases, but also allow him/her to suggest or test some new corner cases.",1.0,1.0,1,70
"i found the comment description to be concise and easy to understand. however, i would suggest that you make use of more comments for the upload file section that you changes the code for. this would make the changes easily&nbsp;understandable&nbsp;to most reviewers and thus save us some time. :)",1.0,1.0,1,52
"the number of lines of code changed is pretty much considerable and i would recommend that you make it much more modular next time. for instance, the java script function written seems to lengthy for a single pass and would be better understood if it were broken down into sub functions instead of having those big block of if statements. the comments would have been more, intimating the changes being implemented which would make the code intuitive to any user.",1.0,1.0,1,80
the edge cases and corner cases have not been mentioned in the document. i would recommend that you mention atleast a few and validate these during the next submission round.&nbsp;,1.0,1.0,1,31
"the instructions to test the working from the user interface only consists of login credentials and the details of student . however, what was expected are the steps needed to navigate to the correct page and test the default functionalities and compare it with how the changes being made affected the current working.&nbsp; moreover, the files modified section contains the entire code which is fine however, i would recommend that you highlight the newly added code or the modified code either with green or some other color (as on github) and paste it on wiki so that it would become convenient for the review to view the changes and not move back and forth between github, expertiza and the wiki page just to view some few altered code.",1.0,1.0,1,128
there are no testing instructions mentioned in the wiki document which is why i couldn't test for any cases. i recommend you to please mention a list of instructions in the testing from ui section during the next submission round,1.0,1.0,1,41
"the write-up looks all well organized except for a few areas that i would like to mention below: . the test plan is not explained illustratively with edge cases. . moreover, the test plan does not elaborate the steps to test the implementation from the user interface (adding screenshots there would have made the testing even more intuitive) and just includes the credentials. . code coverage should have been added which would have helped to gauge the importance of changes being implemented after round .",1.0,1.0,1,82
i think that the task are implemented correctly and the functionalities seem to be working fine. my only concern would be that the test plan should be much more understandable with the help of illustrative images and steps.,1.0,1.0,1,38
"as such, the team did not have to change or add a lot of code.&nbsp;code which is added is fine and readable. variable names are also good and understandable. but, i would like to give a small suggestion. in file ""app/models/assignment_participant.rb"" on line no , the variable name is ""attributes"" which should have been more descriptive name (like ""student_attributes""). maybe ""student_attributes"" can be wrong, but i couldn't understand what attributes they are by looking at the code.",1.0,1.0,1,82
"definitely more comments are needed to make the code more understandable and readable. otherwise, the code is written using proper functions that are small and task-specific. the language is rust and not ruby. so, can't judge based on&nbsp;ruby style guide.",1.0,1.0,1,44
"one pr is already merged and the other pr is having some issues. but since the team is having constant interaction with ""jdm"",&nbsp;i hope they will be resolved and it will be merged soon. if they are not able to do it, i suggest team to take these issues to the final project and complete those steps along with the&nbsp;subsequent steps of the project.",1.0,1.0,1,68
"the newly added code is written by following standard practices. the authors did not have to create a lot of new methods or variables. but&nbsp;i suggest changing names of variables ""maybeurl"" and ""maybesourcemapurl"" on line of file ""components/script/script_runtime.rs"". this names are not good as per as what i feel. why a ""maybe"" in variable names?",1.0,1.0,1,60
"most of the variable names and method names are readable but i suggested the team to change a few variable names like ""maybe_url"" which they have not changed. i feel this must have been their code's requirement to have such variable names. other than that, variable names and methods are pretty straight-forward.",1.0,1.0,1,54
"the system operation cannot be tested from ui because this is&nbsp;a mozilla project. their project was to fix/modify/add code such that&nbsp;webassembly programs can be compiled asynchronously. one of their prs is merged there are positive comments on the pr which is not yet merged. this shows that the features are working as expected. however, the pr maintainer ""jdm"" made some changes&nbsp;in their code and it caused test cases to behave unexpected. i suggest the team to review it asap and find the reason why those tests are not passing.",1.0,1.0,1,97
&nbsp;same comment as last time. providing navigation to test the changes shall help understand better.,1.0,1.0,1,16
"i would suggest to use clear names for the review file being generated, as is the case with the rest of the application (try export in assignments / assignmentparticipants) . the file is named review_scores which is not very indicative (or which scores or what assignment or which student).",1.0,1.0,1,47
some of the methods like 'create_approved_user' and 'create_requested_user_record' are still too long. since this is a refactoring project i fell these methods should also me broken-down/modularized and comments should be added for those methods.,1.0,1.0,1,36
the names are very descriptive are the code looks user-friendly. i feel requesteduser should be renamed to useraccountrequest instead of accountrequest.,1.0,1.0,1,22
some methods like&nbsp;assign_quiz_dynamically&nbsp;are a bit too long and could be refactored by pushing the if-else conditions into a separate function.,1.0,1.0,1,25
"in my opinion, get_team_color and obtain_team_color mean almost the same thing, so maybe obtain_team_color could be better named to reflect its functionality, or maybe rename both. other than this issue, the code seems good.",1.0,1.0,1,34
"the team has done a good job when it comes to naming/renaming methods and variables. the justification for each such action is also clearly stated in the writeup. in my opinion, no_particular_topic still doesn't capture the meaning well enough, it could maybe be renamed to no_topic_preference or something along those lines.&nbsp;&nbsp;",1.0,1.0,1,55
"the code follows ruby writing styles for naming . the business logic is well supported by comments which make it easier to understand the code . this commenting feature was absent in the last submission . however, some code in&nbsp;app/controllers/review_mapping_controller.rb (line onwards) can be split into multiple methods as the method name is doing more than what it is supposed to do .&nbsp;",1.0,1.0,1,65
"comments have been provided in student_task_controller.rb for the tag count feature - however, a similar comment could have been given for the tag counter modifications in grades_controller.rb to make the changes more easy to understand.",1.0,1.0,1,36
"currently, the team hasn't specified any test scenarios or edge cases covered in the project. they can highlight it in the next iteration of the project.",1.0,1.0,1,27
"test plan isn't specified in the wiki page, this can be implemented in the next iteration of the project.",1.0,1.0,1,20
"travis ci: / builds passed. failed due to changes made in app/models/tag_prompt.rb -&nbsp; round_number = assignmentquestionnaire.find_by(assignment_id: assignment.id, questionnaire_id: questionnaire.id).used_in_round one case might have failed since the tag returned the slider instead of id(?).&nbsp; there were no conflicts but there might be other surrounding ui/functionality checks to be completed before merging the code.",1.0,1.0,1,60
code works when tested and changes in count values are reflected upon refreshing the page. the team can probably add some js to make the code not dependent on page reload to show all changes.,1.0,1.0,1,35
"there are original comments for the functionality already present in the files. however, there are no comments to explain the changes made in the code. the team can add comments, especially in the tree_display.jsx file for the one-liner changes and block code added in the file. comments can also be added to the tree_display_controller.rb file in the ""action_allowed?"" and ""confirm"" functions to explain the minor changes made throughout.&nbsp;",1.0,1.0,1,72
the team has not added any test cases to the expertiza project. the code coverage has decreased marginally.&nbsp; the team could have added simple capybara test cases to check for the redirection (test plan ) and to check for ui elements (as a simple test case) in instructor's editing others' rubric (test plan ).,1.0,1.0,1,54
the workflow is documented properly and though there are a few missing sections the overall flow is understandable. the purpose has been explained clearly and there are a good amount of graphs to explain the project use cases. the major and minor fixes done for the project are explained well with the help of&nbsp;code snippets. there's also a screencast of one of the fixed bugs. the team can improve upon the wiki documentation by adding the test plan explicitly and adding the screen recording for the second bugfix (task : instructors can make changes to each others&rsquo; rubrics ).&nbsp;,1.0,1.0,1,102
"though there are flow chart diagrams to explain the expected workflow in the project, there ain't any explicitly mentioned test plan and there are no spec files modified to run the tests. however, this can be modified in the next iteration of the project.&nbsp;",1.0,1.0,1,46
"the write up has been carefully written and it is structured well enough to get a good grasp of the project. the flow chart diagrams definitely make it easier to understand how the code is expected to work and the accompanying code snippets help in understanding the changes made to the code base. lack of a test plan section is one thing that can definitely be fixed by the team in the next iteration. overall, from the introduction to the major/minor bug fixes description has been neatly laid down.",1.0,1.0,1,90
each and every function doesn't have a comment. it is tough for a reader to understand why this method was added. i would suggest writing comments for those functions which are tough to understand.,1.0,1.0,1,35
"it was clear to understand what they were trying to accomplish. they haven't used any design patterns, because they were writing test cases. there was no explanation of what student_task.rb does, so it is tough for a reader to understand. i would suggest writing a short write-up on what student_task.rb does.",1.0,1.0,1,55
"they have created variable named ""participant "", ""response "", but i can't find use of it in the code, so i would suggest removing the unused variables.",1.0,1.0,1,26
"write up was good, i think there should be short description of what student_task.rb does and how it works on the project.",1.0,1.0,1,23
no long methods. more comments are needed to explain the functionality. &nbsp;,1.0,1.0,1,12
"the writeup well explained issue, solution and how one can check/verify the solution with steps. but it does not include the screenshot and test section. also, discuss the way you come up to the&nbsp; solution.&nbsp;",1.0,1.0,1,38
"in the form for adding bookmarks, when user enters invalid url then it flashes notice then it is invalid. functionality is fine but instead after invalid form message user should be provided original form to edit the url which is not shown here. it will me much more intutive. &nbsp;",1.0,1.0,1,50
they did not mention anything about the test plan. i cannot see any test cases. they should have written test cases testing whether the policy has been created or not. they should also write the test case for the backlink. by using the capybara they could have tested whether the link redirects correctly or not.,1.0,1.0,1,55
the create policy feature works as intended but the backlink does not work. on clicking the back link an error occurs that is the recordnot found error. please check whether the assignment id is stored properly or not. i think the assignment id is null.,1.0,1.0,1,45
"the authors did not explain any reason for doing what they did. they did not describe any design pattern or principles if they have used it. as their implementation includes modifying the existing methods it may not involve implementing a new design pattern. for their feature, they could have used a composite design pattern, if possible.",1.0,1.0,1,56
"the writeup explains the problem clearly but they could have explained a little bit about the present implementation and they could have explained their intentions more clearly. yes, i can understand what the project does.",1.0,1.0,1,35
&nbsp;the implementation section shows details of the steps as to why it was implemented. they could have provided more description for each step and what the step was doing.,1.0,1.0,1,30
no tests are added and the existing tests fail. i think for your case if the existing test cases pass that should be good enough.,1.0,1.0,1,25
make the writeup more descriptive and add each step and explanation for the step. i could understand what the project was doing but not completely. add the existing system which improves the understanding.,1.0,1.0,1,33
" ) 'def list' &amp; 'def save_topic_deadlines' quite long. 'def get_status' is also long and has quite many nested if-else conditions. ) according to me, in 'def get_status', 'return' should be a common statement instead of passing it in every if-else block. ) there are several if-else blocks in the code. please add more comments specifying what condition each if-else block covers.&nbsp; ) the code follows the ruby style guide. the team has made commendable efforts in this area. ) there is a lot of code duplication in 'signup_sheet_controller.rb' which could be refactored.&nbsp;",1.0,1.0,1,94
"the write-up is very poorly written. it just highlights the solutions to the issues in one line which is not sufficient. no mention of any design principles or patterns is included. it is very hard to follow the changes you have made if the pull request was not shared. please include more details about the changes you've made in every file (which method, which line, etc). also mention the reason for doing the changes that have been made. if any design principles/patterns have been used, mention the reason why you thought this would have been the best solution.",1.0,1.0,1,101
"comments have been provided in one line wherever possible, but in&nbsp;reports_controller.rb, the newly added code does not have any comments. i would like to make a suggestion, please give a multi-line comment before a method that explains what this particular method does, and a single line comment inside a method wherever required to give details about a specific line that might not be so straightforward to understand.",1.0,1.0,1,71
"the variables, method and class names are properly defined. by looking at the code i was able to get an intuition of what the code will probably do. however, i came across a variable name 'rname' in&nbsp;_review_report.html.erb&nbsp;and i am not sure what that does. please change it to something more human readable, if possible.",1.0,1.0,1,60
most of their code change seems to be in the view action of the studenttask controller. and the function is pretty long. they have included the logic for tag count inside the view function. which means that the function is doing more than what its name suggests. they could separate the tag count to a different helper function and call it in the view.&nbsp;,1.0,1.0,1,65
"some comments are unnecessary which are written for the understanding of the reviewer. changes in the schema.rb file also need not be pushed. more extensive tests need to be written. also, the tests failing the build need to be fixed. but otherwise, the code is dry and need not be done from scratch. i believe this is a good place for a future team to pick up.&nbsp;",1.0,1.0,1,69
they explained how they did it very well. documentation was clear and illustrative. but they haven't mentioned what other design choices they considered or why they did the work the way they did it.&nbsp;,1.0,1.0,1,36
they are checking if an assignment with the same name already exists in the create method of the controller. i think this action can be separated out and that would help keeping the code dry and reduce the size of the method. it would also make the function more transparent since the function will be doing what it's called and not other stuff too.&nbsp;,1.0,1.0,1,66
"i think the code they have written is good enough compared to the rest of the code. however, the add_reviews method is very long and if they can separate out some portions of it to make it more modular it would be better.&nbsp;",1.0,1.0,1,44
"- the write up is clear but not adequate enough - the doc explains issues and what the team did to fix each, but doesn't explan the need for each fix - the doc should indicate which principle was used for corresponding refactoring and what impact the change made",1.0,1.0,1,47
the scope can be explained more. what is done and why it is done can be elaborated.&nbsp;,1.0,1.0,1,18
"there is no mention of the design patterns in the documentation. the documentation was clear enough to understand. some more screenshots, especially regarding the testing scenario would have been more helpful.",1.0,1.0,1,31
the code refactoring of certain methods like get_review_team() does not include comments detailing the functionality. suggest commenting the code also suggest add a line of comment for new variables created and their functionality.,1.0,1.0,1,33
"the code refactoring of certain methods like get_review_team() does not include comments detailing the functionality. suggest commenting the code get_awarded_review_score: the new variable teamid is confusing with another variable team_id. i would suggest using some other variable name. in case the var name is localized, include a comment to differentiate.",1.0,1.0,1,50
"the team has done a good job of documenting the proposed changes along with the reasoning behind the proposed changes.the code embedded using pre tag in the expertiza wiki runs over the page and is not&nbsp; visible. i would also suggest setting the flowchart image to center of the page. i would suggest to combine the refactoring changes for same reason eg: abc complexity, into one group as this would simplify the reviewing process even more.",1.0,1.0,1,78
"get_awarded_review_score: the new variable teamid is confusing with another variable team_id. i would suggest using some other variable name. in case the var name is localized, include a comment to differentiate.",1.0,1.0,1,31
"while there is no link for testing from user interface, pulling their github repo and rebuilding the expertiza into vcl i was able to test the functionality. i would suggest the authors to setup a vcl instance.",1.0,1.0,1,37
"the write-up details all important aspects of the project. however, there are certain problems with structuring. the code and flowchart both are flowing out of screen. also i would suggest rearranging the refactoring changes into categories of similar problems:for instance abc complexity. the authors have also included certain unnecessary sections like the travis-ci build testing&nbsp;which is redundant. the screenshots for rubocop testing can be aligned in a better way to include side by side sections for code and results",1.0,1.0,1,84
"the team has done a good job of documenting the proposed changes along with the reasoning behind the proposed changes. however, they have not mentioned the design principles they have used. also, there are certain changes like the ""created a variable named &lsquo;allowed_actions&rsquo; in method choose_case(action_in_params)"" &nbsp;is proposing a new logic for implementing the code rather than refactoring. i would&nbsp;suggest to make the documentation detailing the issues and subsections as problems and proposed changes. this would make it much simple and easier to understand the wiki.&nbsp;&nbsp;",1.0,1.0,1,94
"the deployed version on heroku does not work. however, pulling their github repo and rebuilding the expertiza into vcl i was able to test the functionality. i would suggest the authors to update their heroku projet or setup a vcl instance.",1.0,1.0,1,41
the newly added code has been added to existing methods: consider creating new methods with detailed comments. this makes reviewing the code harder and is not suggestive of the functionality of new code. creating a new method by name : check_ta_access or something like that makes understanding much easier.,1.0,1.0,1,48
the modified code does not include comments. the newly added code has been added to existing methods and needs to be separated : consider creating new methods with detailed comments.&nbsp;,1.0,1.0,1,30
"the authors have implemented the test cases in rspec file, however, the documentation does not include a detailed analysis of the testing plan and would highly recommend updating the documentation",1.0,1.0,1,30
app/controllers/submitted_content_controller.rb&nbsp;: rename type to uploaded_file_type as it is more suggestive. the newly added code has been added to existing methods: consider creating new methods with detailed comments.,1.0,1.0,1,31
"in app/controllers/grades_controller.rb and app/controllers/student_task_controller.rb, huge pieces of code is added. it could have been better understandable with more comments. also, see if they can be shrunken in size.",1.0,1.0,1,34
" . documentation is fine and mentions everything they have done so far. . though everything is clear, they should've mentioned reasons for&nbsp;whatever they did. (for e.g. issue :refactor participants variable in load_add_signup_topic). they could mention refactoring is done because of so and so reason.",1.0,1.0,1,46
" . seems they've changed a name for a method, then the travis ci failed and they again reverted back to the old name. this long route could've been skipped if they would've run rspec locally before pushing the changes to git. . there are some more times where they've done the same thing. but that shows they've attempted to do some changes.",1.0,1.0,1,65
" . they could've mentioned how the methods work. but since their job was to just refactor, they've done the documentation part very clearly. . only thing i would like to suggest is that authors should think of adding some snapshots of the work, which helps the reader to better understand the changes made.",1.0,1.0,1,53
 . almost every change they made is reasonable and doesn't attract any ambiguity. . changes to the variable names followed by comments would help to understand their use. (for e.g. paginate_user&nbsp; doesn't&nbsp; give hint about what it does). &nbsp;,1.0,1.0,1,42
"&nbsp;the documentation is written well enough, also listing the missing/unimplemented parts. they however do not mention why they chose to perform the counting in the back-end(grades_controller.rb &amp;&nbsp;student_task_controller.rb), as doing it on front-end would have been faster and the user would not have had the need to refresh the page to see the updated result.",1.0,1.0,1,63
"- it needs more comments on what the line is doing. - added new column in the table which should have been the last resort for an app already running on production. there is a column dropdown that has a boolean value as well. they should've tried to use that field only and try to fix the issue of why it was not working. instead, they added on to the code. - if there was a reason which they faced while using the same column they can write that in the wiki for future reviews.",1.0,1.0,1,93
"-&nbsp;too&nbsp;many commented lines of code in the prs. this pr needs refactoring before being merged to avoid the future task of refactoring. - i am not too confident about adding another column like&nbsp;use_dropdown_instead i suggested in my previous review to get rid of db changes as another column dropdown is already available. they also didn't explain the need to have this redundant column. - the name with postfix instead is confusing as it suggests that there is another column like do_this for which they have do_this_instead - also, the column name should be a noun",1.0,1.0,1,98
- convention in `describe` not used in many&nbsp;places. they have used '.' in many places for instance method when they were supposed to use `#` with them.,1.0,1.0,1,26
- problems in naming convention in the `decribe` block. should us '#' instead of '.' for instance variables. - increase in code coverage in the screenshot attached but the pr shows otherwise may wanna understand how they defer.,1.0,1.0,1,34
- very well explained but i am already using and working on the app but a new user may not grasp it so quickly. adding more details about student tasks apart from their method name would really be helpful. example: xyz(): used to create a user&nbsp;,1.0,1.0,1,46
the write up does include a very well detailed test plan. test plan shows how automated testing&nbsp;passes all the existing test cases&nbsp;as well as how manual testing for the team's feature implementation can be done. no newly added test cases exist for the new code written by the team. new rspec test cases can be written to test the newly added functions.,1.0,1.0,1,67
"reasonable and meaningful names have been given to the newly added functions. not a lot of newly added&nbsp;the variable/method names can be improved by following some convention, like `camelcase` or `using_underscore`",1.0,1.0,1,34
"( ) long methods can be broken down. in some cases, methods could have been extracted from existing long methods. such as in case for&nbsp;peer_review_strategy function &amp; assign_reviewers_for_team ( ) code has not been extracted to separate methods appropriately (as in case of create method) ( ) comments have been added in some places but when new functions are created, more comments&nbsp;are required to make following the code easier ( ) the code does follow the ruby style guide. ( ) code is dry &amp; does not have any smells apart from long methods at some places and&nbsp; &nbsp;",1.0,1.0,1,94
"the authors did not had test plan but they had deployment example, so if instructors are expecting section test plan they should rename it.",1.0,1.0,1,24
yes the writeup is actually good and concise.also the diagrammatic explanation is good.but they do lack the screencast of there feature&nbsp;,1.0,1.0,1,24
overall writeup is good but while explaning the ui glitch/ui path error that authors have solved could be explained with more accuracy as there is ui path problem explaining problem with bullets like how to go to that specific page and what will happen would be more helpful. as current explanation in sentences which is more verbose and confusing. like the said if you are on assignment tab but how to go to the assignment tab.,1.0,1.0,1,77
the writeup is well written but there is no screencast for nd task. also as said earlier bullet point approach for explaining ui path would be more helpful.,1.0,1.0,1,28
"after reading through the code, a lot of the things did make sense, but when first reading the wiki, the same wasn't the case. adding a high-level understanding of what the code does, especially in the model/questionnaire.rb and also how refactoring was done on the create method would definitely give a better understanding of the code and problem statement.&nbsp;",1.0,1.0,1,64
&nbsp;there is one test in the test plan. it tests for creating assignment with an existing name. this may be tested by previously existing test (although i couldn't see it) but there should be a test for testing if a default name for assignment can complete successfully.,1.0,1.0,1,49
no test cases are created by the team. i think they should test some of the methods that they have implemented.&nbsp; they wrote in the wiki page that they have modified the already existing test cases but it is not visible in file_changed in the pull request.,1.0,1.0,1,48
"no comment here. eventhough the code is clearly, but i think it will be better if they write some comment here. well done !",1.0,1.0,1,23
"i think it is better if there are more comments in the code, which is more easy to follow. but it's also good to follow in the current file, good job !",1.0,1.0,1,32
i can understand the project clearly by their writeup. i recommend you put more details of modifications that you have made to the project. what did you do to fix the bug? why the changes?,1.0,1.0,1,35
"there is no test plan section. i recommend you have a section that tells how to get to the page you are working on expertiza system. for the hard code part, did you add all of these codes? or did you revise any of them? please state what did you do and why. &nbsp;",1.0,1.0,1,54
"not really.&nbsp; for issue , i am confused about what it means. i can understand issue for a little bit by reading the instruction.&nbsp; if you can post some screenshots about how to get to the page you worked on.",1.0,1.0,1,41
in the _add_topics.html.erb the expected_fields in the form contains a lot of &amp;nbsp which makes the code looks bad,1.0,1.0,1,22
"there are some commented redundant code, which could be deleted&nbsp;",1.0,1.0,1,11
overall it is good. it can be better with test explained.,1.0,1.0,1,11
they explains their work well with detailed codes step by step. it will be helpful to get included some screencast when running the program,1.0,1.0,1,24
"the naming of the variable and the methods is great, partily because the code uses a lot of variables which already have. and there is a glitch, if the&nbsp; validates_format_of&nbsp; &nbsp;is validates_url_format will be better i think. the code&nbsp; validates_format_of :url, :multiline =&gt; true, :with =&gt; /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z - ]+([\-\.]{ }[a-z - ]+)*\.[a-z]{ , }(:[ - ]{ , })?(\/.*)?$/ should have same comment.",1.0,1.0,1,66
"there are no comments anywhere in the code, and when adding a new file (view/checktopicscopy.html.erb), it is expected that comments are written to better help understand what exactly is being added.&nbsp;",1.0,1.0,1,35
" . the function methods don't seem to be too long . code is being refactored and divided into different methods and onto different files, which makes it clean.&nbsp; . as answered above, the comments are missing, and having to read code is becoming tedious. please do add comments to make code easier to read.&nbsp; . the code does follow ruby style guide, with right practices for views/models/controllers.&nbsp; . code is pretty dry and well written.&nbsp;",1.0,1.0,1,77
"it shows that files have been changed and i personally feel the following after going through the changes:&nbsp; . the gemfile.lock file ideally should not be changed, unless documented or requested upon doing so. this file basically contains the versions of each gem and changing it might alter behavior in production, on a running expertiza application, which might cause the application to behave differently.&nbsp; . the test cases (rspec) when writing it ""xxxxx"", you don't have to mention the method name again, as it becomes redundant. redundant because the method name ideally is used when writing the clause for describe. we usually say - describe '#getname"" (for example for an instance method), and it ""returns name"" or whatever, so writing it ""returns name from #getname"" is basically redundant.&nbsp; otherwise, the code seems fairly dry.&nbsp;",1.0,1.0,1,137
"comments are missing, and i believe would help in understanding what each method call is doing and why existing code has been changed.&nbsp;",1.0,1.0,1,24
"though a test plan section is not present, the manner in which the project has to be explained is clearly written with screenshots. pre conditions, such as the csv file and sample data is also being shown, which helps in testing. the only issue is the rspec file used for testing the application is missing in the document, which would've helped. also, mentions such as what happens when anything other than an email is passed, and what is the exception handling being used could've been mentioned as well.&nbsp;",1.0,1.0,1,91
"the author clearly shows screenshots of the code changes after pull, showing the code has from what it previously was. the problem is also explained briefly before digging into code changes. but a more descriptive explanation of why such changes had been done to those specific files would've helped in the reviewer understanding the code, and the approach taken to solve the issue. like for instance, why a line has been commented out in the mailer.rb and not removed completely? so, in the writeup instead of just mentioning file changed: &lt;&lt;file name&gt;&gt; , more description in regards to the same would've been nice.&nbsp;",1.0,1.0,1,110
"&nbsp; though what exactly has to be tested has been clearly shown with screenshots, the rspec file that is used to run the automated tests is not present in the document. maybe adding that will help in running these test cases to check for consistency in the code, and also coverage?&nbsp;",1.0,1.0,1,52
"the scope of the project is understood from the document, and how to test it on a high level is also clearly shown with screenshots. my only issue is the specifics. code changes and why code has been changed the way it has, can be more explicitly shown, which will help later down the line, when the code is merged into production. also, maybe explain on the line you have mentioned in the document below:&nbsp; ""issues were found in some parts of code as highlighted by the snippets shown below"" what issues were found and how were they fixed? that would definitely make the document more specific to the issue being solved.&nbsp;",1.0,1.0,1,114
codeclimate has listed out issues which are detailed enough and can be made with relative ease. this will make the code dryer. ruby style guide needs to followed more.,1.0,1.0,1,29
some edits are only adding indentation (for example: app/controllers/assignments_controller.rb). this should be fixed to make the commits better and merging easier.,1.0,1.0,1,24
"write up should have some code snippets explaining the functionalities added. without this, it becomes tough for the doc to remain coherent. the functionality and testing part is explained in good details. some screenshots would greatly improve the overall doc.",1.0,1.0,1,40
the writeup does not have an explicit test plan mentioned. it does have some commands for testing. the testcases that have been used are not explained. i would suggest that add custom testcases and write a bit about them in the test plan section.,1.0,1.0,1,44
"first of all, there uploaded no links for pull request, so i just checked most of their commit and their final merge to the base repository, for the purpose to look at their code quality. it looks like they handled most of the names in their codes perfectly, where everthing they created was just as natural thought. there&nbsp;seems to be one problem, that both ""email_all_reviewers"" and ""send_mail_to_reviewer"" exist, in which ""email"" and ""mail"" can cause a misunderstanding. however, this could be due to a historical reason, thus it wouldn't be changed.",1.0,1.0,1,94
"maybe implicity is one feature of the servo project, so they did not write down any comments inside the whole block of codes they added. but i still recommand to add some comments as a special reminder in some cases.",1.0,1.0,1,40
"most variables seem fine. can look into renaming variables like selmenuitem to selectmenuitem, selmenuitemind tp selectmenuitemindex, rubbuffer to rubricbuffer.",1.0,1.0,1,19
"no comments have been added. some variables are named in shorthand, like&nbsp;rubbuffer&nbsp;should be rubricbuffer.",1.0,1.0,1,18
"the documentation is fairly complete and explains what, why and how it's done. test plan can be added to make it complete.",1.0,1.0,1,23
"even though all the tests and bots have passed, this project might not get merged as this team has committed schema.rb. the changes in schema.rb don't seem relevant to the project. a commit was made with message 'original schema'. also, the code needs a bit of refactoring as mentioned in the next question.",1.0,1.0,1,56
"a lot of variables have been named in shorthand. like cur_due should be current_due, ques_array should be questions_array.",1.0,1.0,1,18
"the create method in assignments.controller is huge and could benefit from refactoring. in the previous review, i found some variables that needed renaming. these variables are still left as it is. &nbsp;""a lot of variables have been named in shorthand. like cur_due should be current_due, ques_array should be questions_array."" &nbsp;",1.0,1.0,1,52
"the methods look fine and have separated logic as expected. however, it is possible to refactor instructor_id method in user model.",1.0,1.0,1,21
the code displayed on the wiki has some functions that are huge and could benefit from refactoring.,1.0,1.0,1,17
the functions are pretty self explanatory. they could have added some comments for the javascript function.&nbsp;,1.0,1.0,1,17
the assignment create function is very large. it could be broken down into smaller modular parts. they could have truncated the lines after column length as per the style guide,1.0,1.0,1,30
no new test case have been written. could have aded a test case for csv upload and mocked mail behaviour or added mail check in existing test scenarios.,1.0,1.0,1,28
"project is short so documentation is short as well, however, more info/descriptions about the work done would help to review it better.",1.0,1.0,1,23
"though the code follows rub style,there could have been more comments added,separate methods could have seemed even better.",1.0,1.0,1,20
"the writeup explains the problem statement.so,it explains as to why they are working on this project.what and how they have worked on the project is explained.but,this could have been explained considering individual issue and how it is solved&nbsp;",1.0,1.0,1,44
"the code looks good in terms of the function complexity,names etc.but there could have been comments put for better understanding of the code",1.0,1.0,1,25
"no, there are no comments which make it difficult to understand the code properly. i think comments can be added that would make it more readable.",1.0,1.0,1,26
"more comments are needed, because you have trouble following the code. rest of the things works properly.",1.0,1.0,1,17
the write up doesn't include the name test plan but the content include the test plane and is well described. i think the code modification can also be mentioned so that we don't have to look for the code changed or added.,1.0,1.0,1,44
the name are suggestive of the functionality and&nbsp; defines the variable methods and class name clearly. there is some redundancy in the code that can be avoided. the gemfile is changed and it shouldn't be unless mentioned. it may affect the website.,1.0,1.0,1,44
"not really. i understand the way mailers work in ruby so it wasn't hard to follow, but if i wasn't experienced with them i would be lost looking at this code. comments are definitely needed.",1.0,1.0,1,37
some names could be completely spelled out to be more concise but are shortened for some reason. things like cur_date should be current_date or rev_res_map should be review_response_map.,1.0,1.0,1,28
" . they&nbsp;wrote a lot about what to do of the bookmark functionality, however, there is nothing about the solution and how they fix these issues.&nbsp; . i cannot watch the video in which there's a video link on the wiki page. . please add the code part to show what files you changed and the details about the code. . please add the test part like the rspec test.",1.0,1.0,1,69
there is no test plan on both the wiki page and github.&nbsp; please add the rspec test&nbsp;and&nbsp;convert them to automated tests. &nbsp; &nbsp;,1.0,1.0,1,28
"for the reviewers as me, i am not familiar with this project like the author, and i cannot clearly understand the detailed function of the bookmark from the information of the wiki page. also, as i mentioned above, there's no code and test parts which makes the reviewers feel harder to do the review.&nbsp; suggestion: please add more detailed content on the wiki page including test and the explanation of the code.",1.0,1.0,1,74
"the witeup indicates that the task is to refactor the usercontroller. the writeup includes the expertiza background, the abstract of what they should do in the project and the results of their work. i think the abstract section can be extended. they can write what they should do in the project in details. they can list all the task included in the project. they only included the refactoring task, but there are other tasks like invoking the paginate_list method in the right location. they should include all the task they need to do. also, a section that describe how to test the project in ui should be included in their writeup.",1.0,1.0,1,111
most of the things are covered in the document only a bit more effort in uml and scenario where a student submitted a public review and want to make it private should also be added with details.,1.0,1.0,1,37
"design document looks good, its easy to understand, although they have given alot of details which are not required for a design document. but good thing is they have mentioned about all issues in assignment , related all of them from expertiza github and gave solution/ approach to solve all of them, which makes it easy to understand and not get confused.",1.0,1.0,1,61
"yes, they include test plan. however, their test plan seems a little messy. i think they can split unit test and ui testing. and then adding some screen shot for the expecting output.",1.0,1.0,1,33
"they used a flow chart to show the process of their function. however, i think they should include more details and steps in their flow chart. they can also add a diagrams to describe the changes they want to make.",1.0,1.0,1,40
"i think their only use case diagram seems a little unnecessary. as the diagram provides not enough information.&nbsp; besides, they may need a uml diagram in their design document. for they change a lot of things in controller.",1.0,1.0,1,39
"yes, they include test plan, but a little shallow. first, they should improve their ui testing part, which will help reviewers to find whether their functions work. second, they can split their rspec test into view test and controllers. or they can classify rspec test with different functions, which will looks more clear. &nbsp;",1.0,1.0,1,54
"very detailed url diagram; but seems the use case diagram is unnecessary, since the data flow diagram already include all these steps.",1.0,1.0,1,22
need to add files which need to be modified and added; test plan should include more details.,1.0,1.0,1,17
the modified files not included; not show design pattern; new design may potentially increase the response time of the system (add additional questions) &nbsp;,1.0,1.0,1,24
"&nbsp;the use case url is too high-level description, need more details",1.0,1.0,1,13
"yes, they have clearly problem statement, implementation with design&nbsp;strategy but lack of design pattern; test plan is good, but need more description with the ui test.",1.0,1.0,1,28
should have a more precise problem statement; lack&nbsp;dexcription about ui test; should show the files need to be modified. &nbsp;,1.0,1.0,1,22
"they proposed only test related changes in the test plan section. also they did not explain in detail apart from adding two spec files about what will be the content of the test file or what cases they would test. for example, they could have added test case like that check whether correct edit assignment page renders on click of back button.&nbsp;",1.0,1.0,1,63
"overall, the design proposed is good and nicely structured. but, there are certain gaps that i would like to mention the design does not much say that what approach/metrics they will use to track time. they just told they will add new fields to track the time but did not disclose further about the number of fields or will they use any existing library functions to track time like ""time.now"" class or will implement their own class to track time with different helper methods. also, what if user clicks on new tab in middle of tagging activity. according to flow diagram this situation cannot be handled as it may happen that user spends less than minutes actually tagging but overall spend more time in viewing other tabs. you could track if user moves to other tab by tracking the focus of the window. refer link&nbsp;https://stackoverflow.com/questions/ /javascript-to-detect-if-user-changes-tab also there is nothing mentioned on the reason behind keeping the threshold for minutes.&nbsp; ",1.0,1.0,1,174
"in the section: &nbsp; why does the difference is the representation matter? &nbsp; since they have modeled the problem on the same lines, they have used the same version of the gale-shapley or top trading cycles algorithm used for one-to-many or one-to-one approach. famous problems dealt on these lines. &nbsp; the above lines could be explained, since everyone might not have a background of understanding the algorithm mentioned. it would be better if they can include a simple overview of the algorithm&nbsp;",1.0,1.0,1,88
 this web service must either be called from the lotterycontroller or a new controller can be created on the same (if lottery controller becomes too complex). this doesn't follow requirement s specified ,1.0,1.0,1,33
"the writer has included&nbsp; diagrams along with the below lines &nbsp; the mathematical formulation is itself wrong in e and e and they have used the below shown diagram to represent the relationship. though this serves as visual aid, it's misleading as the process the diagram describes is wrong",1.0,1.0,1,51
"in the topic, approach for matching students with topics the variables used both the variables are&nbsp;different but in the lines that follow ""calculate k, p|, and p|. the goal is for each topic to be assigned to either p| and p| students"" the variables appear similar.&nbsp; either the variable names&nbsp;can to be changed in picture or appropriate documentation should be present further these variables must be defined before use &nbsp;",1.0,1.0,1,75
"from a student's perspective: because he/she does not have to spend a lot of time understanding what is going on. the student would be more focused on giving the review and hence judgment made tend to be more objective than subjective. this would improve the quality of reviews and will also be helpful for the reviewer. also, bidding in fun&nbsp;!!!!!!! the bullet points in purpose can be improved",1.0,1.0,1,71
"the test plan can be elaborated to include how they plan to test in addition to what they plan to test.&nbsp; for example, testing that the color-coding feature is working and appropriate. testing the color-coding feature is understandable, but can include how they plan to conduct test to check if color-coding feature is working or not also the testing for ""appropriateness"" is abstract",1.0,1.0,1,67
the team listed the files in controller and models that might be modified during this project which is clear. more details or explanation may be helpful if how they are going to modify the code or what will be added/deleted about the code could be provided.,1.0,1.0,1,47
"yes, the design includes the 'test plan' section. the section basically provide the direction what the team is going to do on this project but may need more details or explanation. more details may need to be provided for rspec test and ui test respectively. &nbsp;",1.0,1.0,1,46
i dont remember seeing a mention of external flask service in the earlier draft. just not sure if this service needs to be an external application in itself deployed on an independent server. creating a new application can raise a lot of potential issues for maintenance. can this logic not be embedded into existing expertiza application? does the logic of matching qualify to be an independent service? i hope you have taken into consideration all these factors.&nbsp;https://webmasters.stackexchange.com/questions/ /what-qualifies-as-a-rest-web-service&nbsp;here is a link that might be helpful in deciding.,1.0,1.0,1,101
"the test plan is not detailed enough. it should mention the functions/files that will be tested. also, if a new service is being introduced, it needs to be tested independently, with its unit tests as well as integration tests for the entire application. the test plan doesnt cover this.",1.0,1.0,1,50
"the design pattern diagram was useful, but it didn't help me understand how this pattern fit in with the project. the wiki says that there are ""multiple handlers with responses"", but i'm not sure what exactly this means regarding the project. it would be helpful to connect the pattern more to an in depth description of the applicable functionality. the&nbsp;code modified section lists what files will be changed, but not which methods. it should give more details about what the changes will be. this would let the reader understand how the design works with the code. for instance, what method will be called when the team reaches %? since the new design is event driven, response time shouldn't be slow (polling isn't required to check the team's size constantly). similarly, it doesn't look like any class changes will make the code smelly, but is hard to tell without details about changes to the classes/methods. i think the project is&nbsp; supposed to focus only on assignments without topics. however, the project description states ""assignments with or without a topic could be assigned with mentors automatically"".&nbsp;",1.0,1.0,1,194
"the ui screenshots, flowchart, and chain of responsibility diagram were all helpful in understanding the design. i would add a uml to help the reader better understand the intended code changes better. since there are no ui changes, no new ui mockups are needed.",1.0,1.0,1,44
"the test section says that&nbsp;new rspec and ui tests will be added, but there are no tests provided. these should be added to the wiki. apart from this, the design, testing, and purpose sections all exist. i would just add a test plan that checks if mentors are assigned once a team has filled up halfway.",1.0,1.0,1,58
there is not a design proposed outside of the approach proposed in the given requirements. there should be a design section that talks about what classes and methods will be updated/added. this will need to be more than part of the requirements; the design should talk in detail about the plans for implementation.,1.0,1.0,1,54
"not very simple. in order to make it more clear to others, they provide much information about their issues, plans, tests, designs and so on. my suggestion is that maybe you can make it a little simpler though it is good enough.&nbsp;",1.0,1.0,1,43
yes. there's a test plan. but they don't show exactly what kind of test will they do. maybe unit test or ui test?,1.0,1.0,1,25
" . no, classes looks correct&nbsp; . what design they are going to follow is not written thoroughly, team has just mentioned about files to be modified and the issues in the file . design or issues does not look that complicated to be resolved.&nbsp; . new design wont effect the response time of the system.&nbsp; . yes, team should have spend some time and gave more details about design.",1.0,1.0,1,67
"not enough content to evaluate this question. there's no mention of code changes or the files changes anywhere. please include it all in the next review. the models you'd be touching, or the schema tables, just include a snapshot of the same.",1.0,1.0,1,44
"there is no uml diagram. they have included a vanilla diagram, stating really general things like analyze the code, make the corresponding changes, test it etc. milestones could have been more detailed as well.",1.0,1.0,1,34
"testing plan is fairly inadequate, it tells what files would be changed, wherein it should be telling of all the different edge cases, explaining the handling. the ui driven testing segment should be a stepwise traversal on the urls that'd tell the user how to test if the code is functioning as expecting.",1.0,1.0,1,54
some sections need more information to be added e.g test plan and proposed solutions should be more detailed.,1.0,1.0,1,19
no in-depth details of the design pattern have been included in the wiki page. i suggest the team to include more details.,1.0,1.0,1,23
the authors need to work more on explaining the design strategy in more depth and elaborate on the test plan section.,1.0,1.0,1,21
the test plan does not give a step by step plan of ui/manual testing. i would recommend the team to add this.,1.0,1.0,1,23
"there's no design as such explained in the project. rather the expected results are given in the proposed solution. please include how will you guys approach to solve these issues. also, why that would be the best way to do that.&nbsp;",1.0,1.0,1,43
"changes proposed are good but team should&nbsp;add few more details: . in the solutions, stars are proposed for the question type but i don't think that's the best way to do it, this will does not give the liberty to have any fraction for the question. a slider from to would be a better option or a number input.&nbsp; . will there be any info icon to for the reviewer to know that s/he has to consider the fraction based on the other team members, as if by mistake reviewer submit % for one team member then it will&nbsp;not be possible to provide any fraction to another team mate.&nbsp; . this change is not only for the reviewer but also for the instructor. none of the details are mentioned about the instructor flow&nbsp;",1.0,1.0,1,139
"uml and er diagrams are given but uml&nbsp;should include multiple reviews for team&nbsp;members as the fraction of the cake type question will be shared across multiple reviews. er is given for the tables but how the exactly the database will be used here is not explained in the doc? how the fraction will be calculated what all tables, fields will be used?&nbsp;",1.0,1.0,1,67
"the changes are explained properly. they have given the details of the approach&nbsp;in detail but the ui details are missing. team could add the ui details more specifically, like why the existing star component is efficient. though i think it can be replaced by a slider.&nbsp; also, the ui details for the instructor are missing, how these changes will impact the user experience for the instructor. kindly include it.&nbsp;",1.0,1.0,1,73
ui details are missing. it would be great to include&nbsp;the ui changes for the instructor and reviewers that how the cake question type will look like? i could see details about stars but i think this will does not give the liberty to have any fraction for the question. a slider from to would be a better option.&nbsp;,1.0,1.0,1,61
"design include manual the test plan in detail but short with the automated or rspec test cases. they should include where the test cases will be added and what test cases will be added in order to ensure that the functionality is working as expected. line ""we will be adding unit / integration tests to all the files we modify.""&nbsp;should be removed from the doc as it doesn't add any significance, instead test cases or meticulous test plan with rspec should be included.&nbsp;",1.0,1.0,1,86
"there's no proposed solution in the document, how the team will approach to fix all these issues with the current implementation. in test plan, team has mentioned that they'll create test files but what all test cases will be written in that is not mentioned anywhere.&nbsp;there are no details for the manual or ui testing.&nbsp; please include the proposed solution how these bugs will be fixed, also uml or er diagrams can be added to understand the design more appropriately.&nbsp;",1.0,1.0,1,86
test plan is too verbose. trivial areas can be trimmed off.,1.0,1.0,1,11
"the design documentation lacks the proper description of code changes and test plan as well as the uml diagrams. the team needs to work on the documentation and add diagrams, file names which will undergo changes and comments for the same.",1.0,1.0,1,41
"yes, the design appear to be sound, following appropriate principles and using appropriate patterns. but test plans can be more detailed and can point the files which are going to be changed.",1.0,1.0,1,32
"their introduction of requirement and the method to accomplish function is great. but their test plan is synoptic. i think they should add more detail. for example, they could list the test cases. &nbsp;",1.0,1.0,1,34
"yes. the design incorporates all of the functionality required. by the way, the link provided in the question is spring 's final project requirement. maybe ta should correct this error as soon as possible.",1.0,1.0,1,34
" ) overall is very good, each part has been explained in details ) it would be better to have a diagram for the whole solution ) anonymizing team names could have more explaination",1.0,1.0,1,30
" ) changes they proposed are mess ) for the front-end, the description is not elegant and hard to catch the point ) for the back-end, only few files mentioned that may need to be modified ) it would be better if they could describe changes generally then separate to front-end and back-end",1.0,1.0,1,52
"authors could have included a gist of formula proposed so that reader has the option to choose between reading the entire document, currently readers have to read the document to understand what's going on.",1.0,1.0,1,35
"i feel the design&nbsp;flawed&nbsp;for calculating the self score &nbsp; in the document following is mentioned ""the self score is an indicator of how much you know your work. basically, self score of means that the average ratings matches with the self review rating. it is worth noting that self score will be out of . the lowest self score can go is . this will happen when one of the score (either the average rating by peers or self review rating) is and other one is maximum."" &nbsp; the bold part is what concerns me, formula is self score = - (avg - self) / max rating. since it is mentioned that either avg or self ratings can be , let's consider the scenario where only avg is this means&nbsp; the self score actually increases. if only self is then self score is only when avg rating = max rating.&nbsp; &nbsp; hence i urge the team to look closely into the formula if what they want to achieve is mentioned properly&nbsp; &nbsp; moreover i feel diving by avg rating will be a better choice as it'll be a wider distribution",1.0,1.0,1,191
there is a link given in the document to another document which gives the details of&nbsp;gale-shapely (supposedly algorithm in question to implement). it would have been helpful if a gist of the document was mentioned in the wiki. team could have included a flow chart or a diagram explaining different domains and their responsibilities for all of the proposed changes. initially&nbsp;it was hard to comprehend what exactly their changes are going to be as the changes proposed are embedded in the problem statement and challenges,1.0,1.0,1,90
"there are diagrams included to explain why existing system is wrong, but the team could have also included diagrams to show the approach they are planning to use.",1.0,1.0,1,28
"for most part, the design does include all of the functionality required but, all of the details are listed under&nbsp; what needs to be done? &nbsp; though background is detailed the approach for implementation is not. the team has mostly focused on what is wrong with existing solution rather than striking a balance between what is wrong with existing solution and what is the approach.",1.0,1.0,1,66
"the test plans have not been discussed in the write-up. in each scenario that they have mentioned, they could have written the different test cases that they are proposing to write.&nbsp; example -&nbsp;scenario : author(s) get emailed when a reviewer has reviewed their work, they can mention the test cases and the plan of testing how is the author getting email.",1.0,1.0,1,64
"the design is simple however, it's still undergoing, more stuff would clearly explain the design that the team is trying to implement. for example in below steps: . add another file for a supplemental questionnaire and save them to the database. . add a method to get the corresponding supplemental questionnaire and to add questions into the existed questionnaire.they could mention what will the file contains and also what will the method name be and the input and output.",1.0,1.0,1,79
"the authors did explain the changes that they are proposing but it is a very high-level view, more details could have been added in the various sections.",1.0,1.0,1,28
the design document is almost complete but more diagrams could have been added here to better explain the stuff.,1.0,1.0,1,19
"i like the way the test plan has been mentioned. it's concise and clear. it wasn't clear on how will they test this line: there should be no link for the ""supplementary review questionnaire"" for team members or reviewers if the instructor disables this section in assignment creation page.",1.0,1.0,1,51
"the team has not used the visualization tool in a good sense, they have used only one use case diagram but that is a very high level. more efforts could be put in there to add more visual diagrams.",1.0,1.0,1,39
"&gt; although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed. &gt; the explanation is a bit vague and needs to be improved.&nbsp; &gt; also the proposed solution just has lines which does not contain an elaborate explanation for the changes and why they are being done.",1.0,1.0,1,56
"&gt; the ""files which are modified"" section is blank. please add the name of the files which you might be tweaking. &gt; new design seems to be fine however more description is needed to understand if it would make the code smelly or not. &gt; design seems to be straightforward. &gt; i don't see any claims for the performance improvement. &gt; i don't see the design needs more effort however definitely add more details.",1.0,1.0,1,76
&gt; just one use case diagram has been added which is very high-level. &gt; please add more diagrams or mockups of screens etc.,1.0,1.0,1,24
"&gt; the design does appear to be simple. &gt; the changes proposed seems minimal and enough to cover all the requirements. &gt; however, the exact number of changes and classes to be tweaked has not been mentioned, which doesn't help in verifying if there could be more optimal solutions.",1.0,1.0,1,50
&gt; the design appears to be vague and doesn't talk alot from technical perspective. &gt; would have appreciated if more details were added. &gt; nothing has been mentioned about the patterns that they are using.,1.0,1.0,1,36
"&gt; yes the design seems complete and includes all the requirements. &gt; however, the description could be more elaborate.&nbsp;",1.0,1.0,1,20
"&gt; although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed. &gt; the explanation is a bit vague and needs to be improved. &gt; also the proposed solution just has lines which does not contain an elaborate explanation for the changes and why they are being done.&gt; although the proposed changes seem to complete the requirements, however, the description for the changes is not detailed. &gt; the explanation is a bit vague and needs to be improved. &gt; also the proposed solution just has lines which does not contain an elaborate explanation for the changes and why they are being done.",1.0,1.0,1,110
"&gt; the design has problem statements, proposed changes mentioned however a lot of things can be improved. &gt; more explanation should be added. &gt; please add more diagrams for easier understanding. &gt; please add classes that you might be tweaking.",1.0,1.0,1,40
"&gt; the design does include a test plan the basic functionalities testing have been mentioned covering most part. however, there could be more scenarios missing. &gt; however, the edge cases have not been mentioned enough. they had added ""to be continued"" in the first phase of documentation but haven't done any changes since then.",1.0,1.0,1,55
&gt; they have added a use case diagram which appears to be a little too simple and not explained enough. &gt; i would have appreciated if more diagrams could have been added supporting the proposed changes and how they would help.,1.0,1.0,1,41
"in the documentation they've mentioned adding in the cake type as a star rated question, could this be more intuitive? a -star rating doesn't let me distribute them evenly, say between two members. could i rather put in a percentage number directly? not sure how if this can be done, but try show the previous rated contributions as well with the member names? more details needed on how a warning would be displayed on the ui as well.",1.0,1.0,1,80
"the uml diagram is too high-level yes, for instance, the instructor adds a question and sets its type while designing the rubric, which would be 'cake' in this case. the uml doesn't include this flow, nor does it provide any detail as to if this can be done. trivial, but an arrow has been tagged incorrectly, team a (a specific team) should be connected to the student. also, uml don't include if-else blocks the way you've put, or do they? db snapshot helps.",1.0,1.0,1,88
"as mentioned previously, the changes proposed by the author is to the point and clear. however, there are some sections that need to be even more elaborate. include a brief summary of the tests for each of the features being changed/ implemented. make use of flow chart to explain how the bidding algorithm works or write down what's happening in an algorithmic form. avoid using links and include the content in your document as well.",1.0,1.0,1,76
nothing was explained about the alterations to be in the current code and the files that need to be modified without which not much could be commented on whether a wrong method was added or whether the code looks 'smelly'.&nbsp; the document just gives a brief idea of the project and does not focus much on the code implementation part.,1.0,1.0,1,61
"the mapping diagrams clearly explain the cardinality of the entities so great job on that! however, i would also recommend that you add some project specific use case uml diagrams as well as database design schema which would make the implementation even more elaborate. the test plan really looks highly abstract and i would recommend that you give a brief description of each of the tests which would also benefit other reviewing users. also adding some annotated screenshots is a must. &nbsp;",1.0,1.0,1,82
the document looks complete in all its aspects except that it should be a little verbose at places mentioned in the above comments as well as some images should be added for better visualizations and understanding. make a tentative list of the files that would be changed or altered during the process. if possible also give a gist of the changes made in each of those files. &nbsp;,1.0,1.0,1,68
"the test plan looks decent as of now however i would suggest that you also add the exact steps in testing from the ui. moreover, include edge cases encountered (during the implementation) and also make a note of how these cases are being handled by the altered code.",1.0,1.0,1,48
"the flow chart under 'expected results' gives a decent bigger picture of how things would look like when the implementation is all set and done. however, i feel that again there should have been a detailed explanation about the files and methods being changed and how this would affect the current implementation.&nbsp; as mentioned in the previous reviews, the section under project scope appears to be vague with not much details about the estimated code alterations.",1.0,1.0,1,77
the team has given a high level overview for most of the requirements. a few details explanations can help the reader understand the project better.,1.0,1.0,1,25
the changes proposed by the author are clear and the test plan looks to be nicely designed. just one problem is that they have not considered inter dependecing between those use cases. team can add some more tests covering multiple use cases in one to test them.&nbsp;,1.0,1.0,1,48
"visual aids could have been a little better. the textual explanation is great. converting it to some uml diagram, may be a sequence diagram would have been excellent.",1.0,1.0,1,28
"the design document has become very unorganized to follow through efficiently, post changes made by the team for round . request them to structure it in the way it was for round . i would suggest to include more details on the design strategy. the results seem to be incomplete. i am not able to understand what the team wanted to achieve by looking at the screenshots.",1.0,1.0,1,65
"more details could be included on how the team actually plans to implement the solutions. lots of step by step details are included for the manual testing part, which makes it clear for the reviewer to expect such kind of test cases. appreciate the flow diagrams as well, although in issue # , i believe that whether the ta has access or not must be checked before he/she is allowed to make changes to the assignment (the action should be a click on a button perhaps, instead of remove assignment from course, as that is what we want to restrict) . perhaps some rephrasing would help.",1.0,1.0,1,104
"the organization of current implementation, problem statement and improvement seems good. the goal of conveying what the problem is, what the approach would be and what the desired outcome should be is clearly conveyed. the methods to be added should&nbsp;be named better. more details on the anticipated code changes could be included.",1.0,1.0,1,54
the authors have explained the problem and the solution in great detail but i think they could have been more specific with regards to what steps they plan on undertaking.,1.0,1.0,1,30
"the test plan for ui testing is simple and clear as well. my issue is with how the team has described writing tests for code changes, as it is quite brief. for instance, they could elaborate on what their plan is when writing new rspec tests.",1.0,1.0,1,46
"the authors have incorporated all the functionality that have been mentioned as a part of design document . the descriptions in the problem statement are crisp, however, these descriptions can further be improved to include the importance of the functionality to the users and the potential effects or in conveniences faced.eg in anonymised team name section, the authors can mention about the reason why anonymizing is required and how it not implementing it can breach privacy.",1.0,1.0,1,76
" the authors have done an excellent work of using visual aids for describing the proposed system . it helps in getting a clearer view of the proposed system behaviour. the flow chart however, does not mention about the the changes that will be made to the system. this could have been done using uml diagramd &nbsp;",1.0,1.0,1,55
"code changes flow is a little hard to understand at first. i would suggest to put&nbsp;some explanation on how and what should be changed in the code file. also, how they propose to change the files is not mentioned.",1.0,1.0,1,41
there is no mention of how the test plan will be carried out. appropriate mention of patterns&nbsp;along with screenshots of the system could be more useful to understand.,1.0,1.0,1,30
yes they have incorporated&nbsp;most of&nbsp;the functionalities in their document. however they have not said anything about how are they going to test the running time of api. one suggestion from my side is to use postman to find out the average running time of api. there is an option in postman which is titled monitor. there you can find the average response time of your api.,1.0,1.0,1,70
 ) the flow of their approach to solve issue is clearly explained but&nbsp; the testing plan and how what are the final result that will be outcome of this changes should be explained in more detailed way.,1.0,1.0,1,37
 ) diagrams representing relationship (one to one and many to many ) is quite clear and good to understand the issue.&nbsp; ----------- ) check for spelling message like in why should a student bid for reviewing submissions? this would benefit both the reviewer and reviewer&nbsp; instead it should be reviewee.,1.0,1.0,1,48
 ) diagrams are good to understand what the issue is and how they gonna resolve it. ) the second diagram&nbsp; (mathematical formulation) should be more detailed as the difference is&nbsp; not clearly visible on first view.,1.0,1.0,1,36
the overall design looks good and follows all the appropriate principles but does not mention anything about the design patterns to be used for the implementation. please mention the design pattern which they are following already or you are planning to implement.,1.0,1.0,1,42
the test plan should include automated testing as well as manual testing. the test plan provided is not sufficient it just gives list of scenarios. include the test files which will be modified and also different scenarios for testing.,1.0,1.0,1,39
i was unable to follow the changes required to be made to the code. include the code which has to be changed and also the files which has to be changed. this gives a clear understanding. they have mentioned the algorithm to be implemented but do not give an overall view for the approach.,1.0,1.0,1,54
the design document does not involve any uml diagrams. they have used a diagrammatic approach for explaining the implementation of the mapping.&nbsp; please add uml diagrams explaining the design approach.,1.0,1.0,1,31
their design gives us the basic details about the problem and how the problem can be solved but does not explain about the internal implementation of the exact code changes required. the design requires improvement and it does not contain about the design patterns.,1.0,1.0,1,44
the design document requires the addition of the uml diagrams and database design to explain it in a better way. other details are included but elaborate on the testing plan to be done.,1.0,1.0,1,33
the testing does not cover all the functionality and include automated test plan for the implementation. explain in detail about the tests. the existing test section does not test the bidding part in all dimensions.,1.0,1.0,1,35
"no, they did not use any uml diagrams to explain the solution or the changes to be made. use a class diagram showing internal changes to be made to the system.&nbsp;",1.0,1.0,1,32
the changes proposed by the author are pretty much the changes recommended in the project document. nothing different was evident from it. i would recommend you to add more low level details regarding the changes you're proposing.,1.0,1.0,1,38
 ) looks like they've identified the class they need to make changes to. ) the design doesn't look smelly. ) they have incorporated gems that make the code simpler. ) i think the design could increase the response time of the system. ) sufficient effort has been put to identify the changes. more clarity will be achieved when they start implementing those changes.,1.0,1.0,1,60
"rest of the document is okay but i feel, the test plan section could be improved significantly. only lines have been written about the unit tests. you could include all the details regarding the test cases. for instance, when you say ""we will add a rspec test in each controller which tests our new methods, such as have_file_added and have_link_added."", add details regarding what these tests will plan to validate?",1.0,1.0,1,70
"just one paragraph has been written regarding implementation of all the functionalities. it would have been better it this was better organized. also there is no mention for how these functionalities will be implemented, just a vague description is given. please mention any design principles or some logic for it.",1.0,1.0,1,50
"the design document can be improved significantly. the project purpose has been copied from the project description document, the design can also be improved by including detailed plan behind the solution. a detailed plan can also be given regarding the test plan.",1.0,1.0,1,42
- the team has incorporated most of the functionality required - the writeup must explain whether all the ta could review all the assignments or particular assignments would be assigned to certain tas eg. tas focusing on mozzila projects may not reviewing expertiza projects.,1.0,1.0,1,42
"basic tests are mentioned. however, tests are shallow, could have included more edge cases and descriptive tests that are going to be written in rspec.&nbsp;",1.0,1.0,1,26
"the design appears to be sound. design&nbsp;description could probably have included more data about the design patterns and the flow controller in the controller because functions themselves are not descriptive. -the design doc is pretty well explained. the project purpose is listed in an easy to understand way, and changes proposed for views and controllers&nbsp;look comprehensive. -the spec test cases could have been defined in more depth.&nbsp; - not sure how summary of reviews is fetched, apparently it already exists. could have dwelled upon this a little more to give a glimpse of the design.",1.0,1.0,1,99
it appears so. most of the problems to be solved that are described in the problem statement &nbsp;have corresponding solutions in the proposed approach. the test plan could have been more descriptive and more test cases could have been included.,1.0,1.0,1,41
"all of the system design things are explained in the flowcharts and uml diagrams. but, more textual description to describe would be better for the reader.",1.0,1.0,1,26
"they have provided links for the previous implementation which is nice. also, diagrams describing one-one and many-many are also good to understand. there are certain mistakes of spelling like reviewer and reviewer, which should be reviewer and reviewee",1.0,1.0,1,40
"&nbsp;the plan is quite good but more explanation on how they are going to solve it is required to judge the pitfalls in the system, if any.",1.0,1.0,1,28
the second diagram (mathematical formulation) should be more detailed as the difference is not clearly visible on first view. some other diagrams can be included,1.0,1.0,1,25
"the activity flow diagram is given detailing the logical next step at each and every stage. however, save review is missing in the diagram and is abstracted using a first-time-review? which is not how expertiza works as the review which is submitted once can't be edited. there is a field 'is_submitted' in review map for each review[use that]",1.0,1.0,1,62
"test plan has been improved and now includes automated rspec testing along with the travisci. however, the rspec testing is abstract at this point and ""we will add a rspec test in each controller which tests our new methods, such as have_file_added and have_link_added."" is too vague. they have identified an edge case that assignmentid exists, but i think this is already being verified in the code base.",1.0,1.0,1,68
the issues in current implementation have been explained very well. although not much is written about their plan and what changes they are going to bring in. it would be great if the team identified parts of code related to the present implementation and at least build around what they plan to change and where&nbsp;,1.0,1.0,1,56
"diagrams have been added to explain the relation between reviewer and reviews, which is good. however, additionally, a flow diagram would have really helped to understand their thought and approach.",1.0,1.0,1,30
"overall, it is a good document. some details need to be added in all sections of the document to help the reader understand that the team has a clear plan of implementation. &nbsp;",1.0,1.0,1,33
"yes, the team has provided some diagrams which help to understand the system better. however, a flowchart would have been a good addition to consolidate all the ideas laid out",1.0,1.0,1,30
"the team has added details about ui testing.&nbsp; for automated testing, more information could have been provided on which parameters need to be tested in accordance to the changes they plan to implement.",1.0,1.0,1,34
the team has provided a usecase diagram which is laid out well. although a flowchart would have been great to understand the flow of the functionality,1.0,1.0,1,26
- no uml diagrams related to this particular change provided.&nbsp; - a diagram showing the probable state diagram of what should happen with the change. example: the problem is not able to get named getter so showing the flow of thing reaching to this step before and after the fix would help us understand the issue a bit more.,1.0,1.0,1,58
"- nothing related to the implementation was provided. they should at least mention the probable file changes. for this, they can refer previous implementations to get a basic idea of what and where changes need to be done.",1.0,1.0,1,37
- needs more uml diagrams. - i would love to see some basic details on the implementation -&nbsp;they can explain a bit more about the algorithm they are planning to use and why it is better.,1.0,1.0,1,35
"- i like the&nbsp;language they used to explain the changes but some of the stuff seems like they are making stuff up to add more lines to the documents. for example, they used check whether cors needs to be enabled for calling api. this doesn't make sense and doesn't need a separate set of tasks to be listed. simple concept: in the frontend, if you are calling anything other than what belongs to your domain you need cors in the backend you do not.&nbsp; suggestion: check the response time of the rd party api. if it is small write a wrapper in your rails code to avoid cors issue which you will surely face if you are doing it in the frontend.",1.0,1.0,1,126
"yes, the design appears to be sound. but the proposed implementation in issue . to make authorization helper file does sound fishy as it can be checked through if conditions or i suspect expertiza should have the implementation of checking whether the user is course staff member so i don't think it is necessary to create new helper file. also, they suggested adding field name hidden which i think is a very bad name for the variable. here hidden is used to indicate if the user is hidden or not which is not indicative in a variable name. so i suggest the name to change to is_hidden_participant or something like that.",1.0,1.0,1,111
"no, the flow chart is wrong well actually it is according to there previous solution where the instructor or ta is a participant. there current proposed solution suggests adding a ""hidden"" field (which again is bad variable name) check if it is on or not. so i suggest changing flow chart. &nbsp;",1.0,1.0,1,52
the images are too big and the ext between subsequent image is really small.so it makes hard to read the doc and if we are already making video about showing our implementation why show images?,1.0,1.0,1,36
there are some design decision which i think might make code smelly like the loop in the flowchart to check if is any tag tagged is done in javascript frontend or they check it using querying because that would put a load on the server and will make website slower. also in testing they said about gaming the timer like the opening website and doing other work in a different tab. this can be done by checking if the user is in the tab or in another tab. i found a nice stackoverflow link which might help you&nbsp;https://stackoverflow.com/questions/ /check-if-my-website-is-open-in-another-tab this data might ensure that the user is paying attention to tagging and not using other tab or spending time on other websites.,1.0,1.0,1,135
"no, the design does not appear sound. they first said there have to be metrics to decide if tags are reliable or not but how they will calculate what will be the metric what parameters they are at least considering. i suggest parameters like the time between successive reviews, time spent on the current tab. also there main emphasis to decide if the metric is reliable or not is ""time"" that still does not fully solved th problem whether the tagger is write or not which is the ultimate problem. i suggest to look at this article&nbsp;https://roamanalytics.com/ / / /on-the-viability-of-crowdsourcing-nlp-annotations-in-healthcare/&nbsp;here they used expectation maximization algorithm to decide whether the given tag is written or not.&nbsp;",1.0,1.0,1,128
design document does address all the aspect of the issue but still i think they should add more about the solution instead of just writing what files that they are going to change. if they add some description about files then it will be easy for anyone to review.,1.0,1.0,1,49
the test plan section is really impressive. they have complete test section including all cases with really details explanation.,1.0,1.0,1,19
"yes, they have test plan. more info of your each test plan is needed. the test plan is too short for each case. and bound case if you have any.",1.0,1.0,1,30
diagram of uml is good. but i want to see a user diagram which demonstrate your functions and relations in the flow.,1.0,1.0,1,22
"test plan are not complete. besides, it will be better if they can imply the files need to be changed.",1.0,1.0,1,20
the syntax can be arranged better to make it easier to read. there shouldn't be any introduction on expertiza. it is better to have ui test.,1.0,1.0,1,27
"yes, the wiki does cover all aspects of the design that is to be changed, and includes all the functionalities that are to be achieved. one of the requirements was also to avoid the use of global variables in the code, and i feel that the new instances or instance variables that will be introduced can also be mentioned in the document. this would definitely showcase how that specific requirement is also being fulfilled. maybe this could be incorporated in the ""code changes flow"", wherein, instead of just arrows pointing to the data flow, it can also show the variables being introduced.&nbsp;",1.0,1.0,1,103
"more details on the ui would've been nice. by this i mean, more insights as to how exactly would the design be achieved from a user's stand point? would the others work be disabled or not shown to the student, until the self review is completed? if so, then how is this going to be achieved on the ui? a wire frame for the same, with more technical implementation changes would've helped in understanding the end to end picture of what exactly is going through the authors mind, when designing the project.&nbsp; but otherwise, on a high level, the overall picture seems to be clear from my point of view.&nbsp;",1.0,1.0,1,115
"the tests are shallow, and hopefully the team will incorporate the rspec testing too, once development has begun. (or already done so, if development has begun)",1.0,1.0,1,26
"though a proposed solution is given for each issue, what exactly is being changed is not clear enough. by this i mean, what files around the existing files are being considered, what technically is being changed, and an understanding of what other files are dependent on the files being changed is not clear.",1.0,1.0,1,53
the use case diagram wasn't extraordinarily helpful. it basically just summarized what was said in the above section. it may be more helpful to have a diagram that walks through how to do these things from login from each user's perspective.,1.0,1.0,1,43
"there are no figures that would describe what the user interface should look like once it is done. that being said, its not strictly necessary because it is fairly easy to imagine without it.",1.0,1.0,1,34
"they have added two charts, used case diagram and data flow diagram, into the documentation. both are necessary for comprehending. however, there needs to be more charts showing ui of related funtionalities.",1.0,1.0,1,32
"all are helpful and useful to take a clear look at the correspondant content. one advice is that, because the main reason of showing the current view is to compare with their expected view after implementing, it would be better to place the figure of current view right next to the figure of view after improvement.",1.0,1.0,1,56
"for the approach , they could add more explanation with design diagram.",1.0,1.0,1,11
"though the authors talk about the designs,they donot specify as to which methods they plan to add,in what class etc.so, that can be explained better.",1.0,1.0,1,28
yes there exists uml and such diagrams in the documentation that explain the overview of the proposed changes.the naming could have been a little more relavent,1.0,1.0,1,27
"as i have mentioned above, the changes can be made in test plan and they can add the files they are planning to change or any file they will add.",1.0,1.0,1,30
"there could be more visual aids, honestly. they describe a lot of stuff thoroughly about the existing design but having visual indicators would be helpful to those less familiar with expertiza.",1.0,1.0,1,31
"the user diagram could be made easier to read, in my opinion. i believe leaving feedback on it in round , but i cannot specifically recall. the numbers can be quite confusing and the way it is structured (visually) makes it clunky to read - not to mention the graphics themselves could be done much better in a program like lucidcharts or draw.io.",1.0,1.0,1,62
"they did draw the diagrams for each issue, but there are some suggests. . for issue # , the diagram they draw is not so necessary. .&nbsp; issue # should not just have use cases diagram, but also need the data flow diagram.",1.0,1.0,1,39
it is simple and easy to read. but it looks like the doc is too simple to explain their whole design of this project. it would be better if there are more detailed solutions.,1.0,1.0,1,34
"yes, changes are explained adequately, however, i think it is too simple, they should mention more detailed solutions and test plans.",1.0,1.0,1,21
"most parts are pretty good, they have all the parts including problem statements, project design, code change, and test plan. the thing i think they could do better&nbsp;on test part, e.g. they should write more detailed steps about the manual test.",1.0,1.0,1,44
"they add a visual aid to their profile email preference problem to explain how it works. it is clear to understand. but i think a line between ""author"" and ""review"" should be added since author should see reviews. and they can add visual aids to their other problems to explain their plan more clearly.",1.0,1.0,1,54
"the figure show the flow of ""review update and notify reviewer"" clearly.&nbsp; but it seems that there should be a line between the ""author"" and ""review"" since the author can see reviews related to the work.",1.0,1.0,1,37
"the code changes flow diagram shows the files they plan to change. but they can add more details about how they plan to do the work.&nbsp; for example, ""display the composite score on the &ldquo;view scores&rdquo; page."" is the result. it would be better if they write specifically how they plan to display the composite score.",1.0,1.0,1,59
they have a code change flow diagram that shows what files they plan to change. but they didn't write how to change the files and what method they plan to change or add. it would be better if they write more details about how they plan to change the code.,1.0,1.0,1,51
they wrote the test plan in their design document. the test plan is a little bit abstract. it would be better if they list the test files they plan to add test to. and they can add more details about testing from ui.&nbsp;,1.0,1.0,1,44
"i only see name, phone number and address&nbsp;when i try to&nbsp;edit admin account as an admin.&nbsp;i would suggest you to add email and password fields (hidden).",1.0,1.0,1,32
"when i click on 'register for course', it asks me to 'create new catalog' by selecting a course from the course drop down. it would be better if you change 'create catalog' to 'register' as it is more relevant. also, it displays 'catalog was created successfully twice'. it would be better if it is displayed just once. &nbsp; since, i can't view registered courses, the teachers are not able to remove themselves from a class.",1.0,1.0,1,76
"yes, student is able to edit his/her own profile. however, the message ""teacher was successfully updated"" is displayed twice. it does not affect the functionality but it&nbsp;would be better if it&nbsp;appears just once.",1.0,1.0,1,38
"i want to sign us as a teacher but there is no option of 'signing up as' when i am signing up. when i sign up with a teacher email id, i get a 'welcome student message'. please put a 'signing up as' field in the sign up section.&nbsp;",1.0,1.0,1,50
yes&nbsp;the student has an option to select a teacher once he has registered for the course but there is no option presenting in the drop down if there is no teacher registered to that course. &nbsp; it would be better to have an option stating no teacher available or not to show the course if there is no teacher available.,1.0,1.0,1,62
only able to login with exact string comparison. a suggestion would be to set the email comparison non-case sensitive&nbsp;,1.0,1.0,1,21
tests for the following could be added as part of the plan initialize_chart_elements,1.0,1.0,1,13
"most of the writeup is good, but there is a distinct lack of testing information. please add a test plan section",1.0,1.0,1,21
writeup has plenty of images and code snippets but very little text. i would have appreciated more content around your rationale.,1.0,1.0,1,21
some more comments for the code changes would be helpful.,1.0,1.0,1,10
the code has small methods with appropriate comments before each function. i would suggest to make the comments a little more descriptive.,1.0,1.0,1,22
"good except can't go to deployment with that error, add a flash to catch it and ready to be put in production",1.0,1.0,1,23
"as you say in your wiki, if the assignment doesn't have any reviews, there is an error. why not throw a flash when that happens saying no reviews to view.",1.0,1.0,1,31
"the view report function works well for the assignment ""s final project (and design doc)"". the wiki page said if there is no report for an assignment it is expecting&nbsp;encounter&nbsp;a rails error. it is not a good idea to let error to handle this case. maybe the error could be checked and redirect.",1.0,1.0,1,57
no there are not much comments in the added code,1.0,1.0,1,10
i understood what the goal of the project was however there is not much explanation in the wiki page as to what function is doing what before the change and after the change which was a bit harder to follow.,1.0,1.0,1,40
i understood what the goal of the project was however there is not much explanation in the wiki page as to what function is doing what before the change and after the change which was a bit harder to follow. thus how the code does it is harder to understand.,1.0,1.0,1,50
i could not manually test because the link to the deployed app was not working. looks like you used vcl and i used nohup in order for my link to constantly be running on vcl.,1.0,1.0,1,35
"coding principles are followed well, but doesn't have comments explaining implementation.",1.0,1.0,1,12
no rspec tests written. only pull request does testing automatically.,1.0,1.0,1,10
"it would be better to write some comments about&nbsp;self.concatenate_all_review_comments(assignment_id, reviewer_id) in response.rb, as well as&nbsp;self.get_volume_of_review_comments(assignment_id, reviewer_id)",1.0,1.0,1,25
code is concise and appears to be focused on functionality which is good. the code is easy to follow even without having every part explained (it would be good to add some more comment anyway). the code is well split into blocks as well.,1.0,1.0,1,44
the group clearly stated the what the issue is and what tasks need to be accomplished in their wiki. based on the wiki and commits i am not clearly sure what functionality has been added so far without actually looking at the code directly. it would be good to add a test plan section with proposed tests for coverage.,1.0,1.0,1,59
the tests written go beyond those stated in the tasks which is good (just need to update the wiki). there are conditionals to test based on implemented code as well as several test cases. a good chunk of these have been written in the rspec so far.,1.0,1.0,1,47
there is no explanation for the code committed or the approach taken. the clearest explanation given is for what problems need to be addressed. these variables could be longer to better explain what they are: rev_res_mapbody body &nbsp; &nbsp;,1.0,1.0,1,39
"no test plan as of yet. there are many conditionals in the code you implemented, make sure to test all possibilities to gain positive coverage.",1.0,1.0,1,25
some variables in tree_display.jsx are written in camelcase and some in snake_case. i think it should be consistent.,1.0,1.0,1,19
"there is a lack of detail, i feel like i am still missing some information. for example, the project introduction and goal is kind of vague. also, the code examples provide no explanation, i do not know what i am looking at. i recommend adding some description and explanation to each modification you made. same thing for tests. i like how you all provided screenshots for your result section, provides a better understanding of what you fixed.",1.0,1.0,1,77
"overall, code is written well. a lot of the comments describe the change made rather than explain the code, that might be confusing for the next developer who picks this up. some new methods are missing comments. not sure if ""preference_home_flag"" is a good variable name.",1.0,1.0,1,46
"documentation is good. it would be nice to get a little more explanation of the before/after code snippets. for example, why is the after an improve to this functionality.",1.0,1.0,1,30
the test plan on the writeup only contains a screenshot of the reputation_web_controller_spec.rb file; i would think more testing would be needed/wanted to be displayed here.&nbsp;,1.0,1.0,1,29
coding style is good. meets and follows ruby style guide and expertiza format. maybe add some detail to shorter comments ( -line comments). dry code that is concise.&nbsp;,1.0,1.0,1,28
"there are a few functions that are fairly long that could be split up to make the code clearer. calculate_peer_review_grades ( lines) send_post_request ( lines) - you mention that you split this up into encrypt_request and decrypt _request, and while lines is better than , it is still too long but most of the code looks good!",1.0,1.0,1,53
"i don't think it is ready to be deployed since the manual ui testing was unsuccessful and resulted an error. another concern would be that the code coverage for&nbsp;reputation_web_service_controller.rb is only at . %, this would be alright if manual testing was successful but as is it makes me concerned about the robustness of their code. i do think that they made good progress and it appears they had it working at one point so i would say this would be a good starting point for a future team.&nbsp;",1.0,1.0,1,92
their documenation is very thorough in what they did and how they did it but doesn't have a lot of high level information on their project and what the files they edited actually do for expertiza. adding that information on the functionality of review mapping helper will give the remaining understanding of their project.&nbsp;,1.0,1.0,1,56
"testing assignment:&nbsp; &nbsp;final project (and design doc) mar , - : am aug , - : pm aggregated comments by rubric question caused the following error: &nbsp;comment summary by reviewee (team) caused an error (shown in additional comments because i kept getting errors when trying to put it in this answer) based on their documentation i'm unsure if these errors are outside of the scope of their project or not. the rest of the reports work well!",1.0,1.0,1,75
"a lot of their information is very thorough. more high-level information would be good to help understand the scope of the project. the description of project section mainly talks about the goal to refactor and doesn&rsquo;t mention the functionality they are working on. files modified adds more information on what their project has to do with, but i was still unsure about the final scope of the project. is the project relating to all reports for an assignment or just certain types of reports?",1.0,1.0,1,87
"the test plan currently gives ui instructions to test the code; however, there are no new rspec tests documented or referenced.&nbsp;",1.0,1.0,1,22
"no ""test plan"" section and no tests added. some tests should have been added for the new methods, especially the ones broken into two. i will note that the travis ci build passes.",1.0,1.0,1,33
the code explains clearly the issues that were being addressed but is poorly formatted. this poor formatting takes away from any explanations of changes and clarity of code functionality. the attempt to clearly explain is present and with some formatting corrections i believe this page would receive full credit.&nbsp;,1.0,1.0,1,50
"there could be more comments, but the test descriptions do a lot of the heavy lifting in this area.&nbsp; it would be useful to be more consistent with the comments, especially in explaining the blocks of each test.&nbsp; some have multiple, while others have none.",1.0,1.0,1,47
"the writeup spends a lot of time on the code for the test cases, and less time on the explanation.&nbsp; additional detail would be useful, especially in explaining images / code snippets and the team's reasoning.",1.0,1.0,1,37
"test plan in documentation is vague. check more preconditions and edge cases, seems like the create test and update test only have a single case.",1.0,1.0,1,25
"great job, only suggestion&nbsp;would be to talk more about design principles and patterns in your documentation",1.0,1.0,1,18
"again, no comments, lots of committed code that was commented out. need to not commit lines that are commented out. overall just seems like it is still a work in progress.",1.0,1.0,1,31
definitely go into more detail on the documentation about how you plan to test the application . seems very high level and vague.,1.0,1.0,1,22
" user 'admin' has been added to seed.rb team has changed readme.md to include name of members, this should be reverted accordian.html.erb has been changed, i guess they tried to fix it, but fix has not been documented and doesn't look correct.&nbsp; (%w[super-administrator administrator].include? current_role_name) || %w looks to be a typo. ",1.0,1.0,1,59
the biggest concern would be whitespace issues and failing build. the code contains useful commits which remove unused code and make it easy to understand,1.0,1.0,1,25
coursenode.create_course_node doesn't look reasonable. i would have preferred if it were just coursenode.create,1.0,1.0,1,16
comments are missing for update_max_or_min. if this were private it would not have been an issue.,1.0,1.0,1,16
names are intuitive enough. i think&nbsp;update_max_or_min&nbsp;should be private method.,1.0,1.0,1,13
"expertiza background is required. it&nbsp;makes article lengthy&nbsp;and can be removed. description of project and assignment participant model, both of them have similar if not same content. motivation and&nbsp;functionality of model should be in different sections.&nbsp;",1.0,1.0,1,42
create_radio and create_checkbox are no longer being used yet they have not been removed from code base.,1.0,1.0,1,17
"the writeup mentions the problem, why it is a problem and how authors intend to solve it. however the problem statement should mention all of the issues in a list form and solutions should correspond to this list, this would make it easy to track. the solution doesn't show what code corresponds to it this can be done using screenshots. i don't see that this has been done in pull request,&nbsp;create user requested record. splitting up the views has confusing wording, by views do you mean html files? i don't see any new html file. is it that you are mentioning current and history? if yes this is something which is not present in pull request. limit self introduction should say that styling has been added instead of saying limiter. the comment above rd screenshot in result says files this should be users instead.",1.0,1.0,1,149
heading should include the word refactor else it doesn't make sense. does not mention team members. doesn't mention files modified. problems with readability of document.&nbsp;,1.0,1.0,1,28
"good coverage, but i'd have liked to see a test with a negative result expectation when params given were not right. another test could have tested the warning mentioned in the issues.",1.0,1.0,1,33
yes the team broke down the methods and the&nbsp;rspec tests used to test the models and controllers of interest. i would recommend adding more to the testing ui section.&nbsp;,1.0,1.0,1,32
the team provided a lot of detail in the write up. certain parts of the write-up did feel a little wordy. however this project did appear to be quite large in size. i was&nbsp;able to understand for the most part what the team was attempting to accomplish. i would&nbsp;recommend breaking up the&nbsp;sections within the wiki into smaller sections. the assignment participant model section is confusing because you start talking about a controller.,1.0,1.0,1,79
yes i can understand what the project can do for the most part. i would recommend including links to your repo&nbsp;and the deployed app within your wiki. the scope of this project appears to be larger than other projects.,1.0,1.0,1,41
the user interface is very easy to use and attractive. the interface displays all the required information and links so that the user can easily access the application.,-1.0,-1.0,-1,28
"the code follows ruby and rails best practices to the best extent possible. most of the code is generated by scaffold so follows the systematic hierarchy of the scaffold. the authors have also put comments wherever necessary, which is helpful. the code is also properly indented as per ruby standards.",-1.0,-1.0,-1,50
the team kept on pushing their changes throughout the project period. the number of commits is also good that is which is clear indication that the team is working on the project throughout the project period.,-1.0,-1.0,-1,36
"the team seems to have started on the project early enough. the first commit was about days ago, and the most recent commit was days ago. throughout this period, most of the commits seemed to have enough change to the app to be notable.",-1.0,-1.0,-1,44
"yes, the code is very properly maintained with using suitable dependencies in database and proper test modules for every task in models, views and controllers&nbsp;",-1.0,-1.0,-1,26
"the ui is very user friendly and intuitive. navigation through the pages is effortless and very much sticks to the norms of what is considered an intuitive ui. there is hardly any need to go through the readme to understand what the system does as it is very obvious. also, the readme, although not required to understand how to go about interacting with the system, is very descriptive and covers all the aspects of the system.",-1.0,-1.0,-1,76
there were lots of commits! the commits seemed to only fix one thing and one thing alone.&nbsp; it is very easy to read through them and see what exactly changed (from the description).&nbsp; good job committing small changes rather than lumping them together like most group have done.&nbsp;&nbsp;,-1.0,-1.0,-1,52
"the team completed all test cases and increased the coverage to %. based on the coverage being brought up to %, documentation, and youtube video, it seems that you have covered everything you were supposed to.&nbsp;&nbsp;",-1.0,-1.0,-1,36
"the youtube video clearly explains the test cases and shows that they all pass.&nbsp; additionally, it shows that the coverage is at % (clear proof).&nbsp; i really liked how you explained your test cases in the youtube video.&nbsp; it made it much easier to understand.&nbsp;&nbsp;",-1.0,-1.0,-1,49
write up was explanatory and made it easy to understand the test cases. extensively written and a lot of extra background information was also there indicating effort and supplying context for the reviewer.,-1.0,-1.0,-1,33
the spec file has been written well and overall seems to follow good coding practices. all the tests are short and the name of the test indicates its functionality,-1.0,-1.0,-1,29
"the coverage has increased. in the last review, due to lack of test cases, one of the controller was not achieving full coverage but it is now. the newly added code has taken the total coverage to . %. the response_report and review_mapping controllers have all the tests pass.",-1.0,-1.0,-1,47
"yes, the code is ready to be deployed as it works as expected. the refactoring, which was the goal of the project has been done very well and is achieving good coverage.",-1.0,-1.0,-1,32
the writeup explains the reasons for the aspects the authors changed or introduced in their project. they have used the factory design pattern and the implementation is correct and adheres the principle of this design pattern.,-1.0,-1.0,-1,36
"the variables, methods and class names which the authors have used are self-explanatory. the authors have defined helpers which reduces the length of individual methods. this is a good refactoring practice.",-1.0,-1.0,-1,32
the write-up is concise. the project has been explained in details with comparison between the existing and the new code. the ui has been explained so as to see the functionality.,-1.0,-1.0,-1,32
the code is well written and comments have been added for understanding the code. the refactoring has significantly reduced the length of the existing code.,-1.0,-1.0,-1,25
yes the team has added new test cases and the pull request shows that there has been a . % increase in the coverage. the newly added tests seem to cover&nbsp;almost every aspect&nbsp;of the project.,-1.0,-1.0,-1,37
yes the writeup clearly explains how and why the authors have did the work they did. the team was supposed to use factory design pattern to refactor response_report method and the implementations for the same seems to be correct to the best of my knowledge for the same.,-1.0,-1.0,-1,48
there were not many problems with the writeup in the first round of the review and the team has added some content to the writeup which describes the newly made changes to the project. overall the writeup is well written.,-1.0,-1.0,-1,40
"the emphasis of the project was refactoring two methods and looking at the work done by the team it is clearly visible that the size of the methods which were to be refactored has significantly reduced, thereby proving that the team has done a good job. as far as a naming problem regarding a variable ""count "" that was suggested in the first round of the review has been successfully fixed by the team.",-1.0,-1.0,-1,73
the code has not been deployed but the team has included a screencast and screenshots of the test passing which is evident that the intended functionality works.,-1.0,-1.0,-1,27
the writeup is quite descriptive and contains clear explanation of the issues. it also contains proposed solutions for the problems that are unsolved. it conatins instructions for ui testing making it easier for manual testing.&nbsp;,-1.0,-1.0,-1,36
the team has added extensive test cases for the scenarios required in the project. the code coverage has increased by . % as seen in the pull request (coveralls). this is a good indicator that the tests are actually helpful in these cases.,-1.0,-1.0,-1,41
"the test plan in explained in great detail. the authors have mentioned all the tests they are performing on the model. multiple cases are written for each function. they have also used diagrams to explain the various use cases, which is a plus point.",-1.0,-1.0,-1,44
the authors have done a great job explaining the tests they need to do and the test cases corresponding to the same. they have mentioned the test plan with detailed diagrams. they have written test cases for the various functions in the model.,-1.0,-1.0,-1,43
the authors have provided a screencast of their project. they describe the various aspects of the tests in the screencast. the tests seem to pass in the screencast. the tests are extensively written and seem to cover all scenarios.,-1.0,-1.0,-1,39
the test plan in explained in great detail. the authors have mentioned all the tests they are performing on the model. multiple cases are written for each function.,-1.0,-1.0,-1,28
the authors have done a good job with the write-up in expertiza wiki. all the relevant sections are present in the writeup. also the sections are detailed in explaining the tests.,-1.0,-1.0,-1,32
i feel that the code is ready to be deployed as the test cases seem complete and the team has approached the problem correctly.&nbsp;,-1.0,-1.0,-1,25
the writeup has also improved a lot and they have explained cases with diagrams and have done a really good job of explaining the functionality of their project.,-1.0,-1.0,-1,28
"the code seems to cover a lot of cases, cases such as when reviews are null have also been included and scenarios where node count varies is also taken under consideration.",-1.0,-1.0,-1,31
"it seems like the code does the work it is intended to perform, the project was split into two parts and they seem to work well.",-1.0,-1.0,-1,26
the authors have done well with the writeup. they have done a good job of explaining the test scenarios and also have uploaded a screen cast which makes it easy for a reviewer to review their work.,-1.0,-1.0,-1,37
the write up explains everything that the projects needs to work on. they have mentioned the design pattern they used and why. i don't think anything is missing from the wiki. section,-1.0,-1.0,-1,33
all tests are passed as per the screenshot provided in the wiki page. they have used rpec for testing which is good. i do not see any areas for suggestion here.,-1.0,-1.0,-1,31
"as far as this project is concerned, since this was a refactoring project, i can see that they have refactored it properly and tested the code using rspec which shows that all tests have been passed which is good. i did not work on expertiza and i have not myself performed a test to see if this works.&nbsp;",-1.0,-1.0,-1,59
the wiki page is pretty clear as to what the project aims to achieve. what i really liked about the wiki page is that they have snapshots of what the previous worked looked like and how it looks after they improved it. this is really impressive as this gives a very clear and fast understanding of what you have worked on. they have also listed out the files that they edited which is really good. they have also explained what review mapping controller is which helped me get an idea of basic functionalities of the code.,-1.0,-1.0,-1,96
"the write-up shows what needed to be done, what was done, and the results of doing it.&nbsp; this is a clear and concise approach to the project.",-1.0,-1.0,-1,29
the video was very helpful. the operation of this is very well explained and ui does exactly what it should(since you know what to expect because you watched the video),-1.0,-1.0,-1,31
the team has made good commits for the nd round which indicates the team has been actively working on improving the project. there were commits for the second submission.&nbsp;&nbsp;,-1.0,-1.0,-1,31
the team added the test cases. this increased the coverage of the project. and also the test cases added cover the range of the project.,-1.0,-1.0,-1,25
the team has made good efforts to test nearly % test cases and some additional test cases can make this code ready to be deployed onto the production server. the code was well written and tested hence some additional testing could make the project deployable.,-1.0,-1.0,-1,44
"the write-up was well written and described the intent of the project. the write-up was detailed enough to easily understand and test the project. the team made a good effort in write-up. the write-up clearly explained the type of tests written and their purpose. the authors explained all tests like four node cycle, three node cycle etc.",-1.0,-1.0,-1,61
the team has made good effort in making the write up easy to understand. the primary purpose of the project is clearly displayed in the write-up. the write-up also included screenshots of the project which made it more easy to understand the project. the write up was detailed enough to understand the functionality implemented in the project.,-1.0,-1.0,-1,59
"yes, the writeup&nbsp;includes both problems and how they are gonna solve the problems. what's more? they include the files changed by them which is easy for a reader to look into it if they only got the codes instead of github&nbsp;pull request content.",-1.0,-1.0,-1,48
"since march th, there are a significant number of commits made on the day of the due date.&nbsp; good job having each member contribute to these new commits rather than one person committing all the changes!&nbsp; new code was added, mainly new tests and stubs in order to increase their code coverage.",-1.0,-1.0,-1,54
"the write up seems well written.&nbsp; it's easy to follow, it provides all the necessary details from what the problem is for this project, what menu items are like between an instructor and student, and&nbsp;what the testing conditions are for each test in the menu_item_spec.rb file.&nbsp; while i did not review this for the first round, i think improvements have been made accordingly.&nbsp; great job!",-1.0,-1.0,-1,72
"the project should be deployed since there were no testing done before, and some of the scenarios are pretty important which the team has covered. all the tests seem to work as they should, as well as all of them pass. it has a coverage of %.",-1.0,-1.0,-1,46
"&nbsp; participant , , , were good variable names when you were later comparing them with response , ,etc you used good names for the context using the names of the method which are going to be tested.",-1.0,-1.0,-1,34
the writing is very well detailed as well as i liked that they have snipits of their code added in it as well as pictures to describe the process. it was helpful that they explained what each method did.,-1.0,-1.0,-1,39
its is not dry used let to reuse code as well as before(:each) statements.&nbsp; the code improved as well as new code has been added to test more scenarios.,-1.0,-1.0,-1,31
"the write up is pretty well documented. the write up explained what each method in collusion cycle is responsible for. the example located underneath model purpose,""&nbsp;for example, if participant a was reviewed by participant b, participant b was reviewed by participant c, participant c was reviewed by participant a and all the reviews were indeed finished, then a three nodes cycle exists.&nbsp;"" was a good example what the class is made for.",-1.0,-1.0,-1,75
the project is a testing project and it covers the important all the scenarios and i can see when dealing with nodes and node cycles and similarity and deviation scores. they cover all the public methods.,-1.0,-1.0,-1,36
"&nbsp;they did add test cases, as that seems to be the crux of this project. they were able to increase the test coverage to % which is pretty impressive and good, such that the expertiza team will have a good level of assurance that the code that was tested does what it should do and doesn't break other areas of expertiza. they cover the whole range of what on_the_fly_calc does, especially to receive such a high amount of coverage as a result.",-1.0,-1.0,-1,83
"i think the writeup is very thorough and explains their thought process well. this type of design, where they explain the problems, proposed solutions, and the reasoning as to what led them to the solution is very easy to follow. i like how the were essentially having a conversation with the reviewer and instructors and whoever else may be reading the document.&nbsp;",-1.0,-1.0,-1,63
the coverage is seen to increase and it is shown that % coverage was reached by the team . the team did a very good job&nbsp;,-1.0,-1.0,-1,25
the write up was pretty much in detail of what was being tested . the team wrote about finctionality of different functions in the model file and then wrote the corresponding tests,-1.0,-1.0,-1,31
the code is observed to be dry and well written / complete . they had issues with model in the first phase which seem to be corrected now&nbsp;&nbsp;,-1.0,-1.0,-1,28
the document was clear on what the problem statement was and how it was to be done . it was a unit test to be written for on the fly calc model . it was clearly conveyed&nbsp;,-1.0,-1.0,-1,36
the write up was clear in explaining what was the task at hand and what was to be done . it clearly wrote in the motivation section on what is expected from&nbsp;collusion_cycle.rb&nbsp; testing&nbsp;,-1.0,-1.0,-1,37
very thorough explanations as to what problems are solved and how they are solved. i have a very solid understand of what the project is designed for and how it operates.,-1.0,-1.0,-1,31
"the developers are dealing with test cases and thus their plan of action necessarily includes test cases, based on the code i came across, i would say they have considered almost all the cases.",-1.0,-1.0,-1,34
"the work they have done is completely related to testing, so there was no check needed for features, but in case of testing they seem to have done a good job",-1.0,-1.0,-1,31
"the write up is good, and provides ample explanation, the video is amazing and explains everything very well. they have understood the problem defination well and they have given proper justification for what each test is doing.",-1.0,-1.0,-1,37
the testing video does a amazing job in telling what the test cases were and it explained it well what the test cases do and very well explained video was provided.,-1.0,-1.0,-1,31
"yes, the team added test cases that were required. the test coverage also increased. the test written covered each of the methods. &nbsp;#compute_total_score,#compute_review_hash,'scores varying rubrics and returns review scores', 'when current assignment does not vary rubrics by round', 'scores varying rubrics and returns review scores', '#compute_avg_and_ranges_hash','#scores' &nbsp;",-1.0,-1.0,-1,51
"the write up is pretty extensive. its is intuitive and it easy for a new reviewer to find out exactly what to review and give the review. so, it saves valuable time.",-1.0,-1.0,-1,32
"yes, the team wrote test cases that were very extensive and it handled each of the scenarios in the&nbsp;collusion_cycle_spec.rb file.the test coverage also increased.",-1.0,-1.0,-1,28
"yes, the code can be deployed to production as-is. the project can be taken forward by any team and they can implement their future functionality seamlessly.",-1.0,-1.0,-1,27
"the writeup is extremely good. this is one of the better writeups , i have seen. each of the headings and future work to test description is extremely intuitive and helpful for any reviewer to review.&nbsp;",-1.0,-1.0,-1,36
"i feel the only areas where the team has to improve are in fixing the code climate issues and in adding more comments. otherwise, code and test cases are well written and everything is documented properly, so it need not be done from scratch.",-1.0,-1.0,-1,44
"&nbsp; for all the code changes, the team have used proper naming conventions to name variables, methods and class names. they have ensured that the newly created variables and methods use the same style as the code that is already present in the model file. i felt that every named item in the code was self explanatory and the purpose of each variable/method was understood from the name. hence i am giving a .",-1.0,-1.0,-1,74
"&nbsp; the writeup was well written. it clearly explains the problem statement, the subproblems, the proposed enhancements to each subproblem, the files added/changed and how to proceed with ui testing. some screenshots were also provided which helped me in understanding the problem statement properly. from the writeup, i could easily understand what the team was trying to achieve. overall, it was written in simple, easy to understand manner and hence i am giving a .",-1.0,-1.0,-1,75
"the author has done a fine job with their project write up.&nbsp; they have done an excellent job indicating their projects functionality and purpose.&nbsp; since the teams project involved writing unit tests, i really appreciated them defining and explaining the purpose of unit tests in general before going into detail about what they were testing.&nbsp; this really helped me as a reader to understand the purpose of unit testing as a whole, and how it related more specifically to what they were doing.&nbsp;&nbsp;",-1.0,-1.0,-1,88
"coverage has increased which is a good thing. also, the build has passed but code climate check says fixes required. there was no conflict present.&nbsp;",-1.0,-1.0,-1,26
since round review majority of the work is done and the authros have considered all the test cases as mentioned in their wiki. the coverage has increased and there are no conflicts in the pull request.,-1.0,-1.0,-1,36
"yes, the authors provided a youtube video showing the code running and that the coverage increased to %. the newly added tests are not toy tests and do cover the range of the project.",-1.0,-1.0,-1,33
"the write-up has improved significantly. if i remember correctly the wiki in the last review was missing a test plan section entirely. however, it is been written well, and i understand the code much better after reading the code.&nbsp;",-1.0,-1.0,-1,41
"yes, based on the test plan in the wiki, there are tests that cover all of the scenarios, and all of the code in the tests is well explained in the wiki.",-1.0,-1.0,-1,32
it is a low risk deployment because it only adds test cases.&nbsp; the tests couldn't break the system and did a good job adding test coverage that wasn't there before.,-1.0,-1.0,-1,33
"there was just one commit since the last round which mostly just included adding comments to the code. since most of the work was done in the first iteration itself, there wasn't any need for more commits. good work!",-1.0,-1.0,-1,40
"based on the wiki, the team has identified most of the test cases they need to deal with for each module that they are working on. they have converted the same into code and this seems to be working well since the test coverage has increased as well by . . they cover most cases that i can think of.",-1.0,-1.0,-1,58
the code definitely looks like it can be merged with the production server. my only concern would be to fix the codeclimate issues as much as possible since it's a good practice to follow conventions so that future implementations will do the same and keep the code clean.,-1.0,-1.0,-1,49
"the test plan looks to be complete, considering this is a test case development project. based on the wiki, the team has identified most of the test cases they need to deal with for each module that they are working on. this seems to be worked on well.",-1.0,-1.0,-1,48
"the writeup explains well what the tasks were through the 'project details' and 'test plans' sections. they provide a good description of what is required and what they have done and have included a testing plan to execute on the requirements. since this is a test case building project, there is no requirement of any design pattern here.",-1.0,-1.0,-1,58
"all test cases have been converted as explained in the writeup. there is no way of testing them to know if they are failing, but looking at the code it seems that they will work just fine.",-1.0,-1.0,-1,37
i really like the way they have written out their writeup. it is detailed and has relevant headings/sections providing a good flow and readability to the user. the use of images for explanations is really helpful. they provided a video as well since the first iteration which explained about the collusion cycle which was really helpful. overall very well done.,-1.0,-1.0,-1,61
"all test cases have been converted as explained in the writeup&nbsp; and the team has implemented this in code as well leading to an increase in test coverage. there is no way of testing them to know if they are failing, but they have provided a screencast of the code which was useful.",-1.0,-1.0,-1,54
"yes, majority commits were done during the second round. the team has made sure that they include every possible test case in their automated tests.",-1.0,-1.0,-1,25
the team has added new test cases to their code and the coverage has increased. i think the added tests cover the range of the project. the team has included every test case they have mentioned in their wiki.,-1.0,-1.0,-1,39
"they have improved their writeup a lot since i last reviewed their work. they have made sure that they addressed every problem mentioned in the last review. every aspect of the project is well described. also, the team has made things easier by adding a screen cast.",-1.0,-1.0,-1,47
"the authors have included tests which, i think, cover all the scenarios. they have meticulously considered every possible test case and everything works as intended.",-1.0,-1.0,-1,25
"they have done a great job with the writeup this time around. the writeup is very descriptive, and it's very easy to follow what all changes the team has made, how they have done it and where the changes are from the writeup. they have also added a screen cast of what all changes they have made which makes things easier.",-1.0,-1.0,-1,62
the code works fine and the tests are as intended. they have done a great job of following good coding practices. the tests do cover all the scenarios.,-1.0,-1.0,-1,28
"yes, they included new test cases, and they also suggested further testing required. the coverage increased. i think the newly added tests cover well for this project.",-1.0,-1.0,-1,27
"they did an excellent job. they gave clear details and explaining what the problems were, they stated their work plan, listed all the files that they had to edit to enhance the functionalities for the project. great job on instructions for&nbsp;'functionality walkthroughs'.&nbsp;",-1.0,-1.0,-1,45
"they had implemented all the tests with the first submission, and the coverage had reached % also with the first submission. they added comments with the second one.&nbsp;",-1.0,-1.0,-1,28
"the team's rspec tests are well-written to check all of the functionality of the collusion_cycle model. since all tests pass, the model code is ready to be deployed.&nbsp;",-1.0,-1.0,-1,31
"the write-up doesn't look changed since the st submission. the team gave clear details explaining what the model collusion_cycle is responsible for, what functions it holds,&nbsp;consequently giving the description of corresponding tests on every condition of each method.&nbsp;",-1.0,-1.0,-1,43
"the team did a&nbsp;great job covering all of the model's functions. there are no dry problems in the code, all the objects and behaviors that are common within the tests are created in the right positions. the code is easy to follow and read, with no long lines.",-1.0,-1.0,-1,51
"yes, their&nbsp;newly-added test menu_item_spec.rb runs correctly with examples passed and failure. also in index.html, the coverage reached % for menu_item.rb which means their test have covered all cases in menu_item.rb.",-1.0,-1.0,-1,36
"very good explanation. while the topics aren't super simple and the explanation alone may have been tough to understand, the uml diagrams plus screenshots really make it quite easy to understand.&nbsp;&nbsp;",-1.0,-1.0,-1,34
"not a ton details (like classes) were added to the design document.&nbsp; however, of all the details that were added, none of them are ""smelly"" or seem to have any problems.&nbsp;",-1.0,-1.0,-1,33
uml diagrams and screenshots were both included in this document.&nbsp; as stated above they really help in relaying the information to the reader.&nbsp;&nbsp;,-1.0,-1.0,-1,26
"very complete project!! all necessary parts are included.&nbsp; intro/purpose, overview of solution, actual solution/design, test plan, and files that will change. i also like how easy the flow of the document is. very easy to read and understand",-1.0,-1.0,-1,41
"the screenshots depict the proposed solutions quite nicely. some more screenshots can be added for the features described - like the review results page. also, the first flowchart for creating srq seems quite unintuitive, as it connects the instructor enabling srq and student creating a srq.",-1.0,-1.0,-1,45
the design proposal looks quite detailed and contains a lot of information including flowcharts and screenshots to help understand how the solution will be implemented. the test plan is well laid out.,-1.0,-1.0,-1,32
the authors have taken into consideration feedback from the st round and improved the flowcharts. it makes much more sense now and is easier to comprehend. additional screenshots were added which also helps.,-1.0,-1.0,-1,33
"compared to the first version, this has massively stepped up. my initial complaints have been dealt with, so i'm not really sure what to add here.",-1.0,-1.0,-1,27
"massive step up from the first round. the flow diagrams are actually valid flow diagrams now! the screenshots are a bit excessive, but the improvements are clear.",-1.0,-1.0,-1,27
" they're not so much adding stuff to existing classes as doing their own thing (as ordered by mozilla), so that doesn't really apply. servo is some of the smelliest code i've ever worked with. they couldn't possibly make it smellier on their own. ... gems? this is in python... moreover, they are just doing what mozilla told them to, so that's not really applicable. n/a. this is for testing, not for use in production. they aren't really allowed to expend effort on the design. it's not their design. it's mozilla's. ",-1.0,-1.0,-1,99
"after checking the specification provided for the project, it can be observed that the authors' proposed design has incorporated all of the required functionality and does not appear to have missed any part.",-1.0,-1.0,-1,33
"as indicated in the proposed implementation, all the changes and additions that the team intends to do sound quite reasonable. they have also mentioned the files that will be modified/added. so, overall they have done a good job with the proposed design.&nbsp;",-1.0,-1.0,-1,44
"well after checking the specification provided for the project, it can be clearly observed that the team has covered all the required functionality in the documentation.",-1.0,-1.0,-1,26
"yes the authors have done a good job with the explanation provided for the proposed changes. the proposed implementation section of the document includes the changes that the team intends to incorporate and it also includes details about how the team is going to achieve those changes. so, overall a good job.",-1.0,-1.0,-1,52
the documentation is quite thorough and provides all the required information for the reader to understand what the project is about and how the team will approach the problem statement. overall the team has a done a good job.,-1.0,-1.0,-1,39
yes the team has worked on the suggestion provided in the first round and have included a brief explanation for the uml diagram. the team has done a good job with their choice of visualization.,-1.0,-1.0,-1,35
as far as the design is considered the authors have mentioned for each proposed change the files that need modification. cannot comment on the points mentioned in the question as the details in those aspects have not been mentioned.,-1.0,-1.0,-1,39
yes the proposed design looks good. the authors have mentioned the files that will be changed and have also described what kind of changes will be made to these files. the team has done a good job with the design.,-1.0,-1.0,-1,40
"after comparing with the specification provided for the project, i can conclude that the the authors have mentioned about all the functionality that was required.",-1.0,-1.0,-1,25
the document is very well written and includes everything that first time reader needs to understand the work the project aims to accomplish. the team has done a good job.,-1.0,-1.0,-1,30
as mentioned in the first round the team had done a great job with the visualizations&nbsp;so&nbsp;i cannot find&nbsp;any further improvement that is needed in this area.,-1.0,-1.0,-1,32
the design documented is well written. it has an elaborate explanation of the changes that will be made or the implementation. they have included the screenshots of the view that are modified making it easier to follow.&nbsp;,-1.0,-1.0,-1,38
the proposed solution is very well put. it is easy to understand as they have included screenshots of the current scenario and how they wish to change it highlighting the current problems.,-1.0,-1.0,-1,32
the design document is well written. it contains all the major topics such as overview of the project. a complete and detailed explanation of the project. proposed implementation and the test plan.,-1.0,-1.0,-1,32
"the explanations provided for each of the proposed features are well written. the authors have also provided screenshots of the functionality that they intend to implement, which is an added plus point.",-1.0,-1.0,-1,32
the design document clearly mentions the purpose of the project. they also mention the proposed next step. the authors have added the test plan in the document. they have also given the application flow which makes the design document clearer than before. the document is clear enough.,-1.0,-1.0,-1,47
the authors have given a flow chart of the application process. they have clearly described the application flow and their strategy to solve the problem. they have also added screenshot of sample html that they want to test.,-1.0,-1.0,-1,38
the authors have clearly explained what they have planned to do. they identified the controller and associated views that need to be tested and have come up with an exhaustive test plan. good work!,-1.0,-1.0,-1,34
"the design is complex - however, this project requires a design of that level of complexity. it is easy to follow as the team has explained their plan very well.&nbsp;",-1.0,-1.0,-1,30
the authors have very clearly mentioned what the changes to be made are. they have structured the document very well starting with the rationale behind their choice of design and went onto explain their implementation plan and test plan. good work!,-1.0,-1.0,-1,41
"the team has presented a uml diagram that clearly explains what the interactions between the new classes would be like. additionally, they have also included a screenshot of a view that will require changes.&nbsp;",-1.0,-1.0,-1,35
yes the design seems to be as simple as possible and seems to have enough detail about what needs to be changed in the project.&nbsp;,-1.0,-1.0,-1,26
yes the design discusses about the functionality which is required from this project and have uploaded images of how the view will look like when the functionalities will be implemented.,-1.0,-1.0,-1,30
yes the authors have used visuals and figures well to explain the project. they have shown what the views will look like and they also have included the use case diagrams which shows the different ways in which a user will interact with the changes made in the system.,-1.0,-1.0,-1,49
"yes, the design seems to be simple. they have given a flow chart view of how control is gonna flow when going through the use cases and have done a good job of explaining what needs to be done.",-1.0,-1.0,-1,39
yes the team has done a good job in explaining the changes that are supposed to be made to the system. they have drawn uml diagrams and have explained the test plan well.,-1.0,-1.0,-1,33
yes the design includes a very vivid test plan with each test enumerated with different scenarios. it seems to me that the team has considered all the cases that the system can go through and have devised a good looking test plan for their project.,-1.0,-1.0,-1,45
"yes, the team has done a good job in explaining changes that are supposed to be done using diagrams. they have a flowchart using wire frames&nbsp;&nbsp;showing the flow of the user control to each of the updated views. they have also drawn a uml diagram showing how they are going to use the api calls.&nbsp;",-1.0,-1.0,-1,59
the changes that the authors seem to have proposed are explained well and are well aligned with the requirements of the problem. the authors have posted pictures describing the views and the flow of control expected in their solution.,-1.0,-1.0,-1,39
the authors have posted a lot of pictures and flow diagrams explaining the solution. this makes the solution clear for a reviewer. they have described the design strategy with flow charts which is nice.,-1.0,-1.0,-1,34
yes the team has used a flow diagram and have uploaded screenshots of the changes that are supposed to be made. this makes it very clear to the reviewer where the changes are going to be made.,-1.0,-1.0,-1,37
they have worked to address all the comments made in first round of review and improved a lot on the design and visuals. they have added detailed screens to it is clear and easy to follow/understand. i cannot come up with possible suggestions in this area. a possible suggestion would be to link this image to where it was originally created so it isn't this pixelated and users can directly view the original image.,-1.0,-1.0,-1,76
"yes, they seem to have improved heavily from the previous round.&nbsp; . they have mentioned clear steps as to what method they are following . they have clearly mentioned how the views will be different for different types of users . i don't think i can come up with possible suggestions in this area.",-1.0,-1.0,-1,53
they have clearly stated different scenarios: .&nbsp;populatetoneanalysiscomments .&nbsp;viewpositiveheatmapmatrixchart .&nbsp;viewnegativeheatmapmatrixchart .&nbsp;viewneutralheatmapmatrixchart .&nbsp;viewblankreviewscorespopuppage .&nbsp;viewblankheatmapmatrixchart &nbsp; i think this pretty much sums up on how much detail one can expect from this. they have followed the naming convention which is pretty apparent on what that does. i again cannot come up with any suggestions to possibly improve this.,-1.0,-1.0,-1,61
the major improvement they made after the first round of review is visualization. they had tried to sketch the frames on whiteboard which had minimalistic design focused on their part of the project but they went ahead and added details to the screen clearly showing the screens which is the best possible thing they could have done. i do not have any suggestions in this area.,-1.0,-1.0,-1,66
the group has the right approach in stating the tables and methods that deal with the users controller and defining the test plan to test the methods.,-1.0,-1.0,-1,27
"a class diagram is not needed for this document since these are only ui changes. the mockups provide good visual detail of what the final product will look like. the ""visualization of metrics in review reports"" bar graph is a exceptionally descriptive and needed graphic that shows that the authors have thought about how exactly the information will be displayed",-1.0,-1.0,-1,60
very easy to follow any your design makes sense. i think the only tricky thing will be ensuring that you are displaying the correct questionnaire for each team. assuming that a questionnaire for each team would be unique then this should be pretty straightforward.,-1.0,-1.0,-1,44
very clear about what they proposed solution is. having the suggested files changed shows that the team did their research in what exactly needs to be done.,-1.0,-1.0,-1,27
"yes, since this is only a test project, all they need to do is to test the controller and it has been described in the document.",-1.0,-1.0,-1,26
"though the diagram is not about the changes they are going to make since it's a test topic, it still shows how the object being tested works so that their test would make sense.",-1.0,-1.0,-1,35
the diagrams they gave are pretty good. it's enough for readers to understand their design just by looking into the diagrams without reading other explanation.,-1.0,-1.0,-1,26
"your proposed solutions are great and the quality of each one is understandable to me.&nbsp; overall, you all have a good understanding of your project and&nbsp;have great proposed ideas in mind.",-1.0,-1.0,-1,34
design seems to simple as possible.&nbsp; all that is being done is fixing existing code and adding in new features to pretty up the review summary page and review reports page.,-1.0,-1.0,-1,32
the changes are well explained and easy to follow.&nbsp;&nbsp;each issue in the proposed solutions section is straightforward and addresses a simple solution to fixing each problem.,-1.0,-1.0,-1,29
your design document looks great so far!&nbsp; the task and problem statement is fairly straightforward and you highlight all the necessary issues that need fixing.&nbsp; your proposed solutions and test plans also look promising as well.,-1.0,-1.0,-1,38
"i like the user case block diagram, it was very descriptive on what users access what objects on expertiza, as well as how the ui will look like when its implemented.",-1.0,-1.0,-1,31
"they have a good explanation as to the problem statement and then go into showing a nice uml diagram which represents the usecases of their solution. i think this is good because uml diagrams are great to model systems and flow of information or data. after they describe the problem statement, they then go into an explanation of each problem and show their planned implementation, or potential mock-ups of what the views could look like to implement the features outlined. they also have the test plan section with several good possible tests they could write to ensure a functional design.",-1.0,-1.0,-1,101
"seeing as everything they are adding is new, i can't see much problem with this. i like how they have already included the context descriptions each test will look into.",-1.0,-1.0,-1,31
"functionality is defined as simply creating the integration tests, which i can see is heavily documented already. i really like the incredible detail you all go into to explain your plan for each method rspec test.",-1.0,-1.0,-1,36
"yes , the authors have clearly explained the changes made to the system . changes are being proposed in this project and each was explained, visualized and had a text mentioned",-1.0,-1.0,-1,29
the design from the explaination in the wiki shows steps very clearly and they are minor changes in different views and it was in the flow of the general expertiza style&nbsp;,-1.0,-1.0,-1,32
"the design was clear and was seen to go on well with the appropriate patterns . they wernt major changes being proposed from code point of view, but everythign was in place",-1.0,-1.0,-1,31
"the team did a very good work , it is one of the best reports i have reviewed, this project session . all aspects that i was looking at were well written and complete&nbsp;",-1.0,-1.0,-1,33
"the design document has mention of all the methods and classes associated one would test its good to see all the components present, they have done a good job in designing the document&nbsp;",-1.0,-1.0,-1,34
&nbsp;reference kept blank. &nbsp;the design document appears to complete with all the files associated mentioned&nbsp; i liked that they have considered each method and what functionality they would test in that,-1.0,-1.0,-1,34
"the diagrams which have been provided give a deep insight of what and where the changes could be seen, the diagrams are a tad bit big, uml cannot be expected from this project as its completed related to view and controller. the diagrams&nbsp;are just enough to give proper visual aid and are very helpful in understanding the project. &nbsp;",-1.0,-1.0,-1,61
the design does incorporate all the changes required. they have done a good job in identifying what the issues are and what the related tasks are for each issue and what test cases would be there. the design does incorporate all the functionality&nbsp; &nbsp;,-1.0,-1.0,-1,45
their explanations are extremely lucid an intuitive. each of the sub modules are well explained and it is very intuitive for even a new person who does not know the application to understand.,-1.0,-1.0,-1,33
"adequate explanation was provided on the features that are to be added. everything from the problem statement to the uml diagrams to the file changes to the test plan was explained. also, the changes were explained in a simple manner and i had no trouble following what they had written. hence giving a .",-1.0,-1.0,-1,53
" ) i didn't find any improper method additions in the design ) the document explains how different constraints are to be handled and i don't see any potential code smells. ) the design is simple enough and as most of the changes are in views, i don't think additional gems will be required. ) since the duties functionality will be added to existing views, i think there won't be a major change in the response times. ) the design looks good and the team should start implementing it for the above reasons, i am giving a .",-1.0,-1.0,-1,95
the design appears to be simple and i don't think any functionality is added without purpose. it looks like dry principles will be followed in the implementation as well. hence i am giving a .,-1.0,-1.0,-1,35
"from what i can see, the design seems to have taken into account all of the required functionalities. the document had an explanation on how each functionality was going to be implemented and also mentioned the names of the files to be modified and the new table to be created. the level of detail was such that even the primary key and foreign key of the table was mentioned.",-1.0,-1.0,-1,69
the design appears to be simple and i don't think any functionality is added without purpose. it looks like dry principles will be followed in the implementation as well. hence i am giving a . &nbsp;,-1.0,-1.0,-1,36
"from what i can see, the design seems to have taken into account all of the required functionalities. the document had an explanation on how each functionality was going to be implemented and also mentioned the names of the files to be modified and the level of detail was such that the screenshots showed multiple cases!",-1.0,-1.0,-1,56
"in fact, it is too early to check. although they have a detailed test plan, they have not covered any code information yet. so do other groups.",-1.0,-1.0,-1,27
"the teams document shows the completion of all the required functionality. it seems they completed it all during the oss project time line. the subsequent steps portion of the mozilla project description is included in the future work section, so they have plans to implement all the functionality required.",-1.0,-1.0,-1,49
"the authors of the design doc adequately explained the changes that needed to be made. most of the explanation was similar to the first iteration of the design doc, but even the first iteration of the design doc did a good job of explaining what needed to be done.",-1.0,-1.0,-1,49
"the design appears to be very sound.&nbsp; since the team is just testing one file, they only need to edit/create one test file and their design document reflects this.&nbsp; great job.",-1.0,-1.0,-1,34
"since the last review, the authors have made a lot of changes in their wiki project. they have explained each and every bit of the project.&nbsp;",-1.0,-1.0,-1,27
 . testing plan is the best part in the wiki. it is the highly informative.&nbsp; . they have explained each and every use case and how they wish to test it.,-1.0,-1.0,-1,30
mockups helps us understand different scenarios and use cases that they need to implement it. the images helps us to understand the project very clearly.&nbsp;,-1.0,-1.0,-1,26
 . the job described is appropriate and easy to understand&nbsp; . they have done a good job in using images to help in visualizing things better,-1.0,-1.0,-1,25
 . there is a detailed explanation of all modules of the project . images added to the project helps making a clear overview of the project and understanding it in a great&nbsp; detail,-1.0,-1.0,-1,32
yes the authors have explained the changes very neatly. since round the authors have made the wiki page is very informative. the use pf images helps in understanding the project.&nbsp;,-1.0,-1.0,-1,31
"the authors have mentioned the tests they wish to do before deploying their project. according to my understanding the authors have covered all the tests they should. however, after implementation of the project the authors may realise that there may be more testing that they need to do.",-1.0,-1.0,-1,48
"the images and mockups are the best source of information in the wiki. the mockups show how the changes will work which makes it easier to visualise what the authors want to do. although the authors have made mockups, the final product may not be the same&nbsp;",-1.0,-1.0,-1,48
"addresses the problem statement directly, and&nbsp;provides their solutions from a design perspective. i think that if the design is implemented it will achieve full points. each section has an associated visualization and explanation.&nbsp;",-1.0,-1.0,-1,36
"methods are added to the appropriate classes, and i think that most of the other points for this section can be disregarded for a test class. (i.e. runtime does not matter too much for tests unless they are significantly&nbsp;longer, but this does not appear to be the case for this team).",-1.0,-1.0,-1,54
"no visual necessary, but the authors provided one anyway. i appreciate that you went over and above, and i wish i could give you more than points for this because the visuals are great!",-1.0,-1.0,-1,34
"the above listed problems do not exist with the design. the design seems clean, as seen from the multiple screenshots posted. i don't think the design can be simplified further. i think all the changes they have proposed are necessary.",-1.0,-1.0,-1,41
"the changes proposed are very easy to follow and are adequate because of the flowcharts and screenshots provided along with explanations for each. even the column details that will be modified are mentioned, which is very helpful.",-1.0,-1.0,-1,37
"since the last review, the authors have stepped up their game. the wiki is very good with images and explanations. i really like the wiki and the efforts they have put in after round reviews.&nbsp;",-1.0,-1.0,-1,36
 . very good test plan explaing in details all the possible scenarios . good amount of effort taken in explaing the details for every type of user&nbsp;,-1.0,-1.0,-1,26
the wiki has everything which was required. the authors have added images making it easy to understand. according to me the wiki is perfect and needs no additional work. good job!,-1.0,-1.0,-1,31
"yes. the authors have taken a very simple approach to their task. since the project involves only making an automation script in python, the work is not much complicated. so the approach towards this problem will be a simple solution which the authors have taken.&nbsp;",-1.0,-1.0,-1,46
"while the feature is tricky and complicated, the team seems to have figured out a way to design it in the most efficient manner and keep it as simple as possible. if executed correctly, it can be a good feature.",-1.0,-1.0,-1,40
"the document covers the changes that the team will be making and seems to know how they'll be tackling them. it's not hard to follow and i can understand it clearly. they have included good visualization to help with the understanding. it seems like it is a good functionality to add, well done.",-1.0,-1.0,-1,55
"since this is a testing project, the document seems to cover the changes what the team will be implementing and what test cases would be written out. it's not hard to follow and i can understand it clearly.",-1.0,-1.0,-1,39
"since this is not a design requirement, there seems to be no reason to include any design proposition. but the test proposition seems to be adequate and should improve the system rather than decreasing any response time. everything good here.",-1.0,-1.0,-1,40
"the design doc covers the testing details and it seems to include all details on the methods they would test. i couldn't find anything that is missing based on the requirement spec. so, well done!",-1.0,-1.0,-1,36
the changes are just to add a test script called users_controller_spec.rb and they have included all details about what tests they would make and include in the final file. looks good!,-1.0,-1.0,-1,32
the team have captured quite a few tests about how they would test the various methods of the users controller. the tests seem to be well thought of and have covered most of the potential cases where the system could fail. good work.,-1.0,-1.0,-1,43
no visualization is necessary but they have a diagram depicting the current flow for the creation of the users which is helpful although slightly redundant.,-1.0,-1.0,-1,25
"as far the functionality goes, the design doc covers it and it seems to include all details no matter how small. i couldn't find anything that is missing based on the requirement spec. so, well done!",-1.0,-1.0,-1,37
"the uml diagrams are helpful and they have explained it with the use of mockups pretty well and hence i don't feel the need for further details regarding the flow they would take. the images convey what the current system is like. they also have some images depicting how it would look after the changes.they also fixed the previous contradicting uml diagram. so, good work.",-1.0,-1.0,-1,67
"the team has already identified the files that need to be changed and are planning to add a couple of new files. the team seems to have figured out a lot of stuff already, which is excellent. the explanation is easy to follow and is adequate.",-1.0,-1.0,-1,46
the design proposed by the authors seems good. they have thought of every aspect as of now. i don't think there are any potential flaws that need addressing to.,-1.0,-1.0,-1,30
"yes, the authors have adequately explained the changes that are to be made in the system. the doc is very descriptive of every little detail of the project.",-1.0,-1.0,-1,28
the uml diagram seems apt and helps make things easier to understand. there are screen mock ups too to help with visualization. this has made the doc very easy to follow.,-1.0,-1.0,-1,31
"the design appears to be simple and clear. the team's use of numbered lists really added to this, as it was very easy to see what the problem was, and how the proposed changes addressed them while maintaining simplicity.",-1.0,-1.0,-1,40
"the design incorporates all of the funcitionality required and described in the problem statement. the specifics of each functionality is addressed, and the proposed solutions designed to implement them are well described and illustrated in the&nbsp;proposed solutions&nbsp;section. it is apparent that this team has a very clear understanding of the scope of the project and have put a good amount of thought into the design of the solutions.&nbsp;",-1.0,-1.0,-1,73
the team did a great job in explaining the changes they will make. a combination of clear and concise descriptions and detailed visuals communicated the team's changes excellently.,-1.0,-1.0,-1,29
"the design document is very well written. the problem statement and suggested solutions were described in detail. in addition, screenshots were used effectively to illustrate the problem statements and the proposed changes. the test plan is also very thorough as well, listing each problem, solution, and how to test it. overall, this is a great wiki.",-1.0,-1.0,-1,56
"even though the team's work is mainly ui changes, they did a good job of detaling what exactly the are going to be doing to test their changes. this transparency and clarity contributed to the team's good test plan.",-1.0,-1.0,-1,41
"the team was very clear in explaining what they would do. they also did a good job of simplifying the changes they will make to the db schema, and how they will update the wikis. overall, the team's design was quite clear, straighforward, and simple to follow.",-1.0,-1.0,-1,48
"it is apparent that the functionality required is known by the team and that they have a plan of action to accomplish the changes needed. specifically, the work to be done section does a great job of this, by listing the objectives of the project, and explicitly detaling how the team will tackle each of the tasks.",-1.0,-1.0,-1,57
"the authors clearly outlined the work to be done on the system in their aptly named section, and provided explanantions of their implementations and outcomes.",-1.0,-1.0,-1,25
"the changes need to be made to each file are well explained. great work. the database changes, instructor view changes, and student view changes are so well explained. good job.",-1.0,-1.0,-1,30
"this team input a great effort to create good visualization to support their design doc. they added usecase diagram, ui mockups, great explanations alongside with the visualization aid.&nbsp;",-1.0,-1.0,-1,29
they have included which files they are going to modify. it seems reasonable to change them to improve the expertiza application for an instructor user.,-1.0,-1.0,-1,25
"great work! everything is well-organized, all sections are descriptive to the point. they have added the testing plan and more visual aids since the previous submission.&nbsp;",-1.0,-1.0,-1,28
"yes, the team did an&nbsp;great job&nbsp;adequately&nbsp;stating what the problem is and what they need to&nbsp;add and modify to&nbsp;make the grading process easier&nbsp;for instructors.",-1.0,-1.0,-1,35
"with&nbsp;the second submission the team did&nbsp;some upgrade of what they had for visualization before. uml diagram, more explanations, wireframes, all were added to enhance the design document.&nbsp;",-1.0,-1.0,-1,32
"from what i can tell, code quality in this application is good. functions generally&nbsp;look small and there is good use of rails utilities.",-1.0,-1.0,-1,25
the code on github shows the to n relationship between real estate company and realtor. the realtor is also able to create real estate companies of his own.,-1.0,-1.0,-1,28
"code is written properly. one method is covering only one functionality. also for more features, team has created new controllers. hence i can conclude code is neat and readable.&nbsp; &nbsp;",-1.0,-1.0,-1,31
code is written properly with all dry principles. methods are simple and clean. every method&nbsp;contains functions specific functionalities. mvc are created where they are needed. &nbsp;,-1.0,-1.0,-1,28
the code is clean and well written. the controllers and models are named accurately and each filename describes the desired functionality. good work on that!,-1.0,-1.0,-1,25
"code follows 'good ruby and rails coding practices'. naming&nbsp;conventions are correct, methods in controllers are short and concise and there are no instances of 'spaghetti code'.",-1.0,-1.0,-1,28
the team has done a great job in testing. admin controller is tested extensively with relevant concise comments&nbsp;and rspec is used to test admin model with its validators.,-1.0,-1.0,-1,30
"edge cases are covered. when a company is deleted, the realtors and houses are also deleted along with it. the readme.md file also details how the edge cases are handled.",-1.0,-1.0,-1,31
code in the files are auto generated. every function is implemented in a clean and readable manner and performs only one task. code on whole follows ruby on rails practices.&nbsp; &nbsp;,-1.0,-1.0,-1,32
the schema is very well defined. most of the suggestions provide as part of initial review are incorporated. the relationships are defined correctly and use of dependent destroy ensures that child records are deleted before parent record. this ensures there is consistency.,-1.0,-1.0,-1,42
code follows the basic crud structure given by rails and neatly explains what is being performed. the notices nicely explains the user what is happening. the db schema is designed to incorporate most of the requirements.,-1.0,-1.0,-1,36
"yes, st cut did not have heroku link, this time apart from additional code + link is present and may of non functional flows seems to be in place",-1.0,-1.0,-1,28
"yes, the team has shown proper team collaboration, two members of the team kept submitting&nbsp;the changes throughout the projects. and there are sufficient commits for round . &nbsp;",-1.0,-1.0,-1,29
i did not find any problems in the first phase testing. all basic functionalities work as expected. bonus points for the ui. one of the best i have seen. the web application is intuitive and guides the user in performing any function. great job!,-1.0,-1.0,-1,44
the team was regular in committing changes. the team continued to work in round and made regular progress. all members contributed significantly. great job! could have started the project a bit earlier.,-1.0,-1.0,-1,32
"all dependencies are well modeled and designed. every model has correctly associated relationships and validations. your team is a pro! realtor to house and house to company , other relationships are implemented.",-1.0,-1.0,-1,31
models and controllers are well tested. all edge cases are covered and tests are comprehensive. the inquiries controller is especially well tested. all assert statements are well thought of. ,-1.0,-1.0,-1,29
"yes. the variables have been very keenly named. especially in the file, _rubric.html.erb, the variables are very accurately and effectively named, as there could have been much confusion otherwise. kudos for that.",-1.0,-1.0,-1,34
"the write-up is very clear and directs user to the main issue very well. the flow is very structured, in the sense that first it gives a high level view of what expertiza is, it then tells about the book-mark functionality, and then tells the problem and how they came up with the solution. one of the most professional wiki i've reviewed.",-1.0,-1.0,-1,65
"no, no new committed were added during the second round. the last commit was around days back, and no new code has been pushed since then.",-1.0,-1.0,-1,26
"the code was well-written in the first round itself. the method names, variabble names and class names are intuitive and suggestive of the functionality.",-1.0,-1.0,-1,25
"all tests pass, all descriptions in the test plan are just the test cases in the rspec file, sooooooo yeah i guess they all exist.",-1.0,-1.0,-1,25
the build is passing the test coverage and the bullet points mentioned in the issues section have been properly implemented to achieve the desired result. all the issues have been implemented as discussed.&nbsp;,-1.0,-1.0,-1,34
"the code for the export_file controller and models for question_advice are tested adequately with the questionnaires_controller sepc model file. the variables, methods and class names follow the general standard ruby practices.&nbsp;",-1.0,-1.0,-1,32
"the wiki document provides the necessary details about the project and the tasks performed by the team. it gives a general overview of the project implementations, the functionality carried out by the team.&nbsp;",-1.0,-1.0,-1,34
i think the code looks good and very much follows the ruby style guide. the code also is dry. it looks well written and does not any changes.,-1.0,-1.0,-1,28
"yes, the team has clearly stated the problem statement and the changes they have done to provide solutions to the problem. they have been given problems to which they have clearly provided the names of the files and the part of the code which is changed. the video explains the problem and the implemented solution perfectly without any ambiguity.",-1.0,-1.0,-1,59
"yes, just fix the few issues present and that should be fine for it to be merged into main line as the feature seems to work and there isn't any major code issue.",-1.0,-1.0,-1,34
easily one of the most clearly documented projects i have reviewed in this class so far. i liked their organization of the test plan within the write-up.,-1.0,-1.0,-1,28
"the number of commits since the st round is impressive.&nbsp; significant improvements have been done pertaining to naming, indentation and overall code climate issues.",-1.0,-1.0,-1,25
the&nbsp;writeup clearly defines the primary objective of the project and justifies the reasoning behind introduction of additional helper constructs like participant factory. the authors complement the descriptions of each test case with associated block of code and elaborate on the details of their inner workings.,-1.0,-1.0,-1,47
the team has a really good job of committing their code on a regular basis. there has been some code commits even in the nd round.&nbsp;,-1.0,-1.0,-1,27
"yes, the team has included the relevant test cases to test their changes and the overall coverage has increased by . % which i think covers the scope of this project.",-1.0,-1.0,-1,29
"from the video links that have been shared, it is very clear that the features are working as they were supposed to. even the test cases are passing. i see no issues with this part.",-1.0,-1.0,-1,35
there has been commits made in second round. one for adding comments and another one for fixing&nbsp;issue # the sorting of topics by topic number in assignments.,-1.0,-1.0,-1,28
the write up is impressive and very detailed. it has been documented well which helps to understand about the project and the code implementation. it also provides detailed test plan which makes it easier for end user to do ui testing.,-1.0,-1.0,-1,41
the write up addresses details of all the three problem statements along with the code changes done in every file and the files added. the team has also added screenshots of the manual testing and the video demonstrating the functionality they added.,-1.0,-1.0,-1,42
commits were done long ago and commits are regular. no new commits as changes were fixed in earlier round. commit titles are well written and not ambiguous.,-1.0,-1.0,-1,27
"impressed by the coding and the way the solution was implemented. they implemented a complex feature in simple lines of code. coding standard has been followed, naming conventions are followed and code is formatted.&nbsp;",-1.0,-1.0,-1,35
"they have added the test cases with context as ""when participant is added to the assignment using csv"" and the test case covers the required functionality that was intended to be&nbsp; implemented",-1.0,-1.0,-1,33
"great work. clearly understandable. functions are of appropriate length, codes are in appropriate&nbsp;methods,&nbsp;code is very well commented, code follows ruby style guide. good naming. &nbsp;",-1.0,-1.0,-1,29
"the team added new commits in the second round as well to improve their code style, improve codeclimate issues and changes other reviewer's suggested. very few teams have done this. great work.",-1.0,-1.0,-1,33
the team has written their wiki page in a very detailed manner. they even added the video links which were missing in the first round as suggested. thank you and good job :),-1.0,-1.0,-1,32
the write up clearly explains about the modifications made in expertiza.&nbsp; it indicates the functionality of their work which is topic management and the problem statement is clearly elaborated. it provides the files changed and also the code snippets in which the changes are made. the write up also provides visual&nbsp;representations of the changes made.&nbsp;,-1.0,-1.0,-1,59
"yes, i feel the code is written in a good format. i checked the changes made by the authors and didn't find any bad naming or anything else.",-1.0,-1.0,-1,29
the write-up is well written explaining all the steps undertaken to make desired changes and displaying how the system works after&nbsp;the changes have been made (with screenshots). they have also added test plans in the wiki page,-1.0,-1.0,-1,40
"the code is well written, the way the list function was split into multiple modular functions is appreciable. a great amount of effort has gone into fixing the issues.",-1.0,-1.0,-1,29
"the write up is well written, elaborate, and clearly elucidates both the manual test cases considered as well as the automated tests implemented. screenshots of both cases were also included as well. steps for manual testing were clearly written.",-1.0,-1.0,-1,39
the team has considerably improved the write-up. the write-up was very inefficient and dint provide details of the code-base also the video was encoded and impossible to view in round . the team has rectified all these issues with round . they have documented their fixed more clearly with screen shots and code this time.&nbsp;,-1.0,-1.0,-1,57
"the location_spec tested that all fields where had valid values could be entered for the location model. the group did test one controller thoroughly, staticpagescontroller.",-1.0,-1.0,-1,25
the members of the team were regular in pushing their updates to the git and updating them. they made sure to commit even the smallest changes. each of the team mates divided the task and worked on separate modules which shows they are very organized.,-1.0,-1.0,-1,45
commits are done for every change which shows good use of git to maintain their code.&nbsp; readme is also provided and mentions all the details that every actor is supposed to do.,-1.0,-1.0,-1,33
according to the commit graphs and contributions seems like all three members in the group have put in effort to make changes to the code in round .,-1.0,-1.0,-1,27
"&nbsp; yes, the team has been active and kept pushing their updates regularly. since the code is separated into several controllers, it is easy for all the developers to work in parallel. i can see that the code is easily maintainable and the developers if they perform any updates or changes, they can easily push it.",-1.0,-1.0,-1,56
"the code follows ruby coding practices like do not repeat yourself, readability and maintainability. the code on git is very well separated into different modules. it is easy for any developer to navigate through the code and make any changes he would want to make.&nbsp;",-1.0,-1.0,-1,46
yes. most of the coding practices for ruby on rails seems to be followed in the code. their routes.rb is just so simple. just routes. they used all the predefined routes which is awesome!&nbsp;,-1.0,-1.0,-1,36
there are a lot of commits from the team. there are branches as well with a lot of commits in them throughout the time. so the team did great work and used all the time they had!&nbsp;,-1.0,-1.0,-1,38
code quality is exellent. the members have shown innate knowledge of ruby practices and implementation basics. i don't find any bad namig schemes. the code is readable and understandable.,-1.0,-1.0,-1,30
the team member kept submitting changes after the second round. they have been consistent and also the fact that both members have contributed toward writing the readme.md is appreciated.&nbsp;,-1.0,-1.0,-1,31
the readme.mdfile sets an example on how to document a working code and software. they have provided each and every detail required for an user of the web app.&nbsp; the validations are in place. the edge cases have been tested and give proper errors when and where required. the waitlist and booking manifesto works perfectly.&nbsp;,-1.0,-1.0,-1,58
the team indeed handled most of the mappings in their respective models with correct -to-n and n-to-n relationship and as a result all destroy methods worked properly.,-1.0,-1.0,-1,30
the team focused on implementing the functionalities.&nbsp; i did not find any bad naming convention in any of the controllers or models. i also did not find any kind of&nbsp;heavy nested blocks or too long logic methods. the coding followed good&nbsp;dry for having only one model of users and not having different for every kind of user. &nbsp;,-1.0,-1.0,-1,63
"the team did keep committing their work on the github repository during the two rounds.&nbsp; they had followed a good habit of naming the commits well, which not only kept a track of how they proceeded but also made easy for others to understand how they are approaching. they also had a good readme file updated.",-1.0,-1.0,-1,57
"yes, the team kept pushing the code constantly. the commit messages are also pretty clear as to what has been implemented.&nbsp; they gave created sufficient branches to implement functionalities. they didn't&nbsp;push code on the last moment and that's a good thing. every contributor has carried out individually and constantly pushed it to github.",-1.0,-1.0,-1,58
the code follows good ruby and rails practices. the team not only focused on functionalities but also worked on the front end. the code shows readability and maintainability. they have made a good number of commits throughout the development cycle.&nbsp;,-1.0,-1.0,-1,41
the team has regularly submitted changes to their project throughout the round . they have also committed changes with proper summary details which describes the functionality that was done.overall all team mates have contributed properly.,-1.0,-1.0,-1,35
"yes, after looking at the code in github, it looks readable, elegant and follows the dry principle. it would be easy for any developer to understand and work on it. i see that each module handles only one task. function calls have been made to handle multiple tasks. also, separate method calls have been used for different requirements. also, all the names of the variables used were relevant and make sense when we go through the code. i didn't find any issues with coding. &nbsp;",-1.0,-1.0,-1,86
"all the relationships in the project are very well implemented following all the database principles. this, in turn, helped the team to develop their tour management application without any discrepancies. also,&nbsp;the team has very well implemented the user logging and tour listing. looking at the code, models and controllers were very well sorted and separated.",-1.0,-1.0,-1,57
"yes, the team has very well implemented the user logging and tour listing. looking at the code, models and controllers were very well sorted and separated. after signing up and using the application, i felt the team would have definitely tested the application.",-1.0,-1.0,-1,43
"after looking at the code on git, i felt the code was well written, it was readable, elegant and follows the dry&nbsp;principle. it would be easy for any developer to understand and work on it.",-1.0,-1.0,-1,37
all the relationships were very well designed and i found no discrepancies while executing insert and delete operations while using the applications. the outputs while implementing these operations were on par with what was expected.,-1.0,-1.0,-1,35
"the code was well written, it was neat, concise and follows the dry principle. variable names used were relevant to their purpose. models and controllers code were well indented. also, it is easy for a developer to understand the code and make further developments on the application. i felt all the basic practices of ruby and rails coding were followed. all the functionalities were modularised precisely. .",-1.0,-1.0,-1,66
the team managed to keep pushing their changes throughout the period of development. after the first submisson&nbsp;they continued pushing their changes to github.,-1.0,-1.0,-1,25
"they successfully included belongs_to and has_many to indicat e relationships in models and the&nbsp;&nbsp;tables made&nbsp;seem optimal to me, hence db&nbsp;design was very good.",-1.0,-1.0,-1,30
the basic functionalities were implemented using the conventions followed while developing in rails. they adhered to the dry principle and used minimum code to cover the functionalities.,-1.0,-1.0,-1,27
"all the models were implemented in a very good manner with all the required validations and relationships. relationships that were mentioned in the project description including tour-customer, customer-booking, tour-booking and other relationships between tour and customer with review,bookmarks and bookings were addressed.",-1.0,-1.0,-1,46
review has been thoroughly tested. testing is done to ensure that no blank review with blank subject or blank tourid is added by the user.,-1.0,-1.0,-1,25
the&nbsp;team&nbsp;has been&nbsp;commiting changes in the round and throughout the project. commits were&nbsp;made from time to time and&nbsp;changes were being well commented and pushed to github properly.,-1.0,-1.0,-1,36
the&nbsp;db design is appropriate and handles the relationships properly. there was a mapping table for such -to-n relationships and the models handle the relationships correctly.,-1.0,-1.0,-1,28
the team has been pushing changes to thorughout the project periodically from time to time. the functionalities are well developed and working and the ui is simple.,-1.0,-1.0,-1,27
the readme file was extremely well explained and depicted everything implemented in a very informative manner. the application was user friendly and easy to navigate around.&nbsp;,-1.0,-1.0,-1,27
&nbsp;the information posted on git looks good.&nbsp; the file structure appears to be well organized and the code looks very clean.&nbsp; the project has several commits with comments and two branches. the comments were well structured.,-1.0,-1.0,-1,39
"the team kept submitting changes throughout the project. along with the changes, the team also mentioned the commits made in a proper manner. the commits were made meaningfully, which would have made it easier for the team to track the changes made on the repository. the readme was also updated according to the changes made, which shows that the team used to regularly make updates. even after round , several commits and merges were made to the main branch of the repository. after round , the team has focused more on the testing functionality.&nbsp;",-1.0,-1.0,-1,93
code is very clean and readable.&nbsp; comments are very thorough.&nbsp; bookings and bookmarks are handled in separate controllers ensuring that those tasks are separated from one another.&nbsp; method and variable names are descriptive and appropriate.&nbsp; methods are of appropriate length and handle one task.,-1.0,-1.0,-1,48
"yes, the db design complies with normalization standards and there are appropriate associations defined in the models to handle -to-n and n-to-n relationships.&nbsp;",-1.0,-1.0,-1,27
"yes, team (all members of the team) kept pushing their work throughout the entire period of time, including in the round period. the repo contains commits and branches. there are multiple commits starting from feb through feb , which happened during the round period. the team did very well in terms of maintaining the code, fixing bugs and pushing their code on regular basis.&nbsp;great amount of work has be done throughout these commits.",-1.0,-1.0,-1,74
"edit: yes, as in the first review period. there are already commits. great amount of work has be done throughout these commits. commits on the debugbranch. all three members of the team has done and pushed their work. as of february -th (first review): there are commits on the master branch and branches. all team members contributed&nbsp; to the project. mainly all commits are done by aurora and george. good job and it is easy to see involvement of the entire team (oppose to my team).",-1.0,-1.0,-1,87
"yes, the team (all members of the team) kept pushing their work throughout the entire period of time, including round time period (fixing bugs). the repo contains&nbsp;only branch - master. master branch has commits and more than commits are performed after peer review period one (feb - march ). this indicates that team has attempted to improve the app functionality and fix the bugs that were reported during the peer review period one. &nbsp; the team did&nbsp;very well in terms of maintaining the code, fixing bugs and pushing their code on regular basis. the very first push (initial commit) took place on feb and since then all team members worked on the code. all three members of the team (drupadhy, ajain , amody) performed relatively the same amount of work based on number of commits, which indicates contribution from all three members. great work by the team!",-1.0,-1.0,-1,147
yes! great work by all team!! all three students made&nbsp;equally the same&nbsp;&nbsp;contributions! there is only branch - master that has commits. drupadhy made commits. ajain made commits amody made commits starting weeks ago. great work by the team!,-1.0,-1.0,-1,42
they have handled all the edge cases perfectly. i wanted to test with the partial seats cancellation to test the waitlist and confirmation functionality thoroughly.,-1.0,-1.0,-1,25
yes they have tested the user model. they have made the username unique in place of the email id. so it works perfectly based on that.,-1.0,-1.0,-1,26
yes. the team did a great job in this part. all members in this team are keeping on working all the time and fixing the bugs after the first round of review.,-1.0,-1.0,-1,32
"the code follows good ruby and rails coding practices. all the models, controllers and views seem to have been created using scaffold,which is good. the code is understandable and the logic seems to be present correctly in the model.",-1.0,-1.0,-1,40
the commit log reflects the teams efforts in pushing changes regularly and starting well before the deadline. the commit messages are clear in terms of representing the functionalities being built.,-1.0,-1.0,-1,30
the coding seem to adhere good practices in terms of moving the business logic into the models and the role based access related checks in the controller. the variable names and style of coding makes it easy to understand.&nbsp;,-1.0,-1.0,-1,40
"the code inside the controllers and views as well as models was readable when i looked at it.function names followed the standard format, class names were singular instead of plural, erb code in the views was indented.",-1.0,-1.0,-1,38
the code follows excellent ruby practice. the team has followed dry principle throughout. i found a lot of method calls and definition for all models. the code is very easy to understand and is efficiently implemented.&nbsp;,-1.0,-1.0,-1,37
every member continuously pushed all changes to the git. the proportion of commits was lesser in round . but they managed to have all the features implemented.,-1.0,-1.0,-1,26
yes! all the changes and add ons to the code seemed to be pushed to the git regularly with clear commit messages explaining these changes.,-1.0,-1.0,-1,25
i don't see any code issues that are of concern. all the coded added/modified by the team appears to be of good form with variables appropriately named.,-1.0,-1.0,-1,29
"the functions followed dry principle. i have not found any inconsistencies through out the code. since,the code was modulated properly, it was easy to comprehend.",-1.0,-1.0,-1,26
"yes, the variables, methods and class names are very relevant to their respective functionalities. by looking at the code i could understand why each variable was defined.",-1.0,-1.0,-1,27
 . all the long functionalities were correctly broken up and refactored into smaller methods.&nbsp; . the create method has been optimised properly using switch case which is now easy to understand. . the code follows all the dry properties properly.,-1.0,-1.0,-1,38
"yes, there are commits during the nd round, the team have refactored the code to reduce occurrence of certain words. they have fixed some rspec issues. the code climate issue that was identified before has been fixed in this commits. the code climate and rspec has been modified.",-1.0,-1.0,-1,48
"i felt the code is ready to be deployed onto production, i couldn't find any potential bugs or errors in the code. the team have given proper comments of what they have done, so it will be easier for any other team to pickup from where this team has stopped.",-1.0,-1.0,-1,51
the writeup done by the team explained all the functionalities and clearly showed the problem statement. they have improved the writeup based on the previous feedback.,-1.0,-1.0,-1,26
"the project description is clear and understandable. the problem statements are given in simple words which made it easy to understand the work. they have clearly cited the code before and after the changes, so i could easily find the changes.",-1.0,-1.0,-1,41
i think it is a lot of code to review. the team has done its best to serve the purpose of the problem statement. they even did change a few of the views.&nbsp;,-1.0,-1.0,-1,34
"the wiki page gives the test plan, seems like the team has build some test cases or modified the older one. they have test cases to&nbsp;&nbsp;spec/controllers/account_requests_controller_spec.rb&nbsp;file. since this is not testing project, they haven't mentioned about test coverage in the wikipage. it looks like the team added additional test cases to check the account_requests controller.",-1.0,-1.0,-1,64
"the problem stated in the wiki page is that a single controller was responsible for all the action carried out. the team has split this controller into parts each addressing specific action. for these controllers, they have written test cases. apart from these, they have commented on the methods which did not have any comments.&nbsp; they have used partial views to follow dry principle.",-1.0,-1.0,-1,65
the main purpose of the project was to split the controller into two for the sake of better understanding two different actions. the variable names that are been used in the project are sensible.&nbsp;,-1.0,-1.0,-1,35
"the document is good. i thought the team should have included some code in order to explain in a better way, but the git says that they have modified files which is like many files. so it is too much work for the project. good work team.",-1.0,-1.0,-1,47
"i did try to perform system operation from the ui. it seems to work fine. i have not given much input or tried testing edge cases but a simple work is working fine. this project is about refactoring users controller. the code was shifted from one controller to another, partial codes are written and are rendered in the views.",-1.0,-1.0,-1,59
"i am impressed with the write up. it included code, test plan and is well organized by capturing important details required to understand what are the changes been made. keep up the good work.",-1.0,-1.0,-1,34
the code was modified a bit as they had to shift part of code from one controller to another which was responsible for it. they have followed most principles. precise comments are added to know what is going on in the method.,-1.0,-1.0,-1,42
since the project is concerned about refactoring the code and not optimizing it or adding additional features. the project did work as intended. the features intend to work as they are supposed to in this refactor project.,-1.0,-1.0,-1,37
the writeup is detailed and all information is provided along with snips of code which implement the writeup which made it easy to comprehend the changes done.,-1.0,-1.0,-1,27
"code changes look great. the dry principle has been followed and also the knowledge of past codes was properly used to merge the new code in a readable and understandable fashion, rather than using completely new files for implementation. the rust style guide has been followed.",-1.0,-1.0,-1,46
"the team did do very good manual testing and have added the following screencasts demoing the tests. the coverage cannot be figured as this is not an expertiza project.&nbsp; i am not sure if the maintainers require test cases to be added, but does not seem to be the case to me.",-1.0,-1.0,-1,53
"the code alreade got merged, which means it is ready to be deployed.&nbsp; i don't find anything of major concern to me.&nbsp;",-1.0,-1.0,-1,25
the project was not an expertiza project. the checks in the servo repo passed and they successfully for the changes merged which is awesome. cheers to the team. :)&nbsp; &nbsp;,-1.0,-1.0,-1,30
"i am not sure what ui was expected out of this project, but the implementation of the algorithm can be seen clearly in the sine_wave implementation function and tests.&nbsp;",-1.0,-1.0,-1,30
they have included and figured out strategy design pattern for their work and they are following it throughout their documentation. the work is described very neatly module-wise which is extremely helpful to understand. great work!,-1.0,-1.0,-1,36
the writeup is great. the idea of including flow chart is amazing and this is the first team i saw doing it. the documentation is well planned and well written.,-1.0,-1.0,-1,30
good job: pull request looks fine. the team has posted the travis&nbsp;ci build history and it seems like the build is successful and all the test cases passed.,-1.0,-1.0,-1,30
good work done by the team...!!! the code looks clean and following the ruby and rails guidelines. the method names are concise and methods are also not long. great job...!!!,-1.0,-1.0,-1,30
the code works fine and general ui is good and flowing. it is necessary that the functionality should not change after refactoring and team have followed this fact. good job..!!!,-1.0,-1.0,-1,30
good work team !!!! the document is clear and concise. it properly shows what the problem is and how the team has solved it. i really like the idea of putting the code snippets in the documentation which gives a clear idea of what the code has been refactored. suggestions from round were implemented by the team,-1.0,-1.0,-1,56
good work team !!!! the document is clear and concise. it properly shows what the problem is and how the team has solved it. i really like the idea of putting the code snippets in the documentation which gives a clear idea of what the code has been refactored.,-1.0,-1.0,-1,48
good job..!!!! the code works fine and general ui is good and flowing. it is necessary that the functionality should not change after refactoring and team have followed this fact. good job..!!! &nbsp;,-1.0,-1.0,-1,33
the code is well written and they are in constant communication with the developers to rectify their errors which is a good sign. great effort by the team!,-1.0,-1.0,-1,28
the code is good. the thing i liked the most is the change from the case statements to the dictionary implementation. it was a very good addition.,-1.0,-1.0,-1,27
"yes, the feature does work as expected. checkboxes are added on the ui which are appropriately placed.&nbsp; also, it is evident from the screencast that the data is been exported to csv files.",-1.0,-1.0,-1,34
the team did not add any new test cases but i could see few existing test cases been modified. i am not sure whether the test coverage increased or decreased but the coverage&nbsp;of&nbsp;response_controller.rb&nbsp;is % and the coverage&nbsp;of&nbsp;survey_deployment_controller.rb&nbsp;is %. &nbsp;,-1.0,-1.0,-1,51
" ) renamed edit_allowed function to view_allowed in the response_controller.rb file: i found it to be quite reasonable as the function here&nbsp;checks if the response can be viewed by other person&nbsp;or not. )&nbsp;removed assign_instance_vars section as it was not needed and combined in edit and new sections: team can mention in the writeup that stratergy&nbsp;design pattern is being used over here to dry out the code. )&nbsp;removed was_submitted. changed to previously_submitted in the in create method: i found it to be reasonable as method nanme&nbsp;""previously_submitted"" more clearly explains what function is doing over here",-1.0,-1.0,-1,103
yes. i see multiple commits. this wont be as much as rails projects but i dont understand that the code is rust so takes lesser code bu ta lot of time to understand and test the.,-1.0,-1.0,-1,36
"rust by itself dry. the team have covered that test cant be done but refactoring is done as required at&nbsp;http://wiki.expertiza.ncsu.edu/index.php/csc/ece_ _spring_ _-_m _refactor_bluetooth_support_for_better_maintainability#running_the_tests &nbsp; but also adapter.rs calls several fn's, say,get_uuids(), which appears&nbsp;to be following good guidelines but i can't verify is that their thought process or they just reused/called an available function.&nbsp; &nbsp;",-1.0,-1.0,-1,74
the authors have a test plan that describe the tests passed in the form of a video which is more than sufficient for this type of a project.,-1.0,-1.0,-1,28
their work did not involve making new functionality so there is no need for design classes. they followed the dry principle to make the code cleaner and more legible.,-1.0,-1.0,-1,29
no new variables or method names need to be added for this project. the code was cleaned up across many files and made more legible. there is no commented out old code so thats good.,-1.0,-1.0,-1,35
they were fixing code climate issues so design principles does not apply here. thy explained everything they did in great detail and made it very clear what they did.,-1.0,-1.0,-1,29
they thoroughly tested their code to see if their changes broke anything but they did not add any new tests. there were no failures when they ran rspec.,-1.0,-1.0,-1,28
the code seems to have been written to meet the expectations. comments are provided and naming convention is easy to follow. functions look short and readable. no instances of dry violations found.,-1.0,-1.0,-1,32
i am unsure of as to how tests would be done for the mozilla projects. but there appears to be a good description and a detailed section about tests in the write up.,-1.0,-1.0,-1,33
"rust and mozilla being entirely new to me, the writeup was a good place to get a clear idea about what was happening. this was a well written writeup.",-1.0,-1.0,-1,29
"yes, the team has neatly documented existing test cases as well as newly added test cases, and even provided a good amount of screenshots to the writeup. this is detailed and helpful.",-1.0,-1.0,-1,32
"the writeup is self explanatory, but the fact that they have also attached a video with one of the members narrating the changes and the things happening there is a very happy surprise. this video infact helped me catch up with the code climate issue fixing project as well.",-1.0,-1.0,-1,49
"&nbsp;the team has made a lot of changes over the course of the project until now, and looks like it is already reaching a near-completed state.",-1.0,-1.0,-1,28
the writeup was very detailed and was worded well. it explained most of the things they've done in a neat way and covered a broad range of details and events happening in their project.&nbsp;,-1.0,-1.0,-1,36
the writeup is thoroughly detailed and has a lot of information about the project. the team seems to have understood the core concepts of the project assigned to them.,-1.0,-1.0,-1,29
"they mainly moved existing tests to the right place according to their refactoring. apart from that, a few extra tests do seem to have been added and this has been neatly documented in the write-up as well, with good screenshots.",-1.0,-1.0,-1,41
"there has been a good amount of thought put into the test plans, and seeing how they have even implemented most of it already this is a good development. &nbsp;",-1.0,-1.0,-1,30
"the code is very well formatted. their code spans over multiple files, and all of them have a neat ruby-like feel and guidelines to them.",-1.0,-1.0,-1,26
"this is very well written. the screenshots for the tests are informative. their manual about how to use their app and see the changes that they made is very clear and it makes the task of a reviewer very, very easy.",-1.0,-1.0,-1,41
this write-up was very clear with what was happening in the project. the clear description of what they have done as part of their solution was very helpful in understanding what the code is meant for as well.,-1.0,-1.0,-1,39
"it works, and they have also neatly documented how to reach those pages in the write-up so i did not have any problems finding it. i really like that, as otherwise it would take me a lot of time to figure out where their code was being used in the ui.",-1.0,-1.0,-1,52
"the team did add test cases which covered all the refactored methods names,&nbsp;a method which was moved to partials and a method which was refactored into a dictionary from switch&nbsp;cases.&nbsp; code coverage was increased.&nbsp;",-1.0,-1.0,-1,40
"yes, the code is ready to be deployed. it passed the travis ci&nbsp; and does not fail on the test cases. it built successfully, they have added the tests necessary for the refactored methods and it worked correctly.&nbsp; the screencast showed that the tests passed and the methods they have refactored.",-1.0,-1.0,-1,53
"yes, the build was passed in travis ci and there wasn't&nbsp;any conflict that could have resolved. the code seems well structured.&nbsp; they have done good refactoring and have removed some switch cases into dictionaries which is a good idea.",-1.0,-1.0,-1,43
the team has followed well ruby naming conventions.&nbsp;they refactored the code keeping in mind the dry principle.&nbsp; i could not find a bad coding style or naming convention. the long functions were replaced to&nbsp;dictonary from switch case was a good idea. overall nice job.,-1.0,-1.0,-1,49
the code followed good ruby methods. the previous naming conventions were in pretty bad shape and now they have done a good job in refactoring them. the previous code needed refactoring badly and now the refactored code works well.&nbsp; the methods after refactoring&nbsp;work correctly and perform the expected operation. i did a&nbsp;cloned their repository to test the changes and yes it worked as&nbsp;expected.&nbsp;,-1.0,-1.0,-1,71
the team has removed two methods namely assign_instance_vars and was_submitted. i found this to be reasonable because another method previously_submitted explains clearly what a function is doing. the team has also refactored a method name from edit_allowed to view_allowed which looks like a logical decision.&nbsp;,-1.0,-1.0,-1,46
"upon reviewing the document and the pull request: . there were no fixes that were asked by the team regarding long functions. . such code was not asked to fix by the team. . no such code was asked to fix from them. . there were several instances where the team was asked to fix bad ruby practices, such as ""avoid comma after the last item of an array"" and ""use the new ruby . hash syntax"" and many others, which have all been corrected. . the team&nbsp;was also asked to dry their code in the case&nbsp;""similar blocks of code found in locations. consider refactoring"" and they have handled this case very well. &nbsp;",-1.0,-1.0,-1,112
"the writeup is very well written. i liked their approach of addressing the major issues of their code and they included illustrations of their changes which helped me better understand their changes. it includes all the necessary&nbsp;information like testing and nicely formatted problem statements. overall, this writeup is excellent. good job!",-1.0,-1.0,-1,53
"since this was a code climate project, it was their job to fix bad names, long complicated functions, lack of or no comments, bad ruby practices and dry problems and the team has implemented all these changes very well. i especially like their implementation of ""unprotected mass assignment"". their code follows the rails guidelines and i was not able to find any issues with their code.",-1.0,-1.0,-1,66
i believe that the documented is very nicely written in issue-solution format which makes it easier for a reader like me to understand what changes have been implemented by the team. clear illustrations along with descriptions help me to understand the functionality. a useful video clip including their test results has been included by the team.,-1.0,-1.0,-1,57
this is code climate project and the team has attached a video showing their test cases running. their code refactoring activity is very good and they have made use of good ruby and rails practices. some cases asking them to dry out their code have been successfully addressed.&nbsp;,-1.0,-1.0,-1,49
i think that they have a good implementation of their project and it is ready to be deployed to the production server. i did not find any major issues with their code and the quality of the documentation has also improved. the major issues with code climate have also been fixed.,-1.0,-1.0,-1,51
"after checking the pull request, i can confirm that the build passed in travis ci.&nbsp;their branch had no conflicts with the base branch.",-1.0,-1.0,-1,25
"their writeup is an improvement over their last writeup and they made several changes to their test plan documentation, explanations were made clearer and i believe that the overall quality of the writeup improved. great job!",-1.0,-1.0,-1,36
"the code is very well written. i liked how the naming scheme of the some of the variables. for example, they changed from&nbsp;was_submitted to previously_submitted.&nbsp;overall the code looks clean and follows good ruby and rails practices. good job!",-1.0,-1.0,-1,42
this is not a testing project and moreover it is a mozilla project and thus they need to implement a functionality and not to write test cases. thus there is not test case and no coverage for this project. but they do have some bluetooth automated tests to run which is specified in their writeup.,-1.0,-1.0,-1,55
as i said before from seeing their pull requests some changes have to be made to their code in order approve the pull requests. they have done some good work writing the functionalities and with some changes the project will be ready to be deployed on the production server.,-1.0,-1.0,-1,49
they have given the files that have to be modified and given the steps that need to be done to do the project. other than that i can also see proper steps to build and run the project.&nbsp; they have provided the details about the implementation under the implementation heading.,-1.0,-1.0,-1,51
from looking over the code they have written it style is good and function namings are mostly already given. so i couldn't find any bad namings or bad coding style.,-1.0,-1.0,-1,31
they have written their writeup very clearly and it has good description about servo and rust. they have also written the problem statement and from that i can&nbsp; properly understand the issue and the feature that has to be implemented has also been given.&nbsp;,-1.0,-1.0,-1,46
the team did not add any test cases. but i agree with their explanation in the documentation. they did not add new methods. just moved some methods into a new controller. so all the tests that had been written before are valid. just new paths needed to be configured in tests and and all tests relating to new controller should be moved to a new spec file. this has been done and can be seen in the video that they have uploaded.,-1.0,-1.0,-1,82
"code was well written, without any bad naming formats or complicated functions. the author has written the code in a dry format by following best coding practises.",-1.0,-1.0,-1,27
the writeup was made clear and transparent. we get a good idea about what they are doing. they included repo links and pics to further explain what they did in detail. they improved from their&nbsp;previous writeup.,-1.0,-1.0,-1,38
reafactoring of methods is done in a much better way by removing reduncdany information from the method name. the methods are easier to understand and makes more sense while reading,-1.0,-1.0,-1,30
"team has followed standard practices when making any code change. team has added comments for many methods that can help the user to understand what each method does. also, many method names have been shortened for better experience",-1.0,-1.0,-1,38
"yes, the authors have tried to explain most of the aspects clearly and is easy to understand. the problem statement is clearly mentioned and the steps taken is also mentioned. wiki is clear and easy to understand",-1.0,-1.0,-1,37
ui is seamless and looks great. the hint added in the text box gives the user a clear information on what needs to be done. this also seems to an optional field and can be used only when necessary.,-1.0,-1.0,-1,39
the build did pass in travis ci when i checked on github and there were no major conflicts that needed resolution. i als see that all the code climate issues were resolved as well.,-1.0,-1.0,-1,34
"the team did add the test cases for the new feature which was added for the project. the test case is not only demonstrated through the code but also through a screencast which shows the implementation of the audio feature.&nbsp; this project has by far, the best test cases written and displayed.&nbsp;",-1.0,-1.0,-1,54
"according to me, this code can be deployed onto the production server. according to me, the project seems to be correct with the issues solved, features implemented and tests are written for the new code added.&nbsp; so according to me, there are no big concerns and this project can be considered as completed.",-1.0,-1.0,-1,54
"the writeup is very clear and easy to understand. even though a mozilla&nbsp;project was new to me, the writeup was written so properly that feature implementation could be understood correctly. the functions have been explained and also how and why it is implemented is mentioned in various sections of the report.&nbsp; the writeup is far better than how it was during the first review. a good job is done by the team.",-1.0,-1.0,-1,75
"there were several changes made to function names: the edit_allowed method is changed to view_allowed which is a good change since the function checks if the response can be viewed by other person or not. also, the team has removed was_submitted and assign_instance_vars method, which according to me is a good thought. since, there is a method previously_submitted which clearly explains what the function is doing.",-1.0,-1.0,-1,66
"the code committed has followed a good naming convention which is properly commented as well. there were no long methods added. the code added had only short methods.&nbsp; according to me, the code does not have any dry problems.&nbsp;",-1.0,-1.0,-1,41
the author has followed good ruby on rails programming practice and the code written was comprehendible and i did not fund any major issue with the same.&nbsp;,-1.0,-1.0,-1,28
yes the authors have made some changes during the second review and improved the code functionality. but i guess they completed a chunk of work before the st deadline itself.&nbsp;,-1.0,-1.0,-1,31
yes they have added new tests and as shown the teams_user.rb is now % covered for example. they have also done lot of rspec testing and explained it clearly in the documentation. overall test coverage increased to . %.,-1.0,-1.0,-1,37
the testing is also clearly done and documented on the work done by the authors. they have also fixed and run existing rspec tests and also made a video for the same which was also done well. ui testing was also done and two main problems were identified and fixed.&nbsp;,-1.0,-1.0,-1,51
ye the authors have clearly mentioned why they have made the specified changes and how they proceeded when there was a problem. they have also given a good and a bad instance to make us note the difference which i feel was done well.&nbsp;,-1.0,-1.0,-1,45
"i was impressed with the writeup as it was very detailed and gave us all the required information. they have elaborated the tests, explained the code climate issues, moved on to how to solve them and given a detailed explanation as to how to do the testing. i would have actually liked it if they had cut short a bit on explaining all the testing and just focussed on the most important ones, but that is not an issue.&nbsp;",-1.0,-1.0,-1,80
the code follows dry and authors have done a good job explaining all the code in their writeup and i didn't have any problem with the naming or the flow of the code. good job done!,-1.0,-1.0,-1,37
the team have clearly indicated all the functionality and work done. i was able to clearly understand the changes that were made by them and they have also provided good explanation for the changes made. they have also mentioned the remaining changes to be made and suggestions for future code that has to be written. the overall work looks neat and good and explanation provided makes it easy to understand why certain changes have been made.&nbsp;,-1.0,-1.0,-1,77
i tried to run the code and check the tests and all the results were as reported by the authors. the authors have also detailed very well as to how to check their work and all the results match. all the features also work as intended but as described they have shown how code climate works properly.&nbsp;,-1.0,-1.0,-1,58
"no test cases were added, but since this is a refactoring project, that wasn't necessary.&nbsp; the team has displayed that all existing test cases still pass after refactoring.",-1.0,-1.0,-1,30
"i would say that the question does not apply to this project, because no new logic was really introduced.&nbsp; things were just changed to fix issues reported by codeclimate.",-1.0,-1.0,-1,30
"as stated in the original review, the project didn't involve the types of changes that involve code style.&nbsp; everything i saw indicates that the changes improved the code quality.",-1.0,-1.0,-1,31
all the features are working as they are supposed to work and the code has passed through all the test without any issues or failures.&nbsp;,-1.0,-1.0,-1,26
"their code seems to be showing no errors in travis ci&nbsp; and they seem to have fixed every issue they were assigned in this project. so, this code can be deployed onto the production server. their project could be a good starting point for a future team to pick up.",-1.0,-1.0,-1,51
their writeup seems to be pretty elaborative and explains their problem statements and their solutions pretty clearly and to point. they have added code screenshots of the original and the refactored code which makes it really helpful to understand what and why they did what they did.,-1.0,-1.0,-1,47
the codeclimate bot and travis ci both passes and a lot of files are refactored. i think that this is a good starting place for future teams to pick up because the refactoring done is pretty minor but it is comprehensive.,-1.0,-1.0,-1,41
the build passes in travis ci and the team did a great job at documenting issues. the branch has no conflict and checks have passed as well.,-1.0,-1.0,-1,27
although this project was not meant to add test cases since this was not introducing new code but they have worked on adding new test cases in the spec folder for the model files that they have touched. they have worked on the testing rigorously in the second submission round and shown the passing results through a video. commendable job with testing i believe.,-1.0,-1.0,-1,64
i believe that this code base is ready for deployment. with all the improvements and testing that these guys have performed i believe this is ready to be merged.&nbsp;,-1.0,-1.0,-1,30
they have mentioned a list of issues they have fixed and i liked that they did not mention the trivial ones. they have explained the important ones in detail. they have worked on fixing the issues complained by code climate analyzer and incorporated the latest ruby code semantics and snake case variables etc. they have gone out of their project scope and attempted to fix the class variable names and also implement dry principle which is commendable. &nbsp; &nbsp;,-1.0,-1.0,-1,79
i do not think this is in their scope but whatever they could test using rspec for their files they did that. i think that was more than enough.,-1.0,-1.0,-1,29
"they have not only fixed the issues reported by code climate with proper variable naming, method naming and class naming but also fixed other naming conventions and improved the modularity of the code by incorporating dry principle.",-1.0,-1.0,-1,37
"as mentioned in the last review, they have outdone in every aspect. their wiki page is one of the most detailed ones which explains everything they have done since the very beginning. they have included the testing section where they have mentioned how they have improved the already existing spec files. also they have included new test files to test the model files that they have changed. they have also improved variable names, followed dry principle wherever possible and added meaningful comments.",-1.0,-1.0,-1,82
"extremely well written code following the best ruby coding practices. they have added meaningful comments, improved the variable names and followed dry principle throughout and all these are apart from the code climate issues that they have fixed.",-1.0,-1.0,-1,38
this is one of the most detailed and crystal clear write up i have seen so far. it exemplifies every issue that they have fixed in their project. i believe they have worked on the wiki page in parallel to the every commit that they made or every step they took in their project. i can get a clear picture of what they have done in their project from day till the submission date. they have also given description about expertiza and code climate which is a good thing along with explanation about every issue that they resolved. it helps the reviewer get an idea of what's going on.,-1.0,-1.0,-1,110
yes. there were many commits to resolve the code climate issues that were generated by the previous build. much efforts were taken to fix the code climate issues.,-1.0,-1.0,-1,28
they have improved a lot from the previous time in the sense that they included the test plan section this time and showed the output of their manual testing and rspec testing they carried out. they have added a new rspec file to verify their end-to-end testing. they have also given examples of how they have refactored the code which summarizes almost everything.,-1.0,-1.0,-1,65
" . no too long functions . no need to be separated . most of code is used to improve the current code, no more comments are needed. . it follows .no, all the code follows dry principles.",-1.0,-1.0,-1,33
the writeup is good enough and covers enough details.&nbsp; the team did fully explain everything in both writeup and video. i don't think the team need to give other options in this project.,-1.0,-1.0,-1,35
the write was properly written. it covers enough explanation&nbsp;and details about the project. they improved their writeup by adding more tests than the first submission.,-1.0,-1.0,-1,27
"yes, the writeup document is clear enough that i can understand the project and the problem in the current code. i can understand what is code climate and what kind of code is good.&nbsp; in writeup, it shows what issues they solved and what issues are remained so far.",-1.0,-1.0,-1,50
"since this was a refactoring project, the objective of the changes was to do - .&nbsp; they did a great job of improving the code in every way.&nbsp; for instance, problem was nicely resolved by moving duplicate code into the helper function can_delete_topic?&nbsp; very good job refactoring.",-1.0,-1.0,-1,48
"yes, the team talked about each change they made and why.&nbsp; they talk about the reason the change was necessary and what the impact was.&nbsp;for example, in problem one of their issues and fixes section, they clearly explained that the issue was that update was being called in the wrong place, and that the solution was to remove it and flash an error message. well done!",-1.0,-1.0,-1,69
"each variable name, function name, and class name was clear and concise. for instance, delete_signup and delete_signup_as_instructor are two function names that are easy to understand but not too long.",-1.0,-1.0,-1,30
the team did an expert job of describing what functionality was affected and impact it had.&nbsp; i could clearly understand what their project object is and how they executed it.&nbsp; each issue talks about the functionality and what it is related to.,-1.0,-1.0,-1,44
yes. the code can be deployed onto the production server as it looks like they are using the correct approach and are almost done with the first part.&nbsp;,-1.0,-1.0,-1,29
"some parts of the code have been extracted into separate methods wherever necessary. it was not difficult to follow the code. also, the code follows ruby principles and dry principle.",-1.0,-1.0,-1,30
the team has done a good job in explaining all the problems and the solutions for each problem. they have also clearly mentioned the design choices that they took and why they did so.,-1.0,-1.0,-1,34
"they have listed the problems and how they will handle them. also, it is a refactoring project so they have talked about how they do the refactoring.",-1.0,-1.0,-1,27
"yes. since they've not implemented any new features, since all the existing tests passed, the code is ready to be deployed on to the production server.",-1.0,-1.0,-1,27
"since they've not implemented any new code, there is no hard requirement for them to come up with new test plans. however the team has documented the rspec testing to ensure that the changes they made didn't break the system",-1.0,-1.0,-1,42
the assignment was to fix the code climate issues and the write up covers it.&nbsp; this project does not have any requirement to use design patterns or principles as this project just involved code refactoring.,-1.0,-1.0,-1,36
"the write up is well written. the team has put utmost effort to document their entire work in the wiki page. in addition, the team has also documented the common code climate issues they found and provided the ways to avoid them. this would be helpful for the future contributors as they can easily find the best solution from this wiki.&nbsp;",-1.0,-1.0,-1,62
they deleted the&nbsp;pending_surveys test inside response_controller_spec.rb&nbsp;and refactored the #redirect test section. test coverage according to&nbsp;code climate is&nbsp; %.,-1.0,-1.0,-1,25
"yes. the&nbsp;writeup states exactly what was accomplished in the ""tasks accomplished"" section complete with sections of code and what the response_controller&nbsp;does. very convenient having the pull request link right in the wiki page. i will add that to&nbsp;my group's wiki page also.",-1.0,-1.0,-1,49
i have sen some errors on their github page but they seem to have fixed almost all errors.&nbsp;i think this could be deployed onto the production server because i see their last commit shows that their build passes travis ci and hence they should be good with its working.,-1.0,-1.0,-1,51
"the writeup is very clear and clean. they have explained in detail about what the project is talking about and they have explained what webaudio api is and how it works for the project, which is nice because for the students who did work on expertiza would also understand what this project is if they read their writeup properly.",-1.0,-1.0,-1,59
they have clearly explained in detail what their project talks about and briefly explained what&nbsp;are the problems and how are they fixing them.,-1.0,-1.0,-1,25
"the team seems to have not generated any new tests based on what was changed, but the old tests are covered in the testing section. in addition to this, a video clip was provided in the expertiza submission that shows tests being run and passing.",-1.0,-1.0,-1,45
"these items are intuitive for the most part. for example, a method that clearly populates local items was changed from author_feedback_popup to questionare_details_populate, which makes lots of sense.",-1.0,-1.0,-1,28
"i think the code is written quite well, and the majority of problems in the first round were fixed. the writeup details the laundry list of changes that were made, and it seems that the changes made abide by best coding practices for the most part.",-1.0,-1.0,-1,46
"comments were added more than sparingly, and were detailed in the writeup on the expertiza wiki. long and ambiguous method names were also modified to method names that were shorter and made sense in the context of what the method was actually doing. problems from the first round seem entirely fixed.",-1.0,-1.0,-1,51
"i could not find any issues with the current code(from what they have implemented so far). the problems solved mainly are renaming, removing redundant code and updating flash messages.&nbsp; everything so far seems to be good",-1.0,-1.0,-1,38
"the team uses tests from a different project with few changes to the name to accommodate the changes they made to the code . for coverage, travis cl code coverage is %.&nbsp;",-1.0,-1.0,-1,31
"the write up is very clear. the most impressive part is their explanation - what they have to do, how they did it and why they did it for each task! no complains here",-1.0,-1.0,-1,33
they fixed the issues and all the issues they have fixed is working well. i didn't see any edge case because i think they don't need to talk about this on their existing issues.,-1.0,-1.0,-1,36
"the code written&nbsp;is very good. i didn't found problems in the first round of bad names, long functions, bad code styles. the authors made the code better.",-1.0,-1.0,-1,30
the writeup explained how and why the authors did the work by giving the common issues they have and provide the solution. they didn't use any design pattern because i think they don't need design pattern on their project.,-1.0,-1.0,-1,41
"because this is the issues fix project, i didn't see any variables, methods, and class names are not reasonable or suggestive of the functionality.",-1.0,-1.0,-1,25
"the code is well written. i didn't find the further bad names, long or complicated functions, bad code style, dry problems. probably need some comments.",-1.0,-1.0,-1,26
"the write up is very clear to understand what the project does. it describes the expertiza first and then talked about the project, give the guideline, and analyze the&nbsp;typical questions they meet.",-1.0,-1.0,-1,34
"i was not able to verify the system operation from the ui since it is a mozilla project. however, it seems to work as intended and they refactored the relevant code.&nbsp;",-1.0,-1.0,-1,32
it does not seem like they needed to add new test cases for this project. the testing section of their writeup explains this. the existing relevant automated tests all pass.,-1.0,-1.0,-1,30
"there does not seem to be a way to test the servo project from the ui. additionally, their project does not seem to change anything the end user would notice; it just changes the type of the bluetoothadapter for ease of development later on.",-1.0,-1.0,-1,44
i believe the team has outlined the problems and proposed solutions from a high level overview. illustrations were used to clearly identify problems and a bulleted&nbsp;type list used to propose solutions.,-1.0,-1.0,-1,33
"n/a. it was my understanding for the development documentation, that this was to be from a higher view and no coding would need to be implemented at this point.",-1.0,-1.0,-1,30
"i believe the team did a great job out laying out the process they are going to use to achieve their goal. there were illustrations, uml, that clearly laid out what it is they are going to change/update as well a technique for doing so.",-1.0,-1.0,-1,46
"the design appears to be sound and it follows appropriate principles and patterns. the document structure is pretty impressive i.e. layout of problem statement, changes to be made, test plan.",-1.0,-1.0,-1,31
the explanation provided by the team for each of the contents is very clear. the authors left a note for reviewers to clarify on a few things. the team did not complicate the explanation with too much data.&nbsp;,-1.0,-1.0,-1,39
"the team included code, examples as well as the status of the project in the implementation section. they have given a detailed description of the implementation.",-1.0,-1.0,-1,26
"the design document appears to be fine. the team have included most of the points that are necessary. i could identify few changes since the last submission in ""code"" part of the document. the process of solving the issues is depicted clearly with diagrams. there are links to the video showing the implementation as well. from the videos i can see the implementation of the project as well.",-1.0,-1.0,-1,68
the design document satisfies all the required functionalities. the team have included all the sections that are supposed to be included in a design document. i liked how the team also put in a section for peer reviewers. the document followed proper format with well written sections. the problem statement and the implementation are very clear.,-1.0,-1.0,-1,56
"yes, there is a clear explanation of how the authors plan to make the changes. it has been clearly depicted by the flow diagrams in the ""the process of solving the issues"" section.&nbsp;",-1.0,-1.0,-1,34
the document looks good with detailed explanations of all the sections and also the team included many code snippets which show the implementation part of the project.,-1.0,-1.0,-1,27
the explanations are very detailed and very relevant to what the team has planned to implement. all the important sections have been written well with code snippets.,-1.0,-1.0,-1,27
the team has clearly asserted about the functions they want to implement their changes for. the design looks good and i don't think there are any gems that can simplify the process.&nbsp;,-1.0,-1.0,-1,34
the design document included a test plan. they have implemented original rspec test code along with some new tests.&nbsp; the team also implemented a ui test to make sure all the features worked well. the test results are also given under this field. the code snippet of the test case is posted in the document as well.,-1.0,-1.0,-1,58
the explanation given by the team is quite simple. the proposed code changes made it clear how the team is planning to approach the problem.,-1.0,-1.0,-1,25
the proposed code changes included two methods in which the changes are to be done. the new design proposed looks simple and efficient. the comments in the code made it easier to understand.,-1.0,-1.0,-1,33
"the design doc included most of the functionalities, the problem solution is described as current scenario and the expected solution field describes the approach to the problem. the team had also included design diagram like usecase and data flow diagram.",-1.0,-1.0,-1,40
"yes, the class diagram clearly mentions all the things that the student will be able to do after the implementation such as choosing other language and able to see the expertiza details in that selected language which is the whole scope of this project.",-1.0,-1.0,-1,44
"the team has mentioned their strategy about how they are going to test. in writing it looks good as they have mentioned all the possible files that going to be affected, new code that will be added and also the ui in their tests.",-1.0,-1.0,-1,44
there seem to be no new methods being added for this project. though it is like adding extra work from before it will not increase the response time of the system. after rubric update the application work as expected and was working previously.,-1.0,-1.0,-1,43
"yes, they have&nbsp;explained in detail the work that they proposed and how would the implement it as they are working on it since the project so, the build should pass and the explanation is given in detail.",-1.0,-1.0,-1,39
"yes, the class diagram does depict clearly the object flow during the call of the class and it is clearly explained and goes hand in hand with the planned work of the team.",-1.0,-1.0,-1,33
"yes, the document is organized and clear to the point as in what they are supposed to do and how they are implementing it. the design document is sound and it follows appropriate principles and patterns.",-1.0,-1.0,-1,36
"yes, they have explained what changes they plan to make to the existing system. they have what files have to be changed with respect to project definition.",-1.0,-1.0,-1,27
"yes, it is good to look at and understand what the team is assigned and their approach to accomplishing the task. they have updated the document by adding a new view and some other sections of the document.",-1.0,-1.0,-1,38
"yes, the design incorporates all the functionality required. it has a good structure right from explaining&nbsp;what is the purpose of the project, previous implementation, task to be accomplished, design, test plan.",-1.0,-1.0,-1,33
the design appears to sound. for now i could not see any if any of the code/design would cause smells of any other system issues.&nbsp;,-1.0,-1.0,-1,27
"yes, the changes to the system have been explained well by the author and diagrams make it easy for us to understand the system now.",-1.0,-1.0,-1,25
"yes, the diagrams are present and now make it more clear to understand.&nbsp; team has considered the past review about the diagrams missing and added them now.&nbsp; good job with the samples and use case diagram.&nbsp;",-1.0,-1.0,-1,39
the data flow diagram and the use case diagram helps in understanding the details of the project and are not redundant and follows all the conventions.,-1.0,-1.0,-1,26
"&nbsp;the test plan is good and the manual testing is a great way to make sure the viewers have a breeze of time understanding the entire project. good job, team! ",-1.0,-1.0,-1,31
"the test plan is amazing. i learned something new, related to capybara tests. the team is yet to come up with the exact test cases they will implement, but i am sure that will be a cakewalk once they code it up.",-1.0,-1.0,-1,42
good work: the design appears to be as simple as possible. it straight forward and properly presented&nbsp;by the team. good work done by the team over the implementation of the feature.,-1.0,-1.0,-1,33
"suggestion: design looks good. but the team has already implemented the functionality. i couldn't see any flaws in the current implementation, but in general, the team could wait for the feedback over the implementation. so in any flaw or&nbsp;better approach comes along, team could just change their strategy.",-1.0,-1.0,-1,51
great job: the document is great and properly structured. screenshots of test cases and code make it easy to understand what the team is trying to accomplish. the team has done really great work in creating this document.&nbsp;,-1.0,-1.0,-1,39
good work: the test plan is thorough and robust. the team has also mentioned the affected files and also have attached the screenshots of the affected code.,-1.0,-1.0,-1,27
"good work: team has adequately used the diagrams, screenshots and flows to represent the existing&nbsp;and proposed&nbsp;functionality.&nbsp;screenshots of test cases and code make it easy to understand what the team is trying to accomplish. the team has done really great work in creating this document.&nbsp;&nbsp;",-1.0,-1.0,-1,52
"good work: the document structure&nbsp;and flow are nice. the document correctly describes the project needs, purpose and the approach decided by the team. the proposed&nbsp;changes are in sync with the ruby and rails coding guidelines.",-1.0,-1.0,-1,39
good work: the design looks correct and the approach is satisfiable. i think the team has done good brainstorming to come up to a solution. the solution looks solid and may solve the problem.,-1.0,-1.0,-1,34
good work: team has adequately commented regarding the upcoming changes. it seems like the team has done thorough research about the feature and is confident about the new implementation. all the best...!!!,-1.0,-1.0,-1,32
good work: the diagrams and flows provided by the team help the reader to understand the functionality of the system and also helps to get some understanding of to be implemented the functionality.,-1.0,-1.0,-1,33
"yes there is a test plan but as they have mentioned that the project does not have a direct output, they emphasize more on the build",-1.0,-1.0,-1,26
the design document is very simple and explains every change very well. the use-case diagram also provides a good way to understand the problem.,-1.0,-1.0,-1,25
"yes, the design appears to be simple and easy to understand. i really liked the model-view-controller explanation&nbsp;as it clearly mentions the functionality and task of each component. &nbsp;",-1.0,-1.0,-1,32
"yes, the team has utilized the visualization properly. the data flow diagram clearly explains the flow of data across various components of mvc. the screen mockups clearly&nbsp;show how the views would appear once the changes are complete.&nbsp;",-1.0,-1.0,-1,40
"yes, the design incorporated all the required functionality. i really liked the way the team divided the entire functionality into two phases (identification of edit and notification.). each phase explains ""what"" and ""how"" code changes would be done to implement the required functionality. &nbsp;",-1.0,-1.0,-1,44
"yes, the team have included a testing plan in their writeup. also, they have mentioned the spec file that would be used to add new test cases and ""why"" and ""what"" test cases would be added. the test cases look meaningful&nbsp;to me.",-1.0,-1.0,-1,44
they explained what the want to get done and what the previous group did. they explained what was wrong with that teams work and their plan to fix it.,-1.0,-1.0,-1,29
it does seem that this is most simple way to achieve better code. they are cleaning up the code while trying to maintain functionality. it was all easily presented in the wiki.,-1.0,-1.0,-1,32
they know what will change when they update the code and they have an idea of what tests they will need to add to keep coverage.,-1.0,-1.0,-1,26
the changes that are proposed is very clear. they have given visual mock-up which cleared many of my doubts. also explained why this is needed. content wise it is a sound document. the is sufficient information as to what changes are to be carried out. along with the previously implemented changes.,-1.0,-1.0,-1,52
"yes, the design doc incorporates all the functionality needed. they have mentioned about the existing views present in the expertiza and how they propose to do it in their project. they have also presented the visualization of the functionality.&nbsp; the language used is pretty clear.",-1.0,-1.0,-1,46
they have provided a well-mentioned design strategy in the report which is pretty clear to understand. their plan seems correct and will not lead to any smelly code according to me.&nbsp; they have also proposed where they plan to make changes like some places it is tbd. their new design does not seem to be complicated.,-1.0,-1.0,-1,58
the design documentation consists of serval&nbsp;visual aids. they have added screenshots wherever necessary to make things easily understandable. the team has attached an er diagram which is a good way to demonstrate the linking between databases. &nbsp;,-1.0,-1.0,-1,39
"yes, the design doc does have all the functionality needed. they have identified the tasks needed before starting the implementation. they have mentioned about previous work and what were their flaws. how they plan to overcome. there is a link of previous documentation with the pull request and demo. overall great job.",-1.0,-1.0,-1,52
the team has&nbsp;done a solid job in defining the documentation. according to me the report seems complete and does not need any more changes. it can be concluded that the team has better knowledge of what they are going to&nbsp;do and how. &nbsp;,-1.0,-1.0,-1,47
"i found that the changes proposed are relevant to the use case. they plan ""&nbsp;integration of rubric statistic visualization for both single assignments and multiple assignments into the assignment grade view"". for this, they provide adequate explanation in the document. the explanations are easy and intuitive to follow.",-1.0,-1.0,-1,49
"according to their design document: i could not find any evidence of the authors proposing to add method(s) to the wrong class. the new design would make the code easier to understand. since the team cannot use any existing gems to add this functionality, making use of third part libraries makes sense here. the team plans to do the following: ""using a client-side rendering library will minimize the number of server interactions as the instructor changes which rubric statistics to display. this minimization of server interaction will maximize the response time of expertiza."" i believe this assertion to be true. i think the design is neat and does not need any improvement. ",-1.0,-1.0,-1,114
the design is as simple as it gets. this is primarily because they have decided to combine both the single assignment ans multiple assignment into a single visualization.,-1.0,-1.0,-1,28
"i think that the design is sound, the integration of rubric statistic visualization for both single assignments and multiple assignments into the assignment grade view is a good decision and is amply supported by good testing methodology and smart visuals.",-1.0,-1.0,-1,40
"yes, i found that the document was complete as it had a very informative introduction section where they detailed the topic that they would be working on and what kind of visualizations the instructors would need to understand the performance of the class. it includes a proposed changes section where they detail what strategies they are going to follow and also manage to include a decent test plan.",-1.0,-1.0,-1,68
"the changes that the authors propose are intuitive and easy to understand. they are trying to ""provide a formula that takes both the peer review score and self-review score into account for calculating the composite score"". their strategy of showing the composite score as a different type of score is a good design choice.",-1.0,-1.0,-1,55
"the team plans to a new formula to combine the self review scores and peer review scores so that the scores can be a fair understanding to the students of their effort. i believe that the document includes all the functionality that is required. also, complementing the design with use case and application flow diagrams, makes it easier for me, as a reader,&nbsp; to understand their design choices. they also manage to include a decent test plan into their document.&nbsp;",-1.0,-1.0,-1,82
"i found the document to be sound and complete. the team has included ample explanations about what they want to achieve with their implementation and through the use of visuals helped to make their point. the project purpose, design and testing plan have all been stated in the document. good job!",-1.0,-1.0,-1,51
"they have explained what they are going to do but more detailed explanation could have been given for how they are going to do it. they have explained the change they are going to make , that is conversion of type from enum to trait.",-1.0,-1.0,-1,44
there are no tests necessary for this project since it is a mozilla project. but they do have given instructions on how to run/test the project.,-1.0,-1.0,-1,27
they have proposed two types of visualizations such as rubric assessment for a single assignment and the other one is rubric assignment of two different assignments. they have also given proper information on the design part using flow charts and have also mentioned the tools they will use for this project.,-1.0,-1.0,-1,51
 ) i couldn't find any error in their approach of implementing this project. ) this new functionality that they have to implement will not make the code smelly ) i could understand their design process and they have given some good explanation for their design process. ) this new design will not increase the response time. ) they have spent some time and put in good effort to complete this design document.,-1.0,-1.0,-1,68
they have designed the project well with all essential information crucial for the project. they have given enough information on the proposed design and its tools and design choices which follow good design principles.&nbsp;,-1.0,-1.0,-1,35
"they have properly given enough information on what the project is about, that is allowing the instructors to visualize on the scores and also compare the rubric with an assignment etc. they have given info on what they should do in this project.",-1.0,-1.0,-1,43
they have properly explained the changes that they are going to make to the system with proper visualizations such as flow charts and screenshots. they have done some good work in properly explaining the changes that are to be made.,-1.0,-1.0,-1,40
they have given proper information on how to implement the project with enough flow charts to depict the project flow and the design choices and the tools they will use. they have also given details for the test plan in their wiki page.,-1.0,-1.0,-1,43
"the design document included a test section which includes in detail about the rspec framework tests, capybara tests and ui tests and i think they have written enough test cases for the ui tests which will be necessary to test the system.",-1.0,-1.0,-1,42
they have used proper flow charts to depict their design flow and they have also included screenshots to depict the proposed grade visualization. so the visualizations makes it a little easy to understand what the project is about.,-1.0,-1.0,-1,38
the authors have clearly stated about the functions they want to implement their changes for. the design looks good and i don't think there are any gems that can simplify the process.&nbsp;,-1.0,-1.0,-1,34
the team has proposed several changes and they seem to be very good. i did not find it difficult to follow or understand these changes as they were explained very well.,-1.0,-1.0,-1,31
the team has definitely stated about the functions they want to perform their changes for. the idea looks good and i don't believe there are any gems that can simplify the process.&nbsp;,-1.0,-1.0,-1,34
the team has included diagrams that are relevant to the problem statement and it helps readers to map on to what the team is trying to convey in the design document.,-1.0,-1.0,-1,31
"after reviewing the changes team has advanced, i felt the team has worked very well on the implementation and they came up with great advances to the design. the document also looks very good with detailed explanations.",-1.0,-1.0,-1,37
found visual aids like diagrams which explain&nbsp;about the design. the team included diagrams like uml in the document which makes it simple for the reader to trail with what is written.,-1.0,-1.0,-1,33
"yes,&nbsp;the design includes all of the functionality required. the functionalities&nbsp;have been completely described in the wiki document. the team has also included diagrams which makes it easy for the reader.&nbsp;",-1.0,-1.0,-1,35
the document looks very complete with detailed explanations of all the sections and also the team included many code snippets which show the implementation part of the project.,-1.0,-1.0,-1,28
the authors have not really mentioned if they are going to add methods but it seems so from the problem description. they have adequate test plans in place to ensure that the code is not smelly.,-1.0,-1.0,-1,36
"i don't see anything in the requirements to assign different rubrics for each round of the reviews. as the project remains the same, the rubrics would also remain the same. but just in case such a requirement comes forth in the future it would be a great feature.",-1.0,-1.0,-1,49
from my pointof view their idea is good enough. they willbe using config file to configure the links and will be making a new view to show conflicts. this will sove the problem referred.,-1.0,-1.0,-1,34
"yes, all the current design , its flaws and their design to rectify this issue. all the functionalities required was mentioned. i didnt find anything missing.",-1.0,-1.0,-1,25
"yes, all the current design , its flaws and their design to rectify this issue. all the functionalities required was mentioned. i didnt find anything missing. &nbsp;",-1.0,-1.0,-1,26
the changes proposed by the author was good from my point of view and it encompassed all the requirements made by the problem statement. the diagrams and screenshots helped a lot.,-1.0,-1.0,-1,31
"yes, all the current design , its flaws and their design to rectify this issue. all the functionalities required was mentioned. i didnt find anything missing. they intend to use delegation pattern to resolve their problem which seemed appropriate to me.",-1.0,-1.0,-1,40
"they did a good job by using all sorts of visual aids to increase the understandability. they successfully used uml, flowchats screenshots etch to elaborate more on their plan of action.",-1.0,-1.0,-1,31
design appears to be simple and the team is trying to address the limitations from the last pull request. design makes complete sense and is easy to understand,-1.0,-1.0,-1,28
"authors have explained the changes required in a best possible. there is lot of additional content for the reader to understand. this helps the reviewer/user to understand the process if the content added is not sufficient.&nbsp; team has also tried to summarize content from ""how the algorithm works, is taken from the ""college admissions and the stability of marriage ( )"" by d. gale and l. s. shapley."" this helps the user to read the summary rather than going through entire paper",-1.0,-1.0,-1,82
the problem statement is neatly broken down into multiple sub-problems to which solutions are elaborately drawn in the design. the explanations are easy to follow and are justified well. the proposed changes do not seem redundant and make sense.&nbsp;,-1.0,-1.0,-1,41
"adding a new column in the topics table seems to be the best way to solve the problem statement. according to the design i don't see how the author may go wrong with the code by adding a method to a wrong class or make it ""smelly"". the response time might increase do to another added filter of rubrics for each topic but i don't think that can be avoided. the design seems to be logical and appropriate for the problem.",-1.0,-1.0,-1,83
the design document is very well written with all the required functionality incorporated. most of the solution deign has been described and drafted out. code has not been written yet so test plan is left for later stage for obvious reasons. otherwise the design justifies the problem statement and is to the mark.,-1.0,-1.0,-1,53
the team has provided an adequate explanation for the changes to be carried out. the team has mentioned the features&nbsp;that were previously implemented along with the new changes carried out. the new changes are also explained with an interactive mock-up of the visualization.&nbsp; enough explanation is provided both&nbsp;visually and content-wise because of which it is very easy to follow the explanation. the team has followed good methods and techniques while proposing the changes implemented.&nbsp;&nbsp;,-1.0,-1.0,-1,83
"the design incorporates complete functionality which is required. the design mentions the changes required, details about the existing work done, the flow of design along with the test plan.&nbsp; the team has also performed mock-up of the visualization and added it to the design documentation. it was really good because it helped me understand the functionality easily. everything was very clear.",-1.0,-1.0,-1,63
"the changes are very clearly described with a specific explanation for every change. the change is described with three sections namely ""file"", ""problem"" and ""solution"".&nbsp; this shows that the team has put a lot of efforts in planning and strategizing everything. this also makes all the explanations easy to follow.",-1.0,-1.0,-1,51
"the ""design strategy"" clearly mentions everything that is required. according to me, the plans that the authors have decided to carry off the implementation looks correct and efficient.&nbsp; some of them have not been mentioned because they can not be carried out before actually coding the functionality. the design mentioned will not make the code smelly.&nbsp; also, the new design suggested by the team does not look&nbsp;complicated&nbsp;for now.&nbsp; &nbsp;",-1.0,-1.0,-1,76
the design does incorporate the functionality required. all the task that can be mentioned before the actual coding has been clearly described in the design document.&nbsp; a proper design strategy&nbsp;is also mentioned which gives a clear idea of the functionality that is to be implemented. there is also a section of the previous work mentioned which contains the link to the pr and&nbsp;the repo.&nbsp; the team has also detected the flaws by the previous team which could be improved.&nbsp;&nbsp;,-1.0,-1.0,-1,87
the first type of visualization allows instructors to examine the rubric statistics for a single assignment. the second type of visualization allows instructors to compare the rubric statistics between two different assignments when the criteria for each assignment is the same. they have clearly explained well as to how they&nbsp;are going to proceed. the design flow is also done well and was&nbsp;helpful for me to&nbsp;understand the plan of work better. the html mockup was also helpful to understand the plan of work.,-1.0,-1.0,-1,88
 ) no the authors don't add methods to wrong class. ) the new design will improve the system and make it easy for the instructors to address the problems that they might face.&nbsp; ) i think the tools that they use will be good for the design problem they are addressing. ) the new design will definitely add more complexity to the system but will improve the layout for expertiza. ) the effort put in will be justified because i feel that integrating rubric statistics with the assignment grade view is a good idea.&nbsp;,-1.0,-1.0,-1,92
they have a design flow diagram and a html mock up set up that makes me understand the whole system better. especially the mock up is done very well and also showed how the final implementation will look like.&nbsp;,-1.0,-1.0,-1,40
the design proposed is very easy to follow and understand . i was able to understand what has to be done. i have mentioned this in detail in the previous review.&nbsp;,-1.0,-1.0,-1,31
"the design document is done very well, they have completed all the functions by the previous review and have added more detail to the visualizations this time. the design flow diagram is also done very well.&nbsp;",-1.0,-1.0,-1,37
yes the design document seems to be complete with all the functionality required. they have detailed the plan of work and how they plan to implement it very well. the test plan has also been done well&nbsp;. they have spoken about how to integrate rubric statistics with the assignment grade view. they have also detailed and explained the design choices and tools to be used.&nbsp;,-1.0,-1.0,-1,67
they have done a very good job.&nbsp;the first type of visualization allows instructors to examine the rubric statistics for a single assignment. the second type of visualization allows instructors to compare the rubric statistics between two different assignments when the criteria for each assignment is the same. they have detailed the steps and methods they are using to achieve the functionality.&nbsp;,-1.0,-1.0,-1,64
"yes, they have a separate test plan. rspec, capybara and ui tests are proposed and will be interesting to see how they go about implementing them for the final project.&nbsp; &nbsp;",-1.0,-1.0,-1,32
these are improvised on for this submission and i found them to have done a very good job. i have mentioned the details in the previous review and they remain the same. they have included more figures of the html mock up this time around.&nbsp;,-1.0,-1.0,-1,46
there is a uml in the wiki describing their design. they also include tools they will use.&nbsp; the visualization of the design workflow is pretty good.,-1.0,-1.0,-1,27
they give a good description of what need to do on their project. and they also include files that need to be changed in the document.,-1.0,-1.0,-1,26
the design appears to cover all of the required functionality.&nbsp; it shows how the new data will be created and how it will be able to be viewed.,-1.0,-1.0,-1,29
"the design doc does have a test plan proposed, the provided test plan has various scenarios covering all the possible scenarios, the brief details of all the scenarios cover all the possible ways to cover the functionalities.&nbsp;",-1.0,-1.0,-1,38
"the proposed design has been excellently written and very to understand, the team has done a very good job in explaining every step of their idea.",-1.0,-1.0,-1,26
the proposed idea for the design sounds very simple and very easily understandable.&nbsp; the tools and design choices part of the doc provides a much better way of understanding the topic.,-1.0,-1.0,-1,32
"i feel the doc is complete, the team has given all the required information for me to understand what they are doing and how are they planning to do it. &nbsp;",-1.0,-1.0,-1,31
"the writeup is very brief and very easy to understand, problem statement has been very clearly stated and easily understandable, thier idea about the proposed process is very clearly understandable.",-1.0,-1.0,-1,30
"everything&nbsp;has been very clearly mentioned, and i felt it would be nice if i could see their idea on what the individual classes should perform in order to implement this.",-1.0,-1.0,-1,32
the presented flow diagram gives a very clear depiction of where the changes have to be done and also about the process of steps how it has to be followed.,-1.0,-1.0,-1,30
they have clearly mentioned the files that would be changed and the design pattern that they would be using. i think that is more than enough in the initial submission round.,-1.0,-1.0,-1,31
very well-explained. one of the best wiki pages i have seen so far with adequate and relevant information and keeping it to the point.,-1.0,-1.0,-1,25
they have explained the project very well starting from what the project tasks are which clearly lets the reviewer know that the team is very well aware of what they would be doing throughout the project duration. they have a clear understanding of what the project is asking for which is clearly seen in the way they have explained the flow.,-1.0,-1.0,-1,61
"yes, they have implement in the document. it seems that the project has been done most of part since the project is related to last project.",-1.0,-1.0,-1,26
the code follows dry principle and they didn't add new method to a wrong class. i don't think the new design will increase the response time.,-1.0,-1.0,-1,28
"yes, the design is as simple as possible. they provided the issues right now and files they need to fix. they also provide the test plan. the structure is great.&nbsp;",-1.0,-1.0,-1,31
the design proposed by the author is pretty good.the explanation about each task and the solution separately is nice.they are making changes in the appropriate classes and have explained it too.,-1.0,-1.0,-1,33
the entity-relationship diagram shown to explain their proposed changes is very nice as it explains their logic in a very simple way. screenshots of the existing functionality along with their proposed changes is explanatory.,-1.0,-1.0,-1,35
the design document has explained all the functionality required for implementing the project.they have explained clearly with the screenshots the existing scenario and what they proposed to do.screenshots and diagrams clearly explain their view point and give big picture of what they proposed to do.,-1.0,-1.0,-1,47
they have explained the changes they are going to do but have not explained where the logic is going to be implement although they have mentioned actor and actions but detail explanation about this is required about where in the code they are going to implement this.,-1.0,-1.0,-1,47
their design to calculate the composite score and make it visible to the students is pretty straightforward and it is as simple as possible which makes it very easy for anyone to understand what they are trying to do.,-1.0,-1.0,-1,39
the application flow together with the use case for both the instructor as well as the student is very informative and makes it crystal clear to understand their design and what their objective is.,-1.0,-1.0,-1,34
the read of the document takes time but only because the team has delved into the changes which might be needed in every file. the explanation is very structured and has a good flow which makes it easy to follow.,-1.0,-1.0,-1,40
"the current design indeed does seem sound. on cursory inspection, the authors seem to be editing the right methods, the changes don't seem to make the code smelly or complex. however, i do not believe the changes would make the response faster, nonetheless the team wasn't tasked with this.&nbsp;",-1.0,-1.0,-1,52
the team has done a wonderful job in understanding and interpreting the work needed. they have mentioned the exact files which might need to be edited. the extent of analysis done at this stage in the topic is commendable.,-1.0,-1.0,-1,39
the team has headed the right direction towards the testing of the changes. the team talks about writing tests for the new algorithm/code they intend to write and perform ui testing.,-1.0,-1.0,-1,32
"the design follows the simple basis ""first-come-first-serve"" and introduces the top circle trading mechanism. they tried to make it as simple as possible",-1.0,-1.0,-1,26
"yes, the authors introduce the mechanism and other details about their design, they also sued the graphs to help the readers to understand their concept easier.",-1.0,-1.0,-1,26
"based on the explanation they gave for what and how are they going to do the design, i think it is simple and easy to understand.",-1.0,-1.0,-1,26
"they clearly mentioned the changes that they are going to do and also gave the file names of where they are going to change what. so, i think they did a good job at that.",-1.0,-1.0,-1,35
they did give a lot of explanation in writeup about how the changes and where the changes are going to be made. i think they did a good job at that.,-1.0,-1.0,-1,31
"from what i could gather in the design doc, it seems that the team has a good understanding of how they will go about refactoring bluetooth support, and the method explained seems as simple as possible.",-1.0,-1.0,-1,36
found a section called pros and cons which i did not find in any other document. it helped me understand the previous work done. appreciate the effort!,-1.0,-1.0,-1,27
the authors have a very good understanding of the project requirements and a clear plan for implementing the changes. they have written detailed explanations about their proposed changes.,-1.0,-1.0,-1,28
the design approach is solid. the team has gone beyond the proposed changes and identified areas where the code can be refactored. they have also used good judgement in designing their views where they mention the need for helper methods and why the views should not do the heavy-lifting.&nbsp;&nbsp;,-1.0,-1.0,-1,52
the team has not only covered all the project requirements but they have identified more special cases like rubrics for each phase of the assignment.,-1.0,-1.0,-1,25
" . the authors didn't plan to add method to a wrong class. . i haven't see any code ""smelly "" so far. . the new design is good, not too complicated. . i can not analysis the new design may increase the response time of the sysyem with a big amount. &nbsp;",-1.0,-1.0,-1,49
"yes, they have described the changes they have made on the system by given the files of where they changed and the new idea of the new project.&nbsp;",-1.0,-1.0,-1,29
"the overall quality of the explanations is very good with words and diagrams. especially the diagrams, they are really helping me to understand the project.&nbsp;",-1.0,-1.0,-1,26
 . no added method to a wong class. . i didn't see any potentially new design make the code smelly. . the new design doesn't look complicated. . the new design may potentially increase the response time.,-1.0,-1.0,-1,35
"they have some major visual aids of uml diagrams and a distribution graph. the diagrams are really helpful with very good quality.&nbsp; . i didn't find any diagrams is unnecessary and do not help the reader understand this project. . the uml diagrams followed the conventions. . most of the diagrams are about high-level design with some details, but i think it provides enough details about their project.",-1.0,-1.0,-1,68
"the design incorporates all of the functionality required. they have a good project explanation, what is the existing views, and what they plan to do, and the test case.",-1.0,-1.0,-1,29
"the authors adequately explained the changes to be made to the system by giving enough information of their task, what should be changed, what should be done, and how they make the changes with the proper graph help.&nbsp;",-1.0,-1.0,-1,39
"they have a good test plan in the design document with rspec framework tests, capybara tests, and ui tests, all the test are well described.",-1.0,-1.0,-1,25
they did a great job of explaining their ideas and giving rough ideas of the code too. i don't think there are existing gems that could simplify them because i don't think the rust language uses gems.,-1.0,-1.0,-1,39
their design is very thorough and i do not anticipate them encountering any issues with it. it looks like they spent a great deal of effort considering their design choices and implementation.,-1.0,-1.0,-1,32
the ui was very intuitive and all the features for each user profile were easy to find. the team kept pushing chnages to the github repo throughout the project period.,-1.0,-1.0,-1,30
"in the initial submission, the app could only perform crud operations on universities. the number of functionalities added are very impressive in such a short period of time.",-1.0,-1.0,-1,28
"yes, they built rspec test structure for this project. they tested the librarian's model and librarian's controller. the test cover the most basic situation.",-1.0,-1.0,-1,26
"yes, the system works as it is supposed to, almost all the features and functionalities are implemented well. there was a problem of the book isbn number being not unique, now, that problem is fixed. for the password creation, there is an character requirement which was not mentioned earlier, but now its is mentioned. &nbsp;",-1.0,-1.0,-1,55
"yes, they kept on submitting changes throughout the project. also&nbsp;yes, this team did commit changes in round . mainly, the project of this group was done before round one, but, they added additional functionalities and fixed a few errors that were there in the first round.",-1.0,-1.0,-1,47
"yes, the system handles the -to-n and n-n relationships properly. the library-book relation is -n, the university-library relation is -n, the&nbsp;university-student relation is -n, the library-librarian relation is -n &nbsp; &nbsp;",-1.0,-1.0,-1,39
the code is clear and readable. one method only handle one task. the naming of models/functions are very clear. overall the code quality is great.,-1.0,-1.0,-1,26
yes. the code is clear and readable. one method only handle one task. the naming of models/functions are clear and easy to figure out. overall the code quality is great,-1.0,-1.0,-1,31
"the code has been concisely and properly written. too many functions are not being done by method and in general, there is less commented code. the code follows good ruby coding practices with only activerecord queries fired on the database.",-1.0,-1.0,-1,40
"the system&nbsp;handles edge cases very well. since the team have developed the -to- and n-to-n relationships very well, the code smoothly works and does not throw an error anywhere. .&nbsp;the book disappears from the student's checked out books page if the admin deletes an issued book. . the user is properly deleted with the book getting unlocked for other users to checkout. . the admin account cannot be deleted. &nbsp;",-1.0,-1.0,-1,74
"yes, -n relation has been maintained for library and books. university and library also have -n relationship maintained. team has used good approach for user to maintain that relation.&nbsp;",-1.0,-1.0,-1,30
"yes, the team does a good job in writing clean and readable code. for example, in the books controller, they have different methods for different functionalities like increase_count, decrease-count, add_to_hold, add_to_cart, etc.",-1.0,-1.0,-1,33
"yes, the team has made a great job with the use of github projects. they have committed regularly to the project. i can see changes after round but before the deadline of round .",-1.0,-1.0,-1,33
the team worked everyday on the project and kept pushing their changes onto git.there is a clear clarity about the work progress and work division among the team members.,-1.0,-1.0,-1,30
"all the -n and n-n relationships are handled properly by the team. we can see that a library can have many books, users can borrow many books, many books can be bookmarked etc. all these can be seen in the migrations as well as models folder.",-1.0,-1.0,-1,47
"yes, the team was very organised and worked consistently on the project pushing code day by day from the moment they started delivering small chunks of functionalities.",-1.0,-1.0,-1,27
the team kept pushing the code into the git&nbsp;at regular intervals in an organised way with a clear motive of what the basic functionality they want to submit for the first review.all the contributors contributed to the project.,-1.0,-1.0,-1,41
yes the team consistently kept pushing for the round keeping in mind the previous suggestions and appropriate division f work among themselves.the commit graphs in the git hub shows their work.we can see the step by step enhancement and maintenance work in parallel.,-1.0,-1.0,-1,45
the code is readable and clean. the naming conventions are as per ruby standards. the functions are unit functions and no long loops have implemented as far as possible.,-1.0,-1.0,-1,29
yes i can locate a many to many relation between student and books i can locate one to many relation between book and library one to many relation between library and librarian &nbsp;,-1.0,-1.0,-1,33
you have followed good coding practice and code structure look good to me. it is easy to find the required files based on directory structure. good work,-1.0,-1.0,-1,27
"the user interface has been beautified with html and css and is very intuitive, showing all the fields correctly in place where it is supposed to be. the home page button is available to easily navigate, also the services available to the student is shown clearly.",-1.0,-1.0,-1,46
code quality appears to be fine.&nbsp; &gt; methods haven't been cluttered with loads of tasks and are specific to the one they are supposed to perform. &gt; naming conventions have been taken care of and the code readability is good. &gt; methods are usually short and properly commented.,-1.0,-1.0,-1,50
yes. this team continued submitting their changes through out the project and specially after the nd round. i see over commits which shows the amount of work done!,-1.0,-1.0,-1,28
-the team did push the changes on git as and when required but i couldn't see much changes pushed after the first review mainly because most of the functionalities were working even during the previous review. &nbsp;,-1.0,-1.0,-1,38
the team has done a&nbsp;good&nbsp;job at testing&nbsp;the library model. they have also done some testing for the corresponding controller.,-1.0,-1.0,-1,25
the code has been written following standard coding guidelines. names are not ambiguous or misleading. functions do the specific tasks which they are assigned to do. the ruby-istic approach is followed in coding. the code is perfectly human-readable.,-1.0,-1.0,-1,40
yes it looks like most of the practices have been followed properly. models and controllers have been designed using many features specific to this environment.,-1.0,-1.0,-1,25
"yes the systems works properly. in round , addition of books was not possible and various other book related functionalities were available only for the pre seeded data but now all the functionalities regarding books work really well.",-1.0,-1.0,-1,37
the changes were done at regular interval since the inception of the project. the commits started off slowly during the first week and then subsequently increasing in the following. the commit frequency decreased in the week after review indicative that they worked on the reviews and not on implementing a lot of new features.,-1.0,-1.0,-1,54
the code is written in a clean way and modular fashion where each&nbsp;method handles a specific task. it also follows ruby-style naming conventions &nbsp;,-1.0,-1.0,-1,27
ui has been neatly designed and has a good look. all method functions listed on the left-hand side helps in manoeuvring the flow.&nbsp;,-1.0,-1.0,-1,25
"yes, the team continuously kept submitting their changes, especially during round . majority commits have been done during round which could be a sign that they have taken the reviews of round seriously and kept working to implement the feedback received in round .",-1.0,-1.0,-1,42
"a book cannot present in two libraries at any given instance, satisfying -n constraint for book and library. while a student can order a book from different libraries, satisfying n-n relation.",-1.0,-1.0,-1,32
- good management of authenticated pages and i cannot access pages i am not supposed to. - well written&nbsp;code. good use of before_action in controllers.,-1.0,-1.0,-1,25
"in general,&nbsp;the team kept on submitting their changes throughout the project and made a lot of commits which is a very good practice. in round , the team constantly committed changes (over commits).",-1.0,-1.0,-1,34
"in general,&nbsp;the team kept on submitting their changes throughout the project and made a lot of commits which is a very good practice. in round , the team constantly committed changes as well ( commits).",-1.0,-1.0,-1,35
"it looks like at least one model and controller have tests, though i'm not familiar enough with rails to know how much is generated.",-1.0,-1.0,-1,25
"according to the code breakdown, only % of the project is written in ruby. everything else seems to follow good coding practices. the code follows mvc and a restful interface.",-1.0,-1.0,-1,29
"yes, there have been a lot of commits performed and the team has committed throughout. and also they have commited and corrected a few mistakes in round which were there in round .",-1.0,-1.0,-1,32
"yes, they kept commiting in oct , , and , almost throughout the round period, mainly focusing on updates of book checkout limit, search functionality, book histores functionality, and modifications to book models and test cases, and adding email funcionality and social login functionality, etc.",-1.0,-1.0,-1,42
"the interface is much greater than many other groups. for example, they have all bolded title followed by a horizontal separation line, which makes the title very clear and easy to notice. besides, in the home page, the three selections are placed center. all are reflecting that they paid great effort to optimize the interface, and did a great job. actually, i think this is not an easy job, at least for new learners of ruby on rails like me, to edit the page format and even use some characters like bold or center or using different color, i have to read a lot of documents and make many attempts. so this interface is really a great job.",-1.0,-1.0,-1,118
the semantics and names format in the models and controllers files are accordance to the standardization. i even learned a lot from their views files on how to optimize the interface.,-1.0,-1.0,-1,31
"the team has made changes in multiple files where they need not create a new method, hence no comments there. the wiki pretty much explains what they have done and how they have done it.",-1.0,-1.0,-1,35
" . all the functions are adequate . no, the length of methods are fine. . adequate information provided on wiki page . the code follows the ruby guidelines. . all code looks good",-1.0,-1.0,-1,28
"the variables used in all files like&nbsp;app/assets/javascripts/tree_display.jsx,&nbsp;app/controllers/tree_display_controller.rb,&nbsp;app/models/questionnaire_node.rb,&nbsp;app/views/tree_display/list.html.erb&nbsp;are good. the code clearly depicts what it is doing.&nbsp; i didn't find anything where names doesn't suggest the functionality.&nbsp;",-1.0,-1.0,-1,55
"yes the feature works as intended. when i was change from courses to assignments and click on manage content again, the page landed back in assignments.",-1.0,-1.0,-1,26
"writeup seems good. the team has taken great time to explain the issues, functionality, process, test-plan and code snippet. they missed the test plan on st round but have included it in second round.",-1.0,-1.0,-1,35
"yes, the write up seems pretty clear. i was able to login and check the functionality with help of wiki page. the flow chart help me understand what should i do.",-1.0,-1.0,-1,31
"yes, the write up seems pretty clear. i was able to login and check the functionality with help of wiki page. the ui testing&nbsp;part helped me understand what should i do.",-1.0,-1.0,-1,33
the variables used in file assignments_controller.rb&nbsp;are good. the code clearly depicts what it is doing.&nbsp; i didn't find anything where names doesn't suggest the functionality.&nbsp; the method create is also self explanatory,-1.0,-1.0,-1,39
i think that this code is ready to be deployed onto the production server as there were small refactoring changes made to the quiz_questionnaires_controller.rb which were tested against the pre-written tests. i do not think that the project should be redone from scratch. i strongly think that this project is a good starting place for a future team to pick up from.,-1.0,-1.0,-1,64
"the travis ci build passed successfully and cleared all the checks after the latest commit, which was expected as the latest and the only commit made after the initial review only involved addition of comments to file. i could not find any conflict with the base branch that needed resolving. &nbsp;",-1.0,-1.0,-1,51
"the writeup is very well written and provides a good introduction and explanation to the controller, the issues and their solutions. the code snippets help in following the written part even more. the testing section also gives a good insight into the testing of the quiz_questionnaires_controller_spec.rb with rspec and includes link to the youtube video and a screenshot of the successful travis ci build.",-1.0,-1.0,-1,65
"the new code was well written and nicely refactored without actually changing the existing logic. the code did not have any bad names, long functions or redundant code. there were no dry problems as well. the code followed the ruby style conventions and was very readable and easy to follow. the addition of comments to the refactored code in the nd round helped in understanding the changes made by the team and gave an insight into their thought process.",-1.0,-1.0,-1,79
"yes, i thinks it is ready to be merged as they have fixed previous bugs and the code is easy to follow for future students.",-1.0,-1.0,-1,25
"yes they eased out the ""purpose and scope"" section of write up which was previously confusing as been pointed out in my previous review and they added some background as to what is score report. so overall it is now easy to follow.",-1.0,-1.0,-1,43
"no, the functions are not too long, the code does not need to be extracted into seperate methods. the comments are descriptive enough. the code follows the ruby style guide and is dry.",-1.0,-1.0,-1,33
"yes, this code is ready to be deployed onto the production server, the changes are good enough, the refactoring is done correctly and the project works pretty well. this is a good starting place for a future team to pick up.",-1.0,-1.0,-1,41
"yes, the authors have converted all the cases discussed in test plan into automated tests. i don't find any tests that failed or are missing.",-1.0,-1.0,-1,26
"the writeup is pretty good, there is no lack of explanation, no lack of functionality. i could understand the writeup very easily as well as the functioning. the functioning and the working of the project is explained precisely and concisely.",-1.0,-1.0,-1,40
( ) the length of functions are good. ( ) no need to be extracted. ( ) yes. more comments will be helpful. ( ) the code does follow the ruby style guide ( ) the code is dry and the code quality is good.,-1.0,-1.0,-1,35
"i think the writeup is great. problems in this project are well defined and clarified. also, for each issue the solution is provided to explain the plan or idea how the team will fix the issue which is helpful for reviewers. the code change shows in which file and how the code is modified, which is very clear.",-1.0,-1.0,-1,58
"i think the code quality is good. the code style is good. no problem such as bad names, bad code style or dry problems was found.",-1.0,-1.0,-1,26
yes the writeup is clearly explained the functionality the work is related to. it explained in details what the issues are and what is done to fix issues.,-1.0,-1.0,-1,28
"yes, the operation work as intended. also the wiki page has showed the step-by-step instruction how to test from ui which is very clear.",-1.0,-1.0,-1,26
the writeup explains explains that the expertiza currently doesn't have checks related to the number of reviews a student can be assigned. it does a good job of showing what files were modified and what changes were made in them. they also describe why each change was made.&nbsp;,-1.0,-1.0,-1,50
the write up does a good job of stating the problem statement and background. it walks through the team's planned solution as well. the manual testing section made it much easier to test the ui.&nbsp;,-1.0,-1.0,-1,37
"( ) no function is too long. ( ) no method needs to be split into two methods. ( ) comments are enough in this scenario. ( ) the code follows ruby style guide, it's clean and easy to understand. ( ) all the codes are&nbsp;dry. &nbsp;",-1.0,-1.0,-1,40
"because they didn't&nbsp;change the layout of the view, they converted the view file from haml file to erb file. so they only did ui test for this part.",-1.0,-1.0,-1,31
the writeup is well done. it explained the work very well and it is very easy for me to understand what they have changed in this issue.,-1.0,-1.0,-1,27
"yes, the team has added some test cases and the code coverage has increased by %. this means that the tests are&nbsp;covering&nbsp;the new code as well which is a good sign for the team.",-1.0,-1.0,-1,37
"the writeup is excellent. the authors have mentioned everything.&nbsp;the actual issue that they are trying to solve,&nbsp;the solution that they implemented and the related code snippet. this really helps anyone to clearly understand what their project is about and what&nbsp;are their&nbsp;contributions to the codebase.",-1.0,-1.0,-1,52
the&nbsp;features work as intended. i tried to upload a video(.mp ) but&nbsp;i couldn't because&nbsp;of the file type validation done by the team. nice work.,-1.0,-1.0,-1,31
"the writeup by the authors is very good. they have&nbsp;clearly specified what is the background issue, how they have approached the problem in high-level terms and then added code snippets and screenshots to show what&nbsp;changes they have done.&nbsp;anyone can easily understand what the project is and what issue is the team trying to solve and how.",-1.0,-1.0,-1,63
"according to their&nbsp;servo project page, it seems their steps don't require&nbsp;external tests to be added from their side. the&nbsp;servo team has predefined test cases&nbsp;to check whether new code works or not. since their tests pass, their code&nbsp;should&nbsp;have the correct behaviour.",-1.0,-1.0,-1,53
"yes write up very well written, they explained the problem, mentioned the design, how they solved it, step by step documentation, testing screenshots. they have explained it really well. good job to team.&nbsp;",-1.0,-1.0,-1,34
"yes, in test plan session team has clearly defined the steps that reviewer can take to test the issue they fixed. i have done the manual testing on ui and they have resolved the navigation issue. even in review also this team has done a good job, the only thing was of test plan which is also resolved now.&nbsp;",-1.0,-1.0,-1,60
"team has not added the new test cases as they are just refactoring the code, but they did run the rspec file and made all the test cases pass. and after my manual testing also i didnt find any issues.",-1.0,-1.0,-1,40
i did test to best of my knowledge and the way i did in review and i donot see any issues. it would be better if in wiki page they can give better detailing of how to test thoroughly.,-1.0,-1.0,-1,39
yes team has commented the test cases and give good description about what they are going to do and also name explains that too.&nbsp;,-1.0,-1.0,-1,25
this project was to write test cases. coverage has increased to % from %.&nbsp; this is a really good improvement made by team. team has considered it from very beginning how the test coverage can be improved and they ave achieved it,-1.0,-1.0,-1,41
yes they have increased coverage to % which team has considered as target from way beginning in test plan also. the have given good description to test cases and they are self explaining&nbsp;,-1.0,-1.0,-1,33
i pulled their code and tested it manually and test cases are working perfectly fine and team has done very good coverage of test cases.&nbsp;,-1.0,-1.0,-1,26
this project is mainly related to writing the test cases. they have covered good number and ways of scenarios to be tested. i do not have any critics.,-1.0,-1.0,-1,28
"the project was to write the test cases and team has done good job. i have looked into the test cases, they have tried to cover many scenarios in the testing like&nbsp; different stages of assignment, review deadlines, project deadlines.&nbsp;",-1.0,-1.0,-1,42
"since the project was focussed on refactoring, they have used meaningful names for the methods and variables. also, it is neatly mentioned on the wiki page.",-1.0,-1.0,-1,26
"the writeup is written well. they have covered all the required components and explained in easy to understand language. also the code snippets which was inserted/modified to fix the bugs is mentioned. also, they have included the flow diagram to explain the work flow.",-1.0,-1.0,-1,45
the wiki page covers all the points. it tells about the problems and identifies the issue. they explain which files have been modified and this is supplemented by a youtube video which helps graphically understand the before and after scenario.,-1.0,-1.0,-1,40
"most of the code is written in html. the variable names in the html files are fairly relevant. for example info, warning, etc. most of it is html code, so not all of the ruby principles need to be checked. no new ruby methods have been added &nbsp;",-1.0,-1.0,-1,48
"yes, the code added/deleted follows most of the above ruby principles. for example, huge blocks of code have been modularized and distributed in different methods",-1.0,-1.0,-1,26
no new tests were required to be written for this project. they executed the same rspec file and have checked whether the application is working.&nbsp;,-1.0,-1.0,-1,26
the writeup is well written. it shows a comparison of before and after of the code which is refactored.&nbsp; the flowchart and images help us verify the approach used to refactor by the team.,-1.0,-1.0,-1,35
there are changes in the names of the variables but still few names aren't good. comments have&nbsp;been updated which wasn't there in the version .&nbsp;,-1.0,-1.0,-1,29
the write up is very thorough and complete test plan is mentioned code snippets and changes in the ui were mentioned and proper screenshots were shown.,-1.0,-1.0,-1,26
refactoring is done perfectly. the code adheres to ruby standards and comments were added adequately. name of html class is also well defining of its functionalities.,-1.0,-1.0,-1,26
the code is good enough for deployment because it adheres to the ruby principles and passes most test cases and it is just for refactoring.,-1.0,-1.0,-1,25
 . copy without topics:&nbsp;i didn't&nbsp;see 'topics' tab near general tab. . copy with topics:&nbsp;i&nbsp;saw 'topics' tab near general tab. topics had been copied and students weren't. &nbsp; . copy with topics and students:&nbsp;both were copied under 'topics' tab.,-1.0,-1.0,-1,47
the code passes all travis build test and there are no conflicts with the base branch. lots of commits were done to pass the build test.&nbsp;may be could have been&nbsp;achieved&nbsp;in less no of commits.,-1.0,-1.0,-1,40
the task seemed to be complicated but apparently a simple&nbsp;if statement&nbsp;resolved the issue. the identification of the root cause of the problem is praiseworthy.,-1.0,-1.0,-1,28
"the writeup is amazing. it clearly explains the need of improvement, the issues and the respective solutions. the writeup provides screenshots which makes the flow and their work easy to understand",-1.0,-1.0,-1,31
"the writeup is really very good. they seem to improve after first&nbsp; round. they have explained their project, work and implementation in a good manner",-1.0,-1.0,-1,26
"they have made changes mainly in the .html file. hence all the components that they have added like the warnings, the tabular format and the supporting css functions, all seem necessary. no function is too long and the code follows standard html style.",-1.0,-1.0,-1,43
"they have modified only the ui of the application. they have made changes in the .haml and .css files and hence their test plan includes a sequence of steps to test the ui. i followed those, they are pretty clear, and the ui seems to be working very fine.",-1.0,-1.0,-1,49
"yes, the score report and the review report have been combined to give the same basic ui to both these functionalities. because of its consistency, they chose the student ui to be the base template. they write up is really detailed and the screenshots make it easier to understand the before and after scenarios.",-1.0,-1.0,-1,54
"all the variable names like scores_round_, max_score_round are intuitive and short. i cannot see any change that uses wrong naming conventions. in fact, they have followed the standard html code construct everywhere.",-1.0,-1.0,-1,32
"even during the first round, i had mentioned, their naming convention and coding style are good. there seems to be no violations of standard ruby coding constructs.",-1.0,-1.0,-1,27
"yes, the write-up was the first thing that i read and i could immediately identify the current scenario and the expected scenario. screenshots made it easier to understand what they did. the write up was neatly written and in detail.",-1.0,-1.0,-1,41
yes. it explains the purpose of this project very well. it also shows how they approach this problem with code snippets making it very easy to follow.,-1.0,-1.0,-1,27
yes. the writeup clearly lists the methods they intended to test and in the .rspec file each example is descriptive of what it's testing. it's easy to understand why each example exists.,-1.0,-1.0,-1,34
"yes. it is about increasing the test coverage of student_task.rb, and the writeup lists all the methods they wanted to test. they did it by inspecting the coverage report and adding test examples to increase coverage",-1.0,-1.0,-1,37
"they have&nbsp;converted all the cases discussed in&nbsp;test plan&nbsp;into automated tests. however, there is some mistake in their pull request.",-1.0,-1.0,-1,25
"in the second round, they add more instruction about test coverage in their wiki page, which&nbsp;makes the writeup more complete and clear. &nbsp;",-1.0,-1.0,-1,25
"the architecture of their wiki page is clear and easy-reading. in the first round, i recommended&nbsp;more instruction of design pattern, and they did make corresponding improvements.",-1.0,-1.0,-1,29
 ) i think the code is ready to be deployed since the function works and code pass all checks ) it is good for another group to pick up since they write it really good and writeup is comprehensive ) there have been enough comment for the code so it should not be hard to follow,-1.0,-1.0,-1,53
 ) there is absolute no bad names for variables and methods in this round ) the method are all in healthy length and easy to catch up ) essential comments have been provided with the code ) the code is dry enough,-1.0,-1.0,-1,38
travis ci and codeclimate checks have passed: &nbsp; &nbsp; all checks have passed successful check &nbsp; continuous-integration/travis-ci/pr &mdash; the travis ci build passed details this branch has no conflicts with the base branch only those with write access to this repository can merge pull requests. &nbsp; &nbsp;,-1.0,-1.0,-1,51
yes the team has added the test cases like below: &nbsp; &nbsp; &nbsp; &nbsp; allow(reviewresponsemap).to receive(:reviewer_id).with( ).and_return( ) allow(assignment).to receive(:num_reviews_allowed).and_return( ) params = {,-1.0,-1.0,-1,28
the write up clearly explains what is code expected to do and what is the description. the design principles and patterns are followed very well.,-1.0,-1.0,-1,25
"&nbsp; &nbsp; &nbsp; if @review_mappings.size &gt;= assignment.num_reviews_allowed &nbsp; &nbsp; &nbsp; &nbsp; flash[:notice] = ""you cannot do more than "" + assignment.num_reviews_allowed.to_s + "" reviews based on assignment policy"" the variable names follows the standard.",-1.0,-1.0,-1,34
the functionality works as expected. the&nbsp;reviews done by any student is&nbsp;now getting&nbsp;checked in the back-end. outstanding reviews are getting checked.,-1.0,-1.0,-1,27
"&gt; the writeup is very well written. &gt; proper descriptions have been added. &gt; screenshots have been added for easier understanding. &gt; also, i had mentioned earlier about adding a screencast which seems to have taken care of.",-1.0,-1.0,-1,38
"&gt; i believe the code has been written properly. &gt; it follows ruby style guidelines. &gt; the variable names, method names etc. are properly declared. &gt; comments are also given. &gt; there wasn't much complaints from the st round , hence i dont see any code updates.",-1.0,-1.0,-1,47
the writeup explains the authors work pretty well. the problem and the solution they designed and the implementation are clearly mentioned and very descriptive along with the screenshots.,-1.0,-1.0,-1,28
"the writeup is pretty good. the design pattern, solution, and implementation along with the test plan is explained very well including the screenshots and changes made in the code as well..&nbsp;",-1.0,-1.0,-1,32
the code is well commented. almost all the methods were commented which explains the functionality of the method. the dry principle is followed. all method names make sense which explains the functionality of the method.&nbsp;,-1.0,-1.0,-1,36
"i think that the newly added code is intuitive as in, it is easy to understand the functionality even though the variable, method or class names would have been unreasonable however this is not the case. so great job guys.",-1.0,-1.0,-1,40
the write up is very well documented highlighting the various changes implemented and its working with the help of screenshots. this would make it easier for a reviewer to visualize most of the changes while simultaneously changing the actual changes implemented.,-1.0,-1.0,-1,41
"there don't seem to be any new commits during the second round. having said that, the team seems to have completed all the requirement by the first round itself. kudos!",-1.0,-1.0,-1,31
"the team modified the existing test cases to incorporate the refactoring changes that they've done. also, the test cases seem to cover all of the changes made by the team. no, the test coverage did not increase.",-1.0,-1.0,-1,38
"the project is very well done, and since it involved refactoring existing code, the possibility of it breaking any functionality is very minimal. thus, the project can be readily deployed onto production server but not without some sanity testing.",-1.0,-1.0,-1,39
"although not a section by itself, the team has given a brief about the modifications done to the existing test cases. the team&nbsp;has also mentioned fixes for some edge cases (the case where the list showed all users).",-1.0,-1.0,-1,40
"since it is a refactoring project, not a lot of new code has been added. however, the team has done a good job of refactoring some method names as mentioned in the wiki.",-1.0,-1.0,-1,33
"as this was a refactoring project, the team did not have to write new test cases. they did modify an existing test case to reflect the change they've made. also, they've moved the test cases for the functionality they separated into a new controller to a new rspec file, which is in accordance with good coding practises.&nbsp;",-1.0,-1.0,-1,60
"the team did not add new test cases. however, they modified the existing specs to incorporate their refactoring changes. no, the test coverage did not increase.",-1.0,-1.0,-1,26
"the team has made the&nbsp;required&nbsp;changes and also modified the existing specs to incorporate the changes. the tests also pass after the changes. so yes, the code can be deployed to production.",-1.0,-1.0,-1,35
"yes, the team has mentioned about the changes they made to the existing rspecs to accommodate their changes. they've also included a video for the same.",-1.0,-1.0,-1,27
"the provided link does not work. also, as it is a refactoring project, the features work as they are supposed to. the team has included a screenshot for the same.",-1.0,-1.0,-1,30
"the team did not have any method to implement. the if condition which they have added, doesn't require comment as it is intuitive by reading.",-1.0,-1.0,-1,26
"yes, a lot of changes have been made during round . almost - commits have been done during round .&nbsp;looks like a lot of efforts have been given.",-1.0,-1.0,-1,27
"yes, the code looks like ready to be deployed when merged. the checks are passing and functionalities are also working properly when tested from front end and rspec.",-1.0,-1.0,-1,28
"i tested by adding a participant to an assignment. then i got the email in the entered email address. so, the functionality seems to be working.",-1.0,-1.0,-1,26
"the test plan is not implemented but the authors have run two commands (""./mach test-tidy"" and ""./mach build -d"") that, as per authors, executed successfully.&nbsp;it means that the code is correct and the changes are passing standard tests and the code is able to get built successfully.",-1.0,-1.0,-1,50
"as discussed above, there are no test plans included. rather some standard tests of mozilla and a command to build servo is run to test if everything is working fine.",-1.0,-1.0,-1,30
"since some method shave been moved&nbsp;to&nbsp;accountrequestcontroller, the team have also updated the test cases. edge cases are not part of this project as this is only a refactoring project.",-1.0,-1.0,-1,33
the writeup very well explains what they did (refactoring) and why they did (to remove coupling). they attempted to remove coupling between&nbsp;account requests and user objects.&nbsp;,-1.0,-1.0,-1,29
the team has paid close attention to coding guidelines while renaming the variable and classes. they have also documented the reason for renaming on github.,-1.0,-1.0,-1,25
"i could not personally find any such instances. since it was a refactoring project, the team has actually followed the steps to reduce redundancy in code.",-1.0,-1.0,-1,26
 the code written by the authors are in pretty concise and since its just adding couple of lines there is no need to extract into seperate methods. the naming conventions are followed which omits the need for writing comments and it follows ruby style conventions as well. the code is well dryed &nbsp;,-1.0,-1.0,-1,53
the variables and methods are according the conventions and the code follows the community standards. all the names are suggestive of the functionality that it performs.,-1.0,-1.0,-1,26
"the writeup is well written. the writeup starts with feature that they are talking about, followed by the problem statement that mentions about the issues they they are trying to resolve and what is their proposed plan and flowchart of expected behaviour. the proposed changes are attested with code snippets that make it easier to comprehend the work that has been done in this direction. along with this, the language is really lucid and easy to comprehend which makes it easier to understand and think about their vision in&nbsp; the project.&nbsp;the good point is that they have also mentioned the details as to why did that issue crop up which is a good&nbsp;documentation&nbsp;methodology.",-1.0,-1.0,-1,120
the code is written keeping in mind all the coding practised and following ruby norms and conventions. no&nbsp;problems were found in the previous round as the code was already dryed and following the norms,-1.0,-1.0,-1,36
" the writeup is well written. the writeup starts with feature that they are talking about, followed by the problem statement that mentions about the issues they they are trying to resolve and what is their proposed plan. the proposed changes are attested with code snippets, screen casts and flow diagrams that make it easier to comprehend the work that has been done in this direction. along with this, the language is really lucid and easy to comprehend which makes it easier to understand and think about their vision in&nbsp; the project. the good part is that they have also mentioned about the reasons behind the error which shows clarity of thought process. ",-1.0,-1.0,-1,113
the system works as it is intended to work. the tests which are mentioned in the documentation is working as expected. the bugs that were already present are&nbsp;resolved .&nbsp;,-1.0,-1.0,-1,31
"the authors of the project have done an excellent job in writing a documentation which is simple and lucid. i can see significant improvement from the documentation that is submitted in the first round . the documentation starts with elaborate description of the problem statement which clearly sets up the goals of the project followed by motivation for the project. it also goes further to explain what is the current implementation and why is it buggy and then proposes a solution to these implementations.&nbsp;to back up with&nbsp;the lines of code that are newly implemented, test cases are written along with the code snippets which makes it easier to grasp the content mentioned .&nbsp; all of these features are a major improvement from the first submission .&nbsp;",-1.0,-1.0,-1,129
the project works as intended when tested from ui. the issues that the project had have all been successfully fixed when tested for the assignment that is mentioned in the documentation.&nbsp; &nbsp;,-1.0,-1.0,-1,33
"the first scenario to&nbsp;render the correct view as directed (fixed stored ""manage content ... "" issue) by going to the manage content and selecting an option that differs from the one stored as manage content - is working as expected. checked multiple times and also checked that the url changes accordingly.&nbsp; the second issue has been tested manually and the page doesn't show editing features for the rubric that doesn't belong to the instructor. cases also checked - changed the url to try and edit a rubric not belonging to the instructor - worked as expected.&nbsp;&nbsp;",-1.0,-1.0,-1,98
the write-up has been written coherently and it is easy to understand their work with the presence of&nbsp;flow charts and code snippets. the authors have improved upon the test plan section also.,-1.0,-1.0,-1,35
code was neatly written and it follows the dry principles of ruby. there are good and descriptive comments in the code to explain their changes and the newly added functionality.&nbsp;&nbsp;,-1.0,-1.0,-1,32
"according to me, the code looks good enough to get merged. once the mozilla team approves their testcase changes, their changes can be merged into the oss project.",-1.0,-1.0,-1,28
the write-up is very well written with github code diffs shown for code snippets which provide for easily readable code. they have also neatly addressed the test plan section and very well explained the setup and steps in their project.&nbsp;,-1.0,-1.0,-1,42
"according to the pr comments and the wiki documentation, we can see that their current code works as expected and their test cases also return true for the iframe tests (expected behaviour). they have also worked upon their code as their per the guidance of mozilla mentor to write the best version of the code.",-1.0,-1.0,-1,55
"everything looks good. they followed the ruby style guide with proper indentation, which makes it easier to read. the code is dry. functions are small and tidy.&nbsp;",-1.0,-1.0,-1,28
"addition of new test cases led a decrease in code coverage. code coverage was decreased by . %. well overall, the test didn't increase the code coverage.&nbsp;",-1.0,-1.0,-1,27
" ) yes, new code commits are added. ) they added new test cases which is related to view assignment name on top or on content page &nbsp;",-1.0,-1.0,-1,25
"&nbsp;workyes, the write is quite self-explanatory and describes what the pr is trying to achieve. work is majorly related to ui, so no standard design principle can be applied here.",-1.0,-1.0,-1,32
yes the system operation from the ui works as expected. the project does not require any refactor or fixing. the issue is fixed and the features work as intended.,-1.0,-1.0,-1,29
the code was written well and they added meaningful comments so it was easy to follow the code. the code had no bad names or long functions in the previous round as well.,-1.0,-1.0,-1,33
they have provided steps to check the functionality and it works as expected. the project may not require any refactoring. the goal of this project was to&nbsp;support compiling webassembly programs asynchronously and this goal has been achieved.,-1.0,-1.0,-1,39
"i didn't find much problems with the code in the first round as well and looking at modified code, the team has made use of good coding practices.&nbsp;",-1.0,-1.0,-1,30
"yes, they gave a description describing all their changes and other details as well which they believed would help the reviewer do a better job such as the testing details.&nbsp;",-1.0,-1.0,-1,31
the write was well written. they included a class diagram of what they accomplished and even included a screencast of how to access what they did.&nbsp;,-1.0,-1.0,-1,27
- yes as most changes are refactoring related and the tests execute correctly after the changes; it is ready to be deployed - the code must be once deployed on test server and the review_mapping_helper must be tested manually before deploying,-1.0,-1.0,-1,39
- the writeup is properly written and explanation is provided for each change - the required changes are properly mentioned and the reasons for each change are properly stated,-1.0,-1.0,-1,27
the problem statement and test plan are very well documented in the wiki. the authors have explained the steps to generate the issue with screenshots and the files that were modified for the fix.,-1.0,-1.0,-1,34
" . functions are not long. . function names are mostly within the proscribed length limit. .&nbsp;the authors have considered cognitive complexity, cyclomatic complexity of the code and have made right changes.",-1.0,-1.0,-1,30
"yes, it is ready to be deployed. couldn't get idea of last commit which changed readme.md file and then suddenly build succeded. so",-1.0,-1.0,-1,25
"since the team has only done refactoring of existing code, they did not need to write new tests. their refactored code was successfully able to pass all rubocop tests. also all the travis builds have passed successfully. the coverage decreases by . %.",-1.0,-1.0,-1,41
"since the team has only done refactoring of existing code, they did not need to write new tests. their refactored code was successfully able to pass all rubocop tests.",-1.0,-1.0,-1,29
"yes, since the check is made in the controller, even logging the url request and re-sending it again does not result in edge case.",-1.0,-1.0,-1,25
"yes, as&nbsp;majority of the changes are done in the views of the pages, no major changes are made in any functionalities. so, can be deployed.",-1.0,-1.0,-1,27
"yes, they have given exhaustive explanations for all the changes they have made and what led them to make those changes. however, in some cases",-1.0,-1.0,-1,25
"the writeup describes the issues and its fix in a great detail, along with a snapshot of each. this is by far the best writeup i came across.",-1.0,-1.0,-1,28
the writeup covers the issue and its fix in full details.reading the document made the&nbsp;issue and its fix more easy to understand.,-1.0,-1.0,-1,25
authors have not added new tests or modified any of the existing ones. but all of the changes they mode don't cause any of the test case to fail. and also the travis ci build passes on the last commit.,-1.0,-1.0,-1,41
"since the task was to refactor, they have introduced a new controller and have shifted some methods to that controller. they've written a rspec test for that, which passes successfully.",-1.0,-1.0,-1,31
"the writeup is clear and describes all the tasks they did so far. they've also included some snapshots, which helps a better understanding of the changes.",-1.0,-1.0,-1,27
- very well written. they have added links to the actual issue on the expertiza which helped me understand the issue better. - added screenshots which makes it easy to understand.,-1.0,-1.0,-1,29
- well written writeup - i liked that they added links to the main issue on expertiza page as well. - added screenshots and explained their approach well.,-1.0,-1.0,-1,25
- i think the writeup is sufficient. they have added enough information for me to understand what were they doing and what did they achieve. i also liked the fact that they added information about possible fail scenario were they might get issues.,-1.0,-1.0,-1,42
- they&nbsp;didn't add any new functions or files but they have made many changes in the available test cases related to their changes.,-1.0,-1.0,-1,25
- the writeup is much better now. they have added enough information for reviewers to understand. they also explained the reason for not doing things like adding comments etc. - they included screenshots now which is good and a good addition.,-1.0,-1.0,-1,39
"the team did add many new test cases. some existing test cases were also refactored. the code coverage did not increase, it decreased by&nbsp;- . % to . % there are many new added test cases, so it&nbsp;essentially increases the&nbsp;tests covered range of the project. added tests: - redirect to checktopicscopy page&nbsp; - rendering of&nbsp;checktopicscopy page -&nbsp;copies the original assignment to a new one and returns the new assignment_id when copyoption equals copywithtopicteams edited tests: - redirect error message&nbsp;when new assignment is not able to be copied",-1.0,-1.0,-1,91
"yes, the write up explains all the work done by the authors and also, why they did what they did and the way they did it. it explains the problem statement, the solution and the way to test the solution. everything is easy to follow.",-1.0,-1.0,-1,45
"the authors have done a great job on the write up of the project. they have added screenshots everywhere it is necessary. all the required subheadings have been covered in the writeup. they also added a section on ""our recommendation for a separate issue&nbsp;(for instructors only)"", which includes the issue that the team feels should be addressed on priority.&nbsp; they have also added enough information on how to precisely test their added feature which is great. &nbsp;",-1.0,-1.0,-1,80
"the code is well written. variables have been named appropriately. a few more comments could be added, but it's fine. no new code has been added in the second round, so as such there has been no improvement in the code in the second round.",-1.0,-1.0,-1,46
"the write up explains in detail, the functionality of the work done by the team. this being a&nbsp;feature/functionality improvement&nbsp;project, the authors have provided sufficient details of what the problem was there with the code previously and what they have done to improve it. i can clearly understand how &amp; what the project does from reading the writeup.",-1.0,-1.0,-1,62
the ui works as intended. the features work exactly like they are supposed to. i am able to view &amp; test the added feature when attempting to copy assignments. a great job done on adding the feature.,-1.0,-1.0,-1,37
i&nbsp;think that this code is ready to be deployed onto the production server for the oss project i do not have any&nbsp;concerns about the project. the project need not be redone from scratch using a different approach or picked by a different team. as it is a refactoring project &amp; the team has already done all of the work required.,-1.0,-1.0,-1,64
"the write up explains in detail, the functionality of the work done by the team. this being refactoring&nbsp;project, the authors have provided sufficient details of what the problem was with the code previously and what they have done to improve it. i can clearly understand how &amp; what the project does from reading the writeup. write up includes the changes made as well as the files those changes are made in.",-1.0,-1.0,-1,73
the authors have done a great job on the write up of the project. they have added screenshots everywhere it is necessary. all the required subheadings have been covered in the writeup. test plan has been thoroughly covered with all the screenshots. before &amp; after code has also been added with the required explanation and need of the changes done.,-1.0,-1.0,-1,60
"the code is well written. the authors&nbsp;have renamed functions as well as variables to match ruby's standard requirements. they have made corresponding changes in the spec files as well. no new code has been added in the second round, so as such there has been no improvement in the code in the second round.",-1.0,-1.0,-1,57
"the authors have done a great job on the write up of the project. they have added screenshots everywhere it is necessary. all the required subheadings have been covered in the writeup. they also added a section on the current implementation, which includes the functionality as well as its drawbacks &amp; solutions. this is a great addition and very useful for readers. &nbsp;",-1.0,-1.0,-1,63
i think code is good enough to be merged as authors have used better variable names explained all functions properly in comments. and also looks fairly decoupled code which can be easily reused.if these are the qualities you look for production ready code then you should merge this.,-1.0,-1.0,-1,49
"yes from the first round code is fairly improved. as per my criticism from the previous round that they didn't provide comments which they rectified in this round. also, variable name are also good enough.",-1.0,-1.0,-1,36
"yes the code passes travis test,comments are provided where they are needed and code is dry enough to pass for production ready code.so i would recommend.",-1.0,-1.0,-1,28
yes during st round i found that there are not enough comments for the code written but that has been improved. so the code written is of good quality.,-1.0,-1.0,-1,29
yes. it was helpful to see the added code in the write up and the step by step instructions on how to see the added feature.,-1.0,-1.0,-1,26
comments were very precise and to the point in their project. it did not took a lot of time for me to understand their code.,-1.0,-1.0,-1,25
wiki page were excellent to understand the project thoroughly and all the proposed changes. problem statement was mentioned clearly in order to understand the project purpose.,-1.0,-1.0,-1,26
"as they only changed the view and scss files, and they didn't change any methods in controller. so they didn't add comments for methods. but they actually add comments for the new scss style. good.",-1.0,-1.0,-1,37
"( ) their function doesn't need to&nbsp;change the function ( ) their function needs no separate methods; ( ) the comments of scss style seem practical for the code; ( ) yes, all code follows the ruby style guide ( ) no, all code is dry.",-1.0,-1.0,-1,39
"yes, they&nbsp;explain how and why they did the work in wiki. and they&nbsp;used dry&nbsp;principles&nbsp;during their coding process.",-1.0,-1.0,-1,25
"they only test from ui testing. but they explained why they chose these. as they only change the layout of the view, so the automated test may not works or them.",-1.0,-1.0,-1,31
"yes, the new&nbsp;layout&nbsp;of review report looks more beautiful than before. and i need to say again that, they only change the layout of the view so there may not any edge cases.",-1.0,-1.0,-1,36
there are many commits after the st round. i see they were trying to pass the build in travis ci. and they did. great work.,-1.0,-1.0,-1,25
no new variables or methods have been created as it was refactoring but methods have been merged so similarly named variables have been used but those used are proper.,-1.0,-1.0,-1,29
the writeup is very good at explaining the functionalities and the work that has been done. so there is no issue in the write-up.,-1.0,-1.0,-1,25
the code was perfect during the first review and therefore there weren't much changes to be made and looks good. the authors did not need to change anything further.,-1.0,-1.0,-1,30
"the code follows all the good practices and did not have any problems during the first review and they&nbsp;haven't made any changes after that, so it is ok.",-1.0,-1.0,-1,31
"the naming convention seems to be alright, as whatever has been refactored has been done with existing code, thus making the author not liable for names being used.&nbsp;",-1.0,-1.0,-1,29
the write up has been significantly upgraded and looks much better now. they have added video link and screenshots which improve the quality of the wiki.,-1.0,-1.0,-1,26
"i thought that the writeup contained enough detail the last time i looked at it, but it looks like even more details have been added. looks good.",-1.0,-1.0,-1,27
"as mentioned in their wiki page, all their work focused on the implementation, and they have made statements clearly about what they have done and their changes to the codes.",-1.0,-1.0,-1,30
"because their pull request has passed the test and already been merged, eveything works fine. and they have made a contribution to this open-source prototype web browser.",-1.0,-1.0,-1,28
"after i pointed out that there lacks the interior logic behind why they implemented as what they did, they made an update to the wiki page, which now contain the depicted project scope explaining precisely how the program works and what is the logic behind it. thus the documentation now is complete and detailed.",-1.0,-1.0,-1,54
the wiki page only talks about testing details out of which the major portion talks about how to recreate the scenario that they have fixed. it's basically about ui testing.,-1.0,-1.0,-1,31
"yes the authors have added the check for valid input, like the check to sanitise the name of the name of the assignment folder when automatically created.",-1.0,-1.0,-1,27
yes the wiki page include all the details and background for the task. they have clearly explained the desired outcome and have also added video and screenshots of the same.,-1.0,-1.0,-1,30
"no, i have to look at the code how it is working the options = ['--------', nil] is a strange value, have to look at the coed to understand what it does",-1.0,-1.0,-1,30
"i am hesitant to say this covers all scenarios as there could always be some bizarre edge-case i can't think of due to the nature of expertiza, but as far as i can say the tests seem to be exhaustive.",-1.0,-1.0,-1,42
"their writeup is organized and explains their work well. they explains the problem statement, how they do their work, and how they test their code.&nbsp;",-1.0,-1.0,-1,26
the build passes and the system works as intended. and they tested their code. i think this code is ready to be deployed onto the production server.,-1.0,-1.0,-1,27
i tested all features related to their project on the link where they deployed the project. all the features work correctly as in the document.,-1.0,-1.0,-1,25
"they explained they work in detail and well. the writeup includes the problem statement, how they do their work, and their test plan.&nbsp;&nbsp;",-1.0,-1.0,-1,25
"their writeup's structure is clear. they introduced the background of expertiza, what results they should achieve, how and what they do to achieve the goal, and how they test their work. i can understand what the project does by reading their writeup. &nbsp;",-1.0,-1.0,-1,44
"very well out lined test plan! this is what i wanted to see, detailed steps (actions) to be taken by each role. having this listed in words helps implementation in great deal based on my experience, i am glad this team did this.",-1.0,-1.0,-1,43
yes the authors have adequately explained the changes which are to be made to the system. the authors have described each of the issues thoroughly and explained the problem and solution for the issues.,-1.0,-1.0,-1,34
"yes, the design seems to be simple. the search for user, assignment,&nbsp;questionnaire&nbsp;and&nbsp;review&nbsp;seems good as the required search field are taken into consideration.",-1.0,-1.0,-1,30
 . the task doesn't require methods to be added. . no. . no the design doesn't look complicated. the design provided by team is enough. . not applicable . the effort provided by team is enough.,-1.0,-1.0,-1,33
 . everything seems good and the use case diagram did help me understand the project. . the use case diagram follows the convention. . all the diagram provide enough details.,-1.0,-1.0,-1,27
the authors have adequately explained the proposed changes made to the system by including localized information about the issues&nbsp; i.e. the files associated with a particular issue and the exact part of the code in that file that will actually be changed. this helps in giving a view of how the issues will be resolved. &nbsp;,-1.0,-1.0,-1,58
"no, the way team has explained, design looks simple. team has done good explanation of the design. they have made section about plan of work which is really descriptive and make it easy to understand.",-1.0,-1.0,-1,35
"team has given good information about in design document, they have covered all the details required for a design document, only thins is that they have not mentioned about which design principle they will be using and how.",-1.0,-1.0,-1,38
"they have proposed two solutions for the problem and both of them does not look complex, but looking at the solution, solution a looks more simple to me. they have given screenshots of screens also that they are going to change, which makes it easy to understand",-1.0,-1.0,-1,47
"yes design looks good, they have not made any changes in page for round submission. it is same as before but they have covered everything",-1.0,-1.0,-1,25
team has given good number of test cases taht they are going to test the functionality. testing from different perspective is been done. they will be writing test cases and manually testing the functionality also.,-1.0,-1.0,-1,35
"yes, they have explained all the necessary changes to made in the system in the form of diagrams and also mentioned in which part of the code these changes will be reflected.",-1.0,-1.0,-1,32
"yes, the design appears to be very simple and clear as it is well documented and they have clearly expressed the changes in the flow in the form of diagrams.",-1.0,-1.0,-1,30
"yes they have included test plan section. compared to previous submission, they have included well-defined and easy to follow test plans for each of the functionality.",-1.0,-1.0,-1,27
"yes, the authors have adequately explained the changes to be made to the system, and also the use of flowcharts and class diagrams help a lot.",-1.0,-1.0,-1,26
"yes, the design does include a test plan and also there are seperate test plans for each issue. they do really seem to test the functionality.&nbsp;",-1.0,-1.0,-1,27
"the visual diagram is very clear and helpful. there is one diagram with explanation used for 'design pattern', which clearly shows the chain of responsibility in design pattern. the other one is used to explain the work flow which is also clear to others to show the structure of the function. &nbsp;",-1.0,-1.0,-1,52
"since the design pattern is not applicable on this project. according to the diagrams and proposed approach, the design is simple and clear. the team describe the logic clearly through the diagram and the proposed approach.&nbsp;",-1.0,-1.0,-1,37
yes. the team added a 'behavior for instructor/ta diagram' to show how the feature works and the relationship among different parts. the diagram is clear and helpful for people who is not working on this project to understand the function or relationship among different parts quickly. the quality of the diagram is great.,-1.0,-1.0,-1,54
"given that the problem statement is not that complicated, the team has included a flow chart which is more than sufficient to understand the strategy. concise yet good enough.",-1.0,-1.0,-1,29
the design is very simple and has minimal changes. good job team of keeping the design simple and not trying to over engineer the solution.,-1.0,-1.0,-1,25
the authors do a good job of explaining the new functionality that needs to be added (automatic mentor assigning&nbsp;upon team forming and notifications). they did a good job of explaining why this is needed.,-1.0,-1.0,-1,36
"yes, the wiki covers that a mentor should be automatically assigned to a team at a threshold, that the mentor should be emailed when this happens, and that team members should possibly be notified as well.",-1.0,-1.0,-1,36
"as this is a&nbsp;refactoring project, it focuses on simplifying everything. it plans to dry out the code, as well as to manage the javascript used by the project. a new controller must be added as well.",-1.0,-1.0,-1,38
the authors do a great job of explaining why changes are required. they list each feature and what needs to be changed for it. this is under the feedback and improvements section. they state each problem and solution here.,-1.0,-1.0,-1,39
"the test plan seems pretty solid. there is a list of what tests need to be added for the rspec. the functionality seems covered by these tests. the team explains that there are no required ui tests, as mostly an api connection to github is getting updated.",-1.0,-1.0,-1,47
"the proposed solution is sound, in that the team has explained every little step they'll take. it looks&nbsp; like the solution is well-thought and should solve the issue.",-1.0,-1.0,-1,31
the team's explanation of&nbsp;the&nbsp;problem statement is lucid. they have properly defined their approach&nbsp;by mentioning low-level and&nbsp;high-level details and&nbsp;also have a test plan set up.,-1.0,-1.0,-1,37
the team have drawn a&nbsp;very nice&nbsp;flowchart which shows how they are going to approach the problem while specifying details about what data format will they use to pass data and which web service api will be used. it&nbsp;really simplifies the statement and is a perfect balance between low-level and high-level design. ,-1.0,-1.0,-1,59
the design appears to be simple. there are no complex logic blocks which are hard to&nbsp;understand. the team&nbsp;have very nicely explained everything related to the problem statement and it doesn't seem&nbsp;that their design is complex. the flowchart also&nbsp;depicts as there are no cross edges and everything is pretty much linear in their workflow.,-1.0,-1.0,-1,62
"the design appears to be sound. the team have explained the problem statement, the steps to be taken and also&nbsp;what&nbsp;automated tests are required to be written to guarantee the proper working of the system. it is&nbsp;good to see that the team thought about more test cases and have included&nbsp;those in the writeup as well.",-1.0,-1.0,-1,62
the design appears to be sound and i don't see any major issues. the team have explained the problem statement in great detail and i think they have a proper idea of the work to be done. they have also completely figured what which files would they change.,-1.0,-1.0,-1,49
the design doc is well made and includes everything that is required in a design doc. the&nbsp;functionality is well explained with enough details.,-1.0,-1.0,-1,25
the authors have explained the changes to be made in great detail. the explanation has&nbsp;been very nicely written while providing a lot of details about the&nbsp;system and the way it should ideally behave. the team have written the problem statement well and seem to have a great understanding of the way to approach the project.,-1.0,-1.0,-1,59
"the design doc is extremely complete and includes everything. they have also explicitly mentioned a lot of tests along with the context in which they might be required. the statement has been explained well, the diagrams support their approach and testing plan is thorough.",-1.0,-1.0,-1,44
the team&nbsp;have carefully thought out their test plan. they have covered a lot of context&nbsp;of the system and have figured out how the system should act in those scenarios. the tests are very detailed and will really&nbsp;test the functionality of the cake questions.&nbsp;,-1.0,-1.0,-1,50
&nbsp;they have given a good explanation of what is expected from them in this project and what they are going to do to implement it. they have also given the flow diagram. this makes it easy to understand.,-1.0,-1.0,-1,39
"yes, their design looks good. as mentioned in the earlier review, they have used good flow diagrams to clearly explain the changes they are making to their project. &nbsp;",-1.0,-1.0,-1,29
"yes. the document looks comprehensive. they have included screenshots of the system, flow chart for the design strategy and a food testing plan.&nbsp; it is easy to understand and follow the document.",-1.0,-1.0,-1,33
yes. they have included the test plan for the final project. it seems they have done most of the testing part in the oss project step itself. but they have made a separate section for the final project. they have described the match utility commands to test their system.,-1.0,-1.0,-1,49
they have spent enough time on the design document. they added the proper and relevant screenshots. the uml diagram shows that their design is easy to implement.,-1.0,-1.0,-1,27
"yes, they used uml diagrams to describe the design strategy such as use case diagram and the flow chart which explains how their changes are going to solve the issues provided. the use case diagram follows the design style for uml standards.",-1.0,-1.0,-1,42
they have used good screenshots to explain the changes they intend to make. they have also described the problem statement and the appropriate solution at every issue.,-1.0,-1.0,-1,27
"yes, the design is simple and intuitive. they have utilized good flow-chart diagrams to explain how their solution is going to solve the given problem.",-1.0,-1.0,-1,26
"team has specifically mentioned in the document that design patterns are not applicable for this project. as far as i tried to understand the code, changes looks good to me. they have given proper explanation for the changes.&nbsp;",-1.0,-1.0,-1,39
"there's no design for the project, so i don't think that having diagrams would make sense in the document of this project.&nbsp;",-1.0,-1.0,-1,25
there's no design section in the document also team has mentioned about why they don't have one.&nbsp; i think the way changes has been done and explained is enough to understand. minute details are included for everything which is really helpful to understand the changes and the project.&nbsp;,-1.0,-1.0,-1,52
"there are no design principles to be followed in the project, as clearly mentioned in the document.&nbsp; team has given the explanation for why certain changes are made in specific way and that explains enough.&nbsp;",-1.0,-1.0,-1,37
"there are two issues for the project and both are covered in the document. as this project is an extension of the oss project, so the document includes that as well.&nbsp;",-1.0,-1.0,-1,32
"code changes are explained in detail, why certain changes are done in specific files and why that's the best way to do it.&nbsp;",-1.0,-1.0,-1,25
all the necessary details are explained in detail. team has also mentioned why the pull request is still pending and that's because of the test cases but not the implementation and code changes.&nbsp;,-1.0,-1.0,-1,35
"it does include the test plan in detail. also the team has mentioned that there are some issues because of the test cases from servo's end, so the pull request will be raised based on the resolution of blocker.&nbsp;",-1.0,-1.0,-1,41
i don't think that this project/document&nbsp;should have uml or class diagrams. there's a flow diagram in the document which explains process or flow for the changes and that's quite helpful.&nbsp;,-1.0,-1.0,-1,37
"design appear to be sound, as the team has considered two approaches and selected by one by considering the pros and cons of both. new question type is being added by extending the models scored, choice, question.&nbsp;",-1.0,-1.0,-1,38
the team stated the problems to be fixed and also indicated in which file the issue can be at the end of each issue. the motive seems to be pretty clear to fix the issues related to the meta reviews which is the expected outcome.,-1.0,-1.0,-1,45
the authors have very nicely explained all the changes that need to be made and a detailed plan of the changes that are going to make.&nbsp;,-1.0,-1.0,-1,27
the proposed changes have been aptly explained by the team. the team has attached screenshots as to where they will make changes and what type of changes will be made. appropriate explanation is given stating why the said approach and what will the team do if that approach does not work.,-1.0,-1.0,-1,51
the proposed code changes look good. the new design proposed by the team looks simpler and the name of classes where changes are proposed look appropriate.&nbsp;,-1.0,-1.0,-1,27
"the design follows appropriate design patterns and appears to be sound. the team has aptly explained all the sections of the document, emphasizing on the proposed code changes. along with that, the uml diagrams and test plan has also been explained properly.",-1.0,-1.0,-1,42
the design incorporates all the functionalities required as stated in the document. the team has included the issues present in the existing design and the&nbsp; new proposed solution.,-1.0,-1.0,-1,29
"yes, it does. for example, for enabling the teammate to self review, they are proposing a simple change to remove the session id user check, which was fairly simple. they are proposing other solutions as well alongwith, which is good.",-1.0,-1.0,-1,40
"the team has done a good job while creating the documentation. they have explained the approach well, as well as the test plan has been properly justified. the documentation is quite detailed.",-1.0,-1.0,-1,32
"the team has completed the doc pretty well. all the sections are covered. the test plan, proposed code changes and the uml diagrams are aptly explained to justify the given problem definition.",-1.0,-1.0,-1,32
"no, they are adding things like creating a new controller. but it is too avoid complicated code in the current controller which the previous team has modified. i feel all the changes that they have specified make sense.",-1.0,-1.0,-1,38
they have included and explained all the mandatory sections. it is seen that they have given a lot of thought to their test plan. they have carefully jotted down each feature to test.,-1.0,-1.0,-1,33
i see that they have updated their use case diagram from last time (which had similar diagrams.) they have also added an explanation to their use case diagrams. the diagrams seem adequate.,-1.0,-1.0,-1,32
"the design appear to be sound, following appropriate principles and using appropriate patterns. the design document contains problem statement and overview, code changes flow, use case, current process, new process and test plan.",-1.0,-1.0,-1,33
"yes. authors have adequately explained the changes to be made to the system. the design document contains problem statement and overview, code changes flow, use case, current process, new process and test plan.",-1.0,-1.0,-1,33
"their explanation is clear and high quality. i'm shocked that they have accomplished their function, list the code and almost completed the test case. &nbsp;",-1.0,-1.0,-1,26
"( ) they added methods to correct classes. ( ) i don't think&nbsp;the new design may potentially make the code ""smelly"". ( ) the new design is simple enough. ( )i don't think the new design will add load to the system. ( )their design is good enough.",-1.0,-1.0,-1,44
the design is simple enough to highlight it's point. but it's not too simple and i could get the system structure and the relationship of different table. &nbsp;,-1.0,-1.0,-1,30
"yes. authors have adequately explained the changes to be made to the system.&nbsp;the design document contians&nbsp; introduction, problem statement, proposed solution and test plan. &nbsp;",-1.0,-1.0,-1,28
"i think their explanation is clear and easy-reading. it not only contains why or how to accomplish the function, but also includes the files which&nbsp;require modification.",-1.0,-1.0,-1,29
"yes. authors&nbsp;have adequately explained the changes to be made to the system.&nbsp;the design&nbsp;document&nbsp;contains&nbsp;project overview, current implementation, plan of attack, files which require modification (tentative) and test plan.",-1.0,-1.0,-1,37
 ) the functionality required in the document is covered in the design ) they have separate problems and described it more clear than it was in the requirement &nbsp;,-1.0,-1.0,-1,27
 ) it is a refactor project and they have covered every functionality required ) they have referenced previous design of this project and make some improvement based on that &nbsp;,-1.0,-1.0,-1,28
i am not sure if the feature is complex from the inside as from the out it looks fairly simple. but the solution seems complicated,-1.0,-1.0,-1,25
"the write up explains the design&nbsp;of&nbsp;the students could read through some sample reviews, in a very clear format. it's simple and elegant.",-1.0,-1.0,-1,27
"yes, the design is simple and clear to understand. it is explained by the flowcharts. the changes they are proposing are simple, they are simply testing the email functionality in various scenarios.",-1.0,-1.0,-1,32
&gt; yes the design does include the test plan. &gt; the test plan is in great details covering both the regular use cases and the corner cases.,-1.0,-1.0,-1,27
&gt; yes they have added a lot of visualizations which helps in understanding the proposed changes much better. &gt; they have also added representations for relevant tables which is very good.,-1.0,-1.0,-1,31
changes have been as requested in the previous review. the use case diagram provided for the two approaches clearly mentions the changes that will be made to the system.,-1.0,-1.0,-1,29
"yes, mainly while deciding on one of the proposed approaches, they have gone with a far subtler approach of only removing a user session id check as against the other flow of introducing a new self review altogether.&nbsp;",-1.0,-1.0,-1,39
"yes they proposed multiple solutions, shown two approaches and justified one. good job overall. they've extended the cake model from scored question model, which seems right.",-1.0,-1.0,-1,27
"they've pretty much covered everything, the proposed solutions were detailed. they've stated two approaches and justified the choice as well. test plan covers edge cases like self-review check enabled/disabled.",-1.0,-1.0,-1,33
"yes, the team has made use of uml diagrams to make the user understand the flow of the changes that the team will be making.",-1.0,-1.0,-1,25
the design appears to be well defined and looks like good research is done to come to the conclusion of using this approach. the document explaining the way to derive the formula is very interesting and i appreciate the team for the efforts.,-1.0,-1.0,-1,43
"yes, the team has done really good job at making it as simple as possible. it is easier for every one to understand yet describing all the necessary cases that needs to be tested.",-1.0,-1.0,-1,34
the explanations made by the authors are in great detail including mathematical equations as well when appropriate. i think they have done a good job overall.,-1.0,-1.0,-1,26
"the authors have explained the changes in great detail, including the files to be changed as well as what screens will be impacted due to theses changes.",-1.0,-1.0,-1,27
the team has made better use of screenshots and flowcharts compared to the previous round. the design is now way clearer and easy to understand.&nbsp;,-1.0,-1.0,-1,26
the authors have made use of flowcharts to explain the expected output of the functionality. this helps the user in grasping the information without having the need to read through the text. these flowcharts convey accurate information without overloading it with details or even does not give a too high level design.&nbsp;,-1.0,-1.0,-1,53
"the design&nbsp;appear&nbsp;simple. in places where oo concepts are required, the author has done a good attempt to paste the code which would be extended which shows the clarity of thought in designing .&nbsp;",-1.0,-1.0,-1,37
the authors have well explained the proposed set of changes along with how they are planning to implement that as well as what files would be potentially modified.,-1.0,-1.0,-1,28
"the team has maintained the documentation page really well and has explained the setup of the local environment for this project, introduction to rust and servo and the methodological process to make their proposed changes to the dom. their efforts for the final project are clearly stated and the test plan has also been explained.",-1.0,-1.0,-1,55
 the team has explained the project using flowcharts of dom and screenshots of their test plans. all the diagrams are easy to understand and provide the details needed. ,-1.0,-1.0,-1,28
the design is clear and their detailed explanations help others understand what the project does and what its steps are. the changes are easy to follow and looks like the implementation is also simple enough once one understands the logic.,-1.0,-1.0,-1,40
the design document seems well documented and is complete. the team has explained all the steps properly and has even added a flowchart to outline its implementation plan.&nbsp;,-1.0,-1.0,-1,29
the team has worked on the mozilla project for their oss project as well and they have very well documented their efforts and proposed changes.,-1.0,-1.0,-1,25
"they have added plenty of legible flowcharts for the dom, their implementation and many github code diffs. this vastly increases the&nbsp;impact of the design doc.&nbsp;",-1.0,-1.0,-1,28
" the proposed changes look good. the changes right now do not look smelly. though the code to improve upon last sem's code would be worked upon while the project is ongoing and it will be checked later on. the checks look sound enough. no need for new gems, i think. the expectation is that since they are improving on last sem's code, the response time will same or less. the design has been well thought out and seems appropriate enough. ",-1.0,-1.0,-1,82
"the project is simple and concise. the code changes are explained logically and the flowchart does a great job of showing the design. overall, it is simple enough to be easily implemented.",-1.0,-1.0,-1,32
"the design has been well thought out and they address each scenario to develop. they have also specified the design pattern using - delegate pattern, which i think is the correct choice for this project.",-1.0,-1.0,-1,34
"the changes have been adequately explained. the wiki documentation page will undoubtedly be updated as the project progresses. for now, this much seems enough.&nbsp;",-1.0,-1.0,-1,25
"along with tables, the team has also added a user model flowchart to the design document. this really helps others understand what their project does.",-1.0,-1.0,-1,25
 team has made a very easy to understand uml diagram and a db design diagram as well. shows that they have understood their project well and are good at projecting relevant information to others. everything seems to be in order. ,-1.0,-1.0,-1,40
"the design is simple and it seems easy enough to implement. several view changes, creating a new model and editing a controller to add the model changes are clearly stated and it shows clarity with the team.&nbsp;",-1.0,-1.0,-1,38
"the team has used a uml diagram, a db design and even screenshots to explain their project clearly yet succinctly. this helps in easy understanding of the project.",-1.0,-1.0,-1,28
the quality of the explaining issue is good. the explanations are concise and clear to the point. also the method of explaining new formula in doc is quite good.&nbsp;,-1.0,-1.0,-1,30
 ) yes the document elaborately describes the functionality required. ) they mentioned what's wrong with past implementation and now which new algorithm/approach they gonna try to implement,-1.0,-1.0,-1,27
they have added all the details about the automated test and also regarding the manual test to be performed. it looks like they have covered testing all the functionalities.,-1.0,-1.0,-1,29
"yes, the design was well thought out. they listed the use cases and edge cases as well and how their design takes them into consideration",-1.0,-1.0,-1,25
"the authors have done a good job of explaining all the changes that are required for the project. a detailed plan of changes is described. the functional requirements, bidding algorithm are clear, uml diagrams are helpful.&nbsp;",-1.0,-1.0,-1,37
"the uml diagrams for models are good. the inclusion of relationship between bidding and team, participant and response is well-explained through the use of diagram",-1.0,-1.0,-1,26
"it is simple to understand. all the problems to be solved are described in the proposed approach. the uml case diagram, database design, and test plan are helpful too.&nbsp;",-1.0,-1.0,-1,30
the design appears to be sound and the doc is very well explained. the project problem&nbsp;definition is well defined and clear definition of the proposed solution.&nbsp;,-1.0,-1.0,-1,29
" ) no, i don't think there are any issues with the location of the proposed changes ) too early for me to say as it depends on how the team goes about whatever they've proposed ) no, its not complicated ) no, the response time should be the same ) the document is good enough",-1.0,-1.0,-1,52
all three issues have descriptive flowcharts to help us understand the team's approach towards solving it. i think the flowchart for issue is redundant though,-1.0,-1.0,-1,26
they've inserted at least a screenshot for every problem they are supposed to solve. which makes it easy for the reader to visualize the problem.,-1.0,-1.0,-1,26
- the changes are very specific as specified in the issue on servo github so cannot argue much about that. they have mentioned everything that they need to do in this project.,-1.0,-1.0,-1,31
- based on the previous review's pr it is clear that servo has a very fixed standard in terms of what needs to be written in the source code and their code/suggested change follows that.,-1.0,-1.0,-1,36
- the doc is in continuation of the previous project and has many details. it's great that they added some information about what is the problem user-facing and what would happen after&nbsp;,-1.0,-1.0,-1,34
"changes to be implemented as a part of this final project have been given in a detailed and pointwise manner, which is easy to read and understand for the reader.",-1.0,-1.0,-1,30
the design proposed by the team appears to simple and straight forward. it is easy to understand and give a clear idea of what and how the team plans to work on the project. the flow of the proposed project design is also easy to understand and has been well described by the team.,-1.0,-1.0,-1,54
the project design appears to be sound and well-thought-out. the team has rightly mentioned that design patterns are not applicable&nbsp;to their project as it&nbsp;involves the implementation of methods and modifying various files&nbsp;and that the implementation section provides details of why certain steps were implemented the way they were.&nbsp; &nbsp;,-1.0,-1.0,-1,58
"the authors have laid out a detailed stepwise plan of the changes that have already been made to the system as a part of the oss project, as well as the changes that the team plans to make as a part of the final project, under the scope section of the document.",-1.0,-1.0,-1,52
"the team has added a flow chart to explain a high-level view of their proposed solution. this i believe will greatly help any person reading the document. also, the images used to explain the html page content as well as the dom tree are really useful for a person who may not understand what dom features are.",-1.0,-1.0,-1,58
the design appears to be very straight forward with every detail laid out int he design document. the possible issues and the pitfalls have also been highlighted by the team.,-1.0,-1.0,-1,30
the authors have very nicely explained all the changes that need to be made and a detailed plan of the changes that are going to make. it included the algorithm they plan to implement as well as the functional &amp; non-functional requirements of the project.,-1.0,-1.0,-1,46
they did stated all the changes that they have decides to change. it looks complete from my point of view to resolve the issue present in the problem statement.,-1.0,-1.0,-1,29
all things that they have decided to alter looks clean and efficient to me. it wont complicate the code or produce any unnecessary response time.&nbsp;&nbsp;,-1.0,-1.0,-1,27
yes. the project implemented the first issue from the problem statement in the oss project and the second issued are going to be implemented in this final project.,-1.0,-1.0,-1,28
yes they have did added diagram to describe the flow of the functionality that they are implementing. it makes it easier that way to understand for other persons who are reviewing the document.,-1.0,-1.0,-1,33
"according to the document, no tests need be added. however, these participants have still laid out how they will use existing tests to test their functionality.",-1.0,-1.0,-1,26
"after reading this, i have a great idea of&nbsp;what functionality will be present after the change and how the students for this project intend to refactor existing code.",-1.0,-1.0,-1,30
"their design strategy write about the&nbsp;impersonating student using anonymized names,anonymized view for students,&nbsp;anonymizing team names and wrong anonymizing names. their flow chart looks concise and percise.test plan contains the most test cases also include the edge cases.",-1.0,-1.0,-1,43
the design appear to be sound while looking through the&nbsp;proposed solution. the author give&nbsp;solution to the wrong anonymizing of the team naming and the anonymized view for student.,-1.0,-1.0,-1,32
"from the doc, i konw that the team should fix the bug of&nbsp;students cannot switch into and out of anonymized view, allow impersonation of anonymous usernames , fix some things are not anonymized and team names are also not anonymized. so i can see the author list all the problem in the wiki doc and describe their way in solving it.",-1.0,-1.0,-1,62
"the design is simple and clear, form the approach, the author&nbsp;propose to use `updated_at` in `answer_tags` model for each user to calculate gaps between each tagging action.",-1.0,-1.0,-1,29
"the author shows us the&nbsp;behavior diagram for instructor/ta diagram, which we can clearly know how to track time of the tagging data.",-1.0,-1.0,-1,25
the explanation is given in steps it is easy to understand. also the explanation is reasonable and comprehensive and easy for the reader to follow.&nbsp;the design appears to be simple. &nbsp;,-1.0,-1.0,-1,33
the team did well on explanations.&nbsp;the design sounds perfectly sound and the appropriate patterns have been suggested. i think they have done a proper job.,-1.0,-1.0,-1,27
the team&nbsp;has used a lot of diagrams and uml to explain their working which is really useful and easy for the reader to follow through the whole document.,-1.0,-1.0,-1,30
"yes, the necessary changes that will be incorporated have been mentioned, including things like formula being used, and the team also has narrowed down the files that are to be changed/involved moving forward.&nbsp;",-1.0,-1.0,-1,35
"an update in regards to workflow is being shown this time around, which definitely helps in understanding the big picture for the project. also, ui changes have also been shown, helping in understanding what is to be done.&nbsp;",-1.0,-1.0,-1,39
the changes proposed look good and if implemented well could result in a working feature. they have proposed solutions and deduced which one is better.,-1.0,-1.0,-1,25
"the design proposed looks sound and dry. as this is an initial analysis, names of methods to be implemented/edited should not be expected at this point.",-1.0,-1.0,-1,27
the design is sound and provided in good detail. it makes use of the required patterns wherein all the top level sections are all present.,-1.0,-1.0,-1,25
"yes, there are three tasks issued in total. the first two are about fixing existing bugs about meta-review, one for the link and the other for the number. and the last one is to enable instuctor to whether to open this section. and the wiki of this team completely contain all these three issues and correspondant&nbsp;illustrations.",-1.0,-1.0,-1,59
"yes, they have clearly listed all files to be modified among the first three issues. since the last three issues only need supplementary tests, there is nothing to be modified so far.",-1.0,-1.0,-1,32
the changes proposed are detailed and the explanation is to the point. they have mentioned the files that they will change and also what changes will they amke,-1.0,-1.0,-1,28
"i believe that the explanation is quite good, albeit a little confusing if you aren't familiar with what the ""anonymous"" feature of expertiza already is.",-1.0,-1.0,-1,26
"the solution thet proposed generally follow the chain of responsibility and the work flow, as they state their design clearly, i think their proposed design is good.",-1.0,-1.0,-1,27
"they added a screenshot to state their issue, which help me understanding their issue quicker, and they also added a work flow chart to show their proposed solution, all in details.",-1.0,-1.0,-1,31
"yes, they use&nbsp;chain of responsibility as the design pattern, which is sound and appropriate to deal with the function they wanted to realize.",-1.0,-1.0,-1,25
"yes, i can see from their wiki page that they use&nbsp;&nbsp;chain of responsibility as the design pattern, and they have considered all the functionality they need to realize by showing the work flow chart.",-1.0,-1.0,-1,37
they have a code changes flow diagram to show how they plan to change the code and what files will be modified. i think they found the right files and right class to change or add code.&nbsp;,-1.0,-1.0,-1,38
they have a code changes flow that shows the files they plan to modify and the relationship between those files. the diagram is clear and helpful to understand the project.&nbsp; and the use case diagram shows how self-reviewing is created and performed.,-1.0,-1.0,-1,44
the design incorporates all of the functionality required in the given document. the functionality required includes three main points that are all described in their design document.,-1.0,-1.0,-1,27
"the design document is complete. it includes the problem description, their plan of work, some visual aids helps better understand the project, test plan, and their plan of the formula.&nbsp;",-1.0,-1.0,-1,31
the code changes flow diagram shows the files they plan to change and their work order. and the use case diagram describes what student and instructor can do.&nbsp;,-1.0,-1.0,-1,29
the design seems to be as simple as possible. they write the work progress and the methods they plan to change. their design is appropriate and has no point that is unrelated to the project.,-1.0,-1.0,-1,35
the method names make sense as the method is doing exactly what it name implies. many of the controllers even contain methods that check for relationship deletions and handle them well with before actions.,-1.0,-1.0,-1,34
"no, all the features initially reviewed are working as they did or were directly improved upon. features such as course registration, histories, and feedbacks work properly now when there were issues before.",-1.0,-1.0,-1,32
most of the logic in the program are conditional logic to checks for which user type is logged in and what db entries already exist. loops are not nested and used to just iterate through db arrays to display courses/histories/feedbacks. most of this logic/iteration is contains in the views in various index and show files.,-1.0,-1.0,-1,58
"yes, the variable names make sense and store the information stated. i was able to get a quick overview in the schema.rb located in the db folder. an interesting note here is that students/teachers themselves do not have an id tag but all the other sections such as histories and feedbacks have them instead.",-1.0,-1.0,-1,56
"the relationships that are shown in the code make sense and the schema and data tables back that up. because it is done properly, it is possible to have the courses/histories/feedbacks linked from student to teacher properly.",-1.0,-1.0,-1,39
"yes, the course model is tested quite well to make sure it is created without duplicate and requires all fields to be filled in. there is a check that the price has to be greater than zero as well.",-1.0,-1.0,-1,39
the code is written well in that is very easy to follow the logic. the variable names are straight forward so conditional checks are self-explanatory and the migrations properly set up the db to store information in an easy to access useful way.,-1.0,-1.0,-1,44
"yes, they can edit their fields. i changed all the fields and it saved. i then reverted it back to the default and it was successful. logging in with new info worked as well.",-1.0,-1.0,-1,34
it goes through successfully and is truly removed from the cart. i verified this by logging back in as the student to check if the item was still there and it had been removed.,-1.0,-1.0,-1,34
yes students are able to add themselves to a class. does not ask me to select teacher before doing so. although i can select a teacher later.,-1.0,-1.0,-1,27
most of the test cases are descriptive enough that they dont need commenting and the code looks simple and clean that it does not need much commenting.,-1.0,-1.0,-1,27
"writeup very clearly communicates the purpose of this refactoring, and it seems from what i can see that everything was properly implemented via the writeup. nice work!",-1.0,-1.0,-1,27
"writeup is very good. the team covered everything from fully showing their coded solutions, to how to run through ui tests with screenshots. very easy to follow",-1.0,-1.0,-1,27
"all new code used simple names, and overall seemed to cut down on overall code amount from a visual perspective as per the wiki. very well-written!",-1.0,-1.0,-1,27
refactoring from big nested project is not very easy and they did a good job in my opinion. should be a good starting place for a future team to pick up,-1.0,-1.0,-1,31
"writeup is very well done! easy to follow, effectively explains what the issue is and shows examples. then explains the solutions and how they were implemented.",-1.0,-1.0,-1,26
"there was no test plan section but, they explained that that they modified some of the original tests and added some new ones to test functionality! all tests pass!",-1.0,-1.0,-1,29
great job! all variable/method/class names are clear and indicative of what they are doing or what values they contain. methods are therefore easy to follow.,-1.0,-1.0,-1,27
"overall, the code was well written! modified existing code but kept the code concise. code that was added was fairly easy to understand but maybe could use some more comments but that is it",-1.0,-1.0,-1,34
"the writeup was really well done, easy to understand and sequential: problem-&gt;solution-&gt;implementation-&gt;tests. it is easy to understand what the project does and how it does it.",-1.0,-1.0,-1,32
"yes, team added test cases,&nbsp;spec/features/account_request_spec.rb,&nbsp;spec/controllers/account_request_controller_spec.rb&nbsp;and newly added tests cover all the range of this project",-1.0,-1.0,-1,27
the test plan has section for both rspec and ui testing. they have written new test cases and have also made changes to course controller path in existing ones.,-1.0,-1.0,-1,29
details are clear. code changes are shown and explained accordingly. i also like that the changed files were also specifically mentioned. that gives an idea of what components are involved in this project.,-1.0,-1.0,-1,33
"the group did a good job of providing background info on what was worked on. really liked the testing our solutions section, made it easy for me to&nbsp;go thru their work and test out their implementation.&nbsp;also really liked how each issue was broken down into a problem and the solution taken to fix it.",-1.0,-1.0,-1,58
"the team was very thorough in what was done and&nbsp;made it easy to understand&nbsp;the changes made. really liked the wiki and the ""testing our solutions"" google doc.&nbsp;",-1.0,-1.0,-1,32
